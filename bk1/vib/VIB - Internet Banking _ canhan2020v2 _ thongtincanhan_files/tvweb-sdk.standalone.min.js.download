!function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? t(exports, require("crypto")) : "function" == typeof define && define.amd ? define(["exports", "crypto"], t) : t((e = "undefined" != typeof globalThis ? globalThis : e || self).TVWebSDK = {}, e.crypto)
}(this, (function(e, t) {
    "use strict";
    function n(e) {
        return e && "object" == typeof e && "default"in e ? e : {
            default: e
        }
    }
    var r = n(t)
      , a = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
    function o(e) {
        return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
    }
    function i(e, t, n) {
        return e(n = {
            path: t,
            exports: {},
            require: function(e, t) {
                return function() {
                    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                }(null == t && n.path)
            }
        }, n.exports),
        n.exports
    }
    var s = function(e) {
        return e && e.Math == Math && e
    }
      , u = s("object" == typeof globalThis && globalThis) || s("object" == typeof window && window) || s("object" == typeof self && self) || s("object" == typeof a && a) || function() {
        return this
    }() || Function("return this")()
      , c = function(e) {
        try {
            return !!e()
        } catch (e) {
            return !0
        }
    }
      , l = !c((function() {
        return 7 != Object.defineProperty({}, 1, {
            get: function() {
                return 7
            }
        })[1]
    }
    ))
      , f = {}.propertyIsEnumerable
      , p = Object.getOwnPropertyDescriptor
      , d = {
        f: p && !f.call({
            1: 2
        }, 1) ? function(e) {
            var t = p(this, e);
            return !!t && t.enumerable
        }
        : f
    }
      , h = function(e, t) {
        return {
            enumerable: !(1 & e),
            configurable: !(2 & e),
            writable: !(4 & e),
            value: t
        }
    }
      , m = {}.toString
      , v = function(e) {
        return m.call(e).slice(8, -1)
    }
      , g = "".split
      , y = c((function() {
        return !Object("z").propertyIsEnumerable(0)
    }
    )) ? function(e) {
        return "String" == v(e) ? g.call(e, "") : Object(e)
    }
    : Object
      , b = function(e) {
        if (null == e)
            throw TypeError("Can't call method on " + e);
        return e
    }
      , x = function(e) {
        return y(b(e))
    }
      , w = function(e) {
        return "object" == typeof e ? null !== e : "function" == typeof e
    }
      , k = function(e, t) {
        if (!w(e))
            return e;
        var n, r;
        if (t && "function" == typeof (n = e.toString) && !w(r = n.call(e)))
            return r;
        if ("function" == typeof (n = e.valueOf) && !w(r = n.call(e)))
            return r;
        if (!t && "function" == typeof (n = e.toString) && !w(r = n.call(e)))
            return r;
        throw TypeError("Can't convert object to primitive value")
    }
      , C = {}.hasOwnProperty
      , E = function(e, t) {
        return C.call(e, t)
    }
      , S = u.document
      , I = w(S) && w(S.createElement)
      , T = function(e) {
        return I ? S.createElement(e) : {}
    }
      , A = !l && !c((function() {
        return 7 != Object.defineProperty(T("div"), "a", {
            get: function() {
                return 7
            }
        }).a
    }
    ))
      , N = Object.getOwnPropertyDescriptor
      , _ = {
        f: l ? N : function(e, t) {
            if (e = x(e),
            t = k(t, !0),
            A)
                try {
                    return N(e, t)
                } catch (e) {}
            if (E(e, t))
                return h(!d.f.call(e, t), e[t])
        }
    }
      , R = function(e) {
        if (!w(e))
            throw TypeError(String(e) + " is not an object");
        return e
    }
      , O = Object.defineProperty
      , D = {
        f: l ? O : function(e, t, n) {
            if (R(e),
            t = k(t, !0),
            R(n),
            A)
                try {
                    return O(e, t, n)
                } catch (e) {}
            if ("get"in n || "set"in n)
                throw TypeError("Accessors not supported");
            return "value"in n && (e[t] = n.value),
            e
        }
    }
      , B = l ? function(e, t, n) {
        return D.f(e, t, h(1, n))
    }
    : function(e, t, n) {
        return e[t] = n,
        e
    }
      , F = function(e, t) {
        try {
            B(u, e, t)
        } catch (n) {
            u[e] = t
        }
        return t
    }
      , M = "__core-js_shared__"
      , P = u[M] || F(M, {})
      , L = Function.toString;
    "function" != typeof P.inspectSource && (P.inspectSource = function(e) {
        return L.call(e)
    }
    );
    var U, V, z, W = P.inspectSource, j = u.WeakMap, H = "function" == typeof j && /native code/.test(W(j)), G = i((function(e) {
        (e.exports = function(e, t) {
            return P[e] || (P[e] = void 0 !== t ? t : {})
        }
        )("versions", []).push({
            version: "3.8.1",
            mode: "global",
            copyright: "Â© 2020 Denis Pushkarev (zloirock.ru)"
        })
    }
    )), K = 0, q = Math.random(), X = function(e) {
        return "Symbol(" + String(void 0 === e ? "" : e) + ")_" + (++K + q).toString(36)
    }, Q = G("keys"), Y = function(e) {
        return Q[e] || (Q[e] = X(e))
    }, $ = {}, Z = u.WeakMap;
    if (H) {
        var J = P.state || (P.state = new Z)
          , ee = J.get
          , te = J.has
          , ne = J.set;
        U = function(e, t) {
            return t.facade = e,
            ne.call(J, e, t),
            t
        }
        ,
        V = function(e) {
            return ee.call(J, e) || {}
        }
        ,
        z = function(e) {
            return te.call(J, e)
        }
    } else {
        var re = Y("state");
        $[re] = !0,
        U = function(e, t) {
            return t.facade = e,
            B(e, re, t),
            t
        }
        ,
        V = function(e) {
            return E(e, re) ? e[re] : {}
        }
        ,
        z = function(e) {
            return E(e, re)
        }
    }
    var ae, oe = {
        set: U,
        get: V,
        has: z,
        enforce: function(e) {
            return z(e) ? V(e) : U(e, {})
        },
        getterFor: function(e) {
            return function(t) {
                var n;
                if (!w(t) || (n = V(t)).type !== e)
                    throw TypeError("Incompatible receiver, " + e + " required");
                return n
            }
        }
    }, ie = i((function(e) {
        var t = oe.get
          , n = oe.enforce
          , r = String(String).split("String");
        (e.exports = function(e, t, a, o) {
            var i, s = !!o && !!o.unsafe, c = !!o && !!o.enumerable, l = !!o && !!o.noTargetGet;
            "function" == typeof a && ("string" != typeof t || E(a, "name") || B(a, "name", t),
            (i = n(a)).source || (i.source = r.join("string" == typeof t ? t : ""))),
            e !== u ? (s ? !l && e[t] && (c = !0) : delete e[t],
            c ? e[t] = a : B(e, t, a)) : c ? e[t] = a : F(t, a)
        }
        )(Function.prototype, "toString", (function() {
            return "function" == typeof this && t(this).source || W(this)
        }
        ))
    }
    )), se = u, ue = function(e) {
        return "function" == typeof e ? e : void 0
    }, ce = function(e, t) {
        return arguments.length < 2 ? ue(se[e]) || ue(u[e]) : se[e] && se[e][t] || u[e] && u[e][t]
    }, le = Math.ceil, fe = Math.floor, pe = function(e) {
        return isNaN(e = +e) ? 0 : (e > 0 ? fe : le)(e)
    }, de = Math.min, he = function(e) {
        return e > 0 ? de(pe(e), 9007199254740991) : 0
    }, me = Math.max, ve = Math.min, ge = function(e, t) {
        var n = pe(e);
        return n < 0 ? me(n + t, 0) : ve(n, t)
    }, ye = function(e) {
        return function(t, n, r) {
            var a, o = x(t), i = he(o.length), s = ge(r, i);
            if (e && n != n) {
                for (; i > s; )
                    if ((a = o[s++]) != a)
                        return !0
            } else
                for (; i > s; s++)
                    if ((e || s in o) && o[s] === n)
                        return e || s || 0;
            return !e && -1
        }
    }, be = {
        includes: ye(!0),
        indexOf: ye(!1)
    }, xe = be.indexOf, we = function(e, t) {
        var n, r = x(e), a = 0, o = [];
        for (n in r)
            !E($, n) && E(r, n) && o.push(n);
        for (; t.length > a; )
            E(r, n = t[a++]) && (~xe(o, n) || o.push(n));
        return o
    }, ke = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"], Ce = ke.concat("length", "prototype"), Ee = {
        f: Object.getOwnPropertyNames || function(e) {
            return we(e, Ce)
        }
    }, Se = {
        f: Object.getOwnPropertySymbols
    }, Ie = ce("Reflect", "ownKeys") || function(e) {
        var t = Ee.f(R(e))
          , n = Se.f;
        return n ? t.concat(n(e)) : t
    }
    , Te = function(e, t) {
        for (var n = Ie(t), r = D.f, a = _.f, o = 0; o < n.length; o++) {
            var i = n[o];
            E(e, i) || r(e, i, a(t, i))
        }
    }, Ae = /#|\.prototype\./, Ne = function(e, t) {
        var n = Re[_e(e)];
        return n == De || n != Oe && ("function" == typeof t ? c(t) : !!t)
    }, _e = Ne.normalize = function(e) {
        return String(e).replace(Ae, ".").toLowerCase()
    }
    , Re = Ne.data = {}, Oe = Ne.NATIVE = "N", De = Ne.POLYFILL = "P", Be = Ne, Fe = _.f, Me = function(e, t) {
        var n, r, a, o, i, s = e.target, c = e.global, l = e.stat;
        if (n = c ? u : l ? u[s] || F(s, {}) : (u[s] || {}).prototype)
            for (r in t) {
                if (o = t[r],
                a = e.noTargetGet ? (i = Fe(n, r)) && i.value : n[r],
                !Be(c ? r : s + (l ? "." : "#") + r, e.forced) && void 0 !== a) {
                    if (typeof o == typeof a)
                        continue;
                    Te(o, a)
                }
                (e.sham || a && a.sham) && B(o, "sham", !0),
                ie(n, r, o, e)
            }
    }, Pe = !!Object.getOwnPropertySymbols && !c((function() {
        return !String(Symbol())
    }
    )), Le = Pe && !Symbol.sham && "symbol" == typeof Symbol.iterator, Ue = Array.isArray || function(e) {
        return "Array" == v(e)
    }
    , Ve = function(e) {
        return Object(b(e))
    }, ze = Object.keys || function(e) {
        return we(e, ke)
    }
    , We = l ? Object.defineProperties : function(e, t) {
        R(e);
        for (var n, r = ze(t), a = r.length, o = 0; a > o; )
            D.f(e, n = r[o++], t[n]);
        return e
    }
    , je = ce("document", "documentElement"), He = Y("IE_PROTO"), Ge = function() {}, Ke = function(e) {
        return "<script>" + e + "</" + "script>"
    }, qe = function() {
        try {
            ae = document.domain && new ActiveXObject("htmlfile")
        } catch (e) {}
        var e, t;
        qe = ae ? function(e) {
            e.write(Ke("")),
            e.close();
            var t = e.parentWindow.Object;
            return e = null,
            t
        }(ae) : ((t = T("iframe")).style.display = "none",
        je.appendChild(t),
        t.src = String("javascript:"),
        (e = t.contentWindow.document).open(),
        e.write(Ke("document.F=Object")),
        e.close(),
        e.F);
        for (var n = ke.length; n--; )
            delete qe.prototype[ke[n]];
        return qe()
    };
    $[He] = !0;
    var Xe = Object.create || function(e, t) {
        var n;
        return null !== e ? (Ge.prototype = R(e),
        n = new Ge,
        Ge.prototype = null,
        n[He] = e) : n = qe(),
        void 0 === t ? n : We(n, t)
    }
      , Qe = Ee.f
      , Ye = {}.toString
      , $e = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : []
      , Ze = {
        f: function(e) {
            return $e && "[object Window]" == Ye.call(e) ? function(e) {
                try {
                    return Qe(e)
                } catch (e) {
                    return $e.slice()
                }
            }(e) : Qe(x(e))
        }
    }
      , Je = G("wks")
      , et = u.Symbol
      , tt = Le ? et : et && et.withoutSetter || X
      , nt = function(e) {
        return E(Je, e) || (Pe && E(et, e) ? Je[e] = et[e] : Je[e] = tt("Symbol." + e)),
        Je[e]
    }
      , rt = {
        f: nt
    }
      , at = D.f
      , ot = function(e) {
        var t = se.Symbol || (se.Symbol = {});
        E(t, e) || at(t, e, {
            value: rt.f(e)
        })
    }
      , it = D.f
      , st = nt("toStringTag")
      , ut = function(e, t, n) {
        e && !E(e = n ? e : e.prototype, st) && it(e, st, {
            configurable: !0,
            value: t
        })
    }
      , ct = function(e) {
        if ("function" != typeof e)
            throw TypeError(String(e) + " is not a function");
        return e
    }
      , lt = function(e, t, n) {
        if (ct(e),
        void 0 === t)
            return e;
        switch (n) {
        case 0:
            return function() {
                return e.call(t)
            }
            ;
        case 1:
            return function(n) {
                return e.call(t, n)
            }
            ;
        case 2:
            return function(n, r) {
                return e.call(t, n, r)
            }
            ;
        case 3:
            return function(n, r, a) {
                return e.call(t, n, r, a)
            }
        }
        return function() {
            return e.apply(t, arguments)
        }
    }
      , ft = nt("species")
      , pt = function(e, t) {
        var n;
        return Ue(e) && ("function" != typeof (n = e.constructor) || n !== Array && !Ue(n.prototype) ? w(n) && null === (n = n[ft]) && (n = void 0) : n = void 0),
        new (void 0 === n ? Array : n)(0 === t ? 0 : t)
    }
      , dt = [].push
      , ht = function(e) {
        var t = 1 == e
          , n = 2 == e
          , r = 3 == e
          , a = 4 == e
          , o = 6 == e
          , i = 7 == e
          , s = 5 == e || o;
        return function(u, c, l, f) {
            for (var p, d, h = Ve(u), m = y(h), v = lt(c, l, 3), g = he(m.length), b = 0, x = f || pt, w = t ? x(u, g) : n || i ? x(u, 0) : void 0; g > b; b++)
                if ((s || b in m) && (d = v(p = m[b], b, h),
                e))
                    if (t)
                        w[b] = d;
                    else if (d)
                        switch (e) {
                        case 3:
                            return !0;
                        case 5:
                            return p;
                        case 6:
                            return b;
                        case 2:
                            dt.call(w, p)
                        }
                    else
                        switch (e) {
                        case 4:
                            return !1;
                        case 7:
                            dt.call(w, p)
                        }
            return o ? -1 : r || a ? a : w
        }
    }
      , mt = {
        forEach: ht(0),
        map: ht(1),
        filter: ht(2),
        some: ht(3),
        every: ht(4),
        find: ht(5),
        findIndex: ht(6),
        filterOut: ht(7)
    }
      , vt = mt.forEach
      , gt = Y("hidden")
      , yt = "Symbol"
      , bt = nt("toPrimitive")
      , xt = oe.set
      , wt = oe.getterFor(yt)
      , kt = Object.prototype
      , Ct = u.Symbol
      , Et = ce("JSON", "stringify")
      , St = _.f
      , It = D.f
      , Tt = Ze.f
      , At = d.f
      , Nt = G("symbols")
      , _t = G("op-symbols")
      , Rt = G("string-to-symbol-registry")
      , Ot = G("symbol-to-string-registry")
      , Dt = G("wks")
      , Bt = u.QObject
      , Ft = !Bt || !Bt.prototype || !Bt.prototype.findChild
      , Mt = l && c((function() {
        return 7 != Xe(It({}, "a", {
            get: function() {
                return It(this, "a", {
                    value: 7
                }).a
            }
        })).a
    }
    )) ? function(e, t, n) {
        var r = St(kt, t);
        r && delete kt[t],
        It(e, t, n),
        r && e !== kt && It(kt, t, r)
    }
    : It
      , Pt = function(e, t) {
        var n = Nt[e] = Xe(Ct.prototype);
        return xt(n, {
            type: yt,
            tag: e,
            description: t
        }),
        l || (n.description = t),
        n
    }
      , Lt = Le ? function(e) {
        return "symbol" == typeof e
    }
    : function(e) {
        return Object(e)instanceof Ct
    }
      , Ut = function(e, t, n) {
        e === kt && Ut(_t, t, n),
        R(e);
        var r = k(t, !0);
        return R(n),
        E(Nt, r) ? (n.enumerable ? (E(e, gt) && e[gt][r] && (e[gt][r] = !1),
        n = Xe(n, {
            enumerable: h(0, !1)
        })) : (E(e, gt) || It(e, gt, h(1, {})),
        e[gt][r] = !0),
        Mt(e, r, n)) : It(e, r, n)
    }
      , Vt = function(e, t) {
        R(e);
        var n = x(t)
          , r = ze(n).concat(Ht(n));
        return vt(r, (function(t) {
            l && !zt.call(n, t) || Ut(e, t, n[t])
        }
        )),
        e
    }
      , zt = function(e) {
        var t = k(e, !0)
          , n = At.call(this, t);
        return !(this === kt && E(Nt, t) && !E(_t, t)) && (!(n || !E(this, t) || !E(Nt, t) || E(this, gt) && this[gt][t]) || n)
    }
      , Wt = function(e, t) {
        var n = x(e)
          , r = k(t, !0);
        if (n !== kt || !E(Nt, r) || E(_t, r)) {
            var a = St(n, r);
            return !a || !E(Nt, r) || E(n, gt) && n[gt][r] || (a.enumerable = !0),
            a
        }
    }
      , jt = function(e) {
        var t = Tt(x(e))
          , n = [];
        return vt(t, (function(e) {
            E(Nt, e) || E($, e) || n.push(e)
        }
        )),
        n
    }
      , Ht = function(e) {
        var t = e === kt
          , n = Tt(t ? _t : x(e))
          , r = [];
        return vt(n, (function(e) {
            !E(Nt, e) || t && !E(kt, e) || r.push(Nt[e])
        }
        )),
        r
    };
    if (Pe || (ie((Ct = function() {
        if (this instanceof Ct)
            throw TypeError("Symbol is not a constructor");
        var e = arguments.length && void 0 !== arguments[0] ? String(arguments[0]) : void 0
          , t = X(e)
          , n = function(e) {
            this === kt && n.call(_t, e),
            E(this, gt) && E(this[gt], t) && (this[gt][t] = !1),
            Mt(this, t, h(1, e))
        };
        return l && Ft && Mt(kt, t, {
            configurable: !0,
            set: n
        }),
        Pt(t, e)
    }
    ).prototype, "toString", (function() {
        return wt(this).tag
    }
    )),
    ie(Ct, "withoutSetter", (function(e) {
        return Pt(X(e), e)
    }
    )),
    d.f = zt,
    D.f = Ut,
    _.f = Wt,
    Ee.f = Ze.f = jt,
    Se.f = Ht,
    rt.f = function(e) {
        return Pt(nt(e), e)
    }
    ,
    l && (It(Ct.prototype, "description", {
        configurable: !0,
        get: function() {
            return wt(this).description
        }
    }),
    ie(kt, "propertyIsEnumerable", zt, {
        unsafe: !0
    }))),
    Me({
        global: !0,
        wrap: !0,
        forced: !Pe,
        sham: !Pe
    }, {
        Symbol: Ct
    }),
    vt(ze(Dt), (function(e) {
        ot(e)
    }
    )),
    Me({
        target: yt,
        stat: !0,
        forced: !Pe
    }, {
        for: function(e) {
            var t = String(e);
            if (E(Rt, t))
                return Rt[t];
            var n = Ct(t);
            return Rt[t] = n,
            Ot[n] = t,
            n
        },
        keyFor: function(e) {
            if (!Lt(e))
                throw TypeError(e + " is not a symbol");
            if (E(Ot, e))
                return Ot[e]
        },
        useSetter: function() {
            Ft = !0
        },
        useSimple: function() {
            Ft = !1
        }
    }),
    Me({
        target: "Object",
        stat: !0,
        forced: !Pe,
        sham: !l
    }, {
        create: function(e, t) {
            return void 0 === t ? Xe(e) : Vt(Xe(e), t)
        },
        defineProperty: Ut,
        defineProperties: Vt,
        getOwnPropertyDescriptor: Wt
    }),
    Me({
        target: "Object",
        stat: !0,
        forced: !Pe
    }, {
        getOwnPropertyNames: jt,
        getOwnPropertySymbols: Ht
    }),
    Me({
        target: "Object",
        stat: !0,
        forced: c((function() {
            Se.f(1)
        }
        ))
    }, {
        getOwnPropertySymbols: function(e) {
            return Se.f(Ve(e))
        }
    }),
    Et) {
        var Gt = !Pe || c((function() {
            var e = Ct();
            return "[null]" != Et([e]) || "{}" != Et({
                a: e
            }) || "{}" != Et(Object(e))
        }
        ));
        Me({
            target: "JSON",
            stat: !0,
            forced: Gt
        }, {
            stringify: function(e, t, n) {
                for (var r, a = [e], o = 1; arguments.length > o; )
                    a.push(arguments[o++]);
                if (r = t,
                (w(t) || void 0 !== e) && !Lt(e))
                    return Ue(t) || (t = function(e, t) {
                        if ("function" == typeof r && (t = r.call(this, e, t)),
                        !Lt(t))
                            return t
                    }
                    ),
                    a[1] = t,
                    Et.apply(null, a)
            }
        })
    }
    Ct.prototype[bt] || B(Ct.prototype, bt, Ct.prototype.valueOf),
    ut(Ct, yt),
    $[gt] = !0,
    ot("asyncIterator");
    var Kt = D.f
      , qt = u.Symbol;
    if (l && "function" == typeof qt && (!("description"in qt.prototype) || void 0 !== qt().description)) {
        var Xt = {}
          , Qt = function() {
            var e = arguments.length < 1 || void 0 === arguments[0] ? void 0 : String(arguments[0])
              , t = this instanceof Qt ? new qt(e) : void 0 === e ? qt() : qt(e);
            return "" === e && (Xt[t] = !0),
            t
        };
        Te(Qt, qt);
        var Yt = Qt.prototype = qt.prototype;
        Yt.constructor = Qt;
        var $t = Yt.toString
          , Zt = "Symbol(test)" == String(qt("test"))
          , Jt = /^Symbol\((.*)\)[^)]+$/;
        Kt(Yt, "description", {
            configurable: !0,
            get: function() {
                var e = w(this) ? this.valueOf() : this
                  , t = $t.call(e);
                if (E(Xt, e))
                    return "";
                var n = Zt ? t.slice(7, -1) : t.replace(Jt, "$1");
                return "" === n ? void 0 : n
            }
        }),
        Me({
            global: !0,
            forced: !0
        }, {
            Symbol: Qt
        })
    }
    ot("hasInstance"),
    ot("isConcatSpreadable"),
    ot("iterator"),
    ot("match"),
    ot("matchAll"),
    ot("replace"),
    ot("search"),
    ot("species"),
    ot("split"),
    ot("toPrimitive"),
    ot("toStringTag"),
    ot("unscopables");
    var en = !c((function() {
        function e() {}
        return e.prototype.constructor = null,
        Object.getPrototypeOf(new e) !== e.prototype
    }
    ))
      , tn = Y("IE_PROTO")
      , nn = Object.prototype
      , rn = en ? Object.getPrototypeOf : function(e) {
        return e = Ve(e),
        E(e, tn) ? e[tn] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? nn : null
    }
      , an = function(e) {
        if (!w(e) && null !== e)
            throw TypeError("Can't set " + String(e) + " as a prototype");
        return e
    }
      , on = Object.setPrototypeOf || ("__proto__"in {} ? function() {
        var e, t = !1, n = {};
        try {
            (e = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(n, []),
            t = n instanceof Array
        } catch (e) {}
        return function(n, r) {
            return R(n),
            an(r),
            t ? e.call(n, r) : n.__proto__ = r,
            n
        }
    }() : void 0)
      , sn = {}
      , un = nt("iterator")
      , cn = Array.prototype
      , ln = function(e) {
        return void 0 !== e && (sn.Array === e || cn[un] === e)
    }
      , fn = {};
    fn[nt("toStringTag")] = "z";
    var pn = "[object z]" === String(fn)
      , dn = nt("toStringTag")
      , hn = "Arguments" == v(function() {
        return arguments
    }())
      , mn = pn ? v : function(e) {
        var t, n, r;
        return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof (n = function(e, t) {
            try {
                return e[t]
            } catch (e) {}
        }(t = Object(e), dn)) ? n : hn ? v(t) : "Object" == (r = v(t)) && "function" == typeof t.callee ? "Arguments" : r
    }
      , vn = nt("iterator")
      , gn = function(e) {
        if (null != e)
            return e[vn] || e["@@iterator"] || sn[mn(e)]
    }
      , yn = function(e) {
        var t = e.return;
        if (void 0 !== t)
            return R(t.call(e)).value
    }
      , bn = function(e, t) {
        this.stopped = e,
        this.result = t
    }
      , xn = function(e, t, n) {
        var r, a, o, i, s, u, c, l = n && n.that, f = !(!n || !n.AS_ENTRIES), p = !(!n || !n.IS_ITERATOR), d = !(!n || !n.INTERRUPTED), h = lt(t, l, 1 + f + d), m = function(e) {
            return r && yn(r),
            new bn(!0,e)
        }, v = function(e) {
            return f ? (R(e),
            d ? h(e[0], e[1], m) : h(e[0], e[1])) : d ? h(e, m) : h(e)
        };
        if (p)
            r = e;
        else {
            if ("function" != typeof (a = gn(e)))
                throw TypeError("Target is not iterable");
            if (ln(a)) {
                for (o = 0,
                i = he(e.length); i > o; o++)
                    if ((s = v(e[o])) && s instanceof bn)
                        return s;
                return new bn(!1)
            }
            r = a.call(e)
        }
        for (u = r.next; !(c = u.call(r)).done; ) {
            try {
                s = v(c.value)
            } catch (e) {
                throw yn(r),
                e
            }
            if ("object" == typeof s && s && s instanceof bn)
                return s
        }
        return new bn(!1)
    }
      , wn = function(e, t) {
        var n = this;
        if (!(n instanceof wn))
            return new wn(e,t);
        on && (n = on(new Error(void 0), rn(n))),
        void 0 !== t && B(n, "message", String(t));
        var r = [];
        return xn(e, r.push, {
            that: r
        }),
        B(n, "errors", r),
        n
    };
    wn.prototype = Xe(Error.prototype, {
        constructor: h(5, wn),
        message: h(5, ""),
        name: h(5, "AggregateError")
    }),
    Me({
        global: !0
    }, {
        AggregateError: wn
    });
    var kn = function(e, t, n, r) {
        try {
            return r ? t(R(n)[0], n[1]) : t(n)
        } catch (t) {
            throw yn(e),
            t
        }
    }
      , Cn = function(e, t, n) {
        var r = k(t);
        r in e ? D.f(e, r, h(0, n)) : e[r] = n
    }
      , En = function(e) {
        var t, n, r, a, o, i, s = Ve(e), u = "function" == typeof this ? this : Array, c = arguments.length, l = c > 1 ? arguments[1] : void 0, f = void 0 !== l, p = gn(s), d = 0;
        if (f && (l = lt(l, c > 2 ? arguments[2] : void 0, 2)),
        null == p || u == Array && ln(p))
            for (n = new u(t = he(s.length)); t > d; d++)
                i = f ? l(s[d], d) : s[d],
                Cn(n, d, i);
        else
            for (o = (a = p.call(s)).next,
            n = new u; !(r = o.call(a)).done; d++)
                i = f ? kn(a, l, [r.value, d], !0) : r.value,
                Cn(n, d, i);
        return n.length = d,
        n
    }
      , Sn = nt("iterator")
      , In = !1;
    try {
        var Tn = 0
          , An = {
            next: function() {
                return {
                    done: !!Tn++
                }
            },
            return: function() {
                In = !0
            }
        };
        An[Sn] = function() {
            return this
        }
        ,
        Array.from(An, (function() {
            throw 2
        }
        ))
    } catch (e) {}
    var Nn = function(e, t) {
        if (!t && !In)
            return !1;
        var n = !1;
        try {
            var r = {};
            r[Sn] = function() {
                return {
                    next: function() {
                        return {
                            done: n = !0
                        }
                    }
                }
            }
            ,
            e(r)
        } catch (e) {}
        return n
    }
      , _n = !Nn((function(e) {
        Array.from(e)
    }
    ));
    Me({
        target: "Array",
        stat: !0,
        forced: _n
    }, {
        from: En
    }),
    Me({
        target: "Array",
        stat: !0
    }, {
        isArray: Ue
    });
    var Rn = c((function() {
        function e() {}
        return !(Array.of.call(e)instanceof e)
    }
    ));
    Me({
        target: "Array",
        stat: !0,
        forced: Rn
    }, {
        of: function() {
            for (var e = 0, t = arguments.length, n = new ("function" == typeof this ? this : Array)(t); t > e; )
                Cn(n, e, arguments[e++]);
            return n.length = t,
            n
        }
    });
    var On, Dn, Bn = ce("navigator", "userAgent") || "", Fn = u.process, Mn = Fn && Fn.versions, Pn = Mn && Mn.v8;
    Pn ? Dn = (On = Pn.split("."))[0] + On[1] : Bn && (!(On = Bn.match(/Edge\/(\d+)/)) || On[1] >= 74) && (On = Bn.match(/Chrome\/(\d+)/)) && (Dn = On[1]);
    var Ln = Dn && +Dn
      , Un = nt("species")
      , Vn = function(e) {
        return Ln >= 51 || !c((function() {
            var t = [];
            return (t.constructor = {})[Un] = function() {
                return {
                    foo: 1
                }
            }
            ,
            1 !== t[e](Boolean).foo
        }
        ))
    }
      , zn = nt("isConcatSpreadable")
      , Wn = 9007199254740991
      , jn = "Maximum allowed index exceeded"
      , Hn = Ln >= 51 || !c((function() {
        var e = [];
        return e[zn] = !1,
        e.concat()[0] !== e
    }
    ))
      , Gn = Vn("concat")
      , Kn = function(e) {
        if (!w(e))
            return !1;
        var t = e[zn];
        return void 0 !== t ? !!t : Ue(e)
    };
    Me({
        target: "Array",
        proto: !0,
        forced: !Hn || !Gn
    }, {
        concat: function(e) {
            var t, n, r, a, o, i = Ve(this), s = pt(i, 0), u = 0;
            for (t = -1,
            r = arguments.length; t < r; t++)
                if (Kn(o = -1 === t ? i : arguments[t])) {
                    if (u + (a = he(o.length)) > Wn)
                        throw TypeError(jn);
                    for (n = 0; n < a; n++,
                    u++)
                        n in o && Cn(s, u, o[n])
                } else {
                    if (u >= Wn)
                        throw TypeError(jn);
                    Cn(s, u++, o)
                }
            return s.length = u,
            s
        }
    });
    var qn = Math.min
      , Xn = [].copyWithin || function(e, t) {
        var n = Ve(this)
          , r = he(n.length)
          , a = ge(e, r)
          , o = ge(t, r)
          , i = arguments.length > 2 ? arguments[2] : void 0
          , s = qn((void 0 === i ? r : ge(i, r)) - o, r - a)
          , u = 1;
        for (o < a && a < o + s && (u = -1,
        o += s - 1,
        a += s - 1); s-- > 0; )
            o in n ? n[a] = n[o] : delete n[a],
            a += u,
            o += u;
        return n
    }
      , Qn = nt("unscopables")
      , Yn = Array.prototype;
    null == Yn[Qn] && D.f(Yn, Qn, {
        configurable: !0,
        value: Xe(null)
    });
    var $n = function(e) {
        Yn[Qn][e] = !0
    };
    Me({
        target: "Array",
        proto: !0
    }, {
        copyWithin: Xn
    }),
    $n("copyWithin");
    var Zn = function(e, t) {
        var n = [][e];
        return !!n && c((function() {
            n.call(null, t || function() {
                throw 1
            }
            , 1)
        }
        ))
    }
      , Jn = Object.defineProperty
      , er = {}
      , tr = function(e) {
        throw e
    }
      , nr = function(e, t) {
        if (E(er, e))
            return er[e];
        t || (t = {});
        var n = [][e]
          , r = !!E(t, "ACCESSORS") && t.ACCESSORS
          , a = E(t, 0) ? t[0] : tr
          , o = E(t, 1) ? t[1] : void 0;
        return er[e] = !!n && !c((function() {
            if (r && !l)
                return !0;
            var e = {
                length: -1
            };
            r ? Jn(e, 1, {
                enumerable: !0,
                get: tr
            }) : e[1] = 1,
            n.call(e, a, o)
        }
        ))
    }
      , rr = mt.every
      , ar = Zn("every")
      , or = nr("every");
    Me({
        target: "Array",
        proto: !0,
        forced: !ar || !or
    }, {
        every: function(e) {
            return rr(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var ir = function(e) {
        for (var t = Ve(this), n = he(t.length), r = arguments.length, a = ge(r > 1 ? arguments[1] : void 0, n), o = r > 2 ? arguments[2] : void 0, i = void 0 === o ? n : ge(o, n); i > a; )
            t[a++] = e;
        return t
    };
    Me({
        target: "Array",
        proto: !0
    }, {
        fill: ir
    }),
    $n("fill");
    var sr = mt.filter
      , ur = Vn("filter")
      , cr = nr("filter");
    Me({
        target: "Array",
        proto: !0,
        forced: !ur || !cr
    }, {
        filter: function(e) {
            return sr(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var lr = mt.find
      , fr = "find"
      , pr = !0
      , dr = nr(fr);
    fr in [] && Array(1).find((function() {
        pr = !1
    }
    )),
    Me({
        target: "Array",
        proto: !0,
        forced: pr || !dr
    }, {
        find: function(e) {
            return lr(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    }),
    $n(fr);
    var hr = mt.findIndex
      , mr = "findIndex"
      , vr = !0
      , gr = nr(mr);
    mr in [] && Array(1).findIndex((function() {
        vr = !1
    }
    )),
    Me({
        target: "Array",
        proto: !0,
        forced: vr || !gr
    }, {
        findIndex: function(e) {
            return hr(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    }),
    $n(mr);
    var yr = function(e, t, n, r, a, o, i, s) {
        for (var u, c = a, l = 0, f = !!i && lt(i, s, 3); l < r; ) {
            if (l in n) {
                if (u = f ? f(n[l], l, t) : n[l],
                o > 0 && Ue(u))
                    c = yr(e, t, u, he(u.length), c, o - 1) - 1;
                else {
                    if (c >= 9007199254740991)
                        throw TypeError("Exceed the acceptable array length");
                    e[c] = u
                }
                c++
            }
            l++
        }
        return c
    }
      , br = yr;
    Me({
        target: "Array",
        proto: !0
    }, {
        flat: function() {
            var e = arguments.length ? arguments[0] : void 0
              , t = Ve(this)
              , n = he(t.length)
              , r = pt(t, 0);
            return r.length = br(r, t, t, n, 0, void 0 === e ? 1 : pe(e)),
            r
        }
    }),
    Me({
        target: "Array",
        proto: !0
    }, {
        flatMap: function(e) {
            var t, n = Ve(this), r = he(n.length);
            return ct(e),
            (t = pt(n, 0)).length = br(t, n, n, r, 0, 1, e, arguments.length > 1 ? arguments[1] : void 0),
            t
        }
    });
    var xr = mt.forEach
      , wr = Zn("forEach")
      , kr = nr("forEach")
      , Cr = wr && kr ? [].forEach : function(e) {
        return xr(this, e, arguments.length > 1 ? arguments[1] : void 0)
    }
    ;
    Me({
        target: "Array",
        proto: !0,
        forced: [].forEach != Cr
    }, {
        forEach: Cr
    });
    var Er = be.includes
      , Sr = nr("indexOf", {
        ACCESSORS: !0,
        1: 0
    });
    Me({
        target: "Array",
        proto: !0,
        forced: !Sr
    }, {
        includes: function(e) {
            return Er(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    }),
    $n("includes");
    var Ir = be.indexOf
      , Tr = [].indexOf
      , Ar = !!Tr && 1 / [1].indexOf(1, -0) < 0
      , Nr = Zn("indexOf")
      , _r = nr("indexOf", {
        ACCESSORS: !0,
        1: 0
    });
    Me({
        target: "Array",
        proto: !0,
        forced: Ar || !Nr || !_r
    }, {
        indexOf: function(e) {
            return Ar ? Tr.apply(this, arguments) || 0 : Ir(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var Rr = [].join
      , Or = y != Object
      , Dr = Zn("join", ",");
    Me({
        target: "Array",
        proto: !0,
        forced: Or || !Dr
    }, {
        join: function(e) {
            return Rr.call(x(this), void 0 === e ? "," : e)
        }
    });
    var Br = Math.min
      , Fr = [].lastIndexOf
      , Mr = !!Fr && 1 / [1].lastIndexOf(1, -0) < 0
      , Pr = Zn("lastIndexOf")
      , Lr = nr("indexOf", {
        ACCESSORS: !0,
        1: 0
    })
      , Ur = Mr || !Pr || !Lr ? function(e) {
        if (Mr)
            return Fr.apply(this, arguments) || 0;
        var t = x(this)
          , n = he(t.length)
          , r = n - 1;
        for (arguments.length > 1 && (r = Br(r, pe(arguments[1]))),
        r < 0 && (r = n + r); r >= 0; r--)
            if (r in t && t[r] === e)
                return r || 0;
        return -1
    }
    : Fr;
    Me({
        target: "Array",
        proto: !0,
        forced: Ur !== [].lastIndexOf
    }, {
        lastIndexOf: Ur
    });
    var Vr = mt.map
      , zr = Vn("map")
      , Wr = nr("map");
    Me({
        target: "Array",
        proto: !0,
        forced: !zr || !Wr
    }, {
        map: function(e) {
            return Vr(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var jr = function(e) {
        return function(t, n, r, a) {
            ct(n);
            var o = Ve(t)
              , i = y(o)
              , s = he(o.length)
              , u = e ? s - 1 : 0
              , c = e ? -1 : 1;
            if (r < 2)
                for (; ; ) {
                    if (u in i) {
                        a = i[u],
                        u += c;
                        break
                    }
                    if (u += c,
                    e ? u < 0 : s <= u)
                        throw TypeError("Reduce of empty array with no initial value")
                }
            for (; e ? u >= 0 : s > u; u += c)
                u in i && (a = n(a, i[u], u, o));
            return a
        }
    }
      , Hr = {
        left: jr(!1),
        right: jr(!0)
    }
      , Gr = "process" == v(u.process)
      , Kr = Hr.left
      , qr = Zn("reduce")
      , Xr = nr("reduce", {
        1: 0
    });
    Me({
        target: "Array",
        proto: !0,
        forced: !qr || !Xr || !Gr && Ln > 79 && Ln < 83
    }, {
        reduce: function(e) {
            return Kr(this, e, arguments.length, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var Qr = Hr.right
      , Yr = Zn("reduceRight")
      , $r = nr("reduce", {
        1: 0
    });
    Me({
        target: "Array",
        proto: !0,
        forced: !Yr || !$r || !Gr && Ln > 79 && Ln < 83
    }, {
        reduceRight: function(e) {
            return Qr(this, e, arguments.length, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var Zr = [].reverse
      , Jr = [1, 2];
    Me({
        target: "Array",
        proto: !0,
        forced: String(Jr) === String(Jr.reverse())
    }, {
        reverse: function() {
            return Ue(this) && (this.length = this.length),
            Zr.call(this)
        }
    });
    var ea = Vn("slice")
      , ta = nr("slice", {
        ACCESSORS: !0,
        0: 0,
        1: 2
    })
      , na = nt("species")
      , ra = [].slice
      , aa = Math.max;
    Me({
        target: "Array",
        proto: !0,
        forced: !ea || !ta
    }, {
        slice: function(e, t) {
            var n, r, a, o = x(this), i = he(o.length), s = ge(e, i), u = ge(void 0 === t ? i : t, i);
            if (Ue(o) && ("function" != typeof (n = o.constructor) || n !== Array && !Ue(n.prototype) ? w(n) && null === (n = n[na]) && (n = void 0) : n = void 0,
            n === Array || void 0 === n))
                return ra.call(o, s, u);
            for (r = new (void 0 === n ? Array : n)(aa(u - s, 0)),
            a = 0; s < u; s++,
            a++)
                s in o && Cn(r, a, o[s]);
            return r.length = a,
            r
        }
    });
    var oa = mt.some
      , ia = Zn("some")
      , sa = nr("some");
    Me({
        target: "Array",
        proto: !0,
        forced: !ia || !sa
    }, {
        some: function(e) {
            return oa(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var ua = []
      , ca = ua.sort
      , la = c((function() {
        ua.sort(void 0)
    }
    ))
      , fa = c((function() {
        ua.sort(null)
    }
    ))
      , pa = Zn("sort");
    Me({
        target: "Array",
        proto: !0,
        forced: la || !fa || !pa
    }, {
        sort: function(e) {
            return void 0 === e ? ca.call(Ve(this)) : ca.call(Ve(this), ct(e))
        }
    });
    var da = Vn("splice")
      , ha = nr("splice", {
        ACCESSORS: !0,
        0: 0,
        1: 2
    })
      , ma = Math.max
      , va = Math.min
      , ga = 9007199254740991
      , ya = "Maximum allowed length exceeded";
    Me({
        target: "Array",
        proto: !0,
        forced: !da || !ha
    }, {
        splice: function(e, t) {
            var n, r, a, o, i, s, u = Ve(this), c = he(u.length), l = ge(e, c), f = arguments.length;
            if (0 === f ? n = r = 0 : 1 === f ? (n = 0,
            r = c - l) : (n = f - 2,
            r = va(ma(pe(t), 0), c - l)),
            c + n - r > ga)
                throw TypeError(ya);
            for (a = pt(u, r),
            o = 0; o < r; o++)
                (i = l + o)in u && Cn(a, o, u[i]);
            if (a.length = r,
            n < r) {
                for (o = l; o < c - r; o++)
                    s = o + n,
                    (i = o + r)in u ? u[s] = u[i] : delete u[s];
                for (o = c; o > c - r + n; o--)
                    delete u[o - 1]
            } else if (n > r)
                for (o = c - r; o > l; o--)
                    s = o + n - 1,
                    (i = o + r - 1)in u ? u[s] = u[i] : delete u[s];
            for (o = 0; o < n; o++)
                u[o + l] = arguments[o + 2];
            return u.length = c - r + n,
            a
        }
    });
    var ba = nt("species")
      , xa = function(e) {
        var t = ce(e)
          , n = D.f;
        l && t && !t[ba] && n(t, ba, {
            configurable: !0,
            get: function() {
                return this
            }
        })
    };
    xa("Array"),
    $n("flat"),
    $n("flatMap");
    var wa, ka, Ca, Ea = nt("iterator"), Sa = !1;
    [].keys && ("next"in (Ca = [].keys()) ? (ka = rn(rn(Ca))) !== Object.prototype && (wa = ka) : Sa = !0),
    null == wa && (wa = {}),
    E(wa, Ea) || B(wa, Ea, (function() {
        return this
    }
    ));
    var Ia = {
        IteratorPrototype: wa,
        BUGGY_SAFARI_ITERATORS: Sa
    }
      , Ta = Ia.IteratorPrototype
      , Aa = function() {
        return this
    }
      , Na = function(e, t, n) {
        var r = t + " Iterator";
        return e.prototype = Xe(Ta, {
            next: h(1, n)
        }),
        ut(e, r, !1),
        sn[r] = Aa,
        e
    }
      , _a = Ia.IteratorPrototype
      , Ra = Ia.BUGGY_SAFARI_ITERATORS
      , Oa = nt("iterator")
      , Da = "keys"
      , Ba = "values"
      , Fa = "entries"
      , Ma = function() {
        return this
    }
      , Pa = function(e, t, n, r, a, o, i) {
        Na(n, t, r);
        var s, u, c, l = function(e) {
            if (e === a && m)
                return m;
            if (!Ra && e in d)
                return d[e];
            switch (e) {
            case Da:
            case Ba:
            case Fa:
                return function() {
                    return new n(this,e)
                }
            }
            return function() {
                return new n(this)
            }
        }, f = t + " Iterator", p = !1, d = e.prototype, h = d[Oa] || d["@@iterator"] || a && d[a], m = !Ra && h || l(a), v = "Array" == t && d.entries || h;
        if (v && (s = rn(v.call(new e)),
        _a !== Object.prototype && s.next && (rn(s) !== _a && (on ? on(s, _a) : "function" != typeof s[Oa] && B(s, Oa, Ma)),
        ut(s, f, !0))),
        a == Ba && h && h.name !== Ba && (p = !0,
        m = function() {
            return h.call(this)
        }
        ),
        d[Oa] !== m && B(d, Oa, m),
        sn[t] = m,
        a)
            if (u = {
                values: l(Ba),
                keys: o ? m : l(Da),
                entries: l(Fa)
            },
            i)
                for (c in u)
                    (Ra || p || !(c in d)) && ie(d, c, u[c]);
            else
                Me({
                    target: t,
                    proto: !0,
                    forced: Ra || p
                }, u);
        return u
    }
      , La = "Array Iterator"
      , Ua = oe.set
      , Va = oe.getterFor(La)
      , za = Pa(Array, "Array", (function(e, t) {
        Ua(this, {
            type: La,
            target: x(e),
            index: 0,
            kind: t
        })
    }
    ), (function() {
        var e = Va(this)
          , t = e.target
          , n = e.kind
          , r = e.index++;
        return !t || r >= t.length ? (e.target = void 0,
        {
            value: void 0,
            done: !0
        }) : "keys" == n ? {
            value: r,
            done: !1
        } : "values" == n ? {
            value: t[r],
            done: !1
        } : {
            value: [r, t[r]],
            done: !1
        }
    }
    ), "values");
    sn.Arguments = sn.Array,
    $n("keys"),
    $n("values"),
    $n("entries");
    var Wa = [].slice
      , ja = {}
      , Ha = function(e, t, n) {
        if (!(t in ja)) {
            for (var r = [], a = 0; a < t; a++)
                r[a] = "a[" + a + "]";
            ja[t] = Function("C,a", "return new C(" + r.join(",") + ")")
        }
        return ja[t](e, n)
    }
      , Ga = Function.bind || function(e) {
        var t = ct(this)
          , n = Wa.call(arguments, 1)
          , r = function() {
            var a = n.concat(Wa.call(arguments));
            return this instanceof r ? Ha(t, a.length, a) : t.apply(e, a)
        };
        return w(t.prototype) && (r.prototype = t.prototype),
        r
    }
    ;
    Me({
        target: "Function",
        proto: !0
    }, {
        bind: Ga
    });
    var Ka = D.f
      , qa = Function.prototype
      , Xa = qa.toString
      , Qa = /^\s*function ([^ (]*)/
      , Ya = "name";
    l && !(Ya in qa) && Ka(qa, Ya, {
        configurable: !0,
        get: function() {
            try {
                return Xa.call(this).match(Qa)[1]
            } catch (e) {
                return ""
            }
        }
    });
    var $a = nt("hasInstance")
      , Za = Function.prototype;
    $a in Za || D.f(Za, $a, {
        value: function(e) {
            if ("function" != typeof this || !w(e))
                return !1;
            if (!w(this.prototype))
                return e instanceof this;
            for (; e = rn(e); )
                if (this.prototype === e)
                    return !0;
            return !1
        }
    }),
    Me({
        global: !0
    }, {
        globalThis: u
    });
    var Ja = Object.assign
      , eo = Object.defineProperty
      , to = !Ja || c((function() {
        if (l && 1 !== Ja({
            b: 1
        }, Ja(eo({}, "a", {
            enumerable: !0,
            get: function() {
                eo(this, "b", {
                    value: 3,
                    enumerable: !1
                })
            }
        }), {
            b: 2
        })).b)
            return !0;
        var e = {}
          , t = {}
          , n = Symbol()
          , r = "abcdefghijklmnopqrst";
        return e[n] = 7,
        r.split("").forEach((function(e) {
            t[e] = e
        }
        )),
        7 != Ja({}, e)[n] || ze(Ja({}, t)).join("") != r
    }
    )) ? function(e, t) {
        for (var n = Ve(e), r = arguments.length, a = 1, o = Se.f, i = d.f; r > a; )
            for (var s, u = y(arguments[a++]), c = o ? ze(u).concat(o(u)) : ze(u), f = c.length, p = 0; f > p; )
                s = c[p++],
                l && !i.call(u, s) || (n[s] = u[s]);
        return n
    }
    : Ja;
    Me({
        target: "Object",
        stat: !0,
        forced: Object.assign !== to
    }, {
        assign: to
    }),
    Me({
        target: "Object",
        stat: !0,
        sham: !l
    }, {
        create: Xe
    }),
    Me({
        target: "Object",
        stat: !0,
        forced: !l,
        sham: !l
    }, {
        defineProperty: D.f
    }),
    Me({
        target: "Object",
        stat: !0,
        forced: !l,
        sham: !l
    }, {
        defineProperties: We
    });
    var no = d.f
      , ro = function(e) {
        return function(t) {
            for (var n, r = x(t), a = ze(r), o = a.length, i = 0, s = []; o > i; )
                n = a[i++],
                l && !no.call(r, n) || s.push(e ? [n, r[n]] : r[n]);
            return s
        }
    }
      , ao = {
        entries: ro(!0),
        values: ro(!1)
    }
      , oo = ao.entries;
    Me({
        target: "Object",
        stat: !0
    }, {
        entries: function(e) {
            return oo(e)
        }
    });
    var io = !c((function() {
        return Object.isExtensible(Object.preventExtensions({}))
    }
    ))
      , so = i((function(e) {
        var t = D.f
          , n = X("meta")
          , r = 0
          , a = Object.isExtensible || function() {
            return !0
        }
          , o = function(e) {
            t(e, n, {
                value: {
                    objectID: "O" + ++r,
                    weakData: {}
                }
            })
        }
          , i = e.exports = {
            REQUIRED: !1,
            fastKey: function(e, t) {
                if (!w(e))
                    return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;
                if (!E(e, n)) {
                    if (!a(e))
                        return "F";
                    if (!t)
                        return "E";
                    o(e)
                }
                return e[n].objectID
            },
            getWeakData: function(e, t) {
                if (!E(e, n)) {
                    if (!a(e))
                        return !0;
                    if (!t)
                        return !1;
                    o(e)
                }
                return e[n].weakData
            },
            onFreeze: function(e) {
                return io && i.REQUIRED && a(e) && !E(e, n) && o(e),
                e
            }
        };
        $[n] = !0
    }
    ))
      , uo = so.onFreeze
      , co = Object.freeze
      , lo = c((function() {
        co(1)
    }
    ));
    Me({
        target: "Object",
        stat: !0,
        forced: lo,
        sham: !io
    }, {
        freeze: function(e) {
            return co && w(e) ? co(uo(e)) : e
        }
    }),
    Me({
        target: "Object",
        stat: !0
    }, {
        fromEntries: function(e) {
            var t = {};
            return xn(e, (function(e, n) {
                Cn(t, e, n)
            }
            ), {
                AS_ENTRIES: !0
            }),
            t
        }
    });
    var fo = _.f
      , po = c((function() {
        fo(1)
    }
    ));
    Me({
        target: "Object",
        stat: !0,
        forced: !l || po,
        sham: !l
    }, {
        getOwnPropertyDescriptor: function(e, t) {
            return fo(x(e), t)
        }
    }),
    Me({
        target: "Object",
        stat: !0,
        sham: !l
    }, {
        getOwnPropertyDescriptors: function(e) {
            for (var t, n, r = x(e), a = _.f, o = Ie(r), i = {}, s = 0; o.length > s; )
                void 0 !== (n = a(r, t = o[s++])) && Cn(i, t, n);
            return i
        }
    });
    var ho = Ze.f
      , mo = c((function() {
        return !Object.getOwnPropertyNames(1)
    }
    ));
    Me({
        target: "Object",
        stat: !0,
        forced: mo
    }, {
        getOwnPropertyNames: ho
    });
    var vo = c((function() {
        rn(1)
    }
    ));
    Me({
        target: "Object",
        stat: !0,
        forced: vo,
        sham: !en
    }, {
        getPrototypeOf: function(e) {
            return rn(Ve(e))
        }
    });
    var go = Object.is || function(e, t) {
        return e === t ? 0 !== e || 1 / e == 1 / t : e != e && t != t
    }
    ;
    Me({
        target: "Object",
        stat: !0
    }, {
        is: go
    });
    var yo = Object.isExtensible
      , bo = c((function() {
        yo(1)
    }
    ));
    Me({
        target: "Object",
        stat: !0,
        forced: bo
    }, {
        isExtensible: function(e) {
            return !!w(e) && (!yo || yo(e))
        }
    });
    var xo = Object.isFrozen
      , wo = c((function() {
        xo(1)
    }
    ));
    Me({
        target: "Object",
        stat: !0,
        forced: wo
    }, {
        isFrozen: function(e) {
            return !w(e) || !!xo && xo(e)
        }
    });
    var ko = Object.isSealed
      , Co = c((function() {
        ko(1)
    }
    ));
    Me({
        target: "Object",
        stat: !0,
        forced: Co
    }, {
        isSealed: function(e) {
            return !w(e) || !!ko && ko(e)
        }
    });
    var Eo = c((function() {
        ze(1)
    }
    ));
    Me({
        target: "Object",
        stat: !0,
        forced: Eo
    }, {
        keys: function(e) {
            return ze(Ve(e))
        }
    });
    var So = so.onFreeze
      , Io = Object.preventExtensions
      , To = c((function() {
        Io(1)
    }
    ));
    Me({
        target: "Object",
        stat: !0,
        forced: To,
        sham: !io
    }, {
        preventExtensions: function(e) {
            return Io && w(e) ? Io(So(e)) : e
        }
    });
    var Ao = so.onFreeze
      , No = Object.seal
      , _o = c((function() {
        No(1)
    }
    ));
    Me({
        target: "Object",
        stat: !0,
        forced: _o,
        sham: !io
    }, {
        seal: function(e) {
            return No && w(e) ? No(Ao(e)) : e
        }
    }),
    Me({
        target: "Object",
        stat: !0
    }, {
        setPrototypeOf: on
    });
    var Ro = ao.values;
    Me({
        target: "Object",
        stat: !0
    }, {
        values: function(e) {
            return Ro(e)
        }
    });
    var Oo = pn ? {}.toString : function() {
        return "[object " + mn(this) + "]"
    }
    ;
    pn || ie(Object.prototype, "toString", Oo, {
        unsafe: !0
    });
    var Do = !c((function() {
        var e = Math.random();
        __defineSetter__.call(null, e, (function() {}
        )),
        delete u[e]
    }
    ));
    l && Me({
        target: "Object",
        proto: !0,
        forced: Do
    }, {
        __defineGetter__: function(e, t) {
            D.f(Ve(this), e, {
                get: ct(t),
                enumerable: !0,
                configurable: !0
            })
        }
    }),
    l && Me({
        target: "Object",
        proto: !0,
        forced: Do
    }, {
        __defineSetter__: function(e, t) {
            D.f(Ve(this), e, {
                set: ct(t),
                enumerable: !0,
                configurable: !0
            })
        }
    });
    var Bo = _.f;
    l && Me({
        target: "Object",
        proto: !0,
        forced: Do
    }, {
        __lookupGetter__: function(e) {
            var t, n = Ve(this), r = k(e, !0);
            do {
                if (t = Bo(n, r))
                    return t.get
            } while (n = rn(n))
        }
    });
    var Fo = _.f;
    l && Me({
        target: "Object",
        proto: !0,
        forced: Do
    }, {
        __lookupSetter__: function(e) {
            var t, n = Ve(this), r = k(e, !0);
            do {
                if (t = Fo(n, r))
                    return t.set
            } while (n = rn(n))
        }
    });
    var Mo = String.fromCharCode
      , Po = String.fromCodePoint
      , Lo = !!Po && 1 != Po.length;
    Me({
        target: "String",
        stat: !0,
        forced: Lo
    }, {
        fromCodePoint: function(e) {
            for (var t, n = [], r = arguments.length, a = 0; r > a; ) {
                if (t = +arguments[a++],
                ge(t, 1114111) !== t)
                    throw RangeError(t + " is not a valid code point");
                n.push(t < 65536 ? Mo(t) : Mo(55296 + ((t -= 65536) >> 10), t % 1024 + 56320))
            }
            return n.join("")
        }
    }),
    Me({
        target: "String",
        stat: !0
    }, {
        raw: function(e) {
            for (var t = x(e.raw), n = he(t.length), r = arguments.length, a = [], o = 0; n > o; )
                a.push(String(t[o++])),
                o < r && a.push(String(arguments[o]));
            return a.join("")
        }
    });
    var Uo = function(e) {
        return function(t, n) {
            var r, a, o = String(b(t)), i = pe(n), s = o.length;
            return i < 0 || i >= s ? e ? "" : void 0 : (r = o.charCodeAt(i)) < 55296 || r > 56319 || i + 1 === s || (a = o.charCodeAt(i + 1)) < 56320 || a > 57343 ? e ? o.charAt(i) : r : e ? o.slice(i, i + 2) : a - 56320 + (r - 55296 << 10) + 65536
        }
    }
      , Vo = {
        codeAt: Uo(!1),
        charAt: Uo(!0)
    }
      , zo = Vo.codeAt;
    Me({
        target: "String",
        proto: !0
    }, {
        codePointAt: function(e) {
            return zo(this, e)
        }
    });
    var Wo, jo = nt("match"), Ho = function(e) {
        var t;
        return w(e) && (void 0 !== (t = e[jo]) ? !!t : "RegExp" == v(e))
    }, Go = function(e) {
        if (Ho(e))
            throw TypeError("The method doesn't accept regular expressions");
        return e
    }, Ko = nt("match"), qo = function(e) {
        var t = /./;
        try {
            "/./"[e](t)
        } catch (n) {
            try {
                return t[Ko] = !1,
                "/./"[e](t)
            } catch (e) {}
        }
        return !1
    }, Xo = _.f, Qo = "".endsWith, Yo = Math.min, $o = qo("endsWith"), Zo = !($o || (Wo = Xo(String.prototype, "endsWith"),
    !Wo || Wo.writable));
    Me({
        target: "String",
        proto: !0,
        forced: !Zo && !$o
    }, {
        endsWith: function(e) {
            var t = String(b(this));
            Go(e);
            var n = arguments.length > 1 ? arguments[1] : void 0
              , r = he(t.length)
              , a = void 0 === n ? r : Yo(he(n), r)
              , o = String(e);
            return Qo ? Qo.call(t, o, a) : t.slice(a - o.length, a) === o
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: !qo("includes")
    }, {
        includes: function(e) {
            return !!~String(b(this)).indexOf(Go(e), arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var Jo = function() {
        var e = R(this)
          , t = "";
        return e.global && (t += "g"),
        e.ignoreCase && (t += "i"),
        e.multiline && (t += "m"),
        e.dotAll && (t += "s"),
        e.unicode && (t += "u"),
        e.sticky && (t += "y"),
        t
    };
    function ei(e, t) {
        return RegExp(e, t)
    }
    var ti = {
        UNSUPPORTED_Y: c((function() {
            var e = ei("a", "y");
            return e.lastIndex = 2,
            null != e.exec("abcd")
        }
        )),
        BROKEN_CARET: c((function() {
            var e = ei("^r", "gy");
            return e.lastIndex = 2,
            null != e.exec("str")
        }
        ))
    }
      , ni = RegExp.prototype.exec
      , ri = String.prototype.replace
      , ai = ni
      , oi = function() {
        var e = /a/
          , t = /b*/g;
        return ni.call(e, "a"),
        ni.call(t, "a"),
        0 !== e.lastIndex || 0 !== t.lastIndex
    }()
      , ii = ti.UNSUPPORTED_Y || ti.BROKEN_CARET
      , si = void 0 !== /()??/.exec("")[1];
    (oi || si || ii) && (ai = function(e) {
        var t, n, r, a, o = this, i = ii && o.sticky, s = Jo.call(o), u = o.source, c = 0, l = e;
        return i && (-1 === (s = s.replace("y", "")).indexOf("g") && (s += "g"),
        l = String(e).slice(o.lastIndex),
        o.lastIndex > 0 && (!o.multiline || o.multiline && "\n" !== e[o.lastIndex - 1]) && (u = "(?: " + u + ")",
        l = " " + l,
        c++),
        n = new RegExp("^(?:" + u + ")",s)),
        si && (n = new RegExp("^" + u + "$(?!\\s)",s)),
        oi && (t = o.lastIndex),
        r = ni.call(i ? n : o, l),
        i ? r ? (r.input = r.input.slice(c),
        r[0] = r[0].slice(c),
        r.index = o.lastIndex,
        o.lastIndex += r[0].length) : o.lastIndex = 0 : oi && r && (o.lastIndex = o.global ? r.index + r[0].length : t),
        si && r && r.length > 1 && ri.call(r[0], n, (function() {
            for (a = 1; a < arguments.length - 2; a++)
                void 0 === arguments[a] && (r[a] = void 0)
        }
        )),
        r
    }
    );
    var ui = ai;
    Me({
        target: "RegExp",
        proto: !0,
        forced: /./.exec !== ui
    }, {
        exec: ui
    });
    var ci = nt("species")
      , li = !c((function() {
        var e = /./;
        return e.exec = function() {
            var e = [];
            return e.groups = {
                a: "7"
            },
            e
        }
        ,
        "7" !== "".replace(e, "$<a>")
    }
    ))
      , fi = "$0" === "a".replace(/./, "$0")
      , pi = nt("replace")
      , di = !!/./[pi] && "" === /./[pi]("a", "$0")
      , hi = !c((function() {
        var e = /(?:)/
          , t = e.exec;
        e.exec = function() {
            return t.apply(this, arguments)
        }
        ;
        var n = "ab".split(e);
        return 2 !== n.length || "a" !== n[0] || "b" !== n[1]
    }
    ))
      , mi = function(e, t, n, r) {
        var a = nt(e)
          , o = !c((function() {
            var t = {};
            return t[a] = function() {
                return 7
            }
            ,
            7 != ""[e](t)
        }
        ))
          , i = o && !c((function() {
            var t = !1
              , n = /a/;
            return "split" === e && ((n = {}).constructor = {},
            n.constructor[ci] = function() {
                return n
            }
            ,
            n.flags = "",
            n[a] = /./[a]),
            n.exec = function() {
                return t = !0,
                null
            }
            ,
            n[a](""),
            !t
        }
        ));
        if (!o || !i || "replace" === e && (!li || !fi || di) || "split" === e && !hi) {
            var s = /./[a]
              , u = n(a, ""[e], (function(e, t, n, r, a) {
                return t.exec === ui ? o && !a ? {
                    done: !0,
                    value: s.call(t, n, r)
                } : {
                    done: !0,
                    value: e.call(n, t, r)
                } : {
                    done: !1
                }
            }
            ), {
                REPLACE_KEEPS_$0: fi,
                REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: di
            })
              , l = u[0]
              , f = u[1];
            ie(String.prototype, e, l),
            ie(RegExp.prototype, a, 2 == t ? function(e, t) {
                return f.call(e, this, t)
            }
            : function(e) {
                return f.call(e, this)
            }
            )
        }
        r && B(RegExp.prototype[a], "sham", !0)
    }
      , vi = Vo.charAt
      , gi = function(e, t, n) {
        return t + (n ? vi(e, t).length : 1)
    }
      , yi = function(e, t) {
        var n = e.exec;
        if ("function" == typeof n) {
            var r = n.call(e, t);
            if ("object" != typeof r)
                throw TypeError("RegExp exec method returned something other than an Object or null");
            return r
        }
        if ("RegExp" !== v(e))
            throw TypeError("RegExp#exec called on incompatible receiver");
        return ui.call(e, t)
    };
    mi("match", 1, (function(e, t, n) {
        return [function(t) {
            var n = b(this)
              , r = null == t ? void 0 : t[e];
            return void 0 !== r ? r.call(t, n) : new RegExp(t)[e](String(n))
        }
        , function(e) {
            var r = n(t, e, this);
            if (r.done)
                return r.value;
            var a = R(e)
              , o = String(this);
            if (!a.global)
                return yi(a, o);
            var i = a.unicode;
            a.lastIndex = 0;
            for (var s, u = [], c = 0; null !== (s = yi(a, o)); ) {
                var l = String(s[0]);
                u[c] = l,
                "" === l && (a.lastIndex = gi(o, he(a.lastIndex), i)),
                c++
            }
            return 0 === c ? null : u
        }
        ]
    }
    ));
    var bi = nt("species")
      , xi = function(e, t) {
        var n, r = R(e).constructor;
        return void 0 === r || null == (n = R(r)[bi]) ? t : ct(n)
    }
      , wi = nt("matchAll")
      , ki = "RegExp String"
      , Ci = "RegExp String Iterator"
      , Ei = oe.set
      , Si = oe.getterFor(Ci)
      , Ii = RegExp.prototype
      , Ti = Ii.exec
      , Ai = "".matchAll
      , Ni = !!Ai && !c((function() {
        "a".matchAll(/./)
    }
    ))
      , _i = Na((function(e, t, n, r) {
        Ei(this, {
            type: Ci,
            regexp: e,
            string: t,
            global: n,
            unicode: r,
            done: !1
        })
    }
    ), ki, (function() {
        var e = Si(this);
        if (e.done)
            return {
                value: void 0,
                done: !0
            };
        var t = e.regexp
          , n = e.string
          , r = function(e, t) {
            var n, r = e.exec;
            if ("function" == typeof r) {
                if ("object" != typeof (n = r.call(e, t)))
                    throw TypeError("Incorrect exec result");
                return n
            }
            return Ti.call(e, t)
        }(t, n);
        return null === r ? {
            value: void 0,
            done: e.done = !0
        } : e.global ? ("" == String(r[0]) && (t.lastIndex = gi(n, he(t.lastIndex), e.unicode)),
        {
            value: r,
            done: !1
        }) : (e.done = !0,
        {
            value: r,
            done: !1
        })
    }
    ))
      , Ri = function(e) {
        var t, n, r, a, o, i, s = R(this), u = String(e);
        return t = xi(s, RegExp),
        void 0 === (n = s.flags) && s instanceof RegExp && !("flags"in Ii) && (n = Jo.call(s)),
        r = void 0 === n ? "" : String(n),
        a = new t(t === RegExp ? s.source : s,r),
        o = !!~r.indexOf("g"),
        i = !!~r.indexOf("u"),
        a.lastIndex = he(s.lastIndex),
        new _i(a,u,o,i)
    };
    Me({
        target: "String",
        proto: !0,
        forced: Ni
    }, {
        matchAll: function(e) {
            var t, n, r = b(this);
            if (null != e) {
                if (Ho(e) && !~String(b("flags"in Ii ? e.flags : Jo.call(e))).indexOf("g"))
                    throw TypeError("`.matchAll` does not allow non-global regexes");
                if (Ni)
                    return Ai.apply(r, arguments);
                if (null != (n = e[wi]))
                    return ct(n).call(e, r)
            } else if (Ni)
                return Ai.apply(r, arguments);
            return t = String(r),
            new RegExp(e,"g")[wi](t)
        }
    }),
    wi in Ii || B(Ii, wi, Ri);
    var Oi = "".repeat || function(e) {
        var t = String(b(this))
          , n = ""
          , r = pe(e);
        if (r < 0 || r == 1 / 0)
            throw RangeError("Wrong number of repetitions");
        for (; r > 0; (r >>>= 1) && (t += t))
            1 & r && (n += t);
        return n
    }
      , Di = Math.ceil
      , Bi = function(e) {
        return function(t, n, r) {
            var a, o, i = String(b(t)), s = i.length, u = void 0 === r ? " " : String(r), c = he(n);
            return c <= s || "" == u ? i : (a = c - s,
            (o = Oi.call(u, Di(a / u.length))).length > a && (o = o.slice(0, a)),
            e ? i + o : o + i)
        }
    }
      , Fi = {
        start: Bi(!1),
        end: Bi(!0)
    }
      , Mi = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(Bn)
      , Pi = Fi.end;
    Me({
        target: "String",
        proto: !0,
        forced: Mi
    }, {
        padEnd: function(e) {
            return Pi(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    });
    var Li = Fi.start;
    Me({
        target: "String",
        proto: !0,
        forced: Mi
    }, {
        padStart: function(e) {
            return Li(this, e, arguments.length > 1 ? arguments[1] : void 0)
        }
    }),
    Me({
        target: "String",
        proto: !0
    }, {
        repeat: Oi
    });
    var Ui = Math.max
      , Vi = Math.min
      , zi = Math.floor
      , Wi = /\$([$&'`]|\d\d?|<[^>]*>)/g
      , ji = /\$([$&'`]|\d\d?)/g
      , Hi = function(e) {
        return void 0 === e ? e : String(e)
    };
    mi("replace", 2, (function(e, t, n, r) {
        var a = r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
          , o = r.REPLACE_KEEPS_$0
          , i = a ? "$" : "$0";
        return [function(n, r) {
            var a = b(this)
              , o = null == n ? void 0 : n[e];
            return void 0 !== o ? o.call(n, a, r) : t.call(String(a), n, r)
        }
        , function(e, r) {
            if (!a && o || "string" == typeof r && -1 === r.indexOf(i)) {
                var u = n(t, e, this, r);
                if (u.done)
                    return u.value
            }
            var c = R(e)
              , l = String(this)
              , f = "function" == typeof r;
            f || (r = String(r));
            var p = c.global;
            if (p) {
                var d = c.unicode;
                c.lastIndex = 0
            }
            for (var h = []; ; ) {
                var m = yi(c, l);
                if (null === m)
                    break;
                if (h.push(m),
                !p)
                    break;
                "" === String(m[0]) && (c.lastIndex = gi(l, he(c.lastIndex), d))
            }
            for (var v = "", g = 0, y = 0; y < h.length; y++) {
                m = h[y];
                for (var b = String(m[0]), x = Ui(Vi(pe(m.index), l.length), 0), w = [], k = 1; k < m.length; k++)
                    w.push(Hi(m[k]));
                var C = m.groups;
                if (f) {
                    var E = [b].concat(w, x, l);
                    void 0 !== C && E.push(C);
                    var S = String(r.apply(void 0, E))
                } else
                    S = s(b, l, x, w, C, r);
                x >= g && (v += l.slice(g, x) + S,
                g = x + b.length)
            }
            return v + l.slice(g)
        }
        ];
        function s(e, n, r, a, o, i) {
            var s = r + e.length
              , u = a.length
              , c = ji;
            return void 0 !== o && (o = Ve(o),
            c = Wi),
            t.call(i, c, (function(t, i) {
                var c;
                switch (i.charAt(0)) {
                case "$":
                    return "$";
                case "&":
                    return e;
                case "`":
                    return n.slice(0, r);
                case "'":
                    return n.slice(s);
                case "<":
                    c = o[i.slice(1, -1)];
                    break;
                default:
                    var l = +i;
                    if (0 === l)
                        return t;
                    if (l > u) {
                        var f = zi(l / 10);
                        return 0 === f ? t : f <= u ? void 0 === a[f - 1] ? i.charAt(1) : a[f - 1] + i.charAt(1) : t
                    }
                    c = a[l - 1]
                }
                return void 0 === c ? "" : c
            }
            ))
        }
    }
    )),
    mi("search", 1, (function(e, t, n) {
        return [function(t) {
            var n = b(this)
              , r = null == t ? void 0 : t[e];
            return void 0 !== r ? r.call(t, n) : new RegExp(t)[e](String(n))
        }
        , function(e) {
            var r = n(t, e, this);
            if (r.done)
                return r.value;
            var a = R(e)
              , o = String(this)
              , i = a.lastIndex;
            go(i, 0) || (a.lastIndex = 0);
            var s = yi(a, o);
            return go(a.lastIndex, i) || (a.lastIndex = i),
            null === s ? -1 : s.index
        }
        ]
    }
    ));
    var Gi = [].push
      , Ki = Math.min
      , qi = 4294967295
      , Xi = !c((function() {
        return !RegExp(qi, "y")
    }
    ));
    mi("split", 2, (function(e, t, n) {
        var r;
        return r = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function(e, n) {
            var r = String(b(this))
              , a = void 0 === n ? qi : n >>> 0;
            if (0 === a)
                return [];
            if (void 0 === e)
                return [r];
            if (!Ho(e))
                return t.call(r, e, a);
            for (var o, i, s, u = [], c = (e.ignoreCase ? "i" : "") + (e.multiline ? "m" : "") + (e.unicode ? "u" : "") + (e.sticky ? "y" : ""), l = 0, f = new RegExp(e.source,c + "g"); (o = ui.call(f, r)) && !((i = f.lastIndex) > l && (u.push(r.slice(l, o.index)),
            o.length > 1 && o.index < r.length && Gi.apply(u, o.slice(1)),
            s = o[0].length,
            l = i,
            u.length >= a)); )
                f.lastIndex === o.index && f.lastIndex++;
            return l === r.length ? !s && f.test("") || u.push("") : u.push(r.slice(l)),
            u.length > a ? u.slice(0, a) : u
        }
        : "0".split(void 0, 0).length ? function(e, n) {
            return void 0 === e && 0 === n ? [] : t.call(this, e, n)
        }
        : t,
        [function(t, n) {
            var a = b(this)
              , o = null == t ? void 0 : t[e];
            return void 0 !== o ? o.call(t, a, n) : r.call(String(a), t, n)
        }
        , function(e, a) {
            var o = n(r, e, this, a, r !== t);
            if (o.done)
                return o.value;
            var i = R(e)
              , s = String(this)
              , u = xi(i, RegExp)
              , c = i.unicode
              , l = (i.ignoreCase ? "i" : "") + (i.multiline ? "m" : "") + (i.unicode ? "u" : "") + (Xi ? "y" : "g")
              , f = new u(Xi ? i : "^(?:" + i.source + ")",l)
              , p = void 0 === a ? qi : a >>> 0;
            if (0 === p)
                return [];
            if (0 === s.length)
                return null === yi(f, s) ? [s] : [];
            for (var d = 0, h = 0, m = []; h < s.length; ) {
                f.lastIndex = Xi ? h : 0;
                var v, g = yi(f, Xi ? s : s.slice(h));
                if (null === g || (v = Ki(he(f.lastIndex + (Xi ? 0 : h)), s.length)) === d)
                    h = gi(s, h, c);
                else {
                    if (m.push(s.slice(d, h)),
                    m.length === p)
                        return m;
                    for (var y = 1; y <= g.length - 1; y++)
                        if (m.push(g[y]),
                        m.length === p)
                            return m;
                    h = d = v
                }
            }
            return m.push(s.slice(d)),
            m
        }
        ]
    }
    ), !Xi);
    var Qi = _.f
      , Yi = "".startsWith
      , $i = Math.min
      , Zi = qo("startsWith")
      , Ji = !Zi && !!function() {
        var e = Qi(String.prototype, "startsWith");
        return e && !e.writable
    }();
    Me({
        target: "String",
        proto: !0,
        forced: !Ji && !Zi
    }, {
        startsWith: function(e) {
            var t = String(b(this));
            Go(e);
            var n = he($i(arguments.length > 1 ? arguments[1] : void 0, t.length))
              , r = String(e);
			  // DAOKT: fix bug DNN lib
            return t.slice(n, n + r.length) === r
			//return Yi ? Yi.call(t, r, n) : t.slice(n, n + r.length) === r
        }
    });
    var es = "\t\n\v\f\r  áââââââââââââ¯âã\u2028\u2029\ufeff"
      , ts = "[" + es + "]"
      , ns = RegExp("^" + ts + ts + "*")
      , rs = RegExp(ts + ts + "*$")
      , as = function(e) {
        return function(t) {
            var n = String(b(t));
            return 1 & e && (n = n.replace(ns, "")),
            2 & e && (n = n.replace(rs, "")),
            n
        }
    }
      , os = {
        start: as(1),
        end: as(2),
        trim: as(3)
    }
      , is = function(e) {
        return c((function() {
            return !!es[e]() || "âÂá " != "âÂá "[e]() || es[e].name !== e
        }
        ))
    }
      , ss = os.trim;
    Me({
        target: "String",
        proto: !0,
        forced: is("trim")
    }, {
        trim: function() {
            return ss(this)
        }
    });
    var us = os.start
      , cs = is("trimStart")
      , ls = cs ? function() {
        return us(this)
    }
    : "".trimStart;
    Me({
        target: "String",
        proto: !0,
        forced: cs
    }, {
        trimStart: ls,
        trimLeft: ls
    });
    var fs = os.end
      , ps = is("trimEnd")
      , ds = ps ? function() {
        return fs(this)
    }
    : "".trimEnd;
    Me({
        target: "String",
        proto: !0,
        forced: ps
    }, {
        trimEnd: ds,
        trimRight: ds
    });
    var hs = Vo.charAt
      , ms = "String Iterator"
      , vs = oe.set
      , gs = oe.getterFor(ms);
    Pa(String, "String", (function(e) {
        vs(this, {
            type: ms,
            string: String(e),
            index: 0
        })
    }
    ), (function() {
        var e, t = gs(this), n = t.string, r = t.index;
        return r >= n.length ? {
            value: void 0,
            done: !0
        } : (e = hs(n, r),
        t.index += e.length,
        {
            value: e,
            done: !1
        })
    }
    ));
    var ys = /"/g
      , bs = function(e, t, n, r) {
        var a = String(b(e))
          , o = "<" + t;
        return "" !== n && (o += " " + n + '="' + String(r).replace(ys, "&quot;") + '"'),
        o + ">" + a + "</" + t + ">"
    }
      , xs = function(e) {
        return c((function() {
            var t = ""[e]('"');
            return t !== t.toLowerCase() || t.split('"').length > 3
        }
        ))
    };
    Me({
        target: "String",
        proto: !0,
        forced: xs("anchor")
    }, {
        anchor: function(e) {
            return bs(this, "a", "name", e)
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("big")
    }, {
        big: function() {
            return bs(this, "big", "", "")
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("blink")
    }, {
        blink: function() {
            return bs(this, "blink", "", "")
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("bold")
    }, {
        bold: function() {
            return bs(this, "b", "", "")
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("fixed")
    }, {
        fixed: function() {
            return bs(this, "tt", "", "")
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("fontcolor")
    }, {
        fontcolor: function(e) {
            return bs(this, "font", "color", e)
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("fontsize")
    }, {
        fontsize: function(e) {
            return bs(this, "font", "size", e)
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("italics")
    }, {
        italics: function() {
            return bs(this, "i", "", "")
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("link")
    }, {
        link: function(e) {
            return bs(this, "a", "href", e)
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("small")
    }, {
        small: function() {
            return bs(this, "small", "", "")
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("strike")
    }, {
        strike: function() {
            return bs(this, "strike", "", "")
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("sub")
    }, {
        sub: function() {
            return bs(this, "sub", "", "")
        }
    }),
    Me({
        target: "String",
        proto: !0,
        forced: xs("sup")
    }, {
        sup: function() {
            return bs(this, "sup", "", "")
        }
    });
    var ws = nt("replace")
      , ks = RegExp.prototype;
    Me({
        target: "String",
        proto: !0
    }, {
        replaceAll: function e(t, n) {
            var r, a, o, i, s, u, c, l = b(this);
            if (null != t) {
                if (Ho(t) && !~String(b("flags"in ks ? t.flags : Jo.call(t))).indexOf("g"))
                    throw TypeError("`.replaceAll` does not allow non-global regexes");
                if (void 0 !== (r = t[ws]))
                    return r.call(t, l, n)
            }
            if (a = String(l),
            "" === (o = String(t)))
                return e.call(a, /(?:)/g, n);
            if (i = a.split(o),
            "function" != typeof n)
                return i.join(String(n));
            for (u = (s = i[0]).length,
            c = 1; c < i.length; c++)
                s += String(n(o, u, a)),
                u += o.length + i[c].length,
                s += i[c];
            return s
        }
    });
    var Cs = function(e, t, n) {
        var r, a;
        return on && "function" == typeof (r = t.constructor) && r !== n && w(a = r.prototype) && a !== n.prototype && on(e, a),
        e
    }
      , Es = D.f
      , Ss = Ee.f
      , Is = oe.set
      , Ts = nt("match")
      , As = u.RegExp
      , Ns = As.prototype
      , _s = /a/g
      , Rs = /a/g
      , Os = new As(_s) !== _s
      , Ds = ti.UNSUPPORTED_Y;
    if (l && Be("RegExp", !Os || Ds || c((function() {
        return Rs[Ts] = !1,
        As(_s) != _s || As(Rs) == Rs || "/a/i" != As(_s, "i")
    }
    )))) {
        for (var Bs = function(e, t) {
            var n, r = this instanceof Bs, a = Ho(e), o = void 0 === t;
            if (!r && a && e.constructor === Bs && o)
                return e;
            Os ? a && !o && (e = e.source) : e instanceof Bs && (o && (t = Jo.call(e)),
            e = e.source),
            Ds && (n = !!t && t.indexOf("y") > -1) && (t = t.replace(/y/g, ""));
            var i = Cs(Os ? new As(e,t) : As(e, t), r ? this : Ns, Bs);
            return Ds && n && Is(i, {
                sticky: n
            }),
            i
        }, Fs = function(e) {
            e in Bs || Es(Bs, e, {
                configurable: !0,
                get: function() {
                    return As[e]
                },
                set: function(t) {
                    As[e] = t
                }
            })
        }, Ms = Ss(As), Ps = 0; Ms.length > Ps; )
            Fs(Ms[Ps++]);
        Ns.constructor = Bs,
        Bs.prototype = Ns,
        ie(u, "RegExp", Bs)
    }
    xa("RegExp"),
    l && ("g" != /./g.flags || ti.UNSUPPORTED_Y) && D.f(RegExp.prototype, "flags", {
        configurable: !0,
        get: Jo
    });
    var Ls = ti.UNSUPPORTED_Y
      , Us = D.f
      , Vs = oe.get
      , zs = RegExp.prototype;
    l && Ls && Us(RegExp.prototype, "sticky", {
        configurable: !0,
        get: function() {
            if (this !== zs) {
                if (this instanceof RegExp)
                    return !!Vs(this).sticky;
                throw TypeError("Incompatible receiver, RegExp required")
            }
        }
    });
    var Ws = function() {
        var e = !1
          , t = /[ac]/;
        return t.exec = function() {
            return e = !0,
            /./.exec.apply(this, arguments)
        }
        ,
        !0 === t.test("abc") && e
    }()
      , js = /./.test;
    Me({
        target: "RegExp",
        proto: !0,
        forced: !Ws
    }, {
        test: function(e) {
            if ("function" != typeof this.exec)
                return js.call(this, e);
            var t = this.exec(e);
            if (null !== t && !w(t))
                throw new Error("RegExp exec method returned something other than an Object or null");
            return !!t
        }
    });
    var Hs = "toString"
      , Gs = RegExp.prototype
      , Ks = Gs.toString
      , qs = c((function() {
        return "/a/b" != Ks.call({
            source: "a",
            flags: "b"
        })
    }
    ))
      , Xs = Ks.name != Hs;
    (qs || Xs) && ie(RegExp.prototype, Hs, (function() {
        var e = R(this)
          , t = String(e.source)
          , n = e.flags;
        return "/" + t + "/" + String(void 0 === n && e instanceof RegExp && !("flags"in Gs) ? Jo.call(e) : n)
    }
    ), {
        unsafe: !0
    });
    var Qs = os.trim
      , Ys = u.parseInt
      , $s = /^[+-]?0[Xx]/
      , Zs = 8 !== Ys(es + "08") || 22 !== Ys(es + "0x16") ? function(e, t) {
        var n = Qs(String(e));
        return Ys(n, t >>> 0 || ($s.test(n) ? 16 : 10))
    }
    : Ys;
    Me({
        global: !0,
        forced: parseInt != Zs
    }, {
        parseInt: Zs
    });
    var Js = os.trim
      , eu = u.parseFloat
      , tu = 1 / eu(es + "-0") != -1 / 0 ? function(e) {
        var t = Js(String(e))
          , n = eu(t);
        return 0 === n && "-" == t.charAt(0) ? -0 : n
    }
    : eu;
    Me({
        global: !0,
        forced: parseFloat != tu
    }, {
        parseFloat: tu
    });
    var nu = Ee.f
      , ru = _.f
      , au = D.f
      , ou = os.trim
      , iu = "Number"
      , su = u.Number
      , uu = su.prototype
      , cu = v(Xe(uu)) == iu
      , lu = function(e) {
        var t, n, r, a, o, i, s, u, c = k(e, !1);
        if ("string" == typeof c && c.length > 2)
            if (43 === (t = (c = ou(c)).charCodeAt(0)) || 45 === t) {
                if (88 === (n = c.charCodeAt(2)) || 120 === n)
                    return NaN
            } else if (48 === t) {
                switch (c.charCodeAt(1)) {
                case 66:
                case 98:
                    r = 2,
                    a = 49;
                    break;
                case 79:
                case 111:
                    r = 8,
                    a = 55;
                    break;
                default:
                    return +c
                }
                for (i = (o = c.slice(2)).length,
                s = 0; s < i; s++)
                    if ((u = o.charCodeAt(s)) < 48 || u > a)
                        return NaN;
                return parseInt(o, r)
            }
        return +c
    };
    if (Be(iu, !su(" 0o1") || !su("0b1") || su("+0x1"))) {
        for (var fu, pu = function(e) {
            var t = arguments.length < 1 ? 0 : e
              , n = this;
            return n instanceof pu && (cu ? c((function() {
                uu.valueOf.call(n)
            }
            )) : v(n) != iu) ? Cs(new su(lu(t)), n, pu) : lu(t)
        }, du = l ? nu(su) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","), hu = 0; du.length > hu; hu++)
            E(su, fu = du[hu]) && !E(pu, fu) && au(pu, fu, ru(su, fu));
        pu.prototype = uu,
        uu.constructor = pu,
        ie(u, iu, pu)
    }
    Me({
        target: "Number",
        stat: !0
    }, {
        EPSILON: Math.pow(2, -52)
    });
    var mu = u.isFinite
      , vu = Number.isFinite || function(e) {
        return "number" == typeof e && mu(e)
    }
    ;
    Me({
        target: "Number",
        stat: !0
    }, {
        isFinite: vu
    });
    var gu = Math.floor
      , yu = function(e) {
        return !w(e) && isFinite(e) && gu(e) === e
    };
    Me({
        target: "Number",
        stat: !0
    }, {
        isInteger: yu
    }),
    Me({
        target: "Number",
        stat: !0
    }, {
        isNaN: function(e) {
            return e != e
        }
    });
    var bu = Math.abs;
    Me({
        target: "Number",
        stat: !0
    }, {
        isSafeInteger: function(e) {
            return yu(e) && bu(e) <= 9007199254740991
        }
    }),
    Me({
        target: "Number",
        stat: !0
    }, {
        MAX_SAFE_INTEGER: 9007199254740991
    }),
    Me({
        target: "Number",
        stat: !0
    }, {
        MIN_SAFE_INTEGER: -9007199254740991
    }),
    Me({
        target: "Number",
        stat: !0,
        forced: Number.parseFloat != tu
    }, {
        parseFloat: tu
    }),
    Me({
        target: "Number",
        stat: !0,
        forced: Number.parseInt != Zs
    }, {
        parseInt: Zs
    });
    var xu = function(e) {
        if ("number" != typeof e && "Number" != v(e))
            throw TypeError("Incorrect invocation");
        return +e
    }
      , wu = 1..toFixed
      , ku = Math.floor
      , Cu = function(e, t, n) {
        return 0 === t ? n : t % 2 == 1 ? Cu(e, t - 1, n * e) : Cu(e * e, t / 2, n)
    }
      , Eu = wu && ("0.000" !== 8e-5.toFixed(3) || "1" !== .9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== (0xde0b6b3a7640080).toFixed(0)) || !c((function() {
        wu.call({})
    }
    ));
    Me({
        target: "Number",
        proto: !0,
        forced: Eu
    }, {
        toFixed: function(e) {
            var t, n, r, a, o = xu(this), i = pe(e), s = [0, 0, 0, 0, 0, 0], u = "", c = "0", l = function(e, t) {
                for (var n = -1, r = t; ++n < 6; )
                    r += e * s[n],
                    s[n] = r % 1e7,
                    r = ku(r / 1e7)
            }, f = function(e) {
                for (var t = 6, n = 0; --t >= 0; )
                    n += s[t],
                    s[t] = ku(n / e),
                    n = n % e * 1e7
            }, p = function() {
                for (var e = 6, t = ""; --e >= 0; )
                    if ("" !== t || 0 === e || 0 !== s[e]) {
                        var n = String(s[e]);
                        t = "" === t ? n : t + Oi.call("0", 7 - n.length) + n
                    }
                return t
            };
            if (i < 0 || i > 20)
                throw RangeError("Incorrect fraction digits");
            if (o != o)
                return "NaN";
            if (o <= -1e21 || o >= 1e21)
                return String(o);
            if (o < 0 && (u = "-",
            o = -o),
            o > 1e-21)
                if (n = (t = function(e) {
                    for (var t = 0, n = e; n >= 4096; )
                        t += 12,
                        n /= 4096;
                    for (; n >= 2; )
                        t += 1,
                        n /= 2;
                    return t
                }(o * Cu(2, 69, 1)) - 69) < 0 ? o * Cu(2, -t, 1) : o / Cu(2, t, 1),
                n *= 4503599627370496,
                (t = 52 - t) > 0) {
                    for (l(0, n),
                    r = i; r >= 7; )
                        l(1e7, 0),
                        r -= 7;
                    for (l(Cu(10, r, 1), 0),
                    r = t - 1; r >= 23; )
                        f(1 << 23),
                        r -= 23;
                    f(1 << r),
                    l(1, 1),
                    f(2),
                    c = p()
                } else
                    l(0, n),
                    l(1 << -t, 0),
                    c = p() + Oi.call("0", i);
            return c = i > 0 ? u + ((a = c.length) <= i ? "0." + Oi.call("0", i - a) + c : c.slice(0, a - i) + "." + c.slice(a - i)) : u + c
        }
    });
    var Su = 1..toPrecision
      , Iu = c((function() {
        return "1" !== Su.call(1, void 0)
    }
    )) || !c((function() {
        Su.call({})
    }
    ));
    Me({
        target: "Number",
        proto: !0,
        forced: Iu
    }, {
        toPrecision: function(e) {
            return void 0 === e ? Su.call(xu(this)) : Su.call(xu(this), e)
        }
    });
    var Tu = Math.log
      , Au = Math.log1p || function(e) {
        return (e = +e) > -1e-8 && e < 1e-8 ? e - e * e / 2 : Tu(1 + e)
    }
      , Nu = Math.acosh
      , _u = Math.log
      , Ru = Math.sqrt
      , Ou = Math.LN2
      , Du = !Nu || 710 != Math.floor(Nu(Number.MAX_VALUE)) || Nu(1 / 0) != 1 / 0;
    Me({
        target: "Math",
        stat: !0,
        forced: Du
    }, {
        acosh: function(e) {
            return (e = +e) < 1 ? NaN : e > 94906265.62425156 ? _u(e) + Ou : Au(e - 1 + Ru(e - 1) * Ru(e + 1))
        }
    });
    var Bu = Math.asinh
      , Fu = Math.log
      , Mu = Math.sqrt;
    Me({
        target: "Math",
        stat: !0,
        forced: !(Bu && 1 / Bu(0) > 0)
    }, {
        asinh: function e(t) {
            return isFinite(t = +t) && 0 != t ? t < 0 ? -e(-t) : Fu(t + Mu(t * t + 1)) : t
        }
    });
    var Pu = Math.atanh
      , Lu = Math.log;
    Me({
        target: "Math",
        stat: !0,
        forced: !(Pu && 1 / Pu(-0) < 0)
    }, {
        atanh: function(e) {
            return 0 == (e = +e) ? e : Lu((1 + e) / (1 - e)) / 2
        }
    });
    var Uu = Math.sign || function(e) {
        return 0 == (e = +e) || e != e ? e : e < 0 ? -1 : 1
    }
      , Vu = Math.abs
      , zu = Math.pow;
    Me({
        target: "Math",
        stat: !0
    }, {
        cbrt: function(e) {
            return Uu(e = +e) * zu(Vu(e), 1 / 3)
        }
    });
    var Wu = Math.floor
      , ju = Math.log
      , Hu = Math.LOG2E;
    Me({
        target: "Math",
        stat: !0
    }, {
        clz32: function(e) {
            return (e >>>= 0) ? 31 - Wu(ju(e + .5) * Hu) : 32
        }
    });
    var Gu = Math.expm1
      , Ku = Math.exp
      , qu = !Gu || Gu(10) > 22025.465794806718 || Gu(10) < 22025.465794806718 || -2e-17 != Gu(-2e-17) ? function(e) {
        return 0 == (e = +e) ? e : e > -1e-6 && e < 1e-6 ? e + e * e / 2 : Ku(e) - 1
    }
    : Gu
      , Xu = Math.cosh
      , Qu = Math.abs
      , Yu = Math.E;
    Me({
        target: "Math",
        stat: !0,
        forced: !Xu || Xu(710) === 1 / 0
    }, {
        cosh: function(e) {
            var t = qu(Qu(e) - 1) + 1;
            return (t + 1 / (t * Yu * Yu)) * (Yu / 2)
        }
    }),
    Me({
        target: "Math",
        stat: !0,
        forced: qu != Math.expm1
    }, {
        expm1: qu
    });
    var $u = Math.abs
      , Zu = Math.pow
      , Ju = Zu(2, -52)
      , ec = Zu(2, -23)
      , tc = Zu(2, 127) * (2 - ec)
      , nc = Zu(2, -126)
      , rc = Math.fround || function(e) {
        var t, n, r = $u(e), a = Uu(e);
        return r < nc ? a * function(e) {
            return e + 1 / Ju - 1 / Ju
        }(r / nc / ec) * nc * ec : (n = (t = (1 + ec / Ju) * r) - (t - r)) > tc || n != n ? a * (1 / 0) : a * n
    }
    ;
    Me({
        target: "Math",
        stat: !0
    }, {
        fround: rc
    });
    var ac = Math.hypot
      , oc = Math.abs
      , ic = Math.sqrt
      , sc = !!ac && ac(1 / 0, NaN) !== 1 / 0;
    Me({
        target: "Math",
        stat: !0,
        forced: sc
    }, {
        hypot: function(e, t) {
            for (var n, r, a = 0, o = 0, i = arguments.length, s = 0; o < i; )
                s < (n = oc(arguments[o++])) ? (a = a * (r = s / n) * r + 1,
                s = n) : a += n > 0 ? (r = n / s) * r : n;
            return s === 1 / 0 ? 1 / 0 : s * ic(a)
        }
    });
    var uc = Math.imul
      , cc = c((function() {
        return -5 != uc(4294967295, 5) || 2 != uc.length
    }
    ));
    Me({
        target: "Math",
        stat: !0,
        forced: cc
    }, {
        imul: function(e, t) {
            var n = 65535
              , r = +e
              , a = +t
              , o = n & r
              , i = n & a;
            return 0 | o * i + ((n & r >>> 16) * i + o * (n & a >>> 16) << 16 >>> 0)
        }
    });
    var lc = Math.log
      , fc = Math.LOG10E;
    Me({
        target: "Math",
        stat: !0
    }, {
        log10: function(e) {
            return lc(e) * fc
        }
    }),
    Me({
        target: "Math",
        stat: !0
    }, {
        log1p: Au
    });
    var pc = Math.log
      , dc = Math.LN2;
    Me({
        target: "Math",
        stat: !0
    }, {
        log2: function(e) {
            return pc(e) / dc
        }
    }),
    Me({
        target: "Math",
        stat: !0
    }, {
        sign: Uu
    });
    var hc = Math.abs
      , mc = Math.exp
      , vc = Math.E
      , gc = c((function() {
        return -2e-17 != Math.sinh(-2e-17)
    }
    ));
    Me({
        target: "Math",
        stat: !0,
        forced: gc
    }, {
        sinh: function(e) {
            return hc(e = +e) < 1 ? (qu(e) - qu(-e)) / 2 : (mc(e - 1) - mc(-e - 1)) * (vc / 2)
        }
    });
    var yc = Math.exp;
    Me({
        target: "Math",
        stat: !0
    }, {
        tanh: function(e) {
            var t = qu(e = +e)
              , n = qu(-e);
            return t == 1 / 0 ? 1 : n == 1 / 0 ? -1 : (t - n) / (yc(e) + yc(-e))
        }
    }),
    ut(Math, "Math", !0);
    var bc = Math.ceil
      , xc = Math.floor;
    Me({
        target: "Math",
        stat: !0
    }, {
        trunc: function(e) {
            return (e > 0 ? xc : bc)(e)
        }
    }),
    Me({
        target: "Date",
        stat: !0
    }, {
        now: function() {
            return (new Date).getTime()
        }
    });
    var wc = c((function() {
        return null !== new Date(NaN).toJSON() || 1 !== Date.prototype.toJSON.call({
            toISOString: function() {
                return 1
            }
        })
    }
    ));
    Me({
        target: "Date",
        proto: !0,
        forced: wc
    }, {
        toJSON: function(e) {
            var t = Ve(this)
              , n = k(t);
            return "number" != typeof n || isFinite(n) ? t.toISOString() : null
        }
    });
    var kc = Fi.start
      , Cc = Math.abs
      , Ec = Date.prototype
      , Sc = Ec.getTime
      , Ic = Ec.toISOString
      , Tc = c((function() {
        return "0385-07-25T07:06:39.999Z" != Ic.call(new Date(-50000000000001))
    }
    )) || !c((function() {
        Ic.call(new Date(NaN))
    }
    )) ? function() {
        if (!isFinite(Sc.call(this)))
            throw RangeError("Invalid time value");
        var e = this
          , t = e.getUTCFullYear()
          , n = e.getUTCMilliseconds()
          , r = t < 0 ? "-" : t > 9999 ? "+" : "";
        return r + kc(Cc(t), r ? 6 : 4, 0) + "-" + kc(e.getUTCMonth() + 1, 2, 0) + "-" + kc(e.getUTCDate(), 2, 0) + "T" + kc(e.getUTCHours(), 2, 0) + ":" + kc(e.getUTCMinutes(), 2, 0) + ":" + kc(e.getUTCSeconds(), 2, 0) + "." + kc(n, 3, 0) + "Z"
    }
    : Ic;
    Me({
        target: "Date",
        proto: !0,
        forced: Date.prototype.toISOString !== Tc
    }, {
        toISOString: Tc
    });
    var Ac = Date.prototype
      , Nc = "Invalid Date"
      , _c = "toString"
      , Rc = Ac.toString
      , Oc = Ac.getTime;
    new Date(NaN) + "" != Nc && ie(Ac, _c, (function() {
        var e = Oc.call(this);
        return e == e ? Rc.call(this) : Nc
    }
    ));
    var Dc = nt("toPrimitive")
      , Bc = Date.prototype;
    Dc in Bc || B(Bc, Dc, (function(e) {
        if ("string" !== e && "number" !== e && "default" !== e)
            throw TypeError("Incorrect hint");
        return k(R(this), "number" !== e)
    }
    ));
    var Fc = ce("JSON", "stringify")
      , Mc = /[\uD800-\uDFFF]/g
      , Pc = /^[\uD800-\uDBFF]$/
      , Lc = /^[\uDC00-\uDFFF]$/
      , Uc = function(e, t, n) {
        var r = n.charAt(t - 1)
          , a = n.charAt(t + 1);
        return Pc.test(e) && !Lc.test(a) || Lc.test(e) && !Pc.test(r) ? "\\u" + e.charCodeAt(0).toString(16) : e
    }
      , Vc = c((function() {
        return '"\\udf06\\ud834"' !== Fc("\udf06\ud834") || '"\\udead"' !== Fc("\udead")
    }
    ));
    Fc && Me({
        target: "JSON",
        stat: !0,
        forced: Vc
    }, {
        stringify: function(e, t, n) {
            var r = Fc.apply(null, arguments);
            return "string" == typeof r ? r.replace(Mc, Uc) : r
        }
    }),
    ut(u.JSON, "JSON", !0);
    var zc, Wc, jc, Hc = u.Promise, Gc = function(e, t, n) {
        for (var r in t)
            ie(e, r, t[r], n);
        return e
    }, Kc = function(e, t, n) {
        if (!(e instanceof t))
            throw TypeError("Incorrect " + (n ? n + " " : "") + "invocation");
        return e
    }, qc = /(iphone|ipod|ipad).*applewebkit/i.test(Bn), Xc = u.location, Qc = u.setImmediate, Yc = u.clearImmediate, $c = u.process, Zc = u.MessageChannel, Jc = u.Dispatch, el = 0, tl = {}, nl = "onreadystatechange", rl = function(e) {
        if (tl.hasOwnProperty(e)) {
            var t = tl[e];
            delete tl[e],
            t()
        }
    }, al = function(e) {
        return function() {
            rl(e)
        }
    }, ol = function(e) {
        rl(e.data)
    }, il = function(e) {
        u.postMessage(e + "", Xc.protocol + "//" + Xc.host)
    };
    Qc && Yc || (Qc = function(e) {
        for (var t = [], n = 1; arguments.length > n; )
            t.push(arguments[n++]);
        return tl[++el] = function() {
            ("function" == typeof e ? e : Function(e)).apply(void 0, t)
        }
        ,
        zc(el),
        el
    }
    ,
    Yc = function(e) {
        delete tl[e]
    }
    ,
    Gr ? zc = function(e) {
        $c.nextTick(al(e))
    }
    : Jc && Jc.now ? zc = function(e) {
        Jc.now(al(e))
    }
    : Zc && !qc ? (jc = (Wc = new Zc).port2,
    Wc.port1.onmessage = ol,
    zc = lt(jc.postMessage, jc, 1)) : u.addEventListener && "function" == typeof postMessage && !u.importScripts && Xc && "file:" !== Xc.protocol && !c(il) ? (zc = il,
    u.addEventListener("message", ol, !1)) : zc = nl in T("script") ? function(e) {
        je.appendChild(T("script")).onreadystatechange = function() {
            je.removeChild(this),
            rl(e)
        }
    }
    : function(e) {
        setTimeout(al(e), 0)
    }
    );
    var sl, ul, cl, ll, fl, pl, dl, hl, ml = {
        set: Qc,
        clear: Yc
    }, vl = _.f, gl = ml.set, yl = u.MutationObserver || u.WebKitMutationObserver, bl = u.document, xl = u.process, wl = u.Promise, kl = vl(u, "queueMicrotask"), Cl = kl && kl.value;
    Cl || (sl = function() {
        var e, t;
        for (Gr && (e = xl.domain) && e.exit(); ul; ) {
            t = ul.fn,
            ul = ul.next;
            try {
                t()
            } catch (e) {
                throw ul ? ll() : cl = void 0,
                e
            }
        }
        cl = void 0,
        e && e.enter()
    }
    ,
    !qc && !Gr && yl && bl ? (fl = !0,
    pl = bl.createTextNode(""),
    new yl(sl).observe(pl, {
        characterData: !0
    }),
    ll = function() {
        pl.data = fl = !fl
    }
    ) : wl && wl.resolve ? (dl = wl.resolve(void 0),
    hl = dl.then,
    ll = function() {
        hl.call(dl, sl)
    }
    ) : ll = Gr ? function() {
        xl.nextTick(sl)
    }
    : function() {
        gl.call(u, sl)
    }
    );
    var El, Sl, Il, Tl, Al = Cl || function(e) {
        var t = {
            fn: e,
            next: void 0
        };
        cl && (cl.next = t),
        ul || (ul = t,
        ll()),
        cl = t
    }
    , Nl = function(e) {
        var t, n;
        this.promise = new e((function(e, r) {
            if (void 0 !== t || void 0 !== n)
                throw TypeError("Bad Promise constructor");
            t = e,
            n = r
        }
        )),
        this.resolve = ct(t),
        this.reject = ct(n)
    }, _l = {
        f: function(e) {
            return new Nl(e)
        }
    }, Rl = function(e, t) {
        if (R(e),
        w(t) && t.constructor === e)
            return t;
        var n = _l.f(e);
        return (0,
        n.resolve)(t),
        n.promise
    }, Ol = function(e) {
        try {
            return {
                error: !1,
                value: e()
            }
        } catch (e) {
            return {
                error: !0,
                value: e
            }
        }
    }, Dl = ml.set, Bl = nt("species"), Fl = "Promise", Ml = oe.get, Pl = oe.set, Ll = oe.getterFor(Fl), Ul = Hc, Vl = u.TypeError, zl = u.document, Wl = u.process, jl = ce("fetch"), Hl = _l.f, Gl = Hl, Kl = !!(zl && zl.createEvent && u.dispatchEvent), ql = "function" == typeof PromiseRejectionEvent, Xl = "unhandledrejection", Ql = Be(Fl, (function() {
        if (!(W(Ul) !== String(Ul))) {
            if (66 === Ln)
                return !0;
            if (!Gr && !ql)
                return !0
        }
        if (Ln >= 51 && /native code/.test(Ul))
            return !1;
        var e = Ul.resolve(1)
          , t = function(e) {
            e((function() {}
            ), (function() {}
            ))
        };
        return (e.constructor = {})[Bl] = t,
        !(e.then((function() {}
        ))instanceof t)
    }
    )), Yl = Ql || !Nn((function(e) {
        Ul.all(e).catch((function() {}
        ))
    }
    )), $l = function(e) {
        var t;
        return !(!w(e) || "function" != typeof (t = e.then)) && t
    }, Zl = function(e, t) {
        if (!e.notified) {
            e.notified = !0;
            var n = e.reactions;
            Al((function() {
                for (var r = e.value, a = 1 == e.state, o = 0; n.length > o; ) {
                    var i, s, u, c = n[o++], l = a ? c.ok : c.fail, f = c.resolve, p = c.reject, d = c.domain;
                    try {
                        l ? (a || (2 === e.rejection && nf(e),
                        e.rejection = 1),
                        !0 === l ? i = r : (d && d.enter(),
                        i = l(r),
                        d && (d.exit(),
                        u = !0)),
                        i === c.promise ? p(Vl("Promise-chain cycle")) : (s = $l(i)) ? s.call(i, f, p) : f(i)) : p(r)
                    } catch (e) {
                        d && !u && d.exit(),
                        p(e)
                    }
                }
                e.reactions = [],
                e.notified = !1,
                t && !e.rejection && ef(e)
            }
            ))
        }
    }, Jl = function(e, t, n) {
        var r, a;
        Kl ? ((r = zl.createEvent("Event")).promise = t,
        r.reason = n,
        r.initEvent(e, !1, !0),
        u.dispatchEvent(r)) : r = {
            promise: t,
            reason: n
        },
        !ql && (a = u["on" + e]) ? a(r) : e === Xl && function(e, t) {
            var n = u.console;
            n && n.error && (1 === arguments.length ? n.error(e) : n.error(e, t))
        }("Unhandled promise rejection", n)
    }, ef = function(e) {
        Dl.call(u, (function() {
            var t, n = e.facade, r = e.value;
            if (tf(e) && (t = Ol((function() {
                Gr ? Wl.emit("unhandledRejection", r, n) : Jl(Xl, n, r)
            }
            )),
            e.rejection = Gr || tf(e) ? 2 : 1,
            t.error))
                throw t.value
        }
        ))
    }, tf = function(e) {
        return 1 !== e.rejection && !e.parent
    }, nf = function(e) {
        Dl.call(u, (function() {
            var t = e.facade;
            Gr ? Wl.emit("rejectionHandled", t) : Jl("rejectionhandled", t, e.value)
        }
        ))
    }, rf = function(e, t, n) {
        return function(r) {
            e(t, r, n)
        }
    }, af = function(e, t, n) {
        e.done || (e.done = !0,
        n && (e = n),
        e.value = t,
        e.state = 2,
        Zl(e, !0))
    }, of = function(e, t, n) {
        if (!e.done) {
            e.done = !0,
            n && (e = n);
            try {
                if (e.facade === t)
                    throw Vl("Promise can't be resolved itself");
                var r = $l(t);
                r ? Al((function() {
                    var n = {
                        done: !1
                    };
                    try {
                        r.call(t, rf(of, n, e), rf(af, n, e))
                    } catch (t) {
                        af(n, t, e)
                    }
                }
                )) : (e.value = t,
                e.state = 1,
                Zl(e, !1))
            } catch (t) {
                af({
                    done: !1
                }, t, e)
            }
        }
    };
    Ql && (Ul = function(e) {
        Kc(this, Ul, Fl),
        ct(e),
        El.call(this);
        var t = Ml(this);
        try {
            e(rf(of, t), rf(af, t))
        } catch (e) {
            af(t, e)
        }
    }
    ,
    (El = function(e) {
        Pl(this, {
            type: Fl,
            done: !1,
            notified: !1,
            parent: !1,
            reactions: [],
            rejection: !1,
            state: 0,
            value: void 0
        })
    }
    ).prototype = Gc(Ul.prototype, {
        then: function(e, t) {
            var n = Ll(this)
              , r = Hl(xi(this, Ul));
            return r.ok = "function" != typeof e || e,
            r.fail = "function" == typeof t && t,
            r.domain = Gr ? Wl.domain : void 0,
            n.parent = !0,
            n.reactions.push(r),
            0 != n.state && Zl(n, !1),
            r.promise
        },
        catch: function(e) {
            return this.then(void 0, e)
        }
    }),
    Sl = function() {
        var e = new El
          , t = Ml(e);
        this.promise = e,
        this.resolve = rf(of, t),
        this.reject = rf(af, t)
    }
    ,
    _l.f = Hl = function(e) {
        return e === Ul || e === Il ? new Sl(e) : Gl(e)
    }
    ,
    "function" == typeof Hc && (Tl = Hc.prototype.then,
    ie(Hc.prototype, "then", (function(e, t) {
        var n = this;
        return new Ul((function(e, t) {
            Tl.call(n, e, t)
        }
        )).then(e, t)
    }
    ), {
        unsafe: !0
    }),
    "function" == typeof jl && Me({
        global: !0,
        enumerable: !0,
        forced: !0
    }, {
        fetch: function(e) {
            return Rl(Ul, jl.apply(u, arguments))
        }
    }))),
    Me({
        global: !0,
        wrap: !0,
        forced: Ql
    }, {
        Promise: Ul
    }),
    ut(Ul, Fl, !1),
    xa(Fl),
    Il = ce(Fl),
    Me({
        target: Fl,
        stat: !0,
        forced: Ql
    }, {
        reject: function(e) {
            var t = Hl(this);
            return t.reject.call(void 0, e),
            t.promise
        }
    }),
    Me({
        target: Fl,
        stat: !0,
        forced: Ql
    }, {
        resolve: function(e) {
            return Rl(this, e)
        }
    }),
    Me({
        target: Fl,
        stat: !0,
        forced: Yl
    }, {
        all: function(e) {
            var t = this
              , n = Hl(t)
              , r = n.resolve
              , a = n.reject
              , o = Ol((function() {
                var n = ct(t.resolve)
                  , o = []
                  , i = 0
                  , s = 1;
                xn(e, (function(e) {
                    var u = i++
                      , c = !1;
                    o.push(void 0),
                    s++,
                    n.call(t, e).then((function(e) {
                        c || (c = !0,
                        o[u] = e,
                        --s || r(o))
                    }
                    ), a)
                }
                )),
                --s || r(o)
            }
            ));
            return o.error && a(o.value),
            n.promise
        },
        race: function(e) {
            var t = this
              , n = Hl(t)
              , r = n.reject
              , a = Ol((function() {
                var a = ct(t.resolve);
                xn(e, (function(e) {
                    a.call(t, e).then(n.resolve, r)
                }
                ))
            }
            ));
            return a.error && r(a.value),
            n.promise
        }
    }),
    Me({
        target: "Promise",
        stat: !0
    }, {
        allSettled: function(e) {
            var t = this
              , n = _l.f(t)
              , r = n.resolve
              , a = n.reject
              , o = Ol((function() {
                var n = ct(t.resolve)
                  , a = []
                  , o = 0
                  , i = 1;
                xn(e, (function(e) {
                    var s = o++
                      , u = !1;
                    a.push(void 0),
                    i++,
                    n.call(t, e).then((function(e) {
                        u || (u = !0,
                        a[s] = {
                            status: "fulfilled",
                            value: e
                        },
                        --i || r(a))
                    }
                    ), (function(e) {
                        u || (u = !0,
                        a[s] = {
                            status: "rejected",
                            reason: e
                        },
                        --i || r(a))
                    }
                    ))
                }
                )),
                --i || r(a)
            }
            ));
            return o.error && a(o.value),
            n.promise
        }
    });
    var sf = "No one promise resolved";
    Me({
        target: "Promise",
        stat: !0
    }, {
        any: function(e) {
            var t = this
              , n = _l.f(t)
              , r = n.resolve
              , a = n.reject
              , o = Ol((function() {
                var n = ct(t.resolve)
                  , o = []
                  , i = 0
                  , s = 1
                  , u = !1;
                xn(e, (function(e) {
                    var c = i++
                      , l = !1;
                    o.push(void 0),
                    s++,
                    n.call(t, e).then((function(e) {
                        l || u || (u = !0,
                        r(e))
                    }
                    ), (function(e) {
                        l || u || (l = !0,
                        o[c] = e,
                        --s || a(new (ce("AggregateError"))(o,sf)))
                    }
                    ))
                }
                )),
                --s || a(new (ce("AggregateError"))(o,sf))
            }
            ));
            return o.error && a(o.value),
            n.promise
        }
    });
    var uf = !!Hc && c((function() {
        Hc.prototype.finally.call({
            then: function() {}
        }, (function() {}
        ))
    }
    ));
    Me({
        target: "Promise",
        proto: !0,
        real: !0,
        forced: uf
    }, {
        finally: function(e) {
            var t = xi(this, ce("Promise"))
              , n = "function" == typeof e;
            return this.then(n ? function(n) {
                return Rl(t, e()).then((function() {
                    return n
                }
                ))
            }
            : e, n ? function(n) {
                return Rl(t, e()).then((function() {
                    throw n
                }
                ))
            }
            : e)
        }
    }),
    "function" != typeof Hc || Hc.prototype.finally || ie(Hc.prototype, "finally", ce("Promise").prototype.finally);
    var cf = function(e, t, n) {
        var r = -1 !== e.indexOf("Map")
          , a = -1 !== e.indexOf("Weak")
          , o = r ? "set" : "add"
          , i = u[e]
          , s = i && i.prototype
          , l = i
          , f = {}
          , p = function(e) {
            var t = s[e];
            ie(s, e, "add" == e ? function(e) {
                return t.call(this, 0 === e ? 0 : e),
                this
            }
            : "delete" == e ? function(e) {
                return !(a && !w(e)) && t.call(this, 0 === e ? 0 : e)
            }
            : "get" == e ? function(e) {
                return a && !w(e) ? void 0 : t.call(this, 0 === e ? 0 : e)
            }
            : "has" == e ? function(e) {
                return !(a && !w(e)) && t.call(this, 0 === e ? 0 : e)
            }
            : function(e, n) {
                return t.call(this, 0 === e ? 0 : e, n),
                this
            }
            )
        };
        if (Be(e, "function" != typeof i || !(a || s.forEach && !c((function() {
            (new i).entries().next()
        }
        )))))
            l = n.getConstructor(t, e, r, o),
            so.REQUIRED = !0;
        else if (Be(e, !0)) {
            var d = new l
              , h = d[o](a ? {} : -0, 1) != d
              , m = c((function() {
                d.has(1)
            }
            ))
              , v = Nn((function(e) {
                new i(e)
            }
            ))
              , g = !a && c((function() {
                for (var e = new i, t = 5; t--; )
                    e[o](t, t);
                return !e.has(-0)
            }
            ));
            v || ((l = t((function(t, n) {
                Kc(t, l, e);
                var a = Cs(new i, t, l);
                return null != n && xn(n, a[o], {
                    that: a,
                    AS_ENTRIES: r
                }),
                a
            }
            ))).prototype = s,
            s.constructor = l),
            (m || g) && (p("delete"),
            p("has"),
            r && p("get")),
            (g || h) && p(o),
            a && s.clear && delete s.clear
        }
        return f[e] = l,
        Me({
            global: !0,
            forced: l != i
        }, f),
        ut(l, e),
        a || n.setStrong(l, e, r),
        l
    }
      , lf = D.f
      , ff = so.fastKey
      , pf = oe.set
      , df = oe.getterFor
      , hf = {
        getConstructor: function(e, t, n, r) {
            var a = e((function(e, o) {
                Kc(e, a, t),
                pf(e, {
                    type: t,
                    index: Xe(null),
                    first: void 0,
                    last: void 0,
                    size: 0
                }),
                l || (e.size = 0),
                null != o && xn(o, e[r], {
                    that: e,
                    AS_ENTRIES: n
                })
            }
            ))
              , o = df(t)
              , i = function(e, t, n) {
                var r, a, i = o(e), u = s(e, t);
                return u ? u.value = n : (i.last = u = {
                    index: a = ff(t, !0),
                    key: t,
                    value: n,
                    previous: r = i.last,
                    next: void 0,
                    removed: !1
                },
                i.first || (i.first = u),
                r && (r.next = u),
                l ? i.size++ : e.size++,
                "F" !== a && (i.index[a] = u)),
                e
            }
              , s = function(e, t) {
                var n, r = o(e), a = ff(t);
                if ("F" !== a)
                    return r.index[a];
                for (n = r.first; n; n = n.next)
                    if (n.key == t)
                        return n
            };
            return Gc(a.prototype, {
                clear: function() {
                    for (var e = o(this), t = e.index, n = e.first; n; )
                        n.removed = !0,
                        n.previous && (n.previous = n.previous.next = void 0),
                        delete t[n.index],
                        n = n.next;
                    e.first = e.last = void 0,
                    l ? e.size = 0 : this.size = 0
                },
                delete: function(e) {
                    var t = this
                      , n = o(t)
                      , r = s(t, e);
                    if (r) {
                        var a = r.next
                          , i = r.previous;
                        delete n.index[r.index],
                        r.removed = !0,
                        i && (i.next = a),
                        a && (a.previous = i),
                        n.first == r && (n.first = a),
                        n.last == r && (n.last = i),
                        l ? n.size-- : t.size--
                    }
                    return !!r
                },
                forEach: function(e) {
                    for (var t, n = o(this), r = lt(e, arguments.length > 1 ? arguments[1] : void 0, 3); t = t ? t.next : n.first; )
                        for (r(t.value, t.key, this); t && t.removed; )
                            t = t.previous
                },
                has: function(e) {
                    return !!s(this, e)
                }
            }),
            Gc(a.prototype, n ? {
                get: function(e) {
                    var t = s(this, e);
                    return t && t.value
                },
                set: function(e, t) {
                    return i(this, 0 === e ? 0 : e, t)
                }
            } : {
                add: function(e) {
                    return i(this, e = 0 === e ? 0 : e, e)
                }
            }),
            l && lf(a.prototype, "size", {
                get: function() {
                    return o(this).size
                }
            }),
            a
        },
        setStrong: function(e, t, n) {
            var r = t + " Iterator"
              , a = df(t)
              , o = df(r);
            Pa(e, t, (function(e, t) {
                pf(this, {
                    type: r,
                    target: e,
                    state: a(e),
                    kind: t,
                    last: void 0
                })
            }
            ), (function() {
                for (var e = o(this), t = e.kind, n = e.last; n && n.removed; )
                    n = n.previous;
                return e.target && (e.last = n = n ? n.next : e.state.first) ? "keys" == t ? {
                    value: n.key,
                    done: !1
                } : "values" == t ? {
                    value: n.value,
                    done: !1
                } : {
                    value: [n.key, n.value],
                    done: !1
                } : (e.target = void 0,
                {
                    value: void 0,
                    done: !0
                })
            }
            ), n ? "entries" : "values", !n, !0),
            xa(t)
        }
    }
      , mf = (cf("Map", (function(e) {
        return function() {
            return e(this, arguments.length ? arguments[0] : void 0)
        }
    }
    ), hf),
    cf("Set", (function(e) {
        return function() {
            return e(this, arguments.length ? arguments[0] : void 0)
        }
    }
    ), hf),
    so.getWeakData)
      , vf = oe.set
      , gf = oe.getterFor
      , yf = mt.find
      , bf = mt.findIndex
      , xf = 0
      , wf = function(e) {
        return e.frozen || (e.frozen = new kf)
    }
      , kf = function() {
        this.entries = []
    }
      , Cf = function(e, t) {
        return yf(e.entries, (function(e) {
            return e[0] === t
        }
        ))
    };
    kf.prototype = {
        get: function(e) {
            var t = Cf(this, e);
            if (t)
                return t[1]
        },
        has: function(e) {
            return !!Cf(this, e)
        },
        set: function(e, t) {
            var n = Cf(this, e);
            n ? n[1] = t : this.entries.push([e, t])
        },
        delete: function(e) {
            var t = bf(this.entries, (function(t) {
                return t[0] === e
            }
            ));
            return ~t && this.entries.splice(t, 1),
            !!~t
        }
    };
    var Ef = {
        getConstructor: function(e, t, n, r) {
            var a = e((function(e, o) {
                Kc(e, a, t),
                vf(e, {
                    type: t,
                    id: xf++,
                    frozen: void 0
                }),
                null != o && xn(o, e[r], {
                    that: e,
                    AS_ENTRIES: n
                })
            }
            ))
              , o = gf(t)
              , i = function(e, t, n) {
                var r = o(e)
                  , a = mf(R(t), !0);
                return !0 === a ? wf(r).set(t, n) : a[r.id] = n,
                e
            };
            return Gc(a.prototype, {
                delete: function(e) {
                    var t = o(this);
                    if (!w(e))
                        return !1;
                    var n = mf(e);
                    return !0 === n ? wf(t).delete(e) : n && E(n, t.id) && delete n[t.id]
                },
                has: function(e) {
                    var t = o(this);
                    if (!w(e))
                        return !1;
                    var n = mf(e);
                    return !0 === n ? wf(t).has(e) : n && E(n, t.id)
                }
            }),
            Gc(a.prototype, n ? {
                get: function(e) {
                    var t = o(this);
                    if (w(e)) {
                        var n = mf(e);
                        return !0 === n ? wf(t).get(e) : n ? n[t.id] : void 0
                    }
                },
                set: function(e, t) {
                    return i(this, e, t)
                }
            } : {
                add: function(e) {
                    return i(this, e, !0)
                }
            }),
            a
        }
    };
    i((function(e) {
        var t, n = oe.enforce, r = !u.ActiveXObject && "ActiveXObject"in u, a = Object.isExtensible, o = function(e) {
            return function() {
                return e(this, arguments.length ? arguments[0] : void 0)
            }
        }, i = e.exports = cf("WeakMap", o, Ef);
        if (H && r) {
            t = Ef.getConstructor(o, "WeakMap", !0),
            so.REQUIRED = !0;
            var s = i.prototype
              , c = s.delete
              , l = s.has
              , f = s.get
              , p = s.set;
            Gc(s, {
                delete: function(e) {
                    if (w(e) && !a(e)) {
                        var r = n(this);
                        return r.frozen || (r.frozen = new t),
                        c.call(this, e) || r.frozen.delete(e)
                    }
                    return c.call(this, e)
                },
                has: function(e) {
                    if (w(e) && !a(e)) {
                        var r = n(this);
                        return r.frozen || (r.frozen = new t),
                        l.call(this, e) || r.frozen.has(e)
                    }
                    return l.call(this, e)
                },
                get: function(e) {
                    if (w(e) && !a(e)) {
                        var r = n(this);
                        return r.frozen || (r.frozen = new t),
                        l.call(this, e) ? f.call(this, e) : r.frozen.get(e)
                    }
                    return f.call(this, e)
                },
                set: function(e, r) {
                    if (w(e) && !a(e)) {
                        var o = n(this);
                        o.frozen || (o.frozen = new t),
                        l.call(this, e) ? p.call(this, e, r) : o.frozen.set(e, r)
                    } else
                        p.call(this, e, r);
                    return this
                }
            })
        }
    }
    ));
    cf("WeakSet", (function(e) {
        return function() {
            return e(this, arguments.length ? arguments[0] : void 0)
        }
    }
    ), Ef);
    var Sf = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView
      , If = function(e) {
        if (void 0 === e)
            return 0;
        var t = pe(e)
          , n = he(t);
        if (t !== n)
            throw RangeError("Wrong length or index");
        return n
    }
      , Tf = 1 / 0
      , Af = Math.abs
      , Nf = Math.pow
      , _f = Math.floor
      , Rf = Math.log
      , Of = Math.LN2
      , Df = function(e, t, n) {
        var r, a, o, i = new Array(n), s = 8 * n - t - 1, u = (1 << s) - 1, c = u >> 1, l = 23 === t ? Nf(2, -24) - Nf(2, -77) : 0, f = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0, p = 0;
        for ((e = Af(e)) != e || e === Tf ? (a = e != e ? 1 : 0,
        r = u) : (r = _f(Rf(e) / Of),
        e * (o = Nf(2, -r)) < 1 && (r--,
        o *= 2),
        (e += r + c >= 1 ? l / o : l * Nf(2, 1 - c)) * o >= 2 && (r++,
        o /= 2),
        r + c >= u ? (a = 0,
        r = u) : r + c >= 1 ? (a = (e * o - 1) * Nf(2, t),
        r += c) : (a = e * Nf(2, c - 1) * Nf(2, t),
        r = 0)); t >= 8; i[p++] = 255 & a,
        a /= 256,
        t -= 8)
            ;
        for (r = r << t | a,
        s += t; s > 0; i[p++] = 255 & r,
        r /= 256,
        s -= 8)
            ;
        return i[--p] |= 128 * f,
        i
    }
      , Bf = function(e, t) {
        var n, r = e.length, a = 8 * r - t - 1, o = (1 << a) - 1, i = o >> 1, s = a - 7, u = r - 1, c = e[u--], l = 127 & c;
        for (c >>= 7; s > 0; l = 256 * l + e[u],
        u--,
        s -= 8)
            ;
        for (n = l & (1 << -s) - 1,
        l >>= -s,
        s += t; s > 0; n = 256 * n + e[u],
        u--,
        s -= 8)
            ;
        if (0 === l)
            l = 1 - i;
        else {
            if (l === o)
                return n ? NaN : c ? -1 / 0 : Tf;
            n += Nf(2, t),
            l -= i
        }
        return (c ? -1 : 1) * n * Nf(2, l - t)
    }
      , Ff = Ee.f
      , Mf = D.f
      , Pf = oe.get
      , Lf = oe.set
      , Uf = "ArrayBuffer"
      , Vf = "DataView"
      , zf = "Wrong index"
      , Wf = u.ArrayBuffer
      , jf = Wf
      , Hf = u.DataView
      , Gf = Hf && Hf.prototype
      , Kf = Object.prototype
      , qf = u.RangeError
      , Xf = Df
      , Qf = Bf
      , Yf = function(e) {
        return [255 & e]
    }
      , $f = function(e) {
        return [255 & e, e >> 8 & 255]
    }
      , Zf = function(e) {
        return [255 & e, e >> 8 & 255, e >> 16 & 255, e >> 24 & 255]
    }
      , Jf = function(e) {
        return e[3] << 24 | e[2] << 16 | e[1] << 8 | e[0]
    }
      , ep = function(e) {
        return Xf(e, 23, 4)
    }
      , tp = function(e) {
        return Xf(e, 52, 8)
    }
      , np = function(e, t) {
        Mf(e.prototype, t, {
            get: function() {
                return Pf(this)[t]
            }
        })
    }
      , rp = function(e, t, n, r) {
        var a = If(n)
          , o = Pf(e);
        if (a + t > o.byteLength)
            throw qf(zf);
        var i = Pf(o.buffer).bytes
          , s = a + o.byteOffset
          , u = i.slice(s, s + t);
        return r ? u : u.reverse()
    }
      , ap = function(e, t, n, r, a, o) {
        var i = If(n)
          , s = Pf(e);
        if (i + t > s.byteLength)
            throw qf(zf);
        for (var u = Pf(s.buffer).bytes, c = i + s.byteOffset, l = r(+a), f = 0; f < t; f++)
            u[c + f] = l[o ? f : t - f - 1]
    };
    if (Sf) {
        if (!c((function() {
            Wf(1)
        }
        )) || !c((function() {
            new Wf(-1)
        }
        )) || c((function() {
            return new Wf,
            new Wf(1.5),
            new Wf(NaN),
            Wf.name != Uf
        }
        ))) {
            for (var op, ip = (jf = function(e) {
                return Kc(this, jf),
                new Wf(If(e))
            }
            ).prototype = Wf.prototype, sp = Ff(Wf), up = 0; sp.length > up; )
                (op = sp[up++])in jf || B(jf, op, Wf[op]);
            ip.constructor = jf
        }
        on && rn(Gf) !== Kf && on(Gf, Kf);
        var cp = new Hf(new jf(2))
          , lp = Gf.setInt8;
        cp.setInt8(0, 2147483648),
        cp.setInt8(1, 2147483649),
        !cp.getInt8(0) && cp.getInt8(1) || Gc(Gf, {
            setInt8: function(e, t) {
                lp.call(this, e, t << 24 >> 24)
            },
            setUint8: function(e, t) {
                lp.call(this, e, t << 24 >> 24)
            }
        }, {
            unsafe: !0
        })
    } else
        jf = function(e) {
            Kc(this, jf, Uf);
            var t = If(e);
            Lf(this, {
                bytes: ir.call(new Array(t), 0),
                byteLength: t
            }),
            l || (this.byteLength = t)
        }
        ,
        Hf = function(e, t, n) {
            Kc(this, Hf, Vf),
            Kc(e, jf, Vf);
            var r = Pf(e).byteLength
              , a = pe(t);
            if (a < 0 || a > r)
                throw qf("Wrong offset");
            if (a + (n = void 0 === n ? r - a : he(n)) > r)
                throw qf("Wrong length");
            Lf(this, {
                buffer: e,
                byteLength: n,
                byteOffset: a
            }),
            l || (this.buffer = e,
            this.byteLength = n,
            this.byteOffset = a)
        }
        ,
        l && (np(jf, "byteLength"),
        np(Hf, "buffer"),
        np(Hf, "byteLength"),
        np(Hf, "byteOffset")),
        Gc(Hf.prototype, {
            getInt8: function(e) {
                return rp(this, 1, e)[0] << 24 >> 24
            },
            getUint8: function(e) {
                return rp(this, 1, e)[0]
            },
            getInt16: function(e) {
                var t = rp(this, 2, e, arguments.length > 1 ? arguments[1] : void 0);
                return (t[1] << 8 | t[0]) << 16 >> 16
            },
            getUint16: function(e) {
                var t = rp(this, 2, e, arguments.length > 1 ? arguments[1] : void 0);
                return t[1] << 8 | t[0]
            },
            getInt32: function(e) {
                return Jf(rp(this, 4, e, arguments.length > 1 ? arguments[1] : void 0))
            },
            getUint32: function(e) {
                return Jf(rp(this, 4, e, arguments.length > 1 ? arguments[1] : void 0)) >>> 0
            },
            getFloat32: function(e) {
                return Qf(rp(this, 4, e, arguments.length > 1 ? arguments[1] : void 0), 23)
            },
            getFloat64: function(e) {
                return Qf(rp(this, 8, e, arguments.length > 1 ? arguments[1] : void 0), 52)
            },
            setInt8: function(e, t) {
                ap(this, 1, e, Yf, t)
            },
            setUint8: function(e, t) {
                ap(this, 1, e, Yf, t)
            },
            setInt16: function(e, t) {
                ap(this, 2, e, $f, t, arguments.length > 2 ? arguments[2] : void 0)
            },
            setUint16: function(e, t) {
                ap(this, 2, e, $f, t, arguments.length > 2 ? arguments[2] : void 0)
            },
            setInt32: function(e, t) {
                ap(this, 4, e, Zf, t, arguments.length > 2 ? arguments[2] : void 0)
            },
            setUint32: function(e, t) {
                ap(this, 4, e, Zf, t, arguments.length > 2 ? arguments[2] : void 0)
            },
            setFloat32: function(e, t) {
                ap(this, 4, e, ep, t, arguments.length > 2 ? arguments[2] : void 0)
            },
            setFloat64: function(e, t) {
                ap(this, 8, e, tp, t, arguments.length > 2 ? arguments[2] : void 0)
            }
        });
    ut(jf, Uf),
    ut(Hf, Vf);
    var fp = {
        ArrayBuffer: jf,
        DataView: Hf
    }
      , pp = "ArrayBuffer"
      , dp = fp.ArrayBuffer
      , hp = u.ArrayBuffer;
    Me({
        global: !0,
        forced: hp !== dp
    }, {
        ArrayBuffer: dp
    }),
    xa(pp);
    var mp, vp = D.f, gp = u.Int8Array, yp = gp && gp.prototype, bp = u.Uint8ClampedArray, xp = bp && bp.prototype, wp = gp && rn(gp), kp = yp && rn(yp), Cp = Object.prototype, Ep = Cp.isPrototypeOf, Sp = nt("toStringTag"), Ip = X("TYPED_ARRAY_TAG"), Tp = Sf && !!on && "Opera" !== mn(u.opera), Ap = !1, Np = {
        Int8Array: 1,
        Uint8Array: 1,
        Uint8ClampedArray: 1,
        Int16Array: 2,
        Uint16Array: 2,
        Int32Array: 4,
        Uint32Array: 4,
        Float32Array: 4,
        Float64Array: 8
    }, _p = {
        BigInt64Array: 8,
        BigUint64Array: 8
    }, Rp = function(e) {
        if (!w(e))
            return !1;
        var t = mn(e);
        return E(Np, t) || E(_p, t)
    };
    for (mp in Np)
        u[mp] || (Tp = !1);
    if ((!Tp || "function" != typeof wp || wp === Function.prototype) && (wp = function() {
        throw TypeError("Incorrect invocation")
    }
    ,
    Tp))
        for (mp in Np)
            u[mp] && on(u[mp], wp);
    if ((!Tp || !kp || kp === Cp) && (kp = wp.prototype,
    Tp))
        for (mp in Np)
            u[mp] && on(u[mp].prototype, kp);
    if (Tp && rn(xp) !== kp && on(xp, kp),
    l && !E(kp, Sp))
        for (mp in Ap = !0,
        vp(kp, Sp, {
            get: function() {
                return w(this) ? this[Ip] : void 0
            }
        }),
        Np)
            u[mp] && B(u[mp], Ip, mp);
    var Op = {
        NATIVE_ARRAY_BUFFER_VIEWS: Tp,
        TYPED_ARRAY_TAG: Ap && Ip,
        aTypedArray: function(e) {
            if (Rp(e))
                return e;
            throw TypeError("Target is not a typed array")
        },
        aTypedArrayConstructor: function(e) {
            if (on) {
                if (Ep.call(wp, e))
                    return e
            } else
                for (var t in Np)
                    if (E(Np, mp)) {
                        var n = u[t];
                        if (n && (e === n || Ep.call(n, e)))
                            return e
                    }
            throw TypeError("Target is not a typed array constructor")
        },
        exportTypedArrayMethod: function(e, t, n) {
            if (l) {
                if (n)
                    for (var r in Np) {
                        var a = u[r];
                        a && E(a.prototype, e) && delete a.prototype[e]
                    }
                kp[e] && !n || ie(kp, e, n ? t : Tp && yp[e] || t)
            }
        },
        exportTypedArrayStaticMethod: function(e, t, n) {
            var r, a;
            if (l) {
                if (on) {
                    if (n)
                        for (r in Np)
                            (a = u[r]) && E(a, e) && delete a[e];
                    if (wp[e] && !n)
                        return;
                    try {
                        return ie(wp, e, n ? t : Tp && gp[e] || t)
                    } catch (e) {}
                }
                for (r in Np)
                    !(a = u[r]) || a[e] && !n || ie(a, e, t)
            }
        },
        isView: function(e) {
            if (!w(e))
                return !1;
            var t = mn(e);
            return "DataView" === t || E(Np, t) || E(_p, t)
        },
        isTypedArray: Rp,
        TypedArray: wp,
        TypedArrayPrototype: kp
    };
    Me({
        target: "ArrayBuffer",
        stat: !0,
        forced: !Op.NATIVE_ARRAY_BUFFER_VIEWS
    }, {
        isView: Op.isView
    });
    var Dp = fp.ArrayBuffer
      , Bp = fp.DataView
      , Fp = Dp.prototype.slice
      , Mp = c((function() {
        return !new Dp(2).slice(1, void 0).byteLength
    }
    ));
    Me({
        target: "ArrayBuffer",
        proto: !0,
        unsafe: !0,
        forced: Mp
    }, {
        slice: function(e, t) {
            if (void 0 !== Fp && void 0 === t)
                return Fp.call(R(this), e);
            for (var n = R(this).byteLength, r = ge(e, n), a = ge(void 0 === t ? n : t, n), o = new (xi(this, Dp))(he(a - r)), i = new Bp(this), s = new Bp(o), u = 0; r < a; )
                s.setUint8(u++, i.getUint8(r++));
            return o
        }
    }),
    Me({
        global: !0,
        forced: !Sf
    }, {
        DataView: fp.DataView
    });
    var Pp = Op.NATIVE_ARRAY_BUFFER_VIEWS
      , Lp = u.ArrayBuffer
      , Up = u.Int8Array
      , Vp = !Pp || !c((function() {
        Up(1)
    }
    )) || !c((function() {
        new Up(-1)
    }
    )) || !Nn((function(e) {
        new Up,
        new Up(null),
        new Up(1.5),
        new Up(e)
    }
    ), !0) || c((function() {
        return 1 !== new Up(new Lp(2),1,void 0).length
    }
    ))
      , zp = function(e, t) {
        var n = function(e) {
            var t = pe(e);
            if (t < 0)
                throw RangeError("The argument can't be less than 0");
            return t
        }(e);
        if (n % t)
            throw RangeError("Wrong offset");
        return n
    }
      , Wp = Op.aTypedArrayConstructor
      , jp = function(e) {
        var t, n, r, a, o, i, s = Ve(e), u = arguments.length, c = u > 1 ? arguments[1] : void 0, l = void 0 !== c, f = gn(s);
        if (null != f && !ln(f))
            for (i = (o = f.call(s)).next,
            s = []; !(a = i.call(o)).done; )
                s.push(a.value);
        for (l && u > 2 && (c = lt(c, arguments[2], 2)),
        n = he(s.length),
        r = new (Wp(this))(n),
        t = 0; n > t; t++)
            r[t] = l ? c(s[t], t) : s[t];
        return r
    }
      , Hp = i((function(e) {
        var t = Ee.f
          , n = mt.forEach
          , r = oe.get
          , a = oe.set
          , o = D.f
          , i = _.f
          , s = Math.round
          , c = u.RangeError
          , f = fp.ArrayBuffer
          , p = fp.DataView
          , d = Op.NATIVE_ARRAY_BUFFER_VIEWS
          , m = Op.TYPED_ARRAY_TAG
          , v = Op.TypedArray
          , g = Op.TypedArrayPrototype
          , y = Op.aTypedArrayConstructor
          , b = Op.isTypedArray
          , x = "BYTES_PER_ELEMENT"
          , C = "Wrong length"
          , S = function(e, t) {
            for (var n = 0, r = t.length, a = new (y(e))(r); r > n; )
                a[n] = t[n++];
            return a
        }
          , I = function(e, t) {
            o(e, t, {
                get: function() {
                    return r(this)[t]
                }
            })
        }
          , T = function(e) {
            var t;
            return e instanceof f || "ArrayBuffer" == (t = mn(e)) || "SharedArrayBuffer" == t
        }
          , A = function(e, t) {
            return b(e) && "symbol" != typeof t && t in e && String(+t) == String(t)
        }
          , N = function(e, t) {
            return A(e, t = k(t, !0)) ? h(2, e[t]) : i(e, t)
        }
          , R = function(e, t, n) {
            return !(A(e, t = k(t, !0)) && w(n) && E(n, "value")) || E(n, "get") || E(n, "set") || n.configurable || E(n, "writable") && !n.writable || E(n, "enumerable") && !n.enumerable ? o(e, t, n) : (e[t] = n.value,
            e)
        };
        l ? (d || (_.f = N,
        D.f = R,
        I(g, "buffer"),
        I(g, "byteOffset"),
        I(g, "byteLength"),
        I(g, "length")),
        Me({
            target: "Object",
            stat: !0,
            forced: !d
        }, {
            getOwnPropertyDescriptor: N,
            defineProperty: R
        }),
        e.exports = function(e, i, l) {
            var h = e.match(/\d+$/)[0] / 8
              , y = e + (l ? "Clamped" : "") + "Array"
              , k = "get" + e
              , E = "set" + e
              , I = u[y]
              , A = I
              , N = A && A.prototype
              , _ = {}
              , R = function(e, t) {
                o(e, t, {
                    get: function() {
                        return function(e, t) {
                            var n = r(e);
                            return n.view[k](t * h + n.byteOffset, !0)
                        }(this, t)
                    },
                    set: function(e) {
                        return function(e, t, n) {
                            var a = r(e);
                            l && (n = (n = s(n)) < 0 ? 0 : n > 255 ? 255 : 255 & n),
                            a.view[E](t * h + a.byteOffset, n, !0)
                        }(this, t, e)
                    },
                    enumerable: !0
                })
            };
            d ? Vp && (A = i((function(e, t, n, r) {
                return Kc(e, A, y),
                Cs(w(t) ? T(t) ? void 0 !== r ? new I(t,zp(n, h),r) : void 0 !== n ? new I(t,zp(n, h)) : new I(t) : b(t) ? S(A, t) : jp.call(A, t) : new I(If(t)), e, A)
            }
            )),
            on && on(A, v),
            n(t(I), (function(e) {
                e in A || B(A, e, I[e])
            }
            )),
            A.prototype = N) : (A = i((function(e, t, n, r) {
                Kc(e, A, y);
                var o, i, s, u = 0, l = 0;
                if (w(t)) {
                    if (!T(t))
                        return b(t) ? S(A, t) : jp.call(A, t);
                    o = t,
                    l = zp(n, h);
                    var d = t.byteLength;
                    if (void 0 === r) {
                        if (d % h)
                            throw c(C);
                        if ((i = d - l) < 0)
                            throw c(C)
                    } else if ((i = he(r) * h) + l > d)
                        throw c(C);
                    s = i / h
                } else
                    s = If(t),
                    o = new f(i = s * h);
                for (a(e, {
                    buffer: o,
                    byteOffset: l,
                    byteLength: i,
                    length: s,
                    view: new p(o)
                }); u < s; )
                    R(e, u++)
            }
            )),
            on && on(A, v),
            N = A.prototype = Xe(g)),
            N.constructor !== A && B(N, "constructor", A),
            m && B(N, m, y),
            _[y] = A,
            Me({
                global: !0,
                forced: A != I,
                sham: !d
            }, _),
            x in A || B(A, x, h),
            x in N || B(N, x, h),
            xa(y)
        }
        ) : e.exports = function() {}
    }
    ));
    Hp("Int8", (function(e) {
        return function(t, n, r) {
            return e(this, t, n, r)
        }
    }
    )),
    Hp("Uint8", (function(e) {
        return function(t, n, r) {
            return e(this, t, n, r)
        }
    }
    )),
    Hp("Uint8", (function(e) {
        return function(t, n, r) {
            return e(this, t, n, r)
        }
    }
    ), !0),
    Hp("Int16", (function(e) {
        return function(t, n, r) {
            return e(this, t, n, r)
        }
    }
    )),
    Hp("Uint16", (function(e) {
        return function(t, n, r) {
            return e(this, t, n, r)
        }
    }
    )),
    Hp("Int32", (function(e) {
        return function(t, n, r) {
            return e(this, t, n, r)
        }
    }
    )),
    Hp("Uint32", (function(e) {
        return function(t, n, r) {
            return e(this, t, n, r)
        }
    }
    )),
    Hp("Float32", (function(e) {
        return function(t, n, r) {
            return e(this, t, n, r)
        }
    }
    )),
    Hp("Float64", (function(e) {
        return function(t, n, r) {
            return e(this, t, n, r)
        }
    }
    )),
    (0,
    Op.exportTypedArrayStaticMethod)("from", jp, Vp);
    var Gp = Op.aTypedArrayConstructor;
    (0,
    Op.exportTypedArrayStaticMethod)("of", (function() {
        for (var e = 0, t = arguments.length, n = new (Gp(this))(t); t > e; )
            n[e] = arguments[e++];
        return n
    }
    ), Vp);
    var Kp = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("copyWithin", (function(e, t) {
        return Xn.call(Kp(this), e, t, arguments.length > 2 ? arguments[2] : void 0)
    }
    ));
    var qp = mt.every
      , Xp = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("every", (function(e) {
        return qp(Xp(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }
    ));
    var Qp = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("fill", (function(e) {
        return ir.apply(Qp(this), arguments)
    }
    ));
    var Yp = mt.filter
      , $p = Op.aTypedArray
      , Zp = Op.aTypedArrayConstructor;
    (0,
    Op.exportTypedArrayMethod)("filter", (function(e) {
        for (var t = Yp($p(this), e, arguments.length > 1 ? arguments[1] : void 0), n = xi(this, this.constructor), r = 0, a = t.length, o = new (Zp(n))(a); a > r; )
            o[r] = t[r++];
        return o
    }
    ));
    var Jp = mt.find
      , ed = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("find", (function(e) {
        return Jp(ed(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }
    ));
    var td = mt.findIndex
      , nd = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("findIndex", (function(e) {
        return td(nd(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }
    ));
    var rd = mt.forEach
      , ad = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("forEach", (function(e) {
        rd(ad(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }
    ));
    var od = be.includes
      , id = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("includes", (function(e) {
        return od(id(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }
    ));
    var sd = be.indexOf
      , ud = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("indexOf", (function(e) {
        return sd(ud(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }
    ));
    var cd = nt("iterator")
      , ld = u.Uint8Array
      , fd = za.values
      , pd = za.keys
      , dd = za.entries
      , hd = Op.aTypedArray
      , md = Op.exportTypedArrayMethod
      , vd = ld && ld.prototype[cd]
      , gd = !!vd && ("values" == vd.name || null == vd.name)
      , yd = function() {
        return fd.call(hd(this))
    };
    md("entries", (function() {
        return dd.call(hd(this))
    }
    )),
    md("keys", (function() {
        return pd.call(hd(this))
    }
    )),
    md("values", yd, !gd),
    md(cd, yd, !gd);
    var bd = Op.aTypedArray
      , xd = [].join;
    (0,
    Op.exportTypedArrayMethod)("join", (function(e) {
        return xd.apply(bd(this), arguments)
    }
    ));
    var wd = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("lastIndexOf", (function(e) {
        return Ur.apply(wd(this), arguments)
    }
    ));
    var kd = mt.map
      , Cd = Op.aTypedArray
      , Ed = Op.aTypedArrayConstructor;
    (0,
    Op.exportTypedArrayMethod)("map", (function(e) {
        return kd(Cd(this), e, arguments.length > 1 ? arguments[1] : void 0, (function(e, t) {
            return new (Ed(xi(e, e.constructor)))(t)
        }
        ))
    }
    ));
    var Sd = Hr.left
      , Id = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("reduce", (function(e) {
        return Sd(Id(this), e, arguments.length, arguments.length > 1 ? arguments[1] : void 0)
    }
    ));
    var Td = Hr.right
      , Ad = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("reduceRight", (function(e) {
        return Td(Ad(this), e, arguments.length, arguments.length > 1 ? arguments[1] : void 0)
    }
    ));
    var Nd = Op.aTypedArray
      , _d = Op.exportTypedArrayMethod
      , Rd = Math.floor;
    _d("reverse", (function() {
        for (var e, t = this, n = Nd(t).length, r = Rd(n / 2), a = 0; a < r; )
            e = t[a],
            t[a++] = t[--n],
            t[n] = e;
        return t
    }
    ));
    var Od = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("set", (function(e) {
        Od(this);
        var t = zp(arguments.length > 1 ? arguments[1] : void 0, 1)
          , n = this.length
          , r = Ve(e)
          , a = he(r.length)
          , o = 0;
        if (a + t > n)
            throw RangeError("Wrong length");
        for (; o < a; )
            this[t + o] = r[o++]
    }
    ), c((function() {
        new Int8Array(1).set({})
    }
    )));
    var Dd = Op.aTypedArray
      , Bd = Op.aTypedArrayConstructor
      , Fd = [].slice;
    (0,
    Op.exportTypedArrayMethod)("slice", (function(e, t) {
        for (var n = Fd.call(Dd(this), e, t), r = xi(this, this.constructor), a = 0, o = n.length, i = new (Bd(r))(o); o > a; )
            i[a] = n[a++];
        return i
    }
    ), c((function() {
        new Int8Array(1).slice()
    }
    )));
    var Md = mt.some
      , Pd = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("some", (function(e) {
        return Md(Pd(this), e, arguments.length > 1 ? arguments[1] : void 0)
    }
    ));
    var Ld = Op.aTypedArray
      , Ud = [].sort;
    (0,
    Op.exportTypedArrayMethod)("sort", (function(e) {
        return Ud.call(Ld(this), e)
    }
    ));
    var Vd = Op.aTypedArray;
    (0,
    Op.exportTypedArrayMethod)("subarray", (function(e, t) {
        var n = Vd(this)
          , r = n.length
          , a = ge(e, r);
        return new (xi(n, n.constructor))(n.buffer,n.byteOffset + a * n.BYTES_PER_ELEMENT,he((void 0 === t ? r : ge(t, r)) - a))
    }
    ));
    var zd = u.Int8Array
      , Wd = Op.aTypedArray
      , jd = Op.exportTypedArrayMethod
      , Hd = [].toLocaleString
      , Gd = [].slice
      , Kd = !!zd && c((function() {
        Hd.call(new zd(1))
    }
    ));
    jd("toLocaleString", (function() {
        return Hd.apply(Kd ? Gd.call(Wd(this)) : Wd(this), arguments)
    }
    ), c((function() {
        return [1, 2].toLocaleString() != new zd([1, 2]).toLocaleString()
    }
    )) || !c((function() {
        zd.prototype.toLocaleString.call([1, 2])
    }
    )));
    var qd = Op.exportTypedArrayMethod
      , Xd = u.Uint8Array
      , Qd = Xd && Xd.prototype || {}
      , Yd = [].toString
      , $d = [].join;
    c((function() {
        Yd.call({})
    }
    )) && (Yd = function() {
        return $d.call(this)
    }
    );
    var Zd = Qd.toString != Yd;
    qd("toString", Yd, Zd);
    var Jd = ce("Reflect", "apply")
      , eh = Function.apply
      , th = !c((function() {
        Jd((function() {}
        ))
    }
    ));
    Me({
        target: "Reflect",
        stat: !0,
        forced: th
    }, {
        apply: function(e, t, n) {
            return ct(e),
            R(n),
            Jd ? Jd(e, t, n) : eh.call(e, t, n)
        }
    });
    var nh = ce("Reflect", "construct")
      , rh = c((function() {
        function e() {}
        return !(nh((function() {}
        ), [], e)instanceof e)
    }
    ))
      , ah = !c((function() {
        nh((function() {}
        ))
    }
    ))
      , oh = rh || ah;
    Me({
        target: "Reflect",
        stat: !0,
        forced: oh,
        sham: oh
    }, {
        construct: function(e, t) {
            ct(e),
            R(t);
            var n = arguments.length < 3 ? e : ct(arguments[2]);
            if (ah && !rh)
                return nh(e, t, n);
            if (e == n) {
                switch (t.length) {
                case 0:
                    return new e;
                case 1:
                    return new e(t[0]);
                case 2:
                    return new e(t[0],t[1]);
                case 3:
                    return new e(t[0],t[1],t[2]);
                case 4:
                    return new e(t[0],t[1],t[2],t[3])
                }
                var r = [null];
                return r.push.apply(r, t),
                new (Ga.apply(e, r))
            }
            var a = n.prototype
              , o = Xe(w(a) ? a : Object.prototype)
              , i = Function.apply.call(e, o, t);
            return w(i) ? i : o
        }
    });
    var ih = c((function() {
        Reflect.defineProperty(D.f({}, 1, {
            value: 1
        }), 1, {
            value: 2
        })
    }
    ));
    Me({
        target: "Reflect",
        stat: !0,
        forced: ih,
        sham: !l
    }, {
        defineProperty: function(e, t, n) {
            R(e);
            var r = k(t, !0);
            R(n);
            try {
                return D.f(e, r, n),
                !0
            } catch (e) {
                return !1
            }
        }
    });
    var sh = _.f;
    Me({
        target: "Reflect",
        stat: !0
    }, {
        deleteProperty: function(e, t) {
            var n = sh(R(e), t);
            return !(n && !n.configurable) && delete e[t]
        }
    }),
    Me({
        target: "Reflect",
        stat: !0
    }, {
        get: function e(t, n) {
            var r, a, o = arguments.length < 3 ? t : arguments[2];
            return R(t) === o ? t[n] : (r = _.f(t, n)) ? E(r, "value") ? r.value : void 0 === r.get ? void 0 : r.get.call(o) : w(a = rn(t)) ? e(a, n, o) : void 0
        }
    }),
    Me({
        target: "Reflect",
        stat: !0,
        sham: !l
    }, {
        getOwnPropertyDescriptor: function(e, t) {
            return _.f(R(e), t)
        }
    }),
    Me({
        target: "Reflect",
        stat: !0,
        sham: !en
    }, {
        getPrototypeOf: function(e) {
            return rn(R(e))
        }
    }),
    Me({
        target: "Reflect",
        stat: !0
    }, {
        has: function(e, t) {
            return t in e
        }
    });
    var uh = Object.isExtensible;
    Me({
        target: "Reflect",
        stat: !0
    }, {
        isExtensible: function(e) {
            return R(e),
            !uh || uh(e)
        }
    }),
    Me({
        target: "Reflect",
        stat: !0
    }, {
        ownKeys: Ie
    }),
    Me({
        target: "Reflect",
        stat: !0,
        sham: !io
    }, {
        preventExtensions: function(e) {
            R(e);
            try {
                var t = ce("Object", "preventExtensions");
                return t && t(e),
                !0
            } catch (e) {
                return !1
            }
        }
    });
    var ch = c((function() {
        var e = function() {}
          , t = D.f(new e, "a", {
            configurable: !0
        });
        return !1 !== Reflect.set(e.prototype, "a", 1, t)
    }
    ));
    Me({
        target: "Reflect",
        stat: !0,
        forced: ch
    }, {
        set: function e(t, n, r) {
            var a, o, i = arguments.length < 4 ? t : arguments[3], s = _.f(R(t), n);
            if (!s) {
                if (w(o = rn(t)))
                    return e(o, n, r, i);
                s = h(0)
            }
            if (E(s, "value")) {
                if (!1 === s.writable || !w(i))
                    return !1;
                if (a = _.f(i, n)) {
                    if (a.get || a.set || !1 === a.writable)
                        return !1;
                    a.value = r,
                    D.f(i, n, a)
                } else
                    D.f(i, n, h(0, r));
                return !0
            }
            return void 0 !== s.set && (s.set.call(i, r),
            !0)
        }
    }),
    on && Me({
        target: "Reflect",
        stat: !0
    }, {
        setPrototypeOf: function(e, t) {
            R(e),
            an(t);
            try {
                return on(e, t),
                !0
            } catch (e) {
                return !1
            }
        }
    }),
    Me({
        global: !0
    }, {
        Reflect: {}
    }),
    ut(u.Reflect, "Reflect", !0);
    var lh = {
        CSSRuleList: 0,
        CSSStyleDeclaration: 0,
        CSSValueList: 0,
        ClientRectList: 0,
        DOMRectList: 0,
        DOMStringList: 0,
        DOMTokenList: 1,
        DataTransferItemList: 0,
        FileList: 0,
        HTMLAllCollection: 0,
        HTMLCollection: 0,
        HTMLFormElement: 0,
        HTMLSelectElement: 0,
        MediaList: 0,
        MimeTypeArray: 0,
        NamedNodeMap: 0,
        NodeList: 1,
        PaintRequestList: 0,
        Plugin: 0,
        PluginArray: 0,
        SVGLengthList: 0,
        SVGNumberList: 0,
        SVGPathSegList: 0,
        SVGPointList: 0,
        SVGStringList: 0,
        SVGTransformList: 0,
        SourceBufferList: 0,
        StyleSheetList: 0,
        TextTrackCueList: 0,
        TextTrackList: 0,
        TouchList: 0
    };
    for (var fh in lh) {
        var ph = u[fh]
          , dh = ph && ph.prototype;
        if (dh && dh.forEach !== Cr)
            try {
                B(dh, "forEach", Cr)
            } catch (e) {
                dh.forEach = Cr
            }
    }
    var hh = nt("iterator")
      , mh = nt("toStringTag")
      , vh = za.values;
    for (var gh in lh) {
        var yh = u[gh]
          , bh = yh && yh.prototype;
        if (bh) {
            if (bh[hh] !== vh)
                try {
                    B(bh, hh, vh)
                } catch (e) {
                    bh[hh] = vh
                }
            if (bh[mh] || B(bh, mh, gh),
            lh[gh])
                for (var xh in za)
                    if (bh[xh] !== za[xh])
                        try {
                            B(bh, xh, za[xh])
                        } catch (e) {
                            bh[xh] = za[xh]
                        }
        }
    }
    var wh = !u.setImmediate || !u.clearImmediate;
    Me({
        global: !0,
        bind: !0,
        enumerable: !0,
        forced: wh
    }, {
        setImmediate: ml.set,
        clearImmediate: ml.clear
    });
    var kh = u.process;
    Me({
        global: !0,
        enumerable: !0,
        noTargetGet: !0
    }, {
        queueMicrotask: function(e) {
            var t = Gr && kh.domain;
            Al(t ? t.bind(e) : e)
        }
    });
    var Ch = [].slice
      , Eh = /MSIE .\./.test(Bn)
      , Sh = function(e) {
        return function(t, n) {
            var r = arguments.length > 2
              , a = r ? Ch.call(arguments, 2) : void 0;
            return e(r ? function() {
                ("function" == typeof t ? t : Function(t)).apply(this, a)
            }
            : t, n)
        }
    };
    Me({
        global: !0,
        bind: !0,
        forced: Eh
    }, {
        setTimeout: Sh(u.setTimeout),
        setInterval: Sh(u.setInterval)
    });
    var Ih = nt("iterator")
      , Th = !c((function() {
        var e = new URL("b?a=1&b=2&c=3","http://a")
          , t = e.searchParams
          , n = "";
        return e.pathname = "c%20d",
        t.forEach((function(e, r) {
            t.delete("b"),
            n += r + e
        }
        )),
        !t.sort || "http://a/c%20d?a=1&c=3" !== e.href || "3" !== t.get("c") || "a=1" !== String(new URLSearchParams("?a=1")) || !t[Ih] || "a" !== new URL("https://a@b").username || "b" !== new URLSearchParams(new URLSearchParams("a=b")).get("a") || "xn--e1aybc" !== new URL("http://ÑÐµÑÑ").host || "#%D0%B1" !== new URL("http://a#Ð±").hash || "a1c3" !== n || "x" !== new URL("http://x",void 0).host
    }
    ))
      , Ah = 2147483647
      , Nh = /[^\0-\u007E]/
      , _h = /[.\u3002\uFF0E\uFF61]/g
      , Rh = "Overflow: input needs wider integers to process"
      , Oh = Math.floor
      , Dh = String.fromCharCode
      , Bh = function(e) {
        return e + 22 + 75 * (e < 26)
    }
      , Fh = function(e, t, n) {
        var r = 0;
        for (e = n ? Oh(e / 700) : e >> 1,
        e += Oh(e / t); e > 455; r += 36)
            e = Oh(e / 35);
        return Oh(r + 36 * e / (e + 38))
    }
      , Mh = function(e) {
        var t, n, r = [], a = (e = function(e) {
            for (var t = [], n = 0, r = e.length; n < r; ) {
                var a = e.charCodeAt(n++);
                if (a >= 55296 && a <= 56319 && n < r) {
                    var o = e.charCodeAt(n++);
                    56320 == (64512 & o) ? t.push(((1023 & a) << 10) + (1023 & o) + 65536) : (t.push(a),
                    n--)
                } else
                    t.push(a)
            }
            return t
        }(e)).length, o = 128, i = 0, s = 72;
        for (t = 0; t < e.length; t++)
            (n = e[t]) < 128 && r.push(Dh(n));
        var u = r.length
          , c = u;
        for (u && r.push("-"); c < a; ) {
            var l = Ah;
            for (t = 0; t < e.length; t++)
                (n = e[t]) >= o && n < l && (l = n);
            var f = c + 1;
            if (l - o > Oh((Ah - i) / f))
                throw RangeError(Rh);
            for (i += (l - o) * f,
            o = l,
            t = 0; t < e.length; t++) {
                if ((n = e[t]) < o && ++i > Ah)
                    throw RangeError(Rh);
                if (n == o) {
                    for (var p = i, d = 36; ; d += 36) {
                        var h = d <= s ? 1 : d >= s + 26 ? 26 : d - s;
                        if (p < h)
                            break;
                        var m = p - h
                          , v = 36 - h;
                        r.push(Dh(Bh(h + m % v))),
                        p = Oh(m / v)
                    }
                    r.push(Dh(Bh(p))),
                    s = Fh(i, f, c == u),
                    i = 0,
                    ++c
                }
            }
            ++i,
            ++o
        }
        return r.join("")
    }
      , Ph = function(e) {
        var t = gn(e);
        if ("function" != typeof t)
            throw TypeError(String(e) + " is not iterable");
        return R(t.call(e))
    }
      , Lh = ce("fetch")
      , Uh = ce("Headers")
      , Vh = nt("iterator")
      , zh = "URLSearchParams"
      , Wh = "URLSearchParamsIterator"
      , jh = oe.set
      , Hh = oe.getterFor(zh)
      , Gh = oe.getterFor(Wh)
      , Kh = /\+/g
      , qh = Array(4)
      , Xh = function(e) {
        return qh[e - 1] || (qh[e - 1] = RegExp("((?:%[\\da-f]{2}){" + e + "})", "gi"))
    }
      , Qh = function(e) {
        try {
            return decodeURIComponent(e)
        } catch (t) {
            return e
        }
    }
      , Yh = function(e) {
        var t = e.replace(Kh, " ")
          , n = 4;
        try {
            return decodeURIComponent(t)
        } catch (e) {
            for (; n; )
                t = t.replace(Xh(n--), Qh);
            return t
        }
    }
      , $h = /[!'()~]|%20/g
      , Zh = {
        "!": "%21",
        "'": "%27",
        "(": "%28",
        ")": "%29",
        "~": "%7E",
        "%20": "+"
    }
      , Jh = function(e) {
        return Zh[e]
    }
      , em = function(e) {
        return encodeURIComponent(e).replace($h, Jh)
    }
      , tm = function(e, t) {
        if (t)
            for (var n, r, a = t.split("&"), o = 0; o < a.length; )
                (n = a[o++]).length && (r = n.split("="),
                e.push({
                    key: Yh(r.shift()),
                    value: Yh(r.join("="))
                }))
    }
      , nm = function(e) {
        this.entries.length = 0,
        tm(this.entries, e)
    }
      , rm = function(e, t) {
        if (e < t)
            throw TypeError("Not enough arguments")
    }
      , am = Na((function(e, t) {
        jh(this, {
            type: Wh,
            iterator: Ph(Hh(e).entries),
            kind: t
        })
    }
    ), "Iterator", (function() {
        var e = Gh(this)
          , t = e.kind
          , n = e.iterator.next()
          , r = n.value;
        return n.done || (n.value = "keys" === t ? r.key : "values" === t ? r.value : [r.key, r.value]),
        n
    }
    ))
      , om = function() {
        Kc(this, om, zh);
        var e, t, n, r, a, o, i, s, u, c = arguments.length > 0 ? arguments[0] : void 0, l = this, f = [];
        if (jh(l, {
            type: zh,
            entries: f,
            updateURL: function() {},
            updateSearchParams: nm
        }),
        void 0 !== c)
            if (w(c))
                if ("function" == typeof (e = gn(c)))
                    for (n = (t = e.call(c)).next; !(r = n.call(t)).done; ) {
                        if ((i = (o = (a = Ph(R(r.value))).next).call(a)).done || (s = o.call(a)).done || !o.call(a).done)
                            throw TypeError("Expected sequence with length 2");
                        f.push({
                            key: i.value + "",
                            value: s.value + ""
                        })
                    }
                else
                    for (u in c)
                        E(c, u) && f.push({
                            key: u,
                            value: c[u] + ""
                        });
            else
                tm(f, "string" == typeof c ? "?" === c.charAt(0) ? c.slice(1) : c : c + "")
    }
      , im = om.prototype;
    Gc(im, {
        append: function(e, t) {
            rm(arguments.length, 2);
            var n = Hh(this);
            n.entries.push({
                key: e + "",
                value: t + ""
            }),
            n.updateURL()
        },
        delete: function(e) {
            rm(arguments.length, 1);
            for (var t = Hh(this), n = t.entries, r = e + "", a = 0; a < n.length; )
                n[a].key === r ? n.splice(a, 1) : a++;
            t.updateURL()
        },
        get: function(e) {
            rm(arguments.length, 1);
            for (var t = Hh(this).entries, n = e + "", r = 0; r < t.length; r++)
                if (t[r].key === n)
                    return t[r].value;
            return null
        },
        getAll: function(e) {
            rm(arguments.length, 1);
            for (var t = Hh(this).entries, n = e + "", r = [], a = 0; a < t.length; a++)
                t[a].key === n && r.push(t[a].value);
            return r
        },
        has: function(e) {
            rm(arguments.length, 1);
            for (var t = Hh(this).entries, n = e + "", r = 0; r < t.length; )
                if (t[r++].key === n)
                    return !0;
            return !1
        },
        set: function(e, t) {
            rm(arguments.length, 1);
            for (var n, r = Hh(this), a = r.entries, o = !1, i = e + "", s = t + "", u = 0; u < a.length; u++)
                (n = a[u]).key === i && (o ? a.splice(u--, 1) : (o = !0,
                n.value = s));
            o || a.push({
                key: i,
                value: s
            }),
            r.updateURL()
        },
        sort: function() {
            var e, t, n, r = Hh(this), a = r.entries, o = a.slice();
            for (a.length = 0,
            n = 0; n < o.length; n++) {
                for (e = o[n],
                t = 0; t < n; t++)
                    if (a[t].key > e.key) {
                        a.splice(t, 0, e);
                        break
                    }
                t === n && a.push(e)
            }
            r.updateURL()
        },
        forEach: function(e) {
            for (var t, n = Hh(this).entries, r = lt(e, arguments.length > 1 ? arguments[1] : void 0, 3), a = 0; a < n.length; )
                r((t = n[a++]).value, t.key, this)
        },
        keys: function() {
            return new am(this,"keys")
        },
        values: function() {
            return new am(this,"values")
        },
        entries: function() {
            return new am(this,"entries")
        }
    }, {
        enumerable: !0
    }),
    ie(im, Vh, im.entries),
    ie(im, "toString", (function() {
        for (var e, t = Hh(this).entries, n = [], r = 0; r < t.length; )
            e = t[r++],
            n.push(em(e.key) + "=" + em(e.value));
        return n.join("&")
    }
    ), {
        enumerable: !0
    }),
    ut(om, zh),
    Me({
        global: !0,
        forced: !Th
    }, {
        URLSearchParams: om
    }),
    Th || "function" != typeof Lh || "function" != typeof Uh || Me({
        global: !0,
        enumerable: !0,
        forced: !0
    }, {
        fetch: function(e) {
            var t, n, r, a = [e];
            return arguments.length > 1 && (w(t = arguments[1]) && (n = t.body,
            mn(n) === zh && ((r = t.headers ? new Uh(t.headers) : new Uh).has("content-type") || r.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"),
            t = Xe(t, {
                body: h(0, String(n)),
                headers: h(0, r)
            }))),
            a.push(t)),
            Lh.apply(this, a)
        }
    });
    var sm, um = {
        URLSearchParams: om,
        getState: Hh
    }, cm = Vo.codeAt, lm = u.URL, fm = um.URLSearchParams, pm = um.getState, dm = oe.set, hm = oe.getterFor("URL"), mm = Math.floor, vm = Math.pow, gm = "Invalid scheme", ym = "Invalid host", bm = "Invalid port", xm = /[A-Za-z]/, wm = /[\d+-.A-Za-z]/, km = /\d/, Cm = /^(0x|0X)/, Em = /^[0-7]+$/, Sm = /^\d+$/, Im = /^[\dA-Fa-f]+$/, Tm = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/, Am = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/, Nm = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g, _m = /[\u0009\u000A\u000D]/g, Rm = function(e, t) {
        var n, r, a;
        if ("[" == t.charAt(0)) {
            if ("]" != t.charAt(t.length - 1))
                return ym;
            if (!(n = Dm(t.slice(1, -1))))
                return ym;
            e.host = n
        } else if (zm(e)) {
            if (t = function(e) {
                var t, n, r = [], a = e.toLowerCase().replace(_h, ".").split(".");
                for (t = 0; t < a.length; t++)
                    n = a[t],
                    r.push(Nh.test(n) ? "xn--" + Mh(n) : n);
                return r.join(".")
            }(t),
            Tm.test(t))
                return ym;
            if (null === (n = Om(t)))
                return ym;
            e.host = n
        } else {
            if (Am.test(t))
                return ym;
            for (n = "",
            r = En(t),
            a = 0; a < r.length; a++)
                n += Um(r[a], Fm);
            e.host = n
        }
    }, Om = function(e) {
        var t, n, r, a, o, i, s, u = e.split(".");
        if (u.length && "" == u[u.length - 1] && u.pop(),
        (t = u.length) > 4)
            return e;
        for (n = [],
        r = 0; r < t; r++) {
            if ("" == (a = u[r]))
                return e;
            if (o = 10,
            a.length > 1 && "0" == a.charAt(0) && (o = Cm.test(a) ? 16 : 8,
            a = a.slice(8 == o ? 1 : 2)),
            "" === a)
                i = 0;
            else {
                if (!(10 == o ? Sm : 8 == o ? Em : Im).test(a))
                    return e;
                i = parseInt(a, o)
            }
            n.push(i)
        }
        for (r = 0; r < t; r++)
            if (i = n[r],
            r == t - 1) {
                if (i >= vm(256, 5 - t))
                    return null
            } else if (i > 255)
                return null;
        for (s = n.pop(),
        r = 0; r < n.length; r++)
            s += n[r] * vm(256, 3 - r);
        return s
    }, Dm = function(e) {
        var t, n, r, a, o, i, s, u = [0, 0, 0, 0, 0, 0, 0, 0], c = 0, l = null, f = 0, p = function() {
            return e.charAt(f)
        };
        if (":" == p()) {
            if (":" != e.charAt(1))
                return;
            f += 2,
            l = ++c
        }
        for (; p(); ) {
            if (8 == c)
                return;
            if (":" != p()) {
                for (t = n = 0; n < 4 && Im.test(p()); )
                    t = 16 * t + parseInt(p(), 16),
                    f++,
                    n++;
                if ("." == p()) {
                    if (0 == n)
                        return;
                    if (f -= n,
                    c > 6)
                        return;
                    for (r = 0; p(); ) {
                        if (a = null,
                        r > 0) {
                            if (!("." == p() && r < 4))
                                return;
                            f++
                        }
                        if (!km.test(p()))
                            return;
                        for (; km.test(p()); ) {
                            if (o = parseInt(p(), 10),
                            null === a)
                                a = o;
                            else {
                                if (0 == a)
                                    return;
                                a = 10 * a + o
                            }
                            if (a > 255)
                                return;
                            f++
                        }
                        u[c] = 256 * u[c] + a,
                        2 != ++r && 4 != r || c++
                    }
                    if (4 != r)
                        return;
                    break
                }
                if (":" == p()) {
                    if (f++,
                    !p())
                        return
                } else if (p())
                    return;
                u[c++] = t
            } else {
                if (null !== l)
                    return;
                f++,
                l = ++c
            }
        }
        if (null !== l)
            for (i = c - l,
            c = 7; 0 != c && i > 0; )
                s = u[c],
                u[c--] = u[l + i - 1],
                u[l + --i] = s;
        else if (8 != c)
            return;
        return u
    }, Bm = function(e) {
        var t, n, r, a;
        if ("number" == typeof e) {
            for (t = [],
            n = 0; n < 4; n++)
                t.unshift(e % 256),
                e = mm(e / 256);
            return t.join(".")
        }
        if ("object" == typeof e) {
            for (t = "",
            r = function(e) {
                for (var t = null, n = 1, r = null, a = 0, o = 0; o < 8; o++)
                    0 !== e[o] ? (a > n && (t = r,
                    n = a),
                    r = null,
                    a = 0) : (null === r && (r = o),
                    ++a);
                return a > n && (t = r,
                n = a),
                t
            }(e),
            n = 0; n < 8; n++)
                a && 0 === e[n] || (a && (a = !1),
                r === n ? (t += n ? ":" : "::",
                a = !0) : (t += e[n].toString(16),
                n < 7 && (t += ":")));
            return "[" + t + "]"
        }
        return e
    }, Fm = {}, Mm = to({}, Fm, {
        " ": 1,
        '"': 1,
        "<": 1,
        ">": 1,
        "`": 1
    }), Pm = to({}, Mm, {
        "#": 1,
        "?": 1,
        "{": 1,
        "}": 1
    }), Lm = to({}, Pm, {
        "/": 1,
        ":": 1,
        ";": 1,
        "=": 1,
        "@": 1,
        "[": 1,
        "\\": 1,
        "]": 1,
        "^": 1,
        "|": 1
    }), Um = function(e, t) {
        var n = cm(e, 0);
        return n > 32 && n < 127 && !E(t, e) ? e : encodeURIComponent(e)
    }, Vm = {
        ftp: 21,
        file: null,
        http: 80,
        https: 443,
        ws: 80,
        wss: 443
    }, zm = function(e) {
        return E(Vm, e.scheme)
    }, Wm = function(e) {
        return "" != e.username || "" != e.password
    }, jm = function(e) {
        return !e.host || e.cannotBeABaseURL || "file" == e.scheme
    }, Hm = function(e, t) {
        var n;
        return 2 == e.length && xm.test(e.charAt(0)) && (":" == (n = e.charAt(1)) || !t && "|" == n)
    }, Gm = function(e) {
        var t;
        return e.length > 1 && Hm(e.slice(0, 2)) && (2 == e.length || "/" === (t = e.charAt(2)) || "\\" === t || "?" === t || "#" === t)
    }, Km = function(e) {
        var t = e.path
          , n = t.length;
        !n || "file" == e.scheme && 1 == n && Hm(t[0], !0) || t.pop()
    }, qm = function(e) {
        return "." === e || "%2e" === e.toLowerCase()
    }, Xm = {}, Qm = {}, Ym = {}, $m = {}, Zm = {}, Jm = {}, ev = {}, tv = {}, nv = {}, rv = {}, av = {}, ov = {}, iv = {}, sv = {}, uv = {}, cv = {}, lv = {}, fv = {}, pv = {}, dv = {}, hv = {}, mv = function(e, t, n, r) {
        var a, o, i, s, u, c = n || Xm, l = 0, f = "", p = !1, d = !1, h = !1;
        for (n || (e.scheme = "",
        e.username = "",
        e.password = "",
        e.host = null,
        e.port = null,
        e.path = [],
        e.query = null,
        e.fragment = null,
        e.cannotBeABaseURL = !1,
        t = t.replace(Nm, "")),
        t = t.replace(_m, ""),
        a = En(t); l <= a.length; ) {
            switch (o = a[l],
            c) {
            case Xm:
                if (!o || !xm.test(o)) {
                    if (n)
                        return gm;
                    c = Ym;
                    continue
                }
                f += o.toLowerCase(),
                c = Qm;
                break;
            case Qm:
                if (o && (wm.test(o) || "+" == o || "-" == o || "." == o))
                    f += o.toLowerCase();
                else {
                    if (":" != o) {
                        if (n)
                            return gm;
                        f = "",
                        c = Ym,
                        l = 0;
                        continue
                    }
                    if (n && (zm(e) != E(Vm, f) || "file" == f && (Wm(e) || null !== e.port) || "file" == e.scheme && !e.host))
                        return;
                    if (e.scheme = f,
                    n)
                        return void (zm(e) && Vm[e.scheme] == e.port && (e.port = null));
                    f = "",
                    "file" == e.scheme ? c = sv : zm(e) && r && r.scheme == e.scheme ? c = $m : zm(e) ? c = tv : "/" == a[l + 1] ? (c = Zm,
                    l++) : (e.cannotBeABaseURL = !0,
                    e.path.push(""),
                    c = pv)
                }
                break;
            case Ym:
                if (!r || r.cannotBeABaseURL && "#" != o)
                    return gm;
                if (r.cannotBeABaseURL && "#" == o) {
                    e.scheme = r.scheme,
                    e.path = r.path.slice(),
                    e.query = r.query,
                    e.fragment = "",
                    e.cannotBeABaseURL = !0,
                    c = hv;
                    break
                }
                c = "file" == r.scheme ? sv : Jm;
                continue;
            case $m:
                if ("/" != o || "/" != a[l + 1]) {
                    c = Jm;
                    continue
                }
                c = nv,
                l++;
                break;
            case Zm:
                if ("/" == o) {
                    c = rv;
                    break
                }
                c = fv;
                continue;
            case Jm:
                if (e.scheme = r.scheme,
                o == sm)
                    e.username = r.username,
                    e.password = r.password,
                    e.host = r.host,
                    e.port = r.port,
                    e.path = r.path.slice(),
                    e.query = r.query;
                else if ("/" == o || "\\" == o && zm(e))
                    c = ev;
                else if ("?" == o)
                    e.username = r.username,
                    e.password = r.password,
                    e.host = r.host,
                    e.port = r.port,
                    e.path = r.path.slice(),
                    e.query = "",
                    c = dv;
                else {
                    if ("#" != o) {
                        e.username = r.username,
                        e.password = r.password,
                        e.host = r.host,
                        e.port = r.port,
                        e.path = r.path.slice(),
                        e.path.pop(),
                        c = fv;
                        continue
                    }
                    e.username = r.username,
                    e.password = r.password,
                    e.host = r.host,
                    e.port = r.port,
                    e.path = r.path.slice(),
                    e.query = r.query,
                    e.fragment = "",
                    c = hv
                }
                break;
            case ev:
                if (!zm(e) || "/" != o && "\\" != o) {
                    if ("/" != o) {
                        e.username = r.username,
                        e.password = r.password,
                        e.host = r.host,
                        e.port = r.port,
                        c = fv;
                        continue
                    }
                    c = rv
                } else
                    c = nv;
                break;
            case tv:
                if (c = nv,
                "/" != o || "/" != f.charAt(l + 1))
                    continue;
                l++;
                break;
            case nv:
                if ("/" != o && "\\" != o) {
                    c = rv;
                    continue
                }
                break;
            case rv:
                if ("@" == o) {
                    p && (f = "%40" + f),
                    p = !0,
                    i = En(f);
                    for (var m = 0; m < i.length; m++) {
                        var v = i[m];
                        if (":" != v || h) {
                            var g = Um(v, Lm);
                            h ? e.password += g : e.username += g
                        } else
                            h = !0
                    }
                    f = ""
                } else if (o == sm || "/" == o || "?" == o || "#" == o || "\\" == o && zm(e)) {
                    if (p && "" == f)
                        return "Invalid authority";
                    l -= En(f).length + 1,
                    f = "",
                    c = av
                } else
                    f += o;
                break;
            case av:
            case ov:
                if (n && "file" == e.scheme) {
                    c = cv;
                    continue
                }
                if (":" != o || d) {
                    if (o == sm || "/" == o || "?" == o || "#" == o || "\\" == o && zm(e)) {
                        if (zm(e) && "" == f)
                            return ym;
                        if (n && "" == f && (Wm(e) || null !== e.port))
                            return;
                        if (s = Rm(e, f))
                            return s;
                        if (f = "",
                        c = lv,
                        n)
                            return;
                        continue
                    }
                    "[" == o ? d = !0 : "]" == o && (d = !1),
                    f += o
                } else {
                    if ("" == f)
                        return ym;
                    if (s = Rm(e, f))
                        return s;
                    if (f = "",
                    c = iv,
                    n == ov)
                        return
                }
                break;
            case iv:
                if (!km.test(o)) {
                    if (o == sm || "/" == o || "?" == o || "#" == o || "\\" == o && zm(e) || n) {
                        if ("" != f) {
                            var y = parseInt(f, 10);
                            if (y > 65535)
                                return bm;
                            e.port = zm(e) && y === Vm[e.scheme] ? null : y,
                            f = ""
                        }
                        if (n)
                            return;
                        c = lv;
                        continue
                    }
                    return bm
                }
                f += o;
                break;
            case sv:
                if (e.scheme = "file",
                "/" == o || "\\" == o)
                    c = uv;
                else {
                    if (!r || "file" != r.scheme) {
                        c = fv;
                        continue
                    }
                    if (o == sm)
                        e.host = r.host,
                        e.path = r.path.slice(),
                        e.query = r.query;
                    else if ("?" == o)
                        e.host = r.host,
                        e.path = r.path.slice(),
                        e.query = "",
                        c = dv;
                    else {
                        if ("#" != o) {
                            Gm(a.slice(l).join("")) || (e.host = r.host,
                            e.path = r.path.slice(),
                            Km(e)),
                            c = fv;
                            continue
                        }
                        e.host = r.host,
                        e.path = r.path.slice(),
                        e.query = r.query,
                        e.fragment = "",
                        c = hv
                    }
                }
                break;
            case uv:
                if ("/" == o || "\\" == o) {
                    c = cv;
                    break
                }
                r && "file" == r.scheme && !Gm(a.slice(l).join("")) && (Hm(r.path[0], !0) ? e.path.push(r.path[0]) : e.host = r.host),
                c = fv;
                continue;
            case cv:
                if (o == sm || "/" == o || "\\" == o || "?" == o || "#" == o) {
                    if (!n && Hm(f))
                        c = fv;
                    else if ("" == f) {
                        if (e.host = "",
                        n)
                            return;
                        c = lv
                    } else {
                        if (s = Rm(e, f))
                            return s;
                        if ("localhost" == e.host && (e.host = ""),
                        n)
                            return;
                        f = "",
                        c = lv
                    }
                    continue
                }
                f += o;
                break;
            case lv:
                if (zm(e)) {
                    if (c = fv,
                    "/" != o && "\\" != o)
                        continue
                } else if (n || "?" != o)
                    if (n || "#" != o) {
                        if (o != sm && (c = fv,
                        "/" != o))
                            continue
                    } else
                        e.fragment = "",
                        c = hv;
                else
                    e.query = "",
                    c = dv;
                break;
            case fv:
                if (o == sm || "/" == o || "\\" == o && zm(e) || !n && ("?" == o || "#" == o)) {
                    if (".." === (u = (u = f).toLowerCase()) || "%2e." === u || ".%2e" === u || "%2e%2e" === u ? (Km(e),
                    "/" == o || "\\" == o && zm(e) || e.path.push("")) : qm(f) ? "/" == o || "\\" == o && zm(e) || e.path.push("") : ("file" == e.scheme && !e.path.length && Hm(f) && (e.host && (e.host = ""),
                    f = f.charAt(0) + ":"),
                    e.path.push(f)),
                    f = "",
                    "file" == e.scheme && (o == sm || "?" == o || "#" == o))
                        for (; e.path.length > 1 && "" === e.path[0]; )
                            e.path.shift();
                    "?" == o ? (e.query = "",
                    c = dv) : "#" == o && (e.fragment = "",
                    c = hv)
                } else
                    f += Um(o, Pm);
                break;
            case pv:
                "?" == o ? (e.query = "",
                c = dv) : "#" == o ? (e.fragment = "",
                c = hv) : o != sm && (e.path[0] += Um(o, Fm));
                break;
            case dv:
                n || "#" != o ? o != sm && ("'" == o && zm(e) ? e.query += "%27" : e.query += "#" == o ? "%23" : Um(o, Fm)) : (e.fragment = "",
                c = hv);
                break;
            case hv:
                o != sm && (e.fragment += Um(o, Mm))
            }
            l++
        }
    }, vv = function(e) {
        var t, n, r = Kc(this, vv, "URL"), a = arguments.length > 1 ? arguments[1] : void 0, o = String(e), i = dm(r, {
            type: "URL"
        });
        if (void 0 !== a)
            if (a instanceof vv)
                t = hm(a);
            else if (n = mv(t = {}, String(a)))
                throw TypeError(n);
        if (n = mv(i, o, null, t))
            throw TypeError(n);
        var s = i.searchParams = new fm
          , u = pm(s);
        u.updateSearchParams(i.query),
        u.updateURL = function() {
            i.query = String(s) || null
        }
        ,
        l || (r.href = yv.call(r),
        r.origin = bv.call(r),
        r.protocol = xv.call(r),
        r.username = wv.call(r),
        r.password = kv.call(r),
        r.host = Cv.call(r),
        r.hostname = Ev.call(r),
        r.port = Sv.call(r),
        r.pathname = Iv.call(r),
        r.search = Tv.call(r),
        r.searchParams = Av.call(r),
        r.hash = Nv.call(r))
    }, gv = vv.prototype, yv = function() {
        var e = hm(this)
          , t = e.scheme
          , n = e.username
          , r = e.password
          , a = e.host
          , o = e.port
          , i = e.path
          , s = e.query
          , u = e.fragment
          , c = t + ":";
        return null !== a ? (c += "//",
        Wm(e) && (c += n + (r ? ":" + r : "") + "@"),
        c += Bm(a),
        null !== o && (c += ":" + o)) : "file" == t && (c += "//"),
        c += e.cannotBeABaseURL ? i[0] : i.length ? "/" + i.join("/") : "",
        null !== s && (c += "?" + s),
        null !== u && (c += "#" + u),
        c
    }, bv = function() {
        var e = hm(this)
          , t = e.scheme
          , n = e.port;
        if ("blob" == t)
            try {
                return new URL(t.path[0]).origin
            } catch (e) {
                return "null"
            }
        return "file" != t && zm(e) ? t + "://" + Bm(e.host) + (null !== n ? ":" + n : "") : "null"
    }, xv = function() {
        return hm(this).scheme + ":"
    }, wv = function() {
        return hm(this).username
    }, kv = function() {
        return hm(this).password
    }, Cv = function() {
        var e = hm(this)
          , t = e.host
          , n = e.port;
        return null === t ? "" : null === n ? Bm(t) : Bm(t) + ":" + n
    }, Ev = function() {
        var e = hm(this).host;
        return null === e ? "" : Bm(e)
    }, Sv = function() {
        var e = hm(this).port;
        return null === e ? "" : String(e)
    }, Iv = function() {
        var e = hm(this)
          , t = e.path;
        return e.cannotBeABaseURL ? t[0] : t.length ? "/" + t.join("/") : ""
    }, Tv = function() {
        var e = hm(this).query;
        return e ? "?" + e : ""
    }, Av = function() {
        return hm(this).searchParams
    }, Nv = function() {
        var e = hm(this).fragment;
        return e ? "#" + e : ""
    }, _v = function(e, t) {
        return {
            get: e,
            set: t,
            configurable: !0,
            enumerable: !0
        }
    };
    if (l && We(gv, {
        href: _v(yv, (function(e) {
            var t = hm(this)
              , n = String(e)
              , r = mv(t, n);
            if (r)
                throw TypeError(r);
            pm(t.searchParams).updateSearchParams(t.query)
        }
        )),
        origin: _v(bv),
        protocol: _v(xv, (function(e) {
            var t = hm(this);
            mv(t, String(e) + ":", Xm)
        }
        )),
        username: _v(wv, (function(e) {
            var t = hm(this)
              , n = En(String(e));
            if (!jm(t)) {
                t.username = "";
                for (var r = 0; r < n.length; r++)
                    t.username += Um(n[r], Lm)
            }
        }
        )),
        password: _v(kv, (function(e) {
            var t = hm(this)
              , n = En(String(e));
            if (!jm(t)) {
                t.password = "";
                for (var r = 0; r < n.length; r++)
                    t.password += Um(n[r], Lm)
            }
        }
        )),
        host: _v(Cv, (function(e) {
            var t = hm(this);
            t.cannotBeABaseURL || mv(t, String(e), av)
        }
        )),
        hostname: _v(Ev, (function(e) {
            var t = hm(this);
            t.cannotBeABaseURL || mv(t, String(e), ov)
        }
        )),
        port: _v(Sv, (function(e) {
            var t = hm(this);
            jm(t) || ("" == (e = String(e)) ? t.port = null : mv(t, e, iv))
        }
        )),
        pathname: _v(Iv, (function(e) {
            var t = hm(this);
            t.cannotBeABaseURL || (t.path = [],
            mv(t, e + "", lv))
        }
        )),
        search: _v(Tv, (function(e) {
            var t = hm(this);
            "" == (e = String(e)) ? t.query = null : ("?" == e.charAt(0) && (e = e.slice(1)),
            t.query = "",
            mv(t, e, dv)),
            pm(t.searchParams).updateSearchParams(t.query)
        }
        )),
        searchParams: _v(Av),
        hash: _v(Nv, (function(e) {
            var t = hm(this);
            "" != (e = String(e)) ? ("#" == e.charAt(0) && (e = e.slice(1)),
            t.fragment = "",
            mv(t, e, hv)) : t.fragment = null
        }
        ))
    }),
    ie(gv, "toJSON", (function() {
        return yv.call(this)
    }
    ), {
        enumerable: !0
    }),
    ie(gv, "toString", (function() {
        return yv.call(this)
    }
    ), {
        enumerable: !0
    }),
    lm) {
        var Rv = lm.createObjectURL
          , Ov = lm.revokeObjectURL;
        Rv && ie(vv, "createObjectURL", (function(e) {
            return Rv.apply(lm, arguments)
        }
        )),
        Ov && ie(vv, "revokeObjectURL", (function(e) {
            return Ov.apply(lm, arguments)
        }
        ))
    }
    ut(vv, "URL"),
    Me({
        global: !0,
        forced: !Th,
        sham: !l
    }, {
        URL: vv
    }),
    Me({
        target: "URL",
        proto: !0,
        enumerable: !0
    }, {
        toJSON: function() {
            return URL.prototype.toString.call(this)
        }
    });
    i((function(e) {
        var t = function(e) {
            var t, n = Object.prototype, r = n.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, o = a.iterator || "@@iterator", i = a.asyncIterator || "@@asyncIterator", s = a.toStringTag || "@@toStringTag";
            function u(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                e[t]
            }
            try {
                u({}, "")
            } catch (e) {
                u = function(e, t, n) {
                    return e[t] = n
                }
            }
            function c(e, t, n, r) {
                var a = t && t.prototype instanceof v ? t : v
                  , o = Object.create(a.prototype)
                  , i = new A(r || []);
                return o._invoke = function(e, t, n) {
                    var r = f;
                    return function(a, o) {
                        if (r === d)
                            throw new Error("Generator is already running");
                        if (r === h) {
                            if ("throw" === a)
                                throw o;
                            return _()
                        }
                        for (n.method = a,
                        n.arg = o; ; ) {
                            var i = n.delegate;
                            if (i) {
                                var s = S(i, n);
                                if (s) {
                                    if (s === m)
                                        continue;
                                    return s
                                }
                            }
                            if ("next" === n.method)
                                n.sent = n._sent = n.arg;
                            else if ("throw" === n.method) {
                                if (r === f)
                                    throw r = h,
                                    n.arg;
                                n.dispatchException(n.arg)
                            } else
                                "return" === n.method && n.abrupt("return", n.arg);
                            r = d;
                            var u = l(e, t, n);
                            if ("normal" === u.type) {
                                if (r = n.done ? h : p,
                                u.arg === m)
                                    continue;
                                return {
                                    value: u.arg,
                                    done: n.done
                                }
                            }
                            "throw" === u.type && (r = h,
                            n.method = "throw",
                            n.arg = u.arg)
                        }
                    }
                }(e, n, i),
                o
            }
            function l(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = c;
            var f = "suspendedStart"
              , p = "suspendedYield"
              , d = "executing"
              , h = "completed"
              , m = {};
            function v() {}
            function g() {}
            function y() {}
            var b = {};
            b[o] = function() {
                return this
            }
            ;
            var x = Object.getPrototypeOf
              , w = x && x(x(N([])));
            w && w !== n && r.call(w, o) && (b = w);
            var k = y.prototype = v.prototype = Object.create(b);
            function C(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    u(e, t, (function(e) {
                        return this._invoke(t, e)
                    }
                    ))
                }
                ))
            }
            function E(e, t) {
                function n(a, o, i, s) {
                    var u = l(e[a], e, o);
                    if ("throw" !== u.type) {
                        var c = u.arg
                          , f = c.value;
                        return f && "object" == typeof f && r.call(f, "__await") ? t.resolve(f.__await).then((function(e) {
                            n("next", e, i, s)
                        }
                        ), (function(e) {
                            n("throw", e, i, s)
                        }
                        )) : t.resolve(f).then((function(e) {
                            c.value = e,
                            i(c)
                        }
                        ), (function(e) {
                            return n("throw", e, i, s)
                        }
                        ))
                    }
                    s(u.arg)
                }
                var a;
                this._invoke = function(e, r) {
                    function o() {
                        return new t((function(t, a) {
                            n(e, r, t, a)
                        }
                        ))
                    }
                    return a = a ? a.then(o, o) : o()
                }
            }
            function S(e, n) {
                var r = e.iterator[n.method];
                if (r === t) {
                    if (n.delegate = null,
                    "throw" === n.method) {
                        if (e.iterator.return && (n.method = "return",
                        n.arg = t,
                        S(e, n),
                        "throw" === n.method))
                            return m;
                        n.method = "throw",
                        n.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return m
                }
                var a = l(r, e.iterator, n.arg);
                if ("throw" === a.type)
                    return n.method = "throw",
                    n.arg = a.arg,
                    n.delegate = null,
                    m;
                var o = a.arg;
                return o ? o.done ? (n[e.resultName] = o.value,
                n.next = e.nextLoc,
                "return" !== n.method && (n.method = "next",
                n.arg = t),
                n.delegate = null,
                m) : o : (n.method = "throw",
                n.arg = new TypeError("iterator result is not an object"),
                n.delegate = null,
                m)
            }
            function I(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]),
                2 in e && (t.finallyLoc = e[2],
                t.afterLoc = e[3]),
                this.tryEntries.push(t)
            }
            function T(e) {
                var t = e.completion || {};
                t.type = "normal",
                delete t.arg,
                e.completion = t
            }
            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                e.forEach(I, this),
                this.reset(!0)
            }
            function N(e) {
                if (e) {
                    var n = e[o];
                    if (n)
                        return n.call(e);
                    if ("function" == typeof e.next)
                        return e;
                    if (!isNaN(e.length)) {
                        var a = -1
                          , i = function n() {
                            for (; ++a < e.length; )
                                if (r.call(e, a))
                                    return n.value = e[a],
                                    n.done = !1,
                                    n;
                            return n.value = t,
                            n.done = !0,
                            n
                        };
                        return i.next = i
                    }
                }
                return {
                    next: _
                }
            }
            function _() {
                return {
                    value: t,
                    done: !0
                }
            }
            return g.prototype = k.constructor = y,
            y.constructor = g,
            g.displayName = u(y, s, "GeneratorFunction"),
            e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === g || "GeneratorFunction" === (t.displayName || t.name))
            }
            ,
            e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, y) : (e.__proto__ = y,
                u(e, s, "GeneratorFunction")),
                e.prototype = Object.create(k),
                e
            }
            ,
            e.awrap = function(e) {
                return {
                    __await: e
                }
            }
            ,
            C(E.prototype),
            E.prototype[i] = function() {
                return this
            }
            ,
            e.AsyncIterator = E,
            e.async = function(t, n, r, a, o) {
                void 0 === o && (o = Promise);
                var i = new E(c(t, n, r, a),o);
                return e.isGeneratorFunction(n) ? i : i.next().then((function(e) {
                    return e.done ? e.value : i.next()
                }
                ))
            }
            ,
            C(k),
            u(k, s, "Generator"),
            k[o] = function() {
                return this
            }
            ,
            k.toString = function() {
                return "[object Generator]"
            }
            ,
            e.keys = function(e) {
                var t = [];
                for (var n in e)
                    t.push(n);
                return t.reverse(),
                function n() {
                    for (; t.length; ) {
                        var r = t.pop();
                        if (r in e)
                            return n.value = r,
                            n.done = !1,
                            n
                    }
                    return n.done = !0,
                    n
                }
            }
            ,
            e.values = N,
            A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = t,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = t,
                    this.tryEntries.forEach(T),
                    !e)
                        for (var n in this)
                            "t" === n.charAt(0) && r.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = t)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type)
                        throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done)
                        throw e;
                    var n = this;
                    function a(r, a) {
                        return s.type = "throw",
                        s.arg = e,
                        n.next = r,
                        a && (n.method = "next",
                        n.arg = t),
                        !!a
                    }
                    for (var o = this.tryEntries.length - 1; o >= 0; --o) {
                        var i = this.tryEntries[o]
                          , s = i.completion;
                        if ("root" === i.tryLoc)
                            return a("end");
                        if (i.tryLoc <= this.prev) {
                            var u = r.call(i, "catchLoc")
                              , c = r.call(i, "finallyLoc");
                            if (u && c) {
                                if (this.prev < i.catchLoc)
                                    return a(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc)
                                    return a(i.finallyLoc)
                            } else if (u) {
                                if (this.prev < i.catchLoc)
                                    return a(i.catchLoc, !0)
                            } else {
                                if (!c)
                                    throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc)
                                    return a(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var a = this.tryEntries[n];
                        if (a.tryLoc <= this.prev && r.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
                            var o = a;
                            break
                        }
                    }
                    o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
                    var i = o ? o.completion : {};
                    return i.type = e,
                    i.arg = t,
                    o ? (this.method = "next",
                    this.next = o.finallyLoc,
                    m) : this.complete(i)
                },
                complete: function(e, t) {
                    if ("throw" === e.type)
                        throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === e.type && t && (this.next = t),
                    m
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e)
                            return this.complete(n.completion, n.afterLoc),
                            T(n),
                            m
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var a = r.arg;
                                T(n)
                            }
                            return a
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, n, r) {
                    return this.delegate = {
                        iterator: N(e),
                        resultName: n,
                        nextLoc: r
                    },
                    "next" === this.method && (this.arg = t),
                    m
                }
            },
            e
        }(e.exports);
        try {
            regeneratorRuntime = t
        } catch (e) {
            Function("r", "regeneratorRuntime = r")(t)
        }
    }
    ));
    /*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
    var Dv = Object.getOwnPropertySymbols
      , Bv = Object.prototype.hasOwnProperty
      , Fv = Object.prototype.propertyIsEnumerable;
    function Mv(e) {
        if (null == e)
            throw new TypeError("Object.assign cannot be called with null or undefined");
        return Object(e)
    }
    var Pv = function() {
        try {
            if (!Object.assign)
                return !1;
            var e = new String("abc");
            if (e[5] = "de",
            "5" === Object.getOwnPropertyNames(e)[0])
                return !1;
            for (var t = {}, n = 0; n < 10; n++)
                t["_" + String.fromCharCode(n)] = n;
            if ("0123456789" !== Object.getOwnPropertyNames(t).map((function(e) {
                return t[e]
            }
            )).join(""))
                return !1;
            var r = {};
            return "abcdefghijklmnopqrst".split("").forEach((function(e) {
                r[e] = e
            }
            )),
            "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, r)).join("")
        } catch (e) {
            return !1
        }
    }() ? Object.assign : function(e, t) {
        for (var n, r, a = Mv(e), o = 1; o < arguments.length; o++) {
            for (var i in n = Object(arguments[o]))
                Bv.call(n, i) && (a[i] = n[i]);
            if (Dv) {
                r = Dv(n);
                for (var s = 0; s < r.length; s++)
                    Fv.call(n, r[s]) && (a[r[s]] = n[r[s]])
            }
        }
        return a
    }
      , Lv = "function" == typeof Symbol && Symbol.for
      , Uv = Lv ? Symbol.for("react.element") : 60103
      , Vv = Lv ? Symbol.for("react.portal") : 60106
      , zv = Lv ? Symbol.for("react.fragment") : 60107
      , Wv = Lv ? Symbol.for("react.strict_mode") : 60108
      , jv = Lv ? Symbol.for("react.profiler") : 60114
      , Hv = Lv ? Symbol.for("react.provider") : 60109
      , Gv = Lv ? Symbol.for("react.context") : 60110
      , Kv = Lv ? Symbol.for("react.forward_ref") : 60112
      , qv = Lv ? Symbol.for("react.suspense") : 60113
      , Xv = Lv ? Symbol.for("react.memo") : 60115
      , Qv = Lv ? Symbol.for("react.lazy") : 60116
      , Yv = "function" == typeof Symbol && Symbol.iterator;
    function $v(e) {
        for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++)
            t += "&args[]=" + encodeURIComponent(arguments[n]);
        return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    }
    var Zv = {
        isMounted: function() {
            return !1
        },
        enqueueForceUpdate: function() {},
        enqueueReplaceState: function() {},
        enqueueSetState: function() {}
    }
      , Jv = {};
    function eg(e, t, n) {
        this.props = e,
        this.context = t,
        this.refs = Jv,
        this.updater = n || Zv
    }
    function tg() {}
    function ng(e, t, n) {
        this.props = e,
        this.context = t,
        this.refs = Jv,
        this.updater = n || Zv
    }
    eg.prototype.isReactComponent = {},
    eg.prototype.setState = function(e, t) {
        if ("object" != typeof e && "function" != typeof e && null != e)
            throw Error($v(85));
        this.updater.enqueueSetState(this, e, t, "setState")
    }
    ,
    eg.prototype.forceUpdate = function(e) {
        this.updater.enqueueForceUpdate(this, e, "forceUpdate")
    }
    ,
    tg.prototype = eg.prototype;
    var rg = ng.prototype = new tg;
    rg.constructor = ng,
    Pv(rg, eg.prototype),
    rg.isPureReactComponent = !0;
    var ag = {
        current: null
    }
      , og = Object.prototype.hasOwnProperty
      , ig = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
    };
    function sg(e, t, n) {
        var r, a = {}, o = null, i = null;
        if (null != t)
            for (r in void 0 !== t.ref && (i = t.ref),
            void 0 !== t.key && (o = "" + t.key),
            t)
                og.call(t, r) && !ig.hasOwnProperty(r) && (a[r] = t[r]);
        var s = arguments.length - 2;
        if (1 === s)
            a.children = n;
        else if (1 < s) {
            for (var u = Array(s), c = 0; c < s; c++)
                u[c] = arguments[c + 2];
            a.children = u
        }
        if (e && e.defaultProps)
            for (r in s = e.defaultProps)
                void 0 === a[r] && (a[r] = s[r]);
        return {
            $$typeof: Uv,
            type: e,
            key: o,
            ref: i,
            props: a,
            _owner: ag.current
        }
    }
    function ug(e) {
        return "object" == typeof e && null !== e && e.$$typeof === Uv
    }
    var cg = /\/+/g
      , lg = [];
    function fg(e, t, n, r) {
        if (lg.length) {
            var a = lg.pop();
            return a.result = e,
            a.keyPrefix = t,
            a.func = n,
            a.context = r,
            a.count = 0,
            a
        }
        return {
            result: e,
            keyPrefix: t,
            func: n,
            context: r,
            count: 0
        }
    }
    function pg(e) {
        e.result = null,
        e.keyPrefix = null,
        e.func = null,
        e.context = null,
        e.count = 0,
        10 > lg.length && lg.push(e)
    }
    function dg(e, t, n, r) {
        var a = typeof e;
        "undefined" !== a && "boolean" !== a || (e = null);
        var o = !1;
        if (null === e)
            o = !0;
        else
            switch (a) {
            case "string":
            case "number":
                o = !0;
                break;
            case "object":
                switch (e.$$typeof) {
                case Uv:
                case Vv:
                    o = !0
                }
            }
        if (o)
            return n(r, e, "" === t ? "." + mg(e, 0) : t),
            1;
        if (o = 0,
        t = "" === t ? "." : t + ":",
        Array.isArray(e))
            for (var i = 0; i < e.length; i++) {
                var s = t + mg(a = e[i], i);
                o += dg(a, s, n, r)
            }
        else if (null === e || "object" != typeof e ? s = null : s = "function" == typeof (s = Yv && e[Yv] || e["@@iterator"]) ? s : null,
        "function" == typeof s)
            for (e = s.call(e),
            i = 0; !(a = e.next()).done; )
                o += dg(a = a.value, s = t + mg(a, i++), n, r);
        else if ("object" === a)
            throw n = "" + e,
            Error($v(31, "[object Object]" === n ? "object with keys {" + Object.keys(e).join(", ") + "}" : n, ""));
        return o
    }
    function hg(e, t, n) {
        return null == e ? 0 : dg(e, "", t, n)
    }
    function mg(e, t) {
        return "object" == typeof e && null !== e && null != e.key ? function(e) {
            var t = {
                "=": "=0",
                ":": "=2"
            };
            return "$" + ("" + e).replace(/[=:]/g, (function(e) {
                return t[e]
            }
            ))
        }(e.key) : t.toString(36)
    }
    function vg(e, t) {
        e.func.call(e.context, t, e.count++)
    }
    function gg(e, t, n) {
        var r = e.result
          , a = e.keyPrefix;
        e = e.func.call(e.context, t, e.count++),
        Array.isArray(e) ? yg(e, r, n, (function(e) {
            return e
        }
        )) : null != e && (ug(e) && (e = function(e, t) {
            return {
                $$typeof: Uv,
                type: e.type,
                key: t,
                ref: e.ref,
                props: e.props,
                _owner: e._owner
            }
        }(e, a + (!e.key || t && t.key === e.key ? "" : ("" + e.key).replace(cg, "$&/") + "/") + n)),
        r.push(e))
    }
    function yg(e, t, n, r, a) {
        var o = "";
        null != n && (o = ("" + n).replace(cg, "$&/") + "/"),
        hg(e, gg, t = fg(t, o, r, a)),
        pg(t)
    }
    var bg = {
        current: null
    };
    function xg() {
        var e = bg.current;
        if (null === e)
            throw Error($v(321));
        return e
    }
    var wg = {
        Children: {
            map: function(e, t, n) {
                if (null == e)
                    return e;
                var r = [];
                return yg(e, r, null, t, n),
                r
            },
            forEach: function(e, t, n) {
                if (null == e)
                    return e;
                hg(e, vg, t = fg(null, null, t, n)),
                pg(t)
            },
            count: function(e) {
                return hg(e, (function() {
                    return null
                }
                ), null)
            },
            toArray: function(e) {
                var t = [];
                return yg(e, t, null, (function(e) {
                    return e
                }
                )),
                t
            },
            only: function(e) {
                if (!ug(e))
                    throw Error($v(143));
                return e
            }
        },
        Component: eg,
        Fragment: zv,
        Profiler: jv,
        PureComponent: ng,
        StrictMode: Wv,
        Suspense: qv,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
            ReactCurrentDispatcher: bg,
            ReactCurrentBatchConfig: {
                suspense: null
            },
            ReactCurrentOwner: ag,
            IsSomeRendererActing: {
                current: !1
            },
            assign: Pv
        },
        cloneElement: function(e, t, n) {
            if (null == e)
                throw Error($v(267, e));
            var r = Pv({}, e.props)
              , a = e.key
              , o = e.ref
              , i = e._owner;
            if (null != t) {
                if (void 0 !== t.ref && (o = t.ref,
                i = ag.current),
                void 0 !== t.key && (a = "" + t.key),
                e.type && e.type.defaultProps)
                    var s = e.type.defaultProps;
                for (u in t)
                    og.call(t, u) && !ig.hasOwnProperty(u) && (r[u] = void 0 === t[u] && void 0 !== s ? s[u] : t[u])
            }
            var u = arguments.length - 2;
            if (1 === u)
                r.children = n;
            else if (1 < u) {
                s = Array(u);
                for (var c = 0; c < u; c++)
                    s[c] = arguments[c + 2];
                r.children = s
            }
            return {
                $$typeof: Uv,
                type: e.type,
                key: a,
                ref: o,
                props: r,
                _owner: i
            }
        },
        createContext: function(e, t) {
            return void 0 === t && (t = null),
            (e = {
                $$typeof: Gv,
                _calculateChangedBits: t,
                _currentValue: e,
                _currentValue2: e,
                _threadCount: 0,
                Provider: null,
                Consumer: null
            }).Provider = {
                $$typeof: Hv,
                _context: e
            },
            e.Consumer = e
        },
        createElement: sg,
        createFactory: function(e) {
            var t = sg.bind(null, e);
            return t.type = e,
            t
        },
        createRef: function() {
            return {
                current: null
            }
        },
        forwardRef: function(e) {
            return {
                $$typeof: Kv,
                render: e
            }
        },
        isValidElement: ug,
        lazy: function(e) {
            return {
                $$typeof: Qv,
                _ctor: e,
                _status: -1,
                _result: null
            }
        },
        memo: function(e, t) {
            return {
                $$typeof: Xv,
                type: e,
                compare: void 0 === t ? null : t
            }
        },
        useCallback: function(e, t) {
            return xg().useCallback(e, t)
        },
        useContext: function(e, t) {
            return xg().useContext(e, t)
        },
        useDebugValue: function() {},
        useEffect: function(e, t) {
            return xg().useEffect(e, t)
        },
        useImperativeHandle: function(e, t, n) {
            return xg().useImperativeHandle(e, t, n)
        },
        useLayoutEffect: function(e, t) {
            return xg().useLayoutEffect(e, t)
        },
        useMemo: function(e, t) {
            return xg().useMemo(e, t)
        },
        useReducer: function(e, t, n) {
            return xg().useReducer(e, t, n)
        },
        useRef: function(e) {
            return xg().useRef(e)
        },
        useState: function(e) {
            return xg().useState(e)
        },
        version: "16.14.0"
    }
      , kg = (i((function(e, t) {}
    )),
    i((function(e) {
        e.exports = wg
    }
    )))
      , Cg = "function" == typeof Symbol && Symbol.for
      , Eg = Cg ? Symbol.for("react.element") : 60103
      , Sg = Cg ? Symbol.for("react.portal") : 60106
      , Ig = Cg ? Symbol.for("react.fragment") : 60107
      , Tg = Cg ? Symbol.for("react.strict_mode") : 60108
      , Ag = Cg ? Symbol.for("react.profiler") : 60114
      , Ng = Cg ? Symbol.for("react.provider") : 60109
      , _g = Cg ? Symbol.for("react.context") : 60110
      , Rg = Cg ? Symbol.for("react.async_mode") : 60111
      , Og = Cg ? Symbol.for("react.concurrent_mode") : 60111
      , Dg = Cg ? Symbol.for("react.forward_ref") : 60112
      , Bg = Cg ? Symbol.for("react.suspense") : 60113
      , Fg = Cg ? Symbol.for("react.suspense_list") : 60120
      , Mg = Cg ? Symbol.for("react.memo") : 60115
      , Pg = Cg ? Symbol.for("react.lazy") : 60116
      , Lg = Cg ? Symbol.for("react.block") : 60121
      , Ug = Cg ? Symbol.for("react.fundamental") : 60117
      , Vg = Cg ? Symbol.for("react.responder") : 60118
      , zg = Cg ? Symbol.for("react.scope") : 60119;
    function Wg(e) {
        if ("object" == typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
            case Eg:
                switch (e = e.type) {
                case Rg:
                case Og:
                case Ig:
                case Ag:
                case Tg:
                case Bg:
                    return e;
                default:
                    switch (e = e && e.$$typeof) {
                    case _g:
                    case Dg:
                    case Pg:
                    case Mg:
                    case Ng:
                        return e;
                    default:
                        return t
                    }
                }
            case Sg:
                return t
            }
        }
    }
    function jg(e) {
        return Wg(e) === Og
    }
    var Hg = {
        AsyncMode: Rg,
        ConcurrentMode: Og,
        ContextConsumer: _g,
        ContextProvider: Ng,
        Element: Eg,
        ForwardRef: Dg,
        Fragment: Ig,
        Lazy: Pg,
        Memo: Mg,
        Portal: Sg,
        Profiler: Ag,
        StrictMode: Tg,
        Suspense: Bg,
        isAsyncMode: function(e) {
            return jg(e) || Wg(e) === Rg
        },
        isConcurrentMode: jg,
        isContextConsumer: function(e) {
            return Wg(e) === _g
        },
        isContextProvider: function(e) {
            return Wg(e) === Ng
        },
        isElement: function(e) {
            return "object" == typeof e && null !== e && e.$$typeof === Eg
        },
        isForwardRef: function(e) {
            return Wg(e) === Dg
        },
        isFragment: function(e) {
            return Wg(e) === Ig
        },
        isLazy: function(e) {
            return Wg(e) === Pg
        },
        isMemo: function(e) {
            return Wg(e) === Mg
        },
        isPortal: function(e) {
            return Wg(e) === Sg
        },
        isProfiler: function(e) {
            return Wg(e) === Ag
        },
        isStrictMode: function(e) {
            return Wg(e) === Tg
        },
        isSuspense: function(e) {
            return Wg(e) === Bg
        },
        isValidElementType: function(e) {
            return "string" == typeof e || "function" == typeof e || e === Ig || e === Og || e === Ag || e === Tg || e === Bg || e === Fg || "object" == typeof e && null !== e && (e.$$typeof === Pg || e.$$typeof === Mg || e.$$typeof === Ng || e.$$typeof === _g || e.$$typeof === Dg || e.$$typeof === Ug || e.$$typeof === Vg || e.$$typeof === zg || e.$$typeof === Lg)
        },
        typeOf: Wg
    };
    i((function(e, t) {}
    )),
    i((function(e) {
        e.exports = Hg
    }
    )),
    Function.call.bind(Object.prototype.hasOwnProperty);
    function Gg() {}
    function Kg() {}
    Kg.resetWarningCache = Gg;
    var qg = i((function(e) {
        e.exports = function() {
            function e(e, t, n, r, a, o) {
                if ("SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED" !== o) {
                    var i = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                    throw i.name = "Invariant Violation",
                    i
                }
            }
            function t() {
                return e
            }
            e.isRequired = e;
            var n = {
                array: e,
                bool: e,
                func: e,
                number: e,
                object: e,
                string: e,
                symbol: e,
                any: e,
                arrayOf: t,
                element: e,
                elementType: e,
                instanceOf: t,
                node: e,
                objectOf: t,
                oneOf: t,
                oneOfType: t,
                shape: t,
                exact: t,
                checkPropTypes: Kg,
                resetWarningCache: Gg
            };
            return n.PropTypes = n,
            n
        }()
    }
    ))
      , Xg = {
        not_supported: {
            code: "not_supported",
            msg: {
                en: "Camera is not well-supported on this device/browser. Please try another one.",
                vi: "Camera khÃ´ng ÄÆ°á»£c há» trá»£. Vui lÃ²ng thá»­ trÃ¬nh duyá»t hoáº·c thiáº¿t bá» khÃ¡c."
            }
        },
        unable_to_load_model: {
            code: "unable_to_load_model",
            msg: {
                en: "Unable to load model on this device/browser. Please try another one.",
                vi: "KhÃ´ng thá» load model. Vui lÃ²ng thá»­ trÃ¬nh duyá»t hoáº·c thiáº¿t bá» khÃ¡c."
            }
        },
        no_permission: {
            code: "no_permission",
            msg: {
                en: "Please grant the permission to access the camera.",
                vi: "Vui lÃ²ng cáº¥p quyá»n Äá» truy cáº­p camera."
            }
        },
        no_face: {
            code: "no_face",
            msg: {
                en: "Face not found",
                vi: "KhÃ´ng tÃ¬m tháº¥y khuÃ´n máº·t"
            }
        },
        partial_face: {
            code: "partial_face",
            msg: {
                en: "Face out of the box",
                vi: "KhÃ´ng tÃ¬m tháº¥y toÃ n bá» khuÃ´n máº·t"
            }
        },
        multiple_faces: {
            code: "multiple_faces",
            msg: {
                en: "Too many faces",
                vi: "QuÃ¡ nhiá»u khuÃ´n máº·t"
            }
        },
        face_too_small: {
            code: "face_too_small",
            msg: {
                en: "Face too small",
                vi: "KhuÃ´n máº·t quÃ¡ nhá»"
            }
        }
    }
      , Qg = {
        FRONTAL: "frontal",
        LEFT: "left",
        RIGHT: "right",
        UP: "up",
        DOWN: "down"
    }
      , Yg = Object.freeze({
        __proto__: null,
        Errors: Xg,
        FaceDirection: Qg,
        Mode: {
            ACTIVE: "active",
            PASSIVE: "passive"
        }
    })
      , $g = kg.createContext();
    function Zg(e) {
        var t = e.value
          , n = e.children;
        return kg.createElement($g.Provider, {
            value: t
        }, n)
    }
    function Jg() {
        var e = kg.useContext($g);
        if (void 0 === e)
            throw new Error("useSDKSettings must be used within a SDKSettingsProvider");
        return e
    }
    Zg.propTypes = {
        value: qg.shape({
            lang: qg.string,
            assetRoot: qg.string,
            apiClient: qg.shape({})
        }).isRequired,
        children: qg.node.isRequired
    };
    var ey = Object.freeze({
        __proto__: null,
        SDKSettingsProvider: Zg,
        useSDKSettings: Jg
    });
    function ty(e, t) {
        return e && !e.endsWith("/") ? [e, "/", t].join("") : [e, t].join("")
    }
    function ny() {
        var e = Jg();
        return null == e ? void 0 : e.assetRoot
    }
    var ry = Object.freeze({
        __proto__: null,
        getAsset: ty,
        useAssetRoot: ny,
        useAsset: function(e) {
            return ty(ny(), e)
        }
    })
      , ay = Object.freeze({
        __proto__: null,
        sleep: function(e) {
            return new Promise((function(t) {
                return setTimeout(t, e)
            }
            ))
        }
    });
    function oy(e, t, n, r, a, o, i) {
        try {
            var s = e[o](i)
              , u = s.value
        } catch (e) {
            return void n(e)
        }
        s.done ? t(u) : Promise.resolve(u).then(r, a)
    }
    function iy(e) {
        return function() {
            var t = this
              , n = arguments;
            return new Promise((function(r, a) {
                var o = e.apply(t, n);
                function i(e) {
                    oy(o, r, a, i, s, "next", e)
                }
                function s(e) {
                    oy(o, r, a, i, s, "throw", e)
                }
                i(void 0)
            }
            ))
        }
    }
    function sy(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n,
        e
    }
    function uy(e, t) {
        return function(e) {
            if (Array.isArray(e))
                return e
        }(e) || function(e, t) {
            if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) {
                var n = []
                  , r = !0
                  , a = !1
                  , o = void 0;
                try {
                    for (var i, s = e[Symbol.iterator](); !(r = (i = s.next()).done) && (n.push(i.value),
                    !t || n.length !== t); r = !0)
                        ;
                } catch (e) {
                    a = !0,
                    o = e
                } finally {
                    try {
                        r || null == s.return || s.return()
                    } finally {
                        if (a)
                            throw o
                    }
                }
                return n
            }
        }(e, t) || ly(e, t) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }
    function cy(e) {
        return function(e) {
            if (Array.isArray(e))
                return fy(e)
        }(e) || function(e) {
            if ("undefined" != typeof Symbol && Symbol.iterator in Object(e))
                return Array.from(e)
        }(e) || ly(e) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }
    function ly(e, t) {
        if (e) {
            if ("string" == typeof e)
                return fy(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name),
            "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? fy(e, t) : void 0
        }
    }
    function fy(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++)
            r[n] = e[n];
        return r
    }
    var py = [[0, 1, 0], [1, -4, 1], [0, 1, 0]];
    function dy(e, t, n, r) {
        return e[4 * (n * t + r)]
    }
    function hy() {
        return (hy = iy(regeneratorRuntime.mark((function e(t) {
            var n, r, a, o, i, s, u, c, l, f, p, d, h, m, v, g, y, b, x;
            return regeneratorRuntime.wrap((function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        for (n = t.width,
                        r = t.height,
                        a = t.getContext("2d"),
                        o = Math.floor(n / 2.8),
                        i = Math.floor(r / 2.8),
                        s = n - o,
                        u = r - i,
                        c = a.getImageData(Math.floor(o / 2), Math.floor(i / 2), s, u),
                        l = c.data,
                        f = 0; f < l.length; f += 4)
                            p = (l[f] + l[f + 1] + l[f + 2]) / 3,
                            l[f] = p;
                        for (d = 0,
                        h = 0,
                        m = u - 1,
                        v = s - 1,
                        g = 1; g < m; g++)
                            for (y = 1; y < v; y++)
                                b = py[0][0] * dy(l, s, y - 1, g - 1) + py[0][1] * dy(l, s, y, g - 1) + py[0][2] * dy(l, s, y + 1, g - 1) + py[1][0] * dy(l, s, y - 1, g) + py[1][1] * dy(l, s, y, g) + py[1][2] * dy(l, s, y + 1, g) + py[2][0] * dy(l, s, y - 1, g + 1) + py[2][1] * dy(l, s, y, g + 1) + py[2][2] * dy(l, s, y + 1, g + 1),
                                (b = Math.abs(b)) > 25 && d++,
                                b > 15 && b < 25 && h++;
                        return x = 0,
                        d + h !== 0 && (x = d / (d + h)),
                        e.abrupt("return", x);
                    case 18:
                    case "end":
                        return e.stop()
                    }
            }
            ), e)
        }
        )))).apply(this, arguments)
    }
    var my = Object.freeze({
        __proto__: null,
        calculateBlurScore: function(e) {
            return hy.apply(this, arguments)
        }
    });
    function vy(e) {
        var t, n, r, a, o, i, s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, u = s.x, c = s.y, l = s.width, f = s.height, p = e.videoWidth, d = e.videoHeight, h = window.innerWidth, m = window.innerHeight, v = h / m, g = p / d;
        v < g ? (o = u * (r = p / h),
        i = (c - (t = (m - h / g) / 2)) * (a = d / (m - 2 * t))) : (o = (u - (n = (h - m * g) / 2)) * (r = p / (h - 2 * n)),
        i = c * (a = d / m));
        var y = Math.floor(l * r)
          , b = Math.floor(f * a);
        return {
            lostX: n,
            lostY: t,
            cropWidth: y,
            cropHeight: b,
            cropX: o,
            cropY: i
        }
    }
    var gy = Object.freeze({
        __proto__: null,
        analyzeVideoAndWindowSizes: vy,
        takePicture: function(e) {
            var t, n = e.canvas, r = e.video, a = e.cropArea;
            if (n)
                t = n;
            else {
                var o = vy(r, a)
                  , i = o.cropWidth
                  , s = o.cropHeight
                  , u = o.cropX
                  , c = o.cropY
                  , l = (t = document.createElement("canvas")).getContext("2d");
                t.width = i,
                t.height = s,
                l.drawImage(r, u, c, i, s, 0, 0, i, s)
            }
            return new Promise((function(e) {
                t.toBlob(e, "image/jpeg")
            }
            ))
        }
    })
      , yy = function(e) {
        for (var t = e.length - 1; t > 0; t--) {
            var n = Math.floor(Math.random() * (t + 1))
              , r = [e[n], e[t]];
            e[t] = r[0],
            e[n] = r[1]
        }
        return e
    }
      , by = Object.freeze({
        __proto__: null,
        shuffleArray: yy
    })
      , xy = {
        NONE: 0,
        PARTIAL: 1,
        FULL: 2
    };
    function wy(e, t) {
        var n = uy(e, 2)
          , r = n[0]
          , a = n[1]
          , o = uy(t, 2)
          , i = o[0]
          , s = o[1]
          , u = [r[0], a[0]]
          , c = [r[1], a[1]];
        return u[0] <= i[0] && s[0] <= u[1] && c[0] <= i[1] && s[1] <= c[1] ? xy.FULL : u[0] <= i[0] || s[0] <= u[1] || c[0] <= i[1] || s[1] <= c[1] ? xy.PARTIAL : xy.NONE
    }
    function ky(e, t) {
        var n = uy(e, 2)
          , r = n[0]
          , a = n[1]
          , o = uy(t, 2)
          , i = o[0]
          , s = o[1];
        return (a[0] - r[0]) * (a[1] - r[1]) / ((s[0] - i[0]) * (s[1] - i[1]))
    }
    var Cy = Object.freeze({
        __proto__: null,
        ContainMode: xy,
        rectContains: wy,
        rectAreaRatio: ky
    })
      , Ey = Object.freeze({
        __proto__: null,
        calculateFaceDirection: function(e) {
            var t = uy(e, 4)
              , n = t[0]
              , r = t[1]
              , a = t[2]
              , o = t[3]
              , i = Math.abs(o[1] - a[1]) / Math.abs(o[1] - r[1])
              , s = r[0] - a[0]
              , u = n[0] - a[0]
              , c = Math.min(Math.abs(s), Math.abs(u)) / Math.max(Math.abs(s), Math.abs(u));
            return i >= .45 && i <= .8 && c > .5 && s * u < 0 ? Qg.FRONTAL : Math.abs(s) > Math.abs(u) && c <= .15 ? Qg.RIGHT : Math.abs(u) > Math.abs(s) && c <= .15 ? Qg.LEFT : i > .95 ? Qg.UP : i < .35 ? Qg.DOWN : null
        },
        validatePredictions: function(e, t, n) {
            var r, a, o, i = [[0, 0], [t, n]], s = e.reduce((function(e, t) {
                var n = t.topLeft
                  , r = t.bottomRight;
                return e[wy(i, [n, r])].push(t),
                e
            }
            ), (sy(r = {}, xy.PARTIAL, []),
            sy(r, xy.FULL, []),
            sy(r, xy.NONE, []),
            r)), u = s[xy.FULL].length, c = s[xy.PARTIAL].length;
            if (0 === u)
                a = c > 0 ? Xg.partial_face : Xg.no_face;
            else if (u > 1)
                a = Xg.multiple_faces;
            else {
                var l = o = s[xy.FULL][0];
                ky([l.topLeft, l.bottomRight], i) < .15 && (a = Xg.face_too_small)
            }
            return {
                error: a,
                fullFace: o
            }
        },
        initFaceVerificationData: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = e.assetRoot
              , n = void 0 === t ? "/" : t;
            return {
                curStepIndex: 0,
                steps: [].concat(cy(yy([{
                    name: Qg.LEFT,
                    instructions: {
                        en: "Turn your face to the left",
                        vi: "Vui lÃ²ng quay sang trÃ¡i tháº­t cháº­m"
                    },
                    image: {
                        blob: null,
                        objUrl: null,
                        blurScore: null
                    },
                    frontalFaceImage: {
                        blob: null,
                        imageId: null,
                        blurScore: null
                    },
                    icon: ty(n, "ic_face_left.svg"),
                    directionIcon: ty(n, "arrow_left.svg")
                }, {
                    name: Qg.RIGHT,
                    instructions: {
                        en: "Turn your face to the right",
                        vi: "Vui lÃ²ng quay sang pháº£i tháº­t cháº­m"
                    },
                    image: {
                        blob: null,
                        objUrl: null,
                        blurScore: null
                    },
                    frontalFaceImage: {
                        blob: null,
                        imageId: null,
                        blurScore: null
                    },
                    icon: ty(n, "ic_face_right.svg"),
                    directionIcon: ty(n, "arrow_right.svg")
                }, {
                    name: Qg.UP,
                    instructions: {
                        en: "Turn your face up",
                        vi: "Vui lÃ²ng ngÆ°á»c máº·t lÃªn"
                    },
                    image: {
                        blob: null,
                        objUrl: null,
                        blurScore: null
                    },
                    frontalFaceImage: {
                        blob: null,
                        imageId: null,
                        blurScore: null
                    },
                    icon: ty(n, "ic_face_up.svg"),
                    directionIcon: ty(n, "arrow_up.svg")
                }])), [{
                    name: Qg.FRONTAL,
                    instructions: {
                        en: "Look straight into the camera",
                        vi: "Vui lÃ²ng nhÃ¬n tháº³ng vÃ o camera"
                    },
                    image: {
                        blob: null,
                        objUrl: null,
                        blurScore: null
                    },
                    frontalFaceImage: {
                        blob: null,
                        imageId: null,
                        blurScore: null
                    },
                    icon: ty(n, "ic_face_frontal.svg"),
                    directionIcon: ty(n, "frontal.svg")
                }])
            }
        }
    });
    function Sy(e) {
        return (Sy = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        }
        : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
        )(e)
    }
    function Iy(e, t, n, r, a, o, i) {
        try {
            var s = e[o](i)
              , u = s.value
        } catch (e) {
            return void n(e)
        }
        s.done ? t(u) : Promise.resolve(u).then(r, a)
    }
    function Ty(e) {
        return function() {
            var t = this
              , n = arguments;
            return new Promise((function(r, a) {
                var o = e.apply(t, n);
                function i(e) {
                    Iy(o, r, a, i, s, "next", e)
                }
                function s(e) {
                    Iy(o, r, a, i, s, "throw", e)
                }
                i(void 0)
            }
            ))
        }
    }
    function Ay(e, t) {
        if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function")
    }
    function Ny(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value"in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    function _y(e, t, n) {
        return t && Ny(e.prototype, t),
        n && Ny(e, n),
        e
    }
    function Ry(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n,
        e
    }
    function Oy(e, t) {
        if ("function" != typeof t && null !== t)
            throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }),
        t && By(e, t)
    }
    function Dy(e) {
        return (Dy = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e)
        }
        )(e)
    }
    function By(e, t) {
        return (By = Object.setPrototypeOf || function(e, t) {
            return e.__proto__ = t,
            e
        }
        )(e, t)
    }
    function Fy(e) {
        if (void 0 === e)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e
    }
    function My(e, t) {
        return !t || "object" != typeof t && "function" != typeof t ? Fy(e) : t
    }
    function Py(e) {
        var t = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
                return !1;
            if (Reflect.construct.sham)
                return !1;
            if ("function" == typeof Proxy)
                return !0;
            try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}
                ))),
                !0
            } catch (e) {
                return !1
            }
        }();
        return function() {
            var n, r = Dy(e);
            if (t) {
                var a = Dy(this).constructor;
                n = Reflect.construct(r, arguments, a)
            } else
                n = r.apply(this, arguments);
            return My(this, n)
        }
    }
    function Ly(e, t, n) {
        return (Ly = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e, t, n) {
            var r = function(e, t) {
                for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = Dy(e)); )
                    ;
                return e
            }(e, t);
            if (r) {
                var a = Object.getOwnPropertyDescriptor(r, t);
                return a.get ? a.get.call(n) : a.value
            }
        }
        )(e, t, n || e)
    }
    function Uy(e, t) {
        return function(e) {
            if (Array.isArray(e))
                return e
        }(e) || function(e, t) {
            if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(e)))
                return;
            var n = []
              , r = !0
              , a = !1
              , o = void 0;
            try {
                for (var i, s = e[Symbol.iterator](); !(r = (i = s.next()).done) && (n.push(i.value),
                !t || n.length !== t); r = !0)
                    ;
            } catch (e) {
                a = !0,
                o = e
            } finally {
                try {
                    r || null == s.return || s.return()
                } finally {
                    if (a)
                        throw o
                }
            }
            return n
        }(e, t) || zy(e, t) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }
    function Vy(e) {
        return function(e) {
            if (Array.isArray(e))
                return Wy(e)
        }(e) || function(e) {
            if ("undefined" != typeof Symbol && Symbol.iterator in Object(e))
                return Array.from(e)
        }(e) || zy(e) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }
    function zy(e, t) {
        if (e) {
            if ("string" == typeof e)
                return Wy(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name),
            "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Wy(e, t) : void 0
        }
    }
    function Wy(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++)
            r[n] = e[n];
        return r
    }
    function jy(e, t) {
        var n;
        if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
            if (Array.isArray(e) || (n = zy(e)) || t && e && "number" == typeof e.length) {
                n && (e = n);
                var r = 0
                  , a = function() {};
                return {
                    s: a,
                    n: function() {
                        return r >= e.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: e[r++]
                        }
                    },
                    e: function(e) {
                        throw e
                    },
                    f: a
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var o, i = !0, s = !1;
        return {
            s: function() {
                n = e[Symbol.iterator]()
            },
            n: function() {
                var e = n.next();
                return i = e.done,
                e
            },
            e: function(e) {
                s = !0,
                o = e
            },
            f: function() {
                try {
                    i || null == n.return || n.return()
                } finally {
                    if (s)
                        throw o
                }
            }
        }
    }
    /** @license React v17.0.1
	 * react-is.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
    var Hy = 60103
      , Gy = 60106
      , Ky = 60107
      , qy = 60108
      , Xy = 60114
      , Qy = 60109
      , Yy = 60110
      , $y = 60112
      , Zy = 60113
      , Jy = 60120
      , eb = 60115
      , tb = 60116
      , nb = 60121
      , rb = 60122
      , ab = 60117
      , ob = 60129
      , ib = 60131;
    if ("function" == typeof Symbol && Symbol.for) {
        var sb = Symbol.for;
        Hy = sb("react.element"),
        Gy = sb("react.portal"),
        Ky = sb("react.fragment"),
        qy = sb("react.strict_mode"),
        Xy = sb("react.profiler"),
        Qy = sb("react.provider"),
        Yy = sb("react.context"),
        $y = sb("react.forward_ref"),
        Zy = sb("react.suspense"),
        Jy = sb("react.suspense_list"),
        eb = sb("react.memo"),
        tb = sb("react.lazy"),
        nb = sb("react.block"),
        rb = sb("react.server.block"),
        ab = sb("react.fundamental"),
        ob = sb("react.debug_trace_mode"),
        ib = sb("react.legacy_hidden")
    }
    function ub(e) {
        if ("object" == typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
            case Hy:
                switch (e = e.type) {
                case Ky:
                case Xy:
                case qy:
                case Zy:
                case Jy:
                    return e;
                default:
                    switch (e = e && e.$$typeof) {
                    case Yy:
                    case $y:
                    case tb:
                    case eb:
                    case Qy:
                        return e;
                    default:
                        return t
                    }
                }
            case Gy:
                return t
            }
        }
    }
    var cb = {
        ContextConsumer: Yy,
        ContextProvider: Qy,
        Element: Hy,
        ForwardRef: $y,
        Fragment: Ky,
        Lazy: tb,
        Memo: eb,
        Portal: Gy,
        Profiler: Xy,
        StrictMode: qy,
        Suspense: Zy,
        isAsyncMode: function() {
            return !1
        },
        isConcurrentMode: function() {
            return !1
        },
        isContextConsumer: function(e) {
            return ub(e) === Yy
        },
        isContextProvider: function(e) {
            return ub(e) === Qy
        },
        isElement: function(e) {
            return "object" == typeof e && null !== e && e.$$typeof === Hy
        },
        isForwardRef: function(e) {
            return ub(e) === $y
        },
        isFragment: function(e) {
            return ub(e) === Ky
        },
        isLazy: function(e) {
            return ub(e) === tb
        },
        isMemo: function(e) {
            return ub(e) === eb
        },
        isPortal: function(e) {
            return ub(e) === Gy
        },
        isProfiler: function(e) {
            return ub(e) === Xy
        },
        isStrictMode: function(e) {
            return ub(e) === qy
        },
        isSuspense: function(e) {
            return ub(e) === Zy
        },
        isValidElementType: function(e) {
            return "string" == typeof e || "function" == typeof e || e === Ky || e === Xy || e === ob || e === qy || e === Zy || e === Jy || e === ib || "object" == typeof e && null !== e && (e.$$typeof === tb || e.$$typeof === eb || e.$$typeof === Qy || e.$$typeof === Yy || e.$$typeof === $y || e.$$typeof === ab || e.$$typeof === nb || e[0] === rb)
        },
        typeOf: ub
    }
      , lb = (i((function(e, t) {}
    )),
    i((function(e) {
        e.exports = cb
    }
    )));
    function fb(e) {
        function t(e, r, u, c, p) {
            for (var d, h, m, v, x, k = 0, C = 0, E = 0, S = 0, I = 0, O = 0, B = m = d = 0, M = 0, P = 0, L = 0, U = 0, V = u.length, z = V - 1, W = "", j = "", H = "", G = ""; M < V; ) {
                if (h = u.charCodeAt(M),
                M === z && 0 !== C + S + E + k && (0 !== C && (h = 47 === C ? 10 : 47),
                S = E = k = 0,
                V++,
                z++),
                0 === C + S + E + k) {
                    if (M === z && (0 < P && (W = W.replace(f, "")),
                    0 < W.trim().length)) {
                        switch (h) {
                        case 32:
                        case 9:
                        case 59:
                        case 13:
                        case 10:
                            break;
                        default:
                            W += u.charAt(M)
                        }
                        h = 59
                    }
                    switch (h) {
                    case 123:
                        for (d = (W = W.trim()).charCodeAt(0),
                        m = 1,
                        U = ++M; M < V; ) {
                            switch (h = u.charCodeAt(M)) {
                            case 123:
                                m++;
                                break;
                            case 125:
                                m--;
                                break;
                            case 47:
                                switch (h = u.charCodeAt(M + 1)) {
                                case 42:
                                case 47:
                                    e: {
                                        for (B = M + 1; B < z; ++B)
                                            switch (u.charCodeAt(B)) {
                                            case 47:
                                                if (42 === h && 42 === u.charCodeAt(B - 1) && M + 2 !== B) {
                                                    M = B + 1;
                                                    break e
                                                }
                                                break;
                                            case 10:
                                                if (47 === h) {
                                                    M = B + 1;
                                                    break e
                                                }
                                            }
                                        M = B
                                    }
                                }
                                break;
                            case 91:
                                h++;
                            case 40:
                                h++;
                            case 34:
                            case 39:
                                for (; M++ < z && u.charCodeAt(M) !== h; )
                                    ;
                            }
                            if (0 === m)
                                break;
                            M++
                        }
                        switch (m = u.substring(U, M),
                        0 === d && (d = (W = W.replace(l, "").trim()).charCodeAt(0)),
                        d) {
                        case 64:
                            switch (0 < P && (W = W.replace(f, "")),
                            h = W.charCodeAt(1)) {
                            case 100:
                            case 109:
                            case 115:
                            case 45:
                                P = r;
                                break;
                            default:
                                P = R
                            }
                            if (U = (m = t(r, P, m, h, p + 1)).length,
                            0 < D && (x = s(3, m, P = n(R, W, L), r, A, T, U, h, p, c),
                            W = P.join(""),
                            void 0 !== x && 0 === (U = (m = x.trim()).length) && (h = 0,
                            m = "")),
                            0 < U)
                                switch (h) {
                                case 115:
                                    W = W.replace(w, i);
                                case 100:
                                case 109:
                                case 45:
                                    m = W + "{" + m + "}";
                                    break;
                                case 107:
                                    m = (W = W.replace(g, "$1 $2")) + "{" + m + "}",
                                    m = 1 === _ || 2 === _ && o("@" + m, 3) ? "@-webkit-" + m + "@" + m : "@" + m;
                                    break;
                                default:
                                    m = W + m,
                                    112 === c && (j += m,
                                    m = "")
                                }
                            else
                                m = "";
                            break;
                        default:
                            m = t(r, n(r, W, L), m, c, p + 1)
                        }
                        H += m,
                        m = L = P = B = d = 0,
                        W = "",
                        h = u.charCodeAt(++M);
                        break;
                    case 125:
                    case 59:
                        if (1 < (U = (W = (0 < P ? W.replace(f, "") : W).trim()).length))
                            switch (0 === B && (d = W.charCodeAt(0),
                            45 === d || 96 < d && 123 > d) && (U = (W = W.replace(" ", ":")).length),
                            0 < D && void 0 !== (x = s(1, W, r, e, A, T, j.length, c, p, c)) && 0 === (U = (W = x.trim()).length) && (W = "\0\0"),
                            d = W.charCodeAt(0),
                            h = W.charCodeAt(1),
                            d) {
                            case 0:
                                break;
                            case 64:
                                if (105 === h || 99 === h) {
                                    G += W + u.charAt(M);
                                    break
                                }
                            default:
                                58 !== W.charCodeAt(U - 1) && (j += a(W, d, h, W.charCodeAt(2)))
                            }
                        L = P = B = d = 0,
                        W = "",
                        h = u.charCodeAt(++M)
                    }
                }
                switch (h) {
                case 13:
                case 10:
                    47 === C ? C = 0 : 0 === 1 + d && 107 !== c && 0 < W.length && (P = 1,
                    W += "\0"),
                    0 < D * F && s(0, W, r, e, A, T, j.length, c, p, c),
                    T = 1,
                    A++;
                    break;
                case 59:
                case 125:
                    if (0 === C + S + E + k) {
                        T++;
                        break
                    }
                default:
                    switch (T++,
                    v = u.charAt(M),
                    h) {
                    case 9:
                    case 32:
                        if (0 === S + k + C)
                            switch (I) {
                            case 44:
                            case 58:
                            case 9:
                            case 32:
                                v = "";
                                break;
                            default:
                                32 !== h && (v = " ")
                            }
                        break;
                    case 0:
                        v = "\\0";
                        break;
                    case 12:
                        v = "\\f";
                        break;
                    case 11:
                        v = "\\v";
                        break;
                    case 38:
                        0 === S + C + k && (P = L = 1,
                        v = "\f" + v);
                        break;
                    case 108:
                        if (0 === S + C + k + N && 0 < B)
                            switch (M - B) {
                            case 2:
                                112 === I && 58 === u.charCodeAt(M - 3) && (N = I);
                            case 8:
                                111 === O && (N = O)
                            }
                        break;
                    case 58:
                        0 === S + C + k && (B = M);
                        break;
                    case 44:
                        0 === C + E + S + k && (P = 1,
                        v += "\r");
                        break;
                    case 34:
                    case 39:
                        0 === C && (S = S === h ? 0 : 0 === S ? h : S);
                        break;
                    case 91:
                        0 === S + C + E && k++;
                        break;
                    case 93:
                        0 === S + C + E && k--;
                        break;
                    case 41:
                        0 === S + C + k && E--;
                        break;
                    case 40:
                        if (0 === S + C + k) {
                            if (0 === d)
                                switch (2 * I + 3 * O) {
                                case 533:
                                    break;
                                default:
                                    d = 1
                                }
                            E++
                        }
                        break;
                    case 64:
                        0 === C + E + S + k + B + m && (m = 1);
                        break;
                    case 42:
                    case 47:
                        if (!(0 < S + k + E))
                            switch (C) {
                            case 0:
                                switch (2 * h + 3 * u.charCodeAt(M + 1)) {
                                case 235:
                                    C = 47;
                                    break;
                                case 220:
                                    U = M,
                                    C = 42
                                }
                                break;
                            case 42:
                                47 === h && 42 === I && U + 2 !== M && (33 === u.charCodeAt(U + 2) && (j += u.substring(U, M + 1)),
                                v = "",
                                C = 0)
                            }
                    }
                    0 === C && (W += v)
                }
                O = I,
                I = h,
                M++
            }
            if (0 < (U = j.length)) {
                if (P = r,
                0 < D && (void 0 !== (x = s(2, j, P, e, A, T, U, c, p, c)) && 0 === (j = x).length))
                    return G + j + H;
                if (j = P.join(",") + "{" + j + "}",
                0 != _ * N) {
                    switch (2 !== _ || o(j, 2) || (N = 0),
                    N) {
                    case 111:
                        j = j.replace(b, ":-moz-$1") + j;
                        break;
                    case 112:
                        j = j.replace(y, "::-webkit-input-$1") + j.replace(y, "::-moz-$1") + j.replace(y, ":-ms-input-$1") + j
                    }
                    N = 0
                }
            }
            return G + j + H
        }
        function n(e, t, n) {
            var a = t.trim().split(m);
            t = a;
            var o = a.length
              , i = e.length;
            switch (i) {
            case 0:
            case 1:
                var s = 0;
                for (e = 0 === i ? "" : e[0] + " "; s < o; ++s)
                    t[s] = r(e, t[s], n).trim();
                break;
            default:
                var u = s = 0;
                for (t = []; s < o; ++s)
                    for (var c = 0; c < i; ++c)
                        t[u++] = r(e[c] + " ", a[s], n).trim()
            }
            return t
        }
        function r(e, t, n) {
            var r = t.charCodeAt(0);
            switch (33 > r && (r = (t = t.trim()).charCodeAt(0)),
            r) {
            case 38:
                return t.replace(v, "$1" + e.trim());
            case 58:
                return e.trim() + t.replace(v, "$1" + e.trim());
            default:
                if (0 < 1 * n && 0 < t.indexOf("\f"))
                    return t.replace(v, (58 === e.charCodeAt(0) ? "" : "$1") + e.trim())
            }
            return e + t
        }
        function a(e, t, n, r) {
            var i = e + ";"
              , s = 2 * t + 3 * n + 4 * r;
            if (944 === s) {
                e = i.indexOf(":", 9) + 1;
                var u = i.substring(e, i.length - 1).trim();
                return u = i.substring(0, e).trim() + u + ";",
                1 === _ || 2 === _ && o(u, 1) ? "-webkit-" + u + u : u
            }
            if (0 === _ || 2 === _ && !o(i, 1))
                return i;
            switch (s) {
            case 1015:
                return 97 === i.charCodeAt(10) ? "-webkit-" + i + i : i;
            case 951:
                return 116 === i.charCodeAt(3) ? "-webkit-" + i + i : i;
            case 963:
                return 110 === i.charCodeAt(5) ? "-webkit-" + i + i : i;
            case 1009:
                if (100 !== i.charCodeAt(4))
                    break;
            case 969:
            case 942:
                return "-webkit-" + i + i;
            case 978:
                return "-webkit-" + i + "-moz-" + i + i;
            case 1019:
            case 983:
                return "-webkit-" + i + "-moz-" + i + "-ms-" + i + i;
            case 883:
                if (45 === i.charCodeAt(8))
                    return "-webkit-" + i + i;
                if (0 < i.indexOf("image-set(", 11))
                    return i.replace(I, "$1-webkit-$2") + i;
                break;
            case 932:
                if (45 === i.charCodeAt(4))
                    switch (i.charCodeAt(5)) {
                    case 103:
                        return "-webkit-box-" + i.replace("-grow", "") + "-webkit-" + i + "-ms-" + i.replace("grow", "positive") + i;
                    case 115:
                        return "-webkit-" + i + "-ms-" + i.replace("shrink", "negative") + i;
                    case 98:
                        return "-webkit-" + i + "-ms-" + i.replace("basis", "preferred-size") + i
                    }
                return "-webkit-" + i + "-ms-" + i + i;
            case 964:
                return "-webkit-" + i + "-ms-flex-" + i + i;
            case 1023:
                if (99 !== i.charCodeAt(8))
                    break;
                return "-webkit-box-pack" + (u = i.substring(i.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify")) + "-webkit-" + i + "-ms-flex-pack" + u + i;
            case 1005:
                return d.test(i) ? i.replace(p, ":-webkit-") + i.replace(p, ":-moz-") + i : i;
            case 1e3:
                switch (t = (u = i.substring(13).trim()).indexOf("-") + 1,
                u.charCodeAt(0) + u.charCodeAt(t)) {
                case 226:
                    u = i.replace(x, "tb");
                    break;
                case 232:
                    u = i.replace(x, "tb-rl");
                    break;
                case 220:
                    u = i.replace(x, "lr");
                    break;
                default:
                    return i
                }
                return "-webkit-" + i + "-ms-" + u + i;
            case 1017:
                if (-1 === i.indexOf("sticky", 9))
                    break;
            case 975:
                switch (t = (i = e).length - 10,
                s = (u = (33 === i.charCodeAt(t) ? i.substring(0, t) : i).substring(e.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | u.charCodeAt(7))) {
                case 203:
                    if (111 > u.charCodeAt(8))
                        break;
                case 115:
                    i = i.replace(u, "-webkit-" + u) + ";" + i;
                    break;
                case 207:
                case 102:
                    i = i.replace(u, "-webkit-" + (102 < s ? "inline-" : "") + "box") + ";" + i.replace(u, "-webkit-" + u) + ";" + i.replace(u, "-ms-" + u + "box") + ";" + i
                }
                return i + ";";
            case 938:
                if (45 === i.charCodeAt(5))
                    switch (i.charCodeAt(6)) {
                    case 105:
                        return u = i.replace("-items", ""),
                        "-webkit-" + i + "-webkit-box-" + u + "-ms-flex-" + u + i;
                    case 115:
                        return "-webkit-" + i + "-ms-flex-item-" + i.replace(C, "") + i;
                    default:
                        return "-webkit-" + i + "-ms-flex-line-pack" + i.replace("align-content", "").replace(C, "") + i
                    }
                break;
            case 973:
            case 989:
                if (45 !== i.charCodeAt(3) || 122 === i.charCodeAt(4))
                    break;
            case 931:
            case 953:
                if (!0 === S.test(e))
                    return 115 === (u = e.substring(e.indexOf(":") + 1)).charCodeAt(0) ? a(e.replace("stretch", "fill-available"), t, n, r).replace(":fill-available", ":stretch") : i.replace(u, "-webkit-" + u) + i.replace(u, "-moz-" + u.replace("fill-", "")) + i;
                break;
            case 962:
                if (i = "-webkit-" + i + (102 === i.charCodeAt(5) ? "-ms-" + i : "") + i,
                211 === n + r && 105 === i.charCodeAt(13) && 0 < i.indexOf("transform", 10))
                    return i.substring(0, i.indexOf(";", 27) + 1).replace(h, "$1-webkit-$2") + i
            }
            return i
        }
        function o(e, t) {
            var n = e.indexOf(1 === t ? ":" : "{")
              , r = e.substring(0, 3 !== t ? n : 10);
            return n = e.substring(n + 1, e.length - 1),
            B(2 !== t ? r : r.replace(E, "$1"), n, t)
        }
        function i(e, t) {
            var n = a(t, t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2));
            return n !== t + ";" ? n.replace(k, " or ($1)").substring(4) : "(" + t + ")"
        }
        function s(e, t, n, r, a, o, i, s, u, l) {
            for (var f, p = 0, d = t; p < D; ++p)
                switch (f = O[p].call(c, e, d, n, r, a, o, i, s, u, l)) {
                case void 0:
                case !1:
                case !0:
                case null:
                    break;
                default:
                    d = f
                }
            if (d !== t)
                return d
        }
        function u(e) {
            return void 0 !== (e = e.prefix) && (B = null,
            e ? "function" != typeof e ? _ = 1 : (_ = 2,
            B = e) : _ = 0),
            u
        }
        function c(e, n) {
            var r = e;
            if (33 > r.charCodeAt(0) && (r = r.trim()),
            r = [r],
            0 < D) {
                var a = s(-1, n, r, r, A, T, 0, 0, 0, 0);
                void 0 !== a && "string" == typeof a && (n = a)
            }
            var o = t(R, r, n, 0, 0);
            return 0 < D && (void 0 !== (a = s(-2, o, r, r, A, T, o.length, 0, 0, 0)) && (o = a)),
            "",
            N = 0,
            T = A = 1,
            o
        }
        var l = /^\0+/g
          , f = /[\0\r\f]/g
          , p = /: */g
          , d = /zoo|gra/
          , h = /([,: ])(transform)/g
          , m = /,\r+?/g
          , v = /([\t\r\n ])*\f?&/g
          , g = /@(k\w+)\s*(\S*)\s*/
          , y = /::(place)/g
          , b = /:(read-only)/g
          , x = /[svh]\w+-[tblr]{2}/
          , w = /\(\s*(.*)\s*\)/g
          , k = /([\s\S]*?);/g
          , C = /-self|flex-/g
          , E = /[^]*?(:[rp][el]a[\w-]+)[^]*/
          , S = /stretch|:\s*\w+\-(?:conte|avail)/
          , I = /([^-])(image-set\()/
          , T = 1
          , A = 1
          , N = 0
          , _ = 1
          , R = []
          , O = []
          , D = 0
          , B = null
          , F = 0;
        return c.use = function e(t) {
            switch (t) {
            case void 0:
            case null:
                D = O.length = 0;
                break;
            default:
                if ("function" == typeof t)
                    O[D++] = t;
                else if ("object" == typeof t)
                    for (var n = 0, r = t.length; n < r; ++n)
                        e(t[n]);
                else
                    F = 0 | !!t
            }
            return e
        }
        ,
        c.set = u,
        void 0 !== e && u(e),
        c
    }
    var pb = {
        animationIterationCount: 1,
        borderImageOutset: 1,
        borderImageSlice: 1,
        borderImageWidth: 1,
        boxFlex: 1,
        boxFlexGroup: 1,
        boxOrdinalGroup: 1,
        columnCount: 1,
        columns: 1,
        flex: 1,
        flexGrow: 1,
        flexPositive: 1,
        flexShrink: 1,
        flexNegative: 1,
        flexOrder: 1,
        gridRow: 1,
        gridRowEnd: 1,
        gridRowSpan: 1,
        gridRowStart: 1,
        gridColumn: 1,
        gridColumnEnd: 1,
        gridColumnSpan: 1,
        gridColumnStart: 1,
        msGridRow: 1,
        msGridRowSpan: 1,
        msGridColumn: 1,
        msGridColumnSpan: 1,
        fontWeight: 1,
        lineHeight: 1,
        opacity: 1,
        order: 1,
        orphans: 1,
        tabSize: 1,
        widows: 1,
        zIndex: 1,
        zoom: 1,
        WebkitLineClamp: 1,
        fillOpacity: 1,
        floodOpacity: 1,
        stopOpacity: 1,
        strokeDasharray: 1,
        strokeDashoffset: 1,
        strokeMiterlimit: 1,
        strokeOpacity: 1,
        strokeWidth: 1
    };
    var db = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/
      , hb = function(e) {
        var t = {};
        return function(n) {
            return void 0 === t[n] && (t[n] = e(n)),
            t[n]
        }
    }((function(e) {
        return db.test(e) || 111 === e.charCodeAt(0) && 110 === e.charCodeAt(1) && e.charCodeAt(2) < 91
    }
    ))
      , mb = "function" == typeof Symbol && Symbol.for
      , vb = mb ? Symbol.for("react.element") : 60103
      , gb = mb ? Symbol.for("react.portal") : 60106
      , yb = mb ? Symbol.for("react.fragment") : 60107
      , bb = mb ? Symbol.for("react.strict_mode") : 60108
      , xb = mb ? Symbol.for("react.profiler") : 60114
      , wb = mb ? Symbol.for("react.provider") : 60109
      , kb = mb ? Symbol.for("react.context") : 60110
      , Cb = mb ? Symbol.for("react.async_mode") : 60111
      , Eb = mb ? Symbol.for("react.concurrent_mode") : 60111
      , Sb = mb ? Symbol.for("react.forward_ref") : 60112
      , Ib = mb ? Symbol.for("react.suspense") : 60113
      , Tb = mb ? Symbol.for("react.suspense_list") : 60120
      , Ab = mb ? Symbol.for("react.memo") : 60115
      , Nb = mb ? Symbol.for("react.lazy") : 60116
      , _b = mb ? Symbol.for("react.block") : 60121
      , Rb = mb ? Symbol.for("react.fundamental") : 60117
      , Ob = mb ? Symbol.for("react.responder") : 60118
      , Db = mb ? Symbol.for("react.scope") : 60119;
    function Bb(e) {
        if ("object" == typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
            case vb:
                switch (e = e.type) {
                case Cb:
                case Eb:
                case yb:
                case xb:
                case bb:
                case Ib:
                    return e;
                default:
                    switch (e = e && e.$$typeof) {
                    case kb:
                    case Sb:
                    case Nb:
                    case Ab:
                    case wb:
                        return e;
                    default:
                        return t
                    }
                }
            case gb:
                return t
            }
        }
    }
    function Fb(e) {
        return Bb(e) === Eb
    }
    var Mb = {
        AsyncMode: Cb,
        ConcurrentMode: Eb,
        ContextConsumer: kb,
        ContextProvider: wb,
        Element: vb,
        ForwardRef: Sb,
        Fragment: yb,
        Lazy: Nb,
        Memo: Ab,
        Portal: gb,
        Profiler: xb,
        StrictMode: bb,
        Suspense: Ib,
        isAsyncMode: function(e) {
            return Fb(e) || Bb(e) === Cb
        },
        isConcurrentMode: Fb,
        isContextConsumer: function(e) {
            return Bb(e) === kb
        },
        isContextProvider: function(e) {
            return Bb(e) === wb
        },
        isElement: function(e) {
            return "object" == typeof e && null !== e && e.$$typeof === vb
        },
        isForwardRef: function(e) {
            return Bb(e) === Sb
        },
        isFragment: function(e) {
            return Bb(e) === yb
        },
        isLazy: function(e) {
            return Bb(e) === Nb
        },
        isMemo: function(e) {
            return Bb(e) === Ab
        },
        isPortal: function(e) {
            return Bb(e) === gb
        },
        isProfiler: function(e) {
            return Bb(e) === xb
        },
        isStrictMode: function(e) {
            return Bb(e) === bb
        },
        isSuspense: function(e) {
            return Bb(e) === Ib
        },
        isValidElementType: function(e) {
            return "string" == typeof e || "function" == typeof e || e === yb || e === Eb || e === xb || e === bb || e === Ib || e === Tb || "object" == typeof e && null !== e && (e.$$typeof === Nb || e.$$typeof === Ab || e.$$typeof === wb || e.$$typeof === kb || e.$$typeof === Sb || e.$$typeof === Rb || e.$$typeof === Ob || e.$$typeof === Db || e.$$typeof === _b)
        },
        typeOf: Bb
    }
      , Pb = (i((function(e, t) {}
    )),
    i((function(e) {
        e.exports = Mb
    }
    )))
      , Lb = {
        childContextTypes: !0,
        contextType: !0,
        contextTypes: !0,
        defaultProps: !0,
        displayName: !0,
        getDefaultProps: !0,
        getDerivedStateFromError: !0,
        getDerivedStateFromProps: !0,
        mixins: !0,
        propTypes: !0,
        type: !0
    }
      , Ub = {
        name: !0,
        length: !0,
        prototype: !0,
        caller: !0,
        callee: !0,
        arguments: !0,
        arity: !0
    }
      , Vb = {
        $$typeof: !0,
        compare: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0,
        type: !0
    }
      , zb = {};
    function Wb(e) {
        return Pb.isMemo(e) ? Vb : zb[e.$$typeof] || Lb
    }
    zb[Pb.ForwardRef] = {
        $$typeof: !0,
        render: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0
    },
    zb[Pb.Memo] = Vb;
    var jb = Object.defineProperty
      , Hb = Object.getOwnPropertyNames
      , Gb = Object.getOwnPropertySymbols
      , Kb = Object.getOwnPropertyDescriptor
      , qb = Object.getPrototypeOf
      , Xb = Object.prototype;
    var Qb = function e(t, n, r) {
        if ("string" != typeof n) {
            if (Xb) {
                var a = qb(n);
                a && a !== Xb && e(t, a, r)
            }
            var o = Hb(n);
            Gb && (o = o.concat(Gb(n)));
            for (var i = Wb(t), s = Wb(n), u = 0; u < o.length; ++u) {
                var c = o[u];
                if (!(Ub[c] || r && r[c] || s && s[c] || i && i[c])) {
                    var l = Kb(n, c);
                    try {
                        jb(t, c, l)
                    } catch (e) {}
                }
            }
        }
        return t
    };
    function Yb() {
        return (Yb = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
            }
            return e
        }
        ).apply(this, arguments)
    }
    var $b = function(e, t) {
        for (var n = [e[0]], r = 0, a = t.length; r < a; r += 1)
            n.push(t[r], e[r + 1]);
        return n
    }
      , Zb = function(e) {
        return null !== e && "object" == typeof e && "[object Object]" === (e.toString ? e.toString() : Object.prototype.toString.call(e)) && !lb.typeOf(e)
    }
      , Jb = Object.freeze([])
      , ex = Object.freeze({});
    function tx(e) {
        return "function" == typeof e
    }
    function nx(e) {
        return e.displayName || e.name || "Component"
    }
    function rx(e) {
        return e && "string" == typeof e.styledComponentId
    }
    var ax = "undefined" != typeof process && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled"
      , ox = "undefined" != typeof window && "HTMLElement"in window
      , ix = Boolean("boolean" == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env.REACT_APP_SC_DISABLE_SPEEDY && "" !== process.env.REACT_APP_SC_DISABLE_SPEEDY ? "false" !== process.env.REACT_APP_SC_DISABLE_SPEEDY && process.env.REACT_APP_SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env.SC_DISABLE_SPEEDY && "" !== process.env.SC_DISABLE_SPEEDY && ("false" !== process.env.SC_DISABLE_SPEEDY && process.env.SC_DISABLE_SPEEDY));
    function sx(e) {
        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
            n[r - 1] = arguments[r];
        throw new Error("An error occurred. See https://git.io/JUIaE#" + e + " for more information." + (n.length > 0 ? " Args: " + n.join(", ") : ""))
    }
    var ux = function() {
        function e(e) {
            this.groupSizes = new Uint32Array(512),
            this.length = 512,
            this.tag = e
        }
        var t = e.prototype;
        return t.indexOfGroup = function(e) {
            for (var t = 0, n = 0; n < e; n++)
                t += this.groupSizes[n];
            return t
        }
        ,
        t.insertRules = function(e, t) {
            if (e >= this.groupSizes.length) {
                for (var n = this.groupSizes, r = n.length, a = r; e >= a; )
                    (a <<= 1) < 0 && sx(16, "" + e);
                this.groupSizes = new Uint32Array(a),
                this.groupSizes.set(n),
                this.length = a;
                for (var o = r; o < a; o++)
                    this.groupSizes[o] = 0
            }
            for (var i = this.indexOfGroup(e + 1), s = 0, u = t.length; s < u; s++)
                this.tag.insertRule(i, t[s]) && (this.groupSizes[e]++,
                i++)
        }
        ,
        t.clearGroup = function(e) {
            if (e < this.length) {
                var t = this.groupSizes[e]
                  , n = this.indexOfGroup(e)
                  , r = n + t;
                this.groupSizes[e] = 0;
                for (var a = n; a < r; a++)
                    this.tag.deleteRule(n)
            }
        }
        ,
        t.getGroup = function(e) {
            var t = "";
            if (e >= this.length || 0 === this.groupSizes[e])
                return t;
            for (var n = this.groupSizes[e], r = this.indexOfGroup(e), a = r + n, o = r; o < a; o++)
                t += this.tag.getRule(o) + "/*!sc*/\n";
            return t
        }
        ,
        e
    }()
      , cx = new Map
      , lx = new Map
      , fx = 1
      , px = function(e) {
        if (cx.has(e))
            return cx.get(e);
        for (; lx.has(fx); )
            fx++;
        var t = fx++;
        return cx.set(e, t),
        lx.set(t, e),
        t
    }
      , dx = function(e) {
        return lx.get(e)
    }
      , hx = function(e, t) {
        cx.set(e, t),
        lx.set(t, e)
    }
      , mx = "style[" + ax + '][data-styled-version="5.2.1"]'
      , vx = new RegExp("^" + ax + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')
      , gx = function(e, t, n) {
        for (var r, a = n.split(","), o = 0, i = a.length; o < i; o++)
            (r = a[o]) && e.registerName(t, r)
    }
      , yx = function(e, t) {
        for (var n = t.innerHTML.split("/*!sc*/\n"), r = [], a = 0, o = n.length; a < o; a++) {
            var i = n[a].trim();
            if (i) {
                var s = i.match(vx);
                if (s) {
                    var u = 0 | parseInt(s[1], 10)
                      , c = s[2];
                    0 !== u && (hx(c, u),
                    gx(e, c, s[3]),
                    e.getTag().insertRules(u, r)),
                    r.length = 0
                } else
                    r.push(i)
            }
        }
    }
      , bx = function(e) {
        var t = document.head
          , n = e || t
          , r = document.createElement("style")
          , a = function(e) {
            for (var t = e.childNodes, n = t.length; n >= 0; n--) {
                var r = t[n];
                if (r && 1 === r.nodeType && r.hasAttribute(ax))
                    return r
            }
        }(n)
          , o = void 0 !== a ? a.nextSibling : null;
        r.setAttribute(ax, "active"),
        r.setAttribute("data-styled-version", "5.2.1");
        var i = "undefined" != typeof __webpack_nonce__ ? __webpack_nonce__ : null;
        return i && r.setAttribute("nonce", i),
        n.insertBefore(r, o),
        r
    }
      , xx = function() {
        function e(e) {
            var t = this.element = bx(e);
            t.appendChild(document.createTextNode("")),
            this.sheet = function(e) {
                if (e.sheet)
                    return e.sheet;
                for (var t = document.styleSheets, n = 0, r = t.length; n < r; n++) {
                    var a = t[n];
                    if (a.ownerNode === e)
                        return a
                }
                sx(17)
            }(t),
            this.length = 0
        }
        var t = e.prototype;
        return t.insertRule = function(e, t) {
            try {
                return this.sheet.insertRule(t, e),
                this.length++,
                !0
            } catch (e) {
                return !1
            }
        }
        ,
        t.deleteRule = function(e) {
            this.sheet.deleteRule(e),
            this.length--
        }
        ,
        t.getRule = function(e) {
            var t = this.sheet.cssRules[e];
            return void 0 !== t && "string" == typeof t.cssText ? t.cssText : ""
        }
        ,
        e
    }()
      , wx = function() {
        function e(e) {
            var t = this.element = bx(e);
            this.nodes = t.childNodes,
            this.length = 0
        }
        var t = e.prototype;
        return t.insertRule = function(e, t) {
            if (e <= this.length && e >= 0) {
                var n = document.createTextNode(t)
                  , r = this.nodes[e];
                return this.element.insertBefore(n, r || null),
                this.length++,
                !0
            }
            return !1
        }
        ,
        t.deleteRule = function(e) {
            this.element.removeChild(this.nodes[e]),
            this.length--
        }
        ,
        t.getRule = function(e) {
            return e < this.length ? this.nodes[e].textContent : ""
        }
        ,
        e
    }()
      , kx = function() {
        function e(e) {
            this.rules = [],
            this.length = 0
        }
        var t = e.prototype;
        return t.insertRule = function(e, t) {
            return e <= this.length && (this.rules.splice(e, 0, t),
            this.length++,
            !0)
        }
        ,
        t.deleteRule = function(e) {
            this.rules.splice(e, 1),
            this.length--
        }
        ,
        t.getRule = function(e) {
            return e < this.length ? this.rules[e] : ""
        }
        ,
        e
    }()
      , Cx = ox
      , Ex = {
        isServer: !ox,
        useCSSOMInjection: !ix
    }
      , Sx = function() {
        function e(e, t, n) {
            void 0 === e && (e = ex),
            void 0 === t && (t = {}),
            this.options = Yb({}, Ex, {}, e),
            this.gs = t,
            this.names = new Map(n),
            !this.options.isServer && ox && Cx && (Cx = !1,
            function(e) {
                for (var t = document.querySelectorAll(mx), n = 0, r = t.length; n < r; n++) {
                    var a = t[n];
                    a && "active" !== a.getAttribute(ax) && (yx(e, a),
                    a.parentNode && a.parentNode.removeChild(a))
                }
            }(this))
        }
        e.registerId = function(e) {
            return px(e)
        }
        ;
        var t = e.prototype;
        return t.reconstructWithOptions = function(t, n) {
            return void 0 === n && (n = !0),
            new e(Yb({}, this.options, {}, t),this.gs,n && this.names || void 0)
        }
        ,
        t.allocateGSInstance = function(e) {
            return this.gs[e] = (this.gs[e] || 0) + 1
        }
        ,
        t.getTag = function() {
            return this.tag || (this.tag = (n = (t = this.options).isServer,
            r = t.useCSSOMInjection,
            a = t.target,
            e = n ? new kx(a) : r ? new xx(a) : new wx(a),
            new ux(e)));
            var e, t, n, r, a
        }
        ,
        t.hasNameForId = function(e, t) {
            return this.names.has(e) && this.names.get(e).has(t)
        }
        ,
        t.registerName = function(e, t) {
            if (px(e),
            this.names.has(e))
                this.names.get(e).add(t);
            else {
                var n = new Set;
                n.add(t),
                this.names.set(e, n)
            }
        }
        ,
        t.insertRules = function(e, t, n) {
            this.registerName(e, t),
            this.getTag().insertRules(px(e), n)
        }
        ,
        t.clearNames = function(e) {
            this.names.has(e) && this.names.get(e).clear()
        }
        ,
        t.clearRules = function(e) {
            this.getTag().clearGroup(px(e)),
            this.clearNames(e)
        }
        ,
        t.clearTag = function() {
            this.tag = void 0
        }
        ,
        t.toString = function() {
            return function(e) {
                for (var t = e.getTag(), n = t.length, r = "", a = 0; a < n; a++) {
                    var o = dx(a);
                    if (void 0 !== o) {
                        var i = e.names.get(o)
                          , s = t.getGroup(a);
                        if (void 0 !== i && 0 !== s.length) {
                            var u = ax + ".g" + a + '[id="' + o + '"]'
                              , c = "";
                            void 0 !== i && i.forEach((function(e) {
                                e.length > 0 && (c += e + ",")
                            }
                            )),
                            r += "" + s + u + '{content:"' + c + '"}/*!sc*/\n'
                        }
                    }
                }
                return r
            }(this)
        }
        ,
        e
    }()
      , Ix = /(a)(d)/gi
      , Tx = function(e) {
        return String.fromCharCode(e + (e > 25 ? 39 : 97))
    };
    function Ax(e) {
        var t, n = "";
        for (t = Math.abs(e); t > 52; t = t / 52 | 0)
            n = Tx(t % 52) + n;
        return (Tx(t % 52) + n).replace(Ix, "$1-$2")
    }
    var Nx = function(e, t) {
        for (var n = t.length; n; )
            e = 33 * e ^ t.charCodeAt(--n);
        return e
    }
      , _x = function(e) {
        return Nx(5381, e)
    };
    var Rx = _x("5.2.1")
      , Ox = function() {
        function e(e, t, n) {
            this.rules = e,
            this.staticRulesId = "",
            this.isStatic = (void 0 === n || n.isStatic) && function(e) {
                for (var t = 0; t < e.length; t += 1) {
                    var n = e[t];
                    if (tx(n) && !rx(n))
                        return !1
                }
                return !0
            }(e),
            this.componentId = t,
            this.baseHash = Nx(Rx, t),
            this.baseStyle = n,
            Sx.registerId(t)
        }
        return e.prototype.generateAndInjectStyles = function(e, t, n) {
            var r = this.componentId
              , a = [];
            if (this.baseStyle && a.push(this.baseStyle.generateAndInjectStyles(e, t, n)),
            this.isStatic && !n.hash)
                if (this.staticRulesId && t.hasNameForId(r, this.staticRulesId))
                    a.push(this.staticRulesId);
                else {
                    var o = Kx(this.rules, e, t, n).join("")
                      , i = Ax(Nx(this.baseHash, o.length) >>> 0);
                    if (!t.hasNameForId(r, i)) {
                        var s = n(o, "." + i, void 0, r);
                        t.insertRules(r, i, s)
                    }
                    a.push(i),
                    this.staticRulesId = i
                }
            else {
                for (var u = this.rules.length, c = Nx(this.baseHash, n.hash), l = "", f = 0; f < u; f++) {
                    var p = this.rules[f];
                    if ("string" == typeof p)
                        l += p;
                    else if (p) {
                        var d = Kx(p, e, t, n)
                          , h = Array.isArray(d) ? d.join("") : d;
                        c = Nx(c, h + f),
                        l += h
                    }
                }
                if (l) {
                    var m = Ax(c >>> 0);
                    if (!t.hasNameForId(r, m)) {
                        var v = n(l, "." + m, void 0, r);
                        t.insertRules(r, m, v)
                    }
                    a.push(m)
                }
            }
            return a.join(" ")
        }
        ,
        e
    }()
      , Dx = /^\s*\/\/.*$/gm
      , Bx = [":", "[", ".", "#"];
    var Fx = kg.createContext()
      , Mx = (Fx.Consumer,
    kg.createContext())
      , Px = (Mx.Consumer,
    new Sx)
      , Lx = function(e) {
        var t, n, r, a, o = void 0 === e ? ex : e, i = o.options, s = void 0 === i ? ex : i, u = o.plugins, c = void 0 === u ? Jb : u, l = new fb(s), f = [], p = function(e) {
            function t(t) {
                if (t)
                    try {
                        e(t + "}")
                    } catch (e) {}
            }
            return function(n, r, a, o, i, s, u, c, l, f) {
                switch (n) {
                case 1:
                    if (0 === l && 64 === r.charCodeAt(0))
                        return e(r + ";"),
                        "";
                    break;
                case 2:
                    if (0 === c)
                        return r + "/*|*/";
                    break;
                case 3:
                    switch (c) {
                    case 102:
                    case 112:
                        return e(a[0] + r),
                        "";
                    default:
                        return r + (0 === f ? "/*|*/" : "")
                    }
                case -2:
                    r.split("/*|*/}").forEach(t)
                }
            }
        }((function(e) {
            f.push(e)
        }
        )), d = function(e, r, o) {
            return 0 === r && Bx.includes(o[n.length]) || o.match(a) ? e : "." + t
        };
        function h(e, o, i, s) {
            void 0 === s && (s = "&");
            var u = e.replace(Dx, "")
              , c = o && i ? i + " " + o + " { " + u + " }" : u;
            return t = s,
            n = o,
            r = new RegExp("\\" + n + "\\b","g"),
            a = new RegExp("(\\" + n + "\\b){2,}"),
            l(i || !o ? "" : o, c)
        }
        return l.use([].concat(c, [function(e, t, a) {
            2 === e && a.length && a[0].lastIndexOf(n) > 0 && (a[0] = a[0].replace(r, d))
        }
        , p, function(e) {
            if (-2 === e) {
                var t = f;
                return f = [],
                t
            }
        }
        ])),
        h.hash = c.length ? c.reduce((function(e, t) {
            return t.name || sx(15),
            Nx(e, t.name)
        }
        ), 5381).toString() : "",
        h
    }();
    var Ux = function() {
        function e(e, t) {
            var n = this;
            this.inject = function(e, t) {
                void 0 === t && (t = Lx);
                var r = n.name + t.hash;
                e.hasNameForId(n.id, r) || e.insertRules(n.id, r, t(n.rules, r, "@keyframes"))
            }
            ,
            this.toString = function() {
                return sx(12, String(n.name))
            }
            ,
            this.name = e,
            this.id = "sc-keyframes-" + e,
            this.rules = t
        }
        return e.prototype.getName = function(e) {
            return void 0 === e && (e = Lx),
            this.name + e.hash
        }
        ,
        e
    }()
      , Vx = /([A-Z])/
      , zx = /([A-Z])/g
      , Wx = /^ms-/
      , jx = function(e) {
        return "-" + e.toLowerCase()
    };
    function Hx(e) {
        return Vx.test(e) ? e.replace(zx, jx).replace(Wx, "-ms-") : e
    }
    var Gx = function(e) {
        return null == e || !1 === e || "" === e
    };
    function Kx(e, t, n, r) {
        if (Array.isArray(e)) {
            for (var a, o = [], i = 0, s = e.length; i < s; i += 1)
                "" !== (a = Kx(e[i], t, n, r)) && (Array.isArray(a) ? o.push.apply(o, a) : o.push(a));
            return o
        }
        return Gx(e) ? "" : rx(e) ? "." + e.styledComponentId : tx(e) ? "function" != typeof (u = e) || u.prototype && u.prototype.isReactComponent || !t ? e : Kx(e(t), t, n, r) : e instanceof Ux ? n ? (e.inject(n, r),
        e.getName(r)) : e : Zb(e) ? function e(t, n) {
            var r, a, o = [];
            for (var i in t)
                t.hasOwnProperty(i) && !Gx(t[i]) && (Zb(t[i]) ? o.push.apply(o, e(t[i], i)) : tx(t[i]) ? o.push(Hx(i) + ":", t[i], ";") : o.push(Hx(i) + ": " + (r = i,
                (null == (a = t[i]) || "boolean" == typeof a || "" === a ? "" : "number" != typeof a || 0 === a || r in pb ? String(a).trim() : a + "px") + ";")));
            return n ? [n + " {"].concat(o, ["}"]) : o
        }(e) : e.toString();
        var u
    }
    function qx(e) {
        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
            n[r - 1] = arguments[r];
        return tx(e) || Zb(e) ? Kx($b(Jb, [e].concat(n))) : 0 === n.length && 1 === e.length && "string" == typeof e[0] ? e : Kx($b(e, n))
    }
    var Xx = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g
      , Qx = /(^-|-$)/g;
    function Yx(e) {
        return e.replace(Xx, "-").replace(Qx, "")
    }
    function $x(e) {
        return "string" == typeof e && !0
    }
    var Zx = function(e) {
        return "function" == typeof e || "object" == typeof e && null !== e && !Array.isArray(e)
    }
      , Jx = function(e) {
        return "__proto__" !== e && "constructor" !== e && "prototype" !== e
    };
    function ew(e, t, n) {
        var r = e[n];
        Zx(t) && Zx(r) ? tw(r, t) : e[n] = t
    }
    function tw(e) {
        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
            n[r - 1] = arguments[r];
        for (var a = 0, o = n; a < o.length; a++) {
            var i = o[a];
            if (Zx(i))
                for (var s in i)
                    Jx(s) && ew(e, i[s], s)
        }
        return e
    }
    var nw = kg.createContext()
      , rw = (nw.Consumer,
    {});
    function aw(e, t, n) {
        var r = rx(e)
          , a = !$x(e)
          , o = t.attrs
          , i = void 0 === o ? Jb : o
          , s = t.componentId
          , u = void 0 === s ? function(e, t) {
            var n = "string" != typeof e ? "sc" : Yx(e);
            rw[n] = (rw[n] || 0) + 1;
            var r = n + "-" + function(e) {
                return Ax(_x(e) >>> 0)
            }("5.2.1" + n + rw[n]);
            return t ? t + "-" + r : r
        }(t.displayName, t.parentComponentId) : s
          , c = t.displayName
          , l = void 0 === c ? function(e) {
            return $x(e) ? "styled." + e : "Styled(" + nx(e) + ")"
        }(e) : c
          , f = t.displayName && t.componentId ? Yx(t.displayName) + "-" + t.componentId : t.componentId || u
          , p = r && e.attrs ? Array.prototype.concat(e.attrs, i).filter(Boolean) : i
          , d = t.shouldForwardProp;
        r && e.shouldForwardProp && (d = t.shouldForwardProp ? function(n, r) {
            return e.shouldForwardProp(n, r) && t.shouldForwardProp(n, r)
        }
        : e.shouldForwardProp);
        var h, m = new Ox(n,f,r ? e.componentStyle : void 0), v = m.isStatic && 0 === i.length, g = function(e, t) {
            return function(e, t, n, r) {
                var a = e.attrs
                  , o = e.componentStyle
                  , i = e.defaultProps
                  , s = e.foldedComponentIds
                  , u = e.shouldForwardProp
                  , c = e.styledComponentId
                  , l = e.target
                  , f = function(e, t, n) {
                    void 0 === e && (e = ex);
                    var r = Yb({}, t, {
                        theme: e
                    })
                      , a = {};
                    return n.forEach((function(e) {
                        var t, n, o, i = e;
                        for (t in tx(i) && (i = i(r)),
                        i)
                            r[t] = a[t] = "className" === t ? (n = a[t],
                            o = i[t],
                            n && o ? n + " " + o : n || o) : i[t]
                    }
                    )),
                    [r, a]
                }(function(e, t, n) {
                    return void 0 === n && (n = ex),
                    e.theme !== n.theme && e.theme || t || n.theme
                }(t, kg.useContext(nw), i) || ex, t, a)
                  , p = f[0]
                  , d = f[1]
                  , h = function(e, t, n, r) {
                    var a = kg.useContext(Fx) || Px
                      , o = kg.useContext(Mx) || Lx;
                    return t ? e.generateAndInjectStyles(ex, a, o) : e.generateAndInjectStyles(n, a, o)
                }(o, r, p)
                  , m = n
                  , v = d.$as || t.$as || d.as || t.as || l
                  , g = $x(v)
                  , y = d !== t ? Yb({}, t, {}, d) : t
                  , b = {};
                for (var x in y)
                    "$" !== x[0] && "as" !== x && ("forwardedAs" === x ? b.as = y[x] : (u ? u(x, hb) : !g || hb(x)) && (b[x] = y[x]));
                return t.style && d.style !== t.style && (b.style = Yb({}, t.style, {}, d.style)),
                b.className = Array.prototype.concat(s, c, h !== c ? h : null, t.className, d.className).filter(Boolean).join(" "),
                b.ref = m,
                kg.createElement(v, b)
            }(h, e, t, v)
        };
        return g.displayName = l,
        (h = kg.forwardRef(g)).attrs = p,
        h.componentStyle = m,
        h.displayName = l,
        h.shouldForwardProp = d,
        h.foldedComponentIds = r ? Array.prototype.concat(e.foldedComponentIds, e.styledComponentId) : Jb,
        h.styledComponentId = f,
        h.target = r ? e.target : e,
        h.withComponent = function(e) {
            var r = t.componentId
              , a = function(e, t) {
                if (null == e)
                    return {};
                var n, r, a = {}, o = Object.keys(e);
                for (r = 0; r < o.length; r++)
                    n = o[r],
                    t.indexOf(n) >= 0 || (a[n] = e[n]);
                return a
            }(t, ["componentId"])
              , o = r && r + "-" + ($x(e) ? e : Yx(nx(e)));
            return aw(e, Yb({}, a, {
                attrs: p,
                componentId: o
            }), n)
        }
        ,
        Object.defineProperty(h, "defaultProps", {
            get: function() {
                return this._foldedDefaultProps
            },
            set: function(t) {
                this._foldedDefaultProps = r ? tw({}, e.defaultProps, t) : t
            }
        }),
        h.toString = function() {
            return "." + h.styledComponentId
        }
        ,
        a && Qb(h, e, {
            attrs: !0,
            componentStyle: !0,
            displayName: !0,
            foldedComponentIds: !0,
            shouldForwardProp: !0,
            styledComponentId: !0,
            target: !0,
            withComponent: !0
        }),
        h
    }
    var ow = function(e) {
        return function e(t, n, r) {
            if (void 0 === r && (r = ex),
            !lb.isValidElementType(n))
                return sx(1, String(n));
            var a = function() {
                return t(n, r, qx.apply(void 0, arguments))
            };
            return a.withConfig = function(a) {
                return e(t, n, Yb({}, r, {}, a))
            }
            ,
            a.attrs = function(a) {
                return e(t, n, Yb({}, r, {
                    attrs: Array.prototype.concat(r.attrs, a).filter(Boolean)
                }))
            }
            ,
            a
        }(aw, e)
    };
    function iw(e) {
        return (iw = "function" == typeof Symbol && "symbol" == Sy(Symbol.iterator) ? function(e) {
            return Sy(e)
        }
        : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : Sy(e)
        }
        )(e)
    }
    function sw(e, t, n, r, a, o, i) {
        try {
            var s = e[o](i)
              , u = s.value
        } catch (e) {
            return void n(e)
        }
        s.done ? t(u) : Promise.resolve(u).then(r, a)
    }
    function uw(e) {
        return function() {
            var t = this
              , n = arguments;
            return new Promise((function(r, a) {
                var o = e.apply(t, n);
                function i(e) {
                    sw(o, r, a, i, s, "next", e)
                }
                function s(e) {
                    sw(o, r, a, i, s, "throw", e)
                }
                i(void 0)
            }
            ))
        }
    }
    function cw(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n,
        e
    }
    function lw() {
        return (lw = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
            }
            return e
        }
        ).apply(this, arguments)
    }
    function fw(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t && (r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable
            }
            ))),
            n.push.apply(n, r)
        }
        return n
    }
    function pw(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? fw(Object(n), !0).forEach((function(t) {
                cw(e, t, n[t])
            }
            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : fw(Object(n)).forEach((function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            }
            ))
        }
        return e
    }
    function dw(e, t) {
        return t || (t = e.slice(0)),
        Object.freeze(Object.defineProperties(e, {
            raw: {
                value: Object.freeze(t)
            }
        }))
    }
    function hw(e, t) {
        return function(e) {
            if (Array.isArray(e))
                return e
        }(e) || function(e, t) {
            if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) {
                var n = []
                  , r = !0
                  , a = !1
                  , o = void 0;
                try {
                    for (var i, s = e[Symbol.iterator](); !(r = (i = s.next()).done) && (n.push(i.value),
                    !t || n.length !== t); r = !0)
                        ;
                } catch (e) {
                    a = !0,
                    o = e
                } finally {
                    try {
                        r || null == s.return || s.return()
                    } finally {
                        if (a)
                            throw o
                    }
                }
                return n
            }
        }(e, t) || vw(e, t) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }
    function mw(e) {
        return function(e) {
            if (Array.isArray(e))
                return gw(e)
        }(e) || function(e) {
            if ("undefined" != typeof Symbol && Symbol.iterator in Object(e))
                return Array.from(e)
        }(e) || vw(e) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }
    function vw(e, t) {
        if (e) {
            if ("string" == typeof e)
                return gw(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name),
            "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? gw(e, t) : void 0
        }
    }
    function gw(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++)
            r[n] = e[n];
        return r
    }
    ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "tspan"].forEach((function(e) {
        ow[e] = ow(e)
    }
    ));
    var yw = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
    function bw(e, t, n) {
        return e(n = {
            path: t,
            exports: {},
            require: function(e, t) {
                return function() {
                    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                }(null == t && n.path)
            }
        }, n.exports),
        n.exports
    }
    function xw(e) {
        if (e.__esModule)
            return e;
        var t = Object.defineProperty({}, "__esModule", {
            value: !0
        });
        return Object.keys(e).forEach((function(n) {
            var r = Object.getOwnPropertyDescriptor(e, n);
            Object.defineProperty(t, n, r.get ? r : {
                enumerable: !0,
                get: function() {
                    return e[n]
                }
            })
        }
        )),
        t
    }
    var ww = bw((function(e) {
        e.exports = function(e) {
            var t = {};
            function n(r) {
                if (t[r])
                    return t[r].exports;
                var a = t[r] = {
                    i: r,
                    l: !1,
                    exports: {}
                };
                return e[r].call(a.exports, a, a.exports, n),
                a.l = !0,
                a.exports
            }
            return n.m = e,
            n.c = t,
            n.d = function(e, t, r) {
                n.o(e, t) || Object.defineProperty(e, t, {
                    configurable: !1,
                    enumerable: !0,
                    get: r
                })
            }
            ,
            n.n = function(e) {
                var t = e && e.__esModule ? function() {
                    return e.default
                }
                : function() {
                    return e
                }
                ;
                return n.d(t, "a", t),
                t
            }
            ,
            n.o = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
            ,
            n.p = "",
            n(n.s = 1)
        }([function(e, t, n) {
            e.exports = {
                BROWSER_TYPES: {
                    CHROME: "Chrome",
                    FIREFOX: "Firefox",
                    OPERA: "Opera",
                    YANDEX: "Yandex",
                    SAFARI: "Safari",
                    INTERNET_EXPLORER: "Internet Explorer",
                    EDGE: "Edge",
                    CHROMIUM: "Chromium",
                    IE: "IE",
                    MOBILE_SAFARI: "Mobile Safari",
                    EDGE_CHROMIUM: "Edge Chromium"
                },
                DEVICE_TYPES: {
                    MOBILE: "mobile",
                    TABLET: "tablet",
                    SMART_TV: "smarttv",
                    CONSOLE: "console",
                    WEARABLE: "wearable",
                    BROWSER: void 0
                },
                OS_TYPES: {
                    IOS: "iOS",
                    ANDROID: "Android",
                    WINDOWS_PHONE: "Windows Phone",
                    WINDOWS: "Windows",
                    MAC_OS: "Mac OS"
                },
                defaultData: {
                    isMobile: !1,
                    isTablet: !1,
                    isBrowser: !1,
                    isSmartTV: !1,
                    isConsole: !1,
                    isWearable: !1
                }
            }
        }
        , function(e, t, n) {
            var r, a = n(2), o = n(0), i = o.BROWSER_TYPES, s = o.OS_TYPES, u = o.DEVICE_TYPES, c = n(4), l = c.checkType, f = c.broPayload, p = c.mobilePayload, d = c.wearPayload, h = c.consolePayload, m = c.stvPayload, v = c.getNavigatorInstance, g = c.isIOS13Check, y = new a, b = y.getBrowser(), x = y.getDevice(), w = y.getEngine(), k = y.getOS(), C = y.getUA(), E = i.CHROME, S = i.CHROMIUM, I = i.IE, T = i.INTERNET_EXPLORER, A = i.OPERA, N = i.FIREFOX, _ = i.SAFARI, R = i.EDGE, O = i.YANDEX, D = i.MOBILE_SAFARI, B = u.MOBILE, F = u.TABLET, M = u.SMART_TV, P = u.BROWSER, L = u.WEARABLE, U = u.CONSOLE, V = s.ANDROID, z = s.WINDOWS_PHONE, W = s.IOS, j = s.WINDOWS, H = s.MAC_OS, G = function() {
                return k.name === s.WINDOWS && "10" === k.version && "string" == typeof C && -1 !== C.indexOf("Edg/")
            }, K = function() {
                return b.name === R
            }, q = function() {
                return g("iPad")
            }, X = x.type === M, Q = x.type === U, Y = x.type === L, $ = b.name === D || q(), Z = b.name === S, J = function() {
                switch (x.type) {
                case B:
                case F:
                    return !0;
                default:
                    return !1
                }
            }() || q(), ee = x.type === B, te = x.type === F || q(), ne = x.type === P, re = k.name === V, ae = k.name === z, oe = k.name === W || q(), ie = b.name === E, se = b.name === N, ue = b.name === _ || b.name === D, ce = b.name === A, le = b.name === T || b.name === I, fe = k.version ? k.version : "none", pe = k.name ? k.name : "none", de = b.major, he = b.version, me = b.name, ve = x.vendor ? x.vendor : "none", ge = x.model ? x.model : "none", ye = w.name, be = w.version, xe = C, we = K() || G(), ke = b.name === O, Ce = x.type, Ee = (r = v()) && (/iPad|iPhone|iPod/.test(r.platform) || "MacIntel" === r.platform && r.maxTouchPoints > 1) && !window.MSStream, Se = q(), Ie = g("iPhone"), Te = g("iPod"), Ae = function() {
                var e = v()
                  , t = e && e.userAgent.toLowerCase();
                return "string" == typeof t && /electron/.test(t)
            }(), Ne = G(), _e = K(), Re = k.name === j, Oe = k.name === H, De = l(x.type);
            e.exports = {
                deviceDetect: function() {
                    var e = De.isBrowser
                      , t = De.isMobile
                      , n = De.isTablet
                      , r = De.isSmartTV
                      , a = De.isConsole
                      , o = De.isWearable;
                    return e ? f(e, b, w, k, C) : r ? m(r, w, k, C) : a ? h(a, w, k, C) : t || n ? p(De, x, k, C) : o ? d(o, w, k, C) : void 0
                },
                isSmartTV: X,
                isConsole: Q,
                isWearable: Y,
                isMobileSafari: $,
                isChromium: Z,
                isMobile: J,
                isMobileOnly: ee,
                isTablet: te,
                isBrowser: ne,
                isAndroid: re,
                isWinPhone: ae,
                isIOS: oe,
                isChrome: ie,
                isFirefox: se,
                isSafari: ue,
                isOpera: ce,
                isIE: le,
                osVersion: fe,
                osName: pe,
                fullBrowserVersion: de,
                browserVersion: he,
                browserName: me,
                mobileVendor: ve,
                mobileModel: ge,
                engineName: ye,
                engineVersion: be,
                getUA: xe,
                isEdge: we,
                isYandex: ke,
                deviceType: Ce,
                isIOS13: Ee,
                isIPad13: Se,
                isIPhone13: Ie,
                isIPod13: Te,
                isElectron: Ae,
                isEdgeChromium: Ne,
                isLegacyEdge: _e,
                isWindows: Re,
                isMacOs: Oe
            }
        }
        , function(e, t, n) {
            var r;
            /*!
	     * UAParser.js v0.7.18
	     * Lightweight JavaScript-based User-Agent string parser
	     * https://github.com/faisalman/ua-parser-js
	     *
	     * Copyright Â© 2012-2016 Faisal Salman <fyzlman@gmail.com>
	     * Dual licensed under GPLv2 or MIT
	     */
            !function(a, o) {
                var i = "function"
                  , s = "undefined"
                  , u = "object"
                  , c = "model"
                  , l = "name"
                  , f = "type"
                  , p = "vendor"
                  , d = "version"
                  , h = "architecture"
                  , m = "console"
                  , v = "mobile"
                  , g = "tablet"
                  , y = "smarttv"
                  , b = "wearable"
                  , x = {
                    extend: function(e, t) {
                        var n = {};
                        for (var r in e)
                            t[r] && t[r].length % 2 == 0 ? n[r] = t[r].concat(e[r]) : n[r] = e[r];
                        return n
                    },
                    has: function(e, t) {
                        return "string" == typeof e && -1 !== t.toLowerCase().indexOf(e.toLowerCase())
                    },
                    lowerize: function(e) {
                        return e.toLowerCase()
                    },
                    major: function(e) {
                        return "string" == typeof e ? e.replace(/[^\d\.]/g, "").split(".")[0] : o
                    },
                    trim: function(e) {
                        return e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
                    }
                }
                  , w = {
                    rgx: function(e, t) {
                        for (var n, r, a, s, c, l, f = 0; f < t.length && !c; ) {
                            var p = t[f]
                              , d = t[f + 1];
                            for (n = r = 0; n < p.length && !c; )
                                if (c = p[n++].exec(e))
                                    for (a = 0; a < d.length; a++)
                                        l = c[++r],
                                        Sy(s = d[a]) === u && s.length > 0 ? 2 == s.length ? Sy(s[1]) == i ? this[s[0]] = s[1].call(this, l) : this[s[0]] = s[1] : 3 == s.length ? Sy(s[1]) !== i || s[1].exec && s[1].test ? this[s[0]] = l ? l.replace(s[1], s[2]) : o : this[s[0]] = l ? s[1].call(this, l, s[2]) : o : 4 == s.length && (this[s[0]] = l ? s[3].call(this, l.replace(s[1], s[2])) : o) : this[s] = l || o;
                            f += 2
                        }
                    },
                    str: function(e, t) {
                        for (var n in t)
                            if (Sy(t[n]) === u && t[n].length > 0) {
                                for (var r = 0; r < t[n].length; r++)
                                    if (x.has(t[n][r], e))
                                        return "?" === n ? o : n
                            } else if (x.has(t[n], e))
                                return "?" === n ? o : n;
                        return e
                    }
                }
                  , k = {
                    browser: {
                        oldsafari: {
                            version: {
                                "1.0": "/8",
                                1.2: "/1",
                                1.3: "/3",
                                "2.0": "/412",
                                "2.0.2": "/416",
                                "2.0.3": "/417",
                                "2.0.4": "/419",
                                "?": "/"
                            }
                        }
                    },
                    device: {
                        amazon: {
                            model: {
                                "Fire Phone": ["SD", "KF"]
                            }
                        },
                        sprint: {
                            model: {
                                "Evo Shift 4G": "7373KT"
                            },
                            vendor: {
                                HTC: "APA",
                                Sprint: "Sprint"
                            }
                        }
                    },
                    os: {
                        windows: {
                            version: {
                                ME: "4.90",
                                "NT 3.11": "NT3.51",
                                "NT 4.0": "NT4.0",
                                2e3: "NT 5.0",
                                XP: ["NT 5.1", "NT 5.2"],
                                Vista: "NT 6.0",
                                7: "NT 6.1",
                                8: "NT 6.2",
                                8.1: "NT 6.3",
                                10: ["NT 6.4", "NT 10.0"],
                                RT: "ARM"
                            }
                        }
                    }
                }
                  , C = {
                    browser: [[/(opera\smini)\/([\w\.-]+)/i, /(opera\s[mobiletab]+).+version\/([\w\.-]+)/i, /(opera).+version\/([\w\.]+)/i, /(opera)[\/\s]+([\w\.]+)/i], [l, d], [/(opios)[\/\s]+([\w\.]+)/i], [[l, "Opera Mini"], d], [/\s(opr)\/([\w\.]+)/i], [[l, "Opera"], d], [/(kindle)\/([\w\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]*)/i, /(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i, /(?:ms|\()(ie)\s([\w\.]+)/i, /(rekonq)\/([\w\.]*)/i, /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark)\/([\w\.-]+)/i], [l, d], [/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i], [[l, "IE"], d], [/(edge|edgios|edgea)\/((\d+)?[\w\.]+)/i], [[l, "Edge"], d], [/(yabrowser)\/([\w\.]+)/i], [[l, "Yandex"], d], [/(puffin)\/([\w\.]+)/i], [[l, "Puffin"], d], [/((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i], [[l, "UCBrowser"], d], [/(comodo_dragon)\/([\w\.]+)/i], [[l, /_/g, " "], d], [/(micromessenger)\/([\w\.]+)/i], [[l, "WeChat"], d], [/(qqbrowserlite)\/([\w\.]+)/i], [l, d], [/(QQ)\/([\d\.]+)/i], [l, d], [/m?(qqbrowser)[\/\s]?([\w\.]+)/i], [l, d], [/(BIDUBrowser)[\/\s]?([\w\.]+)/i], [l, d], [/(2345Explorer)[\/\s]?([\w\.]+)/i], [l, d], [/(MetaSr)[\/\s]?([\w\.]+)/i], [l], [/(LBBROWSER)/i], [l], [/xiaomi\/miuibrowser\/([\w\.]+)/i], [d, [l, "MIUI Browser"]], [/;fbav\/([\w\.]+);/i], [d, [l, "Facebook"]], [/headlesschrome(?:\/([\w\.]+)|\s)/i], [d, [l, "Chrome Headless"]], [/\swv\).+(chrome)\/([\w\.]+)/i], [[l, /(.+)/, "$1 WebView"], d], [/((?:oculus|samsung)browser)\/([\w\.]+)/i], [[l, /(.+(?:g|us))(.+)/, "$1 $2"], d], [/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i], [d, [l, "Android Browser"]], [/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i], [l, d], [/(dolfin)\/([\w\.]+)/i], [[l, "Dolphin"], d], [/((?:android.+)crmo|crios)\/([\w\.]+)/i], [[l, "Chrome"], d], [/(coast)\/([\w\.]+)/i], [[l, "Opera Coast"], d], [/fxios\/([\w\.-]+)/i], [d, [l, "Firefox"]], [/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i], [d, [l, "Mobile Safari"]], [/version\/([\w\.]+).+?(mobile\s?safari|safari)/i], [d, l], [/webkit.+?(gsa)\/([\w\.]+).+?(mobile\s?safari|safari)(\/[\w\.]+)/i], [[l, "GSA"], d], [/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i], [l, [d, w.str, k.browser.oldsafari.version]], [/(konqueror)\/([\w\.]+)/i, /(webkit|khtml)\/([\w\.]+)/i], [l, d], [/(navigator|netscape)\/([\w\.-]+)/i], [[l, "Netscape"], d], [/(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i, /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([\w\.-]+)$/i, /(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i, /(links)\s\(([\w\.]+)/i, /(gobrowser)\/?([\w\.]*)/i, /(ice\s?browser)\/v?([\w\._]+)/i, /(mosaic)[\/\s]([\w\.]+)/i], [l, d]],
                    cpu: [[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i], [[h, "amd64"]], [/(ia32(?=;))/i], [[h, x.lowerize]], [/((?:i[346]|x)86)[;\)]/i], [[h, "ia32"]], [/windows\s(ce|mobile);\sppc;/i], [[h, "arm"]], [/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i], [[h, /ower/, "", x.lowerize]], [/(sun4\w)[;\)]/i], [[h, "sparc"]], [/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i], [[h, x.lowerize]]],
                    device: [[/\((ipad|playbook);[\w\s\);-]+(rim|apple)/i], [c, p, [f, g]], [/applecoremedia\/[\w\.]+ \((ipad)/], [c, [p, "Apple"], [f, g]], [/(apple\s{0,1}tv)/i], [[c, "Apple TV"], [p, "Apple"]], [/(archos)\s(gamepad2?)/i, /(hp).+(touchpad)/i, /(hp).+(tablet)/i, /(kindle)\/([\w\.]+)/i, /\s(nook)[\w\s]+build\/(\w+)/i, /(dell)\s(strea[kpr\s\d]*[\dko])/i], [p, c, [f, g]], [/(kf[A-z]+)\sbuild\/.+silk\//i], [c, [p, "Amazon"], [f, g]], [/(sd|kf)[0349hijorstuw]+\sbuild\/.+silk\//i], [[c, w.str, k.device.amazon.model], [p, "Amazon"], [f, v]], [/\((ip[honed|\s\w*]+);.+(apple)/i], [c, p, [f, v]], [/\((ip[honed|\s\w*]+);/i], [c, [p, "Apple"], [f, v]], [/(blackberry)[\s-]?(\w+)/i, /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]*)/i, /(hp)\s([\w\s]+\w)/i, /(asus)-?(\w+)/i], [p, c, [f, v]], [/\(bb10;\s(\w+)/i], [c, [p, "BlackBerry"], [f, v]], [/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone)/i], [c, [p, "Asus"], [f, g]], [/(sony)\s(tablet\s[ps])\sbuild\//i, /(sony)?(?:sgp.+)\sbuild\//i], [[p, "Sony"], [c, "Xperia Tablet"], [f, g]], [/android.+\s([c-g]\d{4}|so[-l]\w+)\sbuild\//i], [c, [p, "Sony"], [f, v]], [/\s(ouya)\s/i, /(nintendo)\s([wids3u]+)/i], [p, c, [f, m]], [/android.+;\s(shield)\sbuild/i], [c, [p, "Nvidia"], [f, m]], [/(playstation\s[34portablevi]+)/i], [c, [p, "Sony"], [f, m]], [/(sprint\s(\w+))/i], [[p, w.str, k.device.sprint.vendor], [c, w.str, k.device.sprint.model], [f, v]], [/(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i], [p, c, [f, g]], [/(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i, /(zte)-(\w*)/i, /(alcatel|geeksphone|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]*)/i], [p, [c, /_/g, " "], [f, v]], [/(nexus\s9)/i], [c, [p, "HTC"], [f, g]], [/d\/huawei([\w\s-]+)[;\)]/i, /(nexus\s6p)/i], [c, [p, "Huawei"], [f, v]], [/(microsoft);\s(lumia[\s\w]+)/i], [p, c, [f, v]], [/[\s\(;](xbox(?:\sone)?)[\s\);]/i], [c, [p, "Microsoft"], [f, m]], [/(kin\.[onetw]{3})/i], [[c, /\./g, " "], [p, "Microsoft"], [f, v]], [/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?:?(\s4g)?)[\w\s]+build\//i, /mot[\s-]?(\w*)/i, /(XT\d{3,4}) build\//i, /(nexus\s6)/i], [c, [p, "Motorola"], [f, v]], [/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i], [c, [p, "Motorola"], [f, g]], [/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i], [[p, x.trim], [c, x.trim], [f, y]], [/hbbtv.+maple;(\d+)/i], [[c, /^/, "SmartTV"], [p, "Samsung"], [f, y]], [/\(dtv[\);].+(aquos)/i], [c, [p, "Sharp"], [f, y]], [/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i, /((SM-T\w+))/i], [[p, "Samsung"], c, [f, g]], [/smart-tv.+(samsung)/i], [p, [f, y], c], [/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i, /(sam[sung]*)[\s-]*(\w+-?[\w-]*)/i, /sec-((sgh\w+))/i], [[p, "Samsung"], c, [f, v]], [/sie-(\w*)/i], [c, [p, "Siemens"], [f, v]], [/(maemo|nokia).*(n900|lumia\s\d+)/i, /(nokia)[\s_-]?([\w-]*)/i], [[p, "Nokia"], c, [f, v]], [/android\s3\.[\s\w;-]{10}(a\d{3})/i], [c, [p, "Acer"], [f, g]], [/android.+([vl]k\-?\d{3})\s+build/i], [c, [p, "LG"], [f, g]], [/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i], [[p, "LG"], c, [f, g]], [/(lg) netcast\.tv/i], [p, c, [f, y]], [/(nexus\s[45])/i, /lg[e;\s\/-]+(\w*)/i, /android.+lg(\-?[\d\w]+)\s+build/i], [c, [p, "LG"], [f, v]], [/android.+(ideatab[a-z0-9\-\s]+)/i], [c, [p, "Lenovo"], [f, g]], [/linux;.+((jolla));/i], [p, c, [f, v]], [/((pebble))app\/[\d\.]+\s/i], [p, c, [f, b]], [/android.+;\s(oppo)\s?([\w\s]+)\sbuild/i], [p, c, [f, v]], [/crkey/i], [[c, "Chromecast"], [p, "Google"]], [/android.+;\s(glass)\s\d/i], [c, [p, "Google"], [f, b]], [/android.+;\s(pixel c)\s/i], [c, [p, "Google"], [f, g]], [/android.+;\s(pixel xl|pixel)\s/i], [c, [p, "Google"], [f, v]], [/android.+;\s(\w+)\s+build\/hm\1/i, /android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i, /android.+(mi[\s\-_]*(?:one|one[\s_]plus|note lte)?[\s_]*(?:\d?\w?)[\s_]*(?:plus)?)\s+build/i, /android.+(redmi[\s\-_]*(?:note)?(?:[\s_]*[\w\s]+))\s+build/i], [[c, /_/g, " "], [p, "Xiaomi"], [f, v]], [/android.+(mi[\s\-_]*(?:pad)(?:[\s_]*[\w\s]+))\s+build/i], [[c, /_/g, " "], [p, "Xiaomi"], [f, g]], [/android.+;\s(m[1-5]\snote)\sbuild/i], [c, [p, "Meizu"], [f, g]], [/android.+a000(1)\s+build/i, /android.+oneplus\s(a\d{4})\s+build/i], [c, [p, "OnePlus"], [f, v]], [/android.+[;\/]\s*(RCT[\d\w]+)\s+build/i], [c, [p, "RCA"], [f, g]], [/android.+[;\/\s]+(Venue[\d\s]{2,7})\s+build/i], [c, [p, "Dell"], [f, g]], [/android.+[;\/]\s*(Q[T|M][\d\w]+)\s+build/i], [c, [p, "Verizon"], [f, g]], [/android.+[;\/]\s+(Barnes[&\s]+Noble\s+|BN[RT])(V?.*)\s+build/i], [[p, "Barnes & Noble"], c, [f, g]], [/android.+[;\/]\s+(TM\d{3}.*\b)\s+build/i], [c, [p, "NuVision"], [f, g]], [/android.+;\s(k88)\sbuild/i], [c, [p, "ZTE"], [f, g]], [/android.+[;\/]\s*(gen\d{3})\s+build.*49h/i], [c, [p, "Swiss"], [f, v]], [/android.+[;\/]\s*(zur\d{3})\s+build/i], [c, [p, "Swiss"], [f, g]], [/android.+[;\/]\s*((Zeki)?TB.*\b)\s+build/i], [c, [p, "Zeki"], [f, g]], [/(android).+[;\/]\s+([YR]\d{2})\s+build/i, /android.+[;\/]\s+(Dragon[\-\s]+Touch\s+|DT)(\w{5})\sbuild/i], [[p, "Dragon Touch"], c, [f, g]], [/android.+[;\/]\s*(NS-?\w{0,9})\sbuild/i], [c, [p, "Insignia"], [f, g]], [/android.+[;\/]\s*((NX|Next)-?\w{0,9})\s+build/i], [c, [p, "NextBook"], [f, g]], [/android.+[;\/]\s*(Xtreme\_)?(V(1[045]|2[015]|30|40|60|7[05]|90))\s+build/i], [[p, "Voice"], c, [f, v]], [/android.+[;\/]\s*(LVTEL\-)?(V1[12])\s+build/i], [[p, "LvTel"], c, [f, v]], [/android.+[;\/]\s*(V(100MD|700NA|7011|917G).*\b)\s+build/i], [c, [p, "Envizen"], [f, g]], [/android.+[;\/]\s*(Le[\s\-]+Pan)[\s\-]+(\w{1,9})\s+build/i], [p, c, [f, g]], [/android.+[;\/]\s*(Trio[\s\-]*.*)\s+build/i], [c, [p, "MachSpeed"], [f, g]], [/android.+[;\/]\s*(Trinity)[\-\s]*(T\d{3})\s+build/i], [p, c, [f, g]], [/android.+[;\/]\s*TU_(1491)\s+build/i], [c, [p, "Rotor"], [f, g]], [/android.+(KS(.+))\s+build/i], [c, [p, "Amazon"], [f, g]], [/android.+(Gigaset)[\s\-]+(Q\w{1,9})\s+build/i], [p, c, [f, g]], [/\s(tablet|tab)[;\/]/i, /\s(mobile)(?:[;\/]|\ssafari)/i], [[f, x.lowerize], p, c], [/(android[\w\.\s\-]{0,9});.+build/i], [c, [p, "Generic"]]],
                    engine: [[/windows.+\sedge\/([\w\.]+)/i], [d, [l, "EdgeHTML"]], [/(presto)\/([\w\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i, /(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i, /(icab)[\/\s]([23]\.[\d\.]+)/i], [l, d], [/rv\:([\w\.]{1,9}).+(gecko)/i], [d, l]],
                    os: [[/microsoft\s(windows)\s(vista|xp)/i], [l, d], [/(windows)\snt\s6\.2;\s(arm)/i, /(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s\w]*)/i, /(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i], [l, [d, w.str, k.os.windows.version]], [/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i], [[l, "Windows"], [d, w.str, k.os.windows.version]], [/\((bb)(10);/i], [[l, "BlackBerry"], d], [/(blackberry)\w*\/?([\w\.]*)/i, /(tizen)[\/\s]([\w\.]+)/i, /(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]*)/i, /linux;.+(sailfish);/i], [l, d], [/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]*)/i], [[l, "Symbian"], d], [/\((series40);/i], [l], [/mozilla.+\(mobile;.+gecko.+firefox/i], [[l, "Firefox OS"], d], [/(nintendo|playstation)\s([wids34portablevu]+)/i, /(mint)[\/\s\(]?(\w*)/i, /(mageia|vectorlinux)[;\s]/i, /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]*)/i, /(hurd|linux)\s?([\w\.]*)/i, /(gnu)\s?([\w\.]*)/i], [l, d], [/(cros)\s[\w]+\s([\w\.]+\w)/i], [[l, "Chromium OS"], d], [/(sunos)\s?([\w\.\d]*)/i], [[l, "Solaris"], d], [/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]*)/i], [l, d], [/(haiku)\s(\w+)/i], [l, d], [/cfnetwork\/.+darwin/i, /ip[honead]{2,4}(?:.*os\s([\w]+)\slike\smac|;\sopera)/i], [[d, /_/g, "."], [l, "iOS"]], [/(mac\sos\sx)\s?([\w\s\.]*)/i, /(macintosh|mac(?=_powerpc)\s)/i], [[l, "Mac OS"], [d, /_/g, "."]], [/((?:open)?solaris)[\/\s-]?([\w\.]*)/i, /(aix)\s((\d)(?=\.|\)|\s)[\w\.])*/i, /(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i, /(unix)\s?([\w\.]*)/i], [l, d]]
                }
                  , E = function e(t, n) {
                    if ("object" == Sy(t) && (n = t,
                    t = o),
                    !(this instanceof e))
                        return new e(t,n).getResult();
                    var r = t || (a && a.navigator && a.navigator.userAgent ? a.navigator.userAgent : "")
                      , i = n ? x.extend(C, n) : C;
                    return this.getBrowser = function() {
                        var e = {
                            name: o,
                            version: o
                        };
                        return w.rgx.call(e, r, i.browser),
                        e.major = x.major(e.version),
                        e
                    }
                    ,
                    this.getCPU = function() {
                        var e = {
                            architecture: o
                        };
                        return w.rgx.call(e, r, i.cpu),
                        e
                    }
                    ,
                    this.getDevice = function() {
                        var e = {
                            vendor: o,
                            model: o,
                            type: o
                        };
                        return w.rgx.call(e, r, i.device),
                        e
                    }
                    ,
                    this.getEngine = function() {
                        var e = {
                            name: o,
                            version: o
                        };
                        return w.rgx.call(e, r, i.engine),
                        e
                    }
                    ,
                    this.getOS = function() {
                        var e = {
                            name: o,
                            version: o
                        };
                        return w.rgx.call(e, r, i.os),
                        e
                    }
                    ,
                    this.getResult = function() {
                        return {
                            ua: this.getUA(),
                            browser: this.getBrowser(),
                            engine: this.getEngine(),
                            os: this.getOS(),
                            device: this.getDevice(),
                            cpu: this.getCPU()
                        }
                    }
                    ,
                    this.getUA = function() {
                        return r
                    }
                    ,
                    this.setUA = function(e) {
                        return r = e,
                        this
                    }
                    ,
                    this
                };
                E.VERSION = "0.7.18",
                E.BROWSER = {
                    NAME: l,
                    MAJOR: "major",
                    VERSION: d
                },
                E.CPU = {
                    ARCHITECTURE: h
                },
                E.DEVICE = {
                    MODEL: c,
                    VENDOR: p,
                    TYPE: f,
                    CONSOLE: m,
                    MOBILE: v,
                    SMARTTV: y,
                    TABLET: g,
                    WEARABLE: b,
                    EMBEDDED: "embedded"
                },
                E.ENGINE = {
                    NAME: l,
                    VERSION: d
                },
                E.OS = {
                    NAME: l,
                    VERSION: d
                },
                Sy(t) !== s ? (Sy(e) !== s && e.exports && (t = e.exports = E),
                t.UAParser = E) : n(3) ? (r = function() {
                    return E
                }
                .call(t, n, t, e)) === o || (e.exports = r) : a && (a.UAParser = E);
                var S = a && (a.jQuery || a.Zepto);
                if (Sy(S) !== s) {
                    var I = new E;
                    S.ua = I.getResult(),
                    S.ua.get = function() {
                        return I.getUA()
                    }
                    ,
                    S.ua.set = function(e) {
                        I.setUA(e);
                        var t = I.getResult();
                        for (var n in t)
                            S.ua[n] = t[n]
                    }
                }
            }("object" == ("undefined" == typeof window ? "undefined" : Sy(window)) ? window : this)
        }
        , function(e, t) {
            (function(t) {
                e.exports = t
            }
            ).call(t, {})
        }
        , function(e, t, n) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
              , a = n(0)
              , o = a.DEVICE_TYPES
              , i = a.defaultData
              , s = t.getNavigatorInstance = function() {
                return !("undefined" == typeof window || !window.navigator && !navigator) && (window.navigator || navigator)
            }
              , u = t.isIOS13Check = function(e) {
                var t = s();
                return t && t.platform && (-1 !== t.platform.indexOf(e) || "MacIntel" === t.platform && t.maxTouchPoints > 1 && !window.MSStream)
            }
            ;
            e.exports = {
                checkType: function(e) {
                    switch (e) {
                    case o.MOBILE:
                        return {
                            isMobile: !0
                        };
                    case o.TABLET:
                        return {
                            isTablet: !0
                        };
                    case o.SMART_TV:
                        return {
                            isSmartTV: !0
                        };
                    case o.CONSOLE:
                        return {
                            isConsole: !0
                        };
                    case o.WEARABLE:
                        return {
                            isWearable: !0
                        };
                    case o.BROWSER:
                        return {
                            isBrowser: !0
                        };
                    default:
                        return i
                    }
                },
                broPayload: function(e, t, n, r, a) {
                    return {
                        isBrowser: e,
                        browserMajorVersion: t.major,
                        browserFullVersion: t.version,
                        browserName: t.name,
                        engineName: n.name || !1,
                        engineVersion: n.version,
                        osName: r.name,
                        osVersion: r.version,
                        userAgent: a
                    }
                },
                mobilePayload: function(e, t, n, a) {
                    return r({}, e, {
                        vendor: t.vendor,
                        model: t.model,
                        os: n.name,
                        osVersion: n.version,
                        ua: a
                    })
                },
                stvPayload: function(e, t, n, r) {
                    return {
                        isSmartTV: e,
                        engineName: t.name,
                        engineVersion: t.version,
                        osName: n.name,
                        osVersion: n.version,
                        userAgent: r
                    }
                },
                consolePayload: function(e, t, n, r) {
                    return {
                        isConsole: e,
                        engineName: t.name,
                        engineVersion: t.version,
                        osName: n.name,
                        osVersion: n.version,
                        userAgent: r
                    }
                },
                wearPayload: function(e, t, n, r) {
                    return {
                        isWearable: e,
                        engineName: t.name,
                        engineVersion: t.version,
                        osName: n.name,
                        osVersion: n.version,
                        userAgent: r
                    }
                },
                getNavigatorInstance: s,
                isIOS13Check: u
            }
        }
        ])
    }
    ))
      , kw = function(e) {
        return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
    }(ww)
      , Cw = Object.freeze(Object.assign(Object.create(null), ww, {
        default: kw
    }));
    function Ew() {
        return "function" == typeof navigator.enumerateDevices ? navigator.enumerateDevices() : "object" === iw(navigator.mediaDevices) && "function" == typeof navigator.mediaDevices.enumerateDevices ? navigator.mediaDevices.enumerateDevices() : new Promise((function(e, t) {
            try {
                if (null == window.MediaStreamTrack || null == window.MediaStreamTrack.getSources)
                    throw new Error;
                window.MediaStreamTrack.getSources((function(t) {
                    e(t.filter((function(e) {
                        return "video" === e.kind.toLowerCase() || "videoinput" === e.kind.toLowerCase()
                    }
                    )).map((function(e) {
                        return {
                            deviceId: null != e.deviceId ? e.deviceId : "",
                            groupId: e.groupId,
                            kind: "videoinput",
                            label: e.label,
                            toJSON: function() {
                                return this
                            }
                        }
                    }
                    )))
                }
                ))
            } catch (e) {
                return t(e)
            }
        }
        ))
    }
    function Sw() {
        var e = dw(["\n  z-index: ", ";\n  position: absolute;\n  top: 40px;\n  color: red;\n"]);
        return Sw = function() {
            return e
        }
        ,
        e
    }
    function Iw() {
        var e = dw(["\n  z-index: ", ";\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 20px;\n"]);
        return Iw = function() {
            return e
        }
        ,
        e
    }
    function Tw() {
        var e = dw(["\n  cursor: pointer;\n  text-align: center;\n  width: 50px;\n  img {\n    width: 100%;\n  }\n"]);
        return Tw = function() {
            return e
        }
        ,
        e
    }
    function Aw() {
        var e = dw(["\n  width: 100%;\n  ", "\n"]);
        return Aw = function() {
            return e
        }
        ,
        e
    }
    function Nw() {
        var e = dw(["\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: #000;\n  display: flex;\n  justify-content: center;\n  z-index: ", ";\n  ", "\n"]);
        return Nw = function() {
            return e
        }
        ,
        e
    }
    var _w = Yg.Errors
      , Rw = ow.div(Nw(), 1e3, (function(e) {
        return e.checkCameraMode && "opacity: 0;"
    }
    ))
      , Ow = ow.video(Aw(), (function(e) {
        return e.flipHorizontal && "\n     transform: scaleX(-1);\n  "
    }
    ))
      , Dw = ow.div(Tw())
      , Bw = ow(Dw)(Iw(), 1002)
      , Fw = ow.div(Sw(), 1002)
      , Mw = kg.createRef()
      , Pw = function() {
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia)
            return navigator.mediaDevices;
        var e = navigator.mozGetUserMedia || navigator.webkitGetUserMedia;
        return e ? {
            getUserMedia: function(t) {
                return new Promise((function(n, r) {
                    e.call(navigator, t, n, r)
                }
                ))
            }
        } : null
    }();
    function Lw(e) {
        var t = e.checkCameraMode
          , n = e.frontCamera
          , r = e.onClose
          , a = e.children
          , o = e.onVideoPlayed
          , i = e.flipHorizontal
          , s = e.videoSettings
          , u = e.refVideo
          , c = e.onError
          , l = ey.useSDKSettings().lang
          , f = hw(kg.useState(""), 2)
          , p = f[0]
          , d = f[1]
          , h = ry.useAsset("ic_close.png")
          , m = kg.useCallback((function() {
            var e;
            (null == u || null === (e = u.current) || void 0 === e ? void 0 : e.srcObject)instanceof MediaStream && u.current.srcObject.getVideoTracks().forEach((function(e) {
                return e.stop()
            }
            ))
        }
        ), [u]);
        kg.useEffect((function() {
            var e = u.current;
            function t(e) {
                return r.apply(this, arguments)
            }
            function r() {
                return (r = uw(regeneratorRuntime.mark((function t(r) {
                    var a;
                    return regeneratorRuntime.wrap((function(t) {
                        for (; ; )
                            switch (t.prev = t.next) {
                            case 0:
                                return t.prev = 0,
                                t.next = 3,
                                Pw.getUserMedia({
                                    audio: !1,
                                    video: pw(pw({}, r ? {
                                        deviceId: r
                                    } : {
                                        facingMode: n ? "user" : "environment"
                                    }), s || {
                                        width: {
                                            ideal: ww.isIOS ? 9999 : 1920
                                        },
                                        height: {
                                            ideal: ww.isIOS ? 9999 : 1920
                                        }
                                    })
                                });
                            case 3:
                                (a = t.sent) ? e.srcObject = a : (d(_w.not_supported.msg[l]),
                                c(_w.not_supported)),
                                t.next = 10;
                                break;
                            case 7:
                                t.prev = 7,
                                t.t0 = t.catch(0),
                                "NotAllowedError" === t.t0.name ? (d(_w.no_permission.msg[l]),
                                c(_w.no_permission)) : (d(t.t0.message),
                                c({
                                    code: t.t0.name || t.t0.code
                                }));
                            case 10:
                            case "end":
                                return t.stop()
                            }
                    }
                    ), t, null, [[0, 7]])
                }
                )))).apply(this, arguments)
            }
            function a() {
                return (a = uw(regeneratorRuntime.mark((function r() {
                    var a, i, s;
                    return regeneratorRuntime.wrap((function(r) {
                        for (; ; )
                            switch (r.prev = r.next) {
                            case 0:
                                if (!ww.isAndroid || !1 !== n) {
                                    r.next = 19;
                                    break
                                }
                                return r.next = 3,
                                t();
                            case 3:
                                return r.prev = 3,
                                r.next = 6,
                                Ew();
                            case 6:
                                if (a = r.sent,
                                !((i = a.filter((function(e) {
                                    return "videoinput" === e.kind && e.label.includes("0")
                                }
                                ))).length > 0)) {
                                    r.next = 12;
                                    break
                                }
                                return s = i[0].deviceId,
                                r.next = 12,
                                t(s);
                            case 12:
                                r.next = 17;
                                break;
                            case 14:
                                r.prev = 14,
                                r.t0 = r.catch(3),
                                console.error(r.t0);
                            case 17:
                                r.next = 21;
                                break;
                            case 19:
                                return r.next = 21,
                                t();
                            case 21:
                                e.onloadedmetadata = function() {
                                    e.play();
                                    var t = window.innerWidth
                                      , n = window.innerHeight
                                      , r = gy.analyzeVideoAndWindowSizes(e)
                                      , a = r.lostX
                                      , i = void 0 === a ? 0 : a
                                      , s = r.lostY
                                      , u = void 0 === s ? 0 : s
                                      , c = Math.min(t, Math.floor(t - 2 * i))
                                      , l = Math.min(n, Math.floor(n - 2 * u));
                                    o && o({
                                        clientWidth: t,
                                        clientHeight: n,
                                        videoAreaWidth: c,
                                        videoAreaHeight: l,
                                        lostX: i,
                                        lostY: u
                                    })
                                }
                                ;
                            case 22:
                            case "end":
                                return r.stop()
                            }
                    }
                    ), r, null, [[3, 14]])
                }
                )))).apply(this, arguments)
            }
            return !Pw || ww.browserName && ["facebook"].includes(ww.browserName.toLowerCase()) ? (d(_w.not_supported.msg[l]),
            c(_w.not_supported)) : e && function() {
                a.apply(this, arguments)
            }(),
            function() {
                m()
            }
        }
        ), [n, m, o, s, u, l, c]);
        var v = kg.useCallback((function() {
            m(),
            r && r()
        }
        ), [r, m]);
        return kg.createElement(Rw, {
            checkCameraMode: t
        }, p ? kg.createElement(Fw, null, p) : kg.createElement(kg.Fragment, null, kg.createElement(Ow, {
            ref: u,
            playsInline: !0,
            muted: !0,
            flipHorizontal: i
        }), a), kg.createElement(Bw, {
            onClick: v
        }, kg.createElement("img", {
            src: h,
            alt: ""
        })))
    }
    Lw.propTypes = {
        checkCameraMode: qg.bool,
        frontCamera: qg.bool,
        onClose: qg.func,
        onError: qg.func,
        onVideoPlayed: qg.func,
        children: qg.node,
        flipHorizontal: qg.bool,
        videoSettings: qg.object,
        refVideo: qg.object
    },
    Lw.defaultProps = {
        checkCameraMode: !1,
        frontCamera: !0,
        onClose: null,
        onError: function() {},
        onVideoPlayed: null,
        children: null,
        flipHorizontal: !1,
        videoSettings: null,
        refVideo: null
    };
    var Uw = kg.forwardRef((function(e, t) {
        return kg.createElement(Lw, lw({}, e, {
            refVideo: t || Mw
        }))
    }
    ));
    function Vw() {
        var e = dw(["\n  position: relative;\n"]);
        return Vw = function() {
            return e
        }
        ,
        e
    }
    function zw() {
        var e = dw(["\n  width: 100%;\n  height: 100%;\n  td {\n    text-align: center;\n    vertical-align: middle;\n    padding: 0;\n    border: 0;\n  }\n  border-spacing: 0px;\n  table-layout: auto;\n"]);
        return zw = function() {
            return e
        }
        ,
        e
    }
    var Ww = ow.table(zw())
      , jw = ow.div(Vw())
      , Hw = Array.from(Array(3).keys())
      , Gw = Array.from(Array(3).keys());
    function Kw(e) {
        var t = e.children
          , n = e.x
          , r = e.y
          , a = e.width
          , o = e.height
          , i = e.className
          , s = e.surroundStyle;
        return kg.createElement(Ww, {
            className: i
        }, Hw.map((function(e, i) {
            return kg.createElement("tr", {
                key: e,
                style: {
                    height: 0 === i ? r : "auto"
                }
            }, Gw.map((function(e, r) {
                var u = 1 === i && 1 === r
                  , c = "auto";
                return u ? c = a : 0 === r && (c = n),
                kg.createElement("td", {
                    key: e,
                    style: pw({
                        width: c,
                        height: u ? o : "auto"
                    }, u ? {} : s)
                }, u ? kg.createElement(jw, {
                    style: {
                        width: c,
                        height: o
                    }
                }, t) : null)
            }
            )))
        }
        )))
    }
    function qw() {
        var e = dw(["\n  height: 100%;\n  vertical-align: middle;\n  margin: 0;\n"]);
        return qw = function() {
            return e
        }
        ,
        e
    }
    function Xw() {
        var e = dw(["\n  background: transparent;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ", ";\n"]);
        return Xw = function() {
            return e
        }
        ,
        e
    }
    Kw.propTypes = {
        children: qg.node,
        x: qg.string,
        y: qg.string,
        width: qg.string,
        height: qg.string,
        className: qg.string,
        surroundStyle: qg.object
    },
    Kw.defaultProps = {
        children: null,
        x: "auto",
        y: "auto",
        width: "auto",
        height: "auto",
        className: "",
        surroundStyle: {}
    };
    var Qw = ow(Kw)(Xw(), 1001)
      , Yw = ow.img(qw());
    function $w(e) {
        var t = e.className;
        return kg.createElement("svg", {
            className: t,
            width: "38px",
            height: "32px",
            viewBox: "0 0 24 21"
        }, kg.createElement("title", null, "FA45C15C-1E21-4D7B-9585-07FB9F999CB8"), kg.createElement("desc", null, "Created with sketchtool."), kg.createElement("g", {
            id: "Web-demo",
            stroke: "none",
            strokeWidth: "1",
            fill: "none",
            fillRule: "evenodd"
        }, kg.createElement("g", {
            id: "step1",
            transform: "translate(-950.000000, -380.000000)",
            fill: "currentColor",
            fillRule: "nonzero"
        }, kg.createElement("g", {
            id: "Group",
            transform: "translate(950.000000, 380.000000)"
        }, kg.createElement("g", {
            id: "Group-2"
        }, kg.createElement("g", {
            id: "camera"
        }, kg.createElement("path", {
            d: "M21,3 L17,3 L15,0 L9,0 L7,3 L3,3 C1.34314575,3 0,4.34314575 0,6 L0,18 C0,19.6568542 1.34314575,21 3,21 L21,21 C22.6568542,21 24,19.6568542 24,18 L24,6 C24,4.34314575 22.6568542,3 21,3 Z M12,17 C9.23857625,17 7,14.7614237 7,12 C7,9.23857625 9.23857625,7 12,7 C14.7614237,7 17,9.23857625 17,12 C17,14.7614237 14.7614237,17 12,17 L12,17 Z",
            id: "Shape"
        })))))))
    }
    $w.propTypes = {
        className: qg.string
    },
    $w.defaultProps = {
        className: ""
    };
    var Zw = function(e) {
        var t = Sy(e);
        return null != e && ("object" == t || "function" == t)
    }
      , Jw = "object" == Sy(yw) && yw && yw.Object === Object && yw
      , ek = "object" == ("undefined" == typeof self ? "undefined" : Sy(self)) && self && self.Object === Object && self
      , tk = Jw || ek || Function("return this")()
      , nk = function() {
        return tk.Date.now()
    }
      , rk = tk.Symbol
      , ak = Object.prototype
      , ok = ak.hasOwnProperty
      , ik = ak.toString
      , sk = rk ? rk.toStringTag : void 0
      , uk = Object.prototype.toString
      , ck = rk ? rk.toStringTag : void 0
      , lk = function(e) {
        return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : ck && ck in Object(e) ? function(e) {
            var t = ok.call(e, sk)
              , n = e[sk];
            try {
                e[sk] = void 0;
                var r = !0
            } catch (e) {}
            var a = ik.call(e);
            return r && (t ? e[sk] = n : delete e[sk]),
            a
        }(e) : function(e) {
            return uk.call(e)
        }(e)
    }
      , fk = function(e) {
        return "symbol" == Sy(e) || function(e) {
            return null != e && "object" == Sy(e)
        }(e) && "[object Symbol]" == lk(e)
    }
      , pk = /^\s+|\s+$/g
      , dk = /^[-+]0x[0-9a-f]+$/i
      , hk = /^0b[01]+$/i
      , mk = /^0o[0-7]+$/i
      , vk = parseInt
      , gk = function(e) {
        if ("number" == typeof e)
            return e;
        if (fk(e))
            return NaN;
        if (Zw(e)) {
            var t = "function" == typeof e.valueOf ? e.valueOf() : e;
            e = Zw(t) ? t + "" : t
        }
        if ("string" != typeof e)
            return 0 === e ? e : +e;
        e = e.replace(pk, "");
        var n = hk.test(e);
        return n || mk.test(e) ? vk(e.slice(2), n ? 2 : 8) : dk.test(e) ? NaN : +e
    }
      , yk = Math.max
      , bk = Math.min
      , xk = function(e, t, n) {
        var r, a, o, i, s, u, c = 0, l = !1, f = !1, p = !0;
        if ("function" != typeof e)
            throw new TypeError("Expected a function");
        function d(t) {
            var n = r
              , o = a;
            return r = a = void 0,
            c = t,
            i = e.apply(o, n)
        }
        function h(e) {
            return c = e,
            s = setTimeout(v, t),
            l ? d(e) : i
        }
        function m(e) {
            var n = e - u;
            return void 0 === u || n >= t || n < 0 || f && e - c >= o
        }
        function v() {
            var e = nk();
            if (m(e))
                return g(e);
            s = setTimeout(v, function(e) {
                var n = t - (e - u);
                return f ? bk(n, o - (e - c)) : n
            }(e))
        }
        function g(e) {
            return s = void 0,
            p && r ? d(e) : (r = a = void 0,
            i)
        }
        function y() {
            var e = nk()
              , n = m(e);
            if (r = arguments,
            a = this,
            u = e,
            n) {
                if (void 0 === s)
                    return h(u);
                if (f)
                    return clearTimeout(s),
                    s = setTimeout(v, t),
                    d(u)
            }
            return void 0 === s && (s = setTimeout(v, t)),
            i
        }
        return t = gk(t) || 0,
        Zw(n) && (l = !!n.leading,
        o = (f = "maxWait"in n) ? yk(gk(n.maxWait) || 0, t) : o,
        p = "trailing"in n ? !!n.trailing : p),
        y.cancel = function() {
            void 0 !== s && clearTimeout(s),
            c = 0,
            r = u = a = s = void 0
        }
        ,
        y.flush = function() {
            return void 0 === s ? i : g(nk())
        }
        ,
        y
    }
      , wk = function() {
        function e(t, n) {
            Ay(this, e),
            this.backend = t,
            this.dataMover = n,
            this.data = new WeakMap,
            this.dataIdsCount = 0
        }
        return _y(e, [{
            key: "get",
            value: function(e) {
                return this.data.has(e) || this.dataMover.moveData(this.backend, e),
                this.data.get(e)
            }
        }, {
            key: "set",
            value: function(e, t) {
                this.dataIdsCount++,
                this.data.set(e, t)
            }
        }, {
            key: "has",
            value: function(e) {
                return this.data.has(e)
            }
        }, {
            key: "delete",
            value: function(e) {
                return this.dataIdsCount--,
                this.data.delete(e)
            }
        }, {
            key: "numDataIds",
            value: function() {
                return this.dataIdsCount
            }
        }]),
        e
    }()
      , kk = function() {
        function e() {
            Ay(this, e)
        }
        return _y(e, [{
            key: "time",
            value: function(e) {
                return Ck("time")
            }
        }, {
            key: "read",
            value: function(e) {
                return Ck("read")
            }
        }, {
            key: "readSync",
            value: function(e) {
                return Ck("readSync")
            }
        }, {
            key: "numDataIds",
            value: function() {
                return Ck("numDataIds")
            }
        }, {
            key: "disposeData",
            value: function(e) {
                return Ck("disposeData")
            }
        }, {
            key: "write",
            value: function(e, t, n) {
                return Ck("write")
            }
        }, {
            key: "move",
            value: function(e, t, n, r) {
                return Ck("move")
            }
        }, {
            key: "memory",
            value: function() {
                return Ck("memory")
            }
        }, {
            key: "floatPrecision",
            value: function() {
                return Ck("floatPrecision")
            }
        }, {
            key: "epsilon",
            value: function() {
                return 32 === this.floatPrecision() ? 1e-7 : 1e-4
            }
        }, {
            key: "batchMatMul",
            value: function(e, t, n, r) {
                return Ck("batchMatMul")
            }
        }, {
            key: "fusedBatchMatMul",
            value: function(e) {
                e.a,
                e.b,
                e.transposeA,
                e.transposeB,
                e.bias,
                e.activation,
                e.preluActivationWeights;
                return Ck("fusedBatchMatMul")
            }
        }, {
            key: "slice",
            value: function(e, t, n) {
                return Ck("slice")
            }
        }, {
            key: "stridedSlice",
            value: function(e, t, n, r) {
                return Ck("stridedSlice")
            }
        }, {
            key: "unstack",
            value: function(e, t) {
                return Ck("unstack")
            }
        }, {
            key: "reverse",
            value: function(e, t) {
                return Ck("reverse")
            }
        }, {
            key: "concat",
            value: function(e, t) {
                return Ck("concat")
            }
        }, {
            key: "neg",
            value: function(e) {
                return Ck("neg")
            }
        }, {
            key: "add",
            value: function(e, t) {
                return Ck("add")
            }
        }, {
            key: "addN",
            value: function(e) {
                return Ck("addN")
            }
        }, {
            key: "subtract",
            value: function(e, t) {
                return Ck("subtract")
            }
        }, {
            key: "multiply",
            value: function(e, t) {
                return Ck("multiply")
            }
        }, {
            key: "realDivide",
            value: function(e, t) {
                return Ck("realDivide")
            }
        }, {
            key: "floorDiv",
            value: function(e, t) {
                return Ck("floorDiv")
            }
        }, {
            key: "sum",
            value: function(e, t) {
                return Ck("sum")
            }
        }, {
            key: "prod",
            value: function(e, t) {
                return Ck("prod")
            }
        }, {
            key: "unsortedSegmentSum",
            value: function(e, t, n) {
                return Ck("unsortedSegmentSum")
            }
        }, {
            key: "argMin",
            value: function(e, t) {
                return Ck("argMin")
            }
        }, {
            key: "argMax",
            value: function(e, t) {
                return Ck("argMax")
            }
        }, {
            key: "equal",
            value: function(e, t) {
                return Ck("equal")
            }
        }, {
            key: "notEqual",
            value: function(e, t) {
                return Ck("notEqual")
            }
        }, {
            key: "less",
            value: function(e, t) {
                return Ck("less")
            }
        }, {
            key: "lessEqual",
            value: function(e, t) {
                return Ck("lessEqual")
            }
        }, {
            key: "greater",
            value: function(e, t) {
                return Ck("greater")
            }
        }, {
            key: "greaterEqual",
            value: function(e, t) {
                return Ck("greaterEqual")
            }
        }, {
            key: "logicalNot",
            value: function(e) {
                return Ck("logicalNot")
            }
        }, {
            key: "logicalAnd",
            value: function(e, t) {
                return Ck("logicalAnd")
            }
        }, {
            key: "logicalOr",
            value: function(e, t) {
                return Ck("logicalOr")
            }
        }, {
            key: "where",
            value: function(e) {
                return Ck("where")
            }
        }, {
            key: "select",
            value: function(e, t, n) {
                return Ck("select")
            }
        }, {
            key: "topk",
            value: function(e, t, n) {
                return Ck("topk")
            }
        }, {
            key: "min",
            value: function(e, t) {
                return Ck("min")
            }
        }, {
            key: "minimum",
            value: function(e, t) {
                return Ck("minimum")
            }
        }, {
            key: "mod",
            value: function(e, t) {
                return Ck("mod")
            }
        }, {
            key: "max",
            value: function(e, t) {
                return Ck("max")
            }
        }, {
            key: "maximum",
            value: function(e, t) {
                return Ck("maximum")
            }
        }, {
            key: "all",
            value: function(e, t) {
                return Ck("all")
            }
        }, {
            key: "any",
            value: function(e, t) {
                return Ck("any")
            }
        }, {
            key: "squaredDifference",
            value: function(e, t) {
                return Ck("squaredDifference")
            }
        }, {
            key: "ceil",
            value: function(e) {
                return Ck("ceil")
            }
        }, {
            key: "floor",
            value: function(e) {
                return Ck("floor")
            }
        }, {
            key: "round",
            value: function(e) {
                return Ck("round")
            }
        }, {
            key: "sign",
            value: function(e) {
                return Ck("sign")
            }
        }, {
            key: "isNaN",
            value: function(e) {
                return Ck("isNaN")
            }
        }, {
            key: "isInf",
            value: function(e) {
                return Ck("isInf")
            }
        }, {
            key: "isFinite",
            value: function(e) {
                return Ck("isFinite")
            }
        }, {
            key: "pow",
            value: function(e, t) {
                return Ck("pow")
            }
        }, {
            key: "exp",
            value: function(e) {
                return Ck("exp")
            }
        }, {
            key: "expm1",
            value: function(e) {
                return Ck("expm1")
            }
        }, {
            key: "softmax",
            value: function(e, t) {
                return Ck("softmax")
            }
        }, {
            key: "log",
            value: function(e) {
                return Ck("log")
            }
        }, {
            key: "log1p",
            value: function(e) {
                return Ck("log1p")
            }
        }, {
            key: "sqrt",
            value: function(e) {
                return Ck("sqrt")
            }
        }, {
            key: "rsqrt",
            value: function(e) {
                return Ck("rsqrt")
            }
        }, {
            key: "square",
            value: function(e) {
                return Ck("square")
            }
        }, {
            key: "reciprocal",
            value: function(e) {
                return Ck("reciprocal")
            }
        }, {
            key: "relu",
            value: function(e) {
                return Ck("relu")
            }
        }, {
            key: "relu6",
            value: function(e) {
                return Ck("relu6")
            }
        }, {
            key: "prelu",
            value: function(e, t) {
                return Ck("prelu")
            }
        }, {
            key: "elu",
            value: function(e) {
                return Ck("elu")
            }
        }, {
            key: "eluDer",
            value: function(e, t) {
                return Ck("eluDer")
            }
        }, {
            key: "selu",
            value: function(e) {
                return Ck("selu")
            }
        }, {
            key: "int",
            value: function(e) {
                return Ck("int")
            }
        }, {
            key: "clip",
            value: function(e, t, n) {
                return Ck("clip")
            }
        }, {
            key: "abs",
            value: function(e) {
                return Ck("abs")
            }
        }, {
            key: "complexAbs",
            value: function(e) {
                return Ck("complexAbs")
            }
        }, {
            key: "sigmoid",
            value: function(e) {
                return Ck("sigmoid")
            }
        }, {
            key: "softplus",
            value: function(e) {
                return Ck("softplus")
            }
        }, {
            key: "sin",
            value: function(e) {
                return Ck("sin")
            }
        }, {
            key: "cos",
            value: function(e) {
                return Ck("cos")
            }
        }, {
            key: "tan",
            value: function(e) {
                return Ck("tan")
            }
        }, {
            key: "asin",
            value: function(e) {
                return Ck("asin")
            }
        }, {
            key: "acos",
            value: function(e) {
                return Ck("acos")
            }
        }, {
            key: "atan",
            value: function(e) {
                return Ck("atan")
            }
        }, {
            key: "atan2",
            value: function(e, t) {
                return Ck("atan2")
            }
        }, {
            key: "sinh",
            value: function(e) {
                return Ck("sinh")
            }
        }, {
            key: "cosh",
            value: function(e) {
                return Ck("cosh")
            }
        }, {
            key: "tanh",
            value: function(e) {
                return Ck("tanh")
            }
        }, {
            key: "asinh",
            value: function(e) {
                return Ck("asinh")
            }
        }, {
            key: "acosh",
            value: function(e) {
                return Ck("acosh")
            }
        }, {
            key: "atanh",
            value: function(e) {
                return Ck("atanh")
            }
        }, {
            key: "erf",
            value: function(e) {
                return Ck("erf")
            }
        }, {
            key: "step",
            value: function(e, t) {
                return Ck("step")
            }
        }, {
            key: "fusedConv2d",
            value: function(e) {
                e.input,
                e.filter,
                e.convInfo,
                e.bias,
                e.activation,
                e.preluActivationWeights;
                return Ck("fusedConv2d")
            }
        }, {
            key: "conv2d",
            value: function(e, t, n) {
                return Ck("conv2d")
            }
        }, {
            key: "conv2dDerInput",
            value: function(e, t, n) {
                return Ck("conv2dDerInput")
            }
        }, {
            key: "conv2dDerFilter",
            value: function(e, t, n) {
                return Ck("conv2dDerFilter")
            }
        }, {
            key: "fusedDepthwiseConv2D",
            value: function(e) {
                e.input,
                e.filter,
                e.convInfo,
                e.bias,
                e.activation,
                e.preluActivationWeights;
                return Ck("fusedDepthwiseConv2D")
            }
        }, {
            key: "depthwiseConv2D",
            value: function(e, t, n) {
                return Ck("depthwiseConv2D")
            }
        }, {
            key: "depthwiseConv2DDerInput",
            value: function(e, t, n) {
                return Ck("depthwiseConv2DDerInput")
            }
        }, {
            key: "depthwiseConv2DDerFilter",
            value: function(e, t, n) {
                return Ck("depthwiseConv2DDerFilter")
            }
        }, {
            key: "conv3d",
            value: function(e, t, n) {
                return Ck("conv3d")
            }
        }, {
            key: "conv3dDerInput",
            value: function(e, t, n) {
                return Ck("conv3dDerInput")
            }
        }, {
            key: "conv3dDerFilter",
            value: function(e, t, n) {
                return Ck("conv3dDerFilter")
            }
        }, {
            key: "maxPool",
            value: function(e, t) {
                return Ck("maxPool")
            }
        }, {
            key: "maxPoolBackprop",
            value: function(e, t, n, r) {
                return Ck("maxPoolBackprop")
            }
        }, {
            key: "avgPool",
            value: function(e, t) {
                return Ck("avgPool")
            }
        }, {
            key: "avgPoolBackprop",
            value: function(e, t, n) {
                return Ck("avgPoolBackprop")
            }
        }, {
            key: "avgPool3d",
            value: function(e, t) {
                return Ck("avgPool3d")
            }
        }, {
            key: "avgPool3dBackprop",
            value: function(e, t, n) {
                return Ck("avgPool3dBackprop")
            }
        }, {
            key: "maxPool3d",
            value: function(e, t) {
                return Ck("maxPool3d")
            }
        }, {
            key: "maxPool3dBackprop",
            value: function(e, t, n, r) {
                return Ck("maxPool3dBackprop")
            }
        }, {
            key: "reshape",
            value: function(e, t) {
                return Ck("reshape")
            }
        }, {
            key: "cast",
            value: function(e, t) {
                return Ck("cast")
            }
        }, {
            key: "tile",
            value: function(e, t) {
                return Ck("tile")
            }
        }, {
            key: "pad",
            value: function(e, t, n) {
                return Ck("pad")
            }
        }, {
            key: "transpose",
            value: function(e, t) {
                return Ck("transpose")
            }
        }, {
            key: "gather",
            value: function(e, t, n) {
                return Ck("gather")
            }
        }, {
            key: "gatherND",
            value: function(e, t) {
                return Ck("gatherND")
            }
        }, {
            key: "scatterND",
            value: function(e, t, n) {
                return Ck("scatterND")
            }
        }, {
            key: "batchToSpaceND",
            value: function(e, t, n) {
                return Ck("batchToSpaceND")
            }
        }, {
            key: "spaceToBatchND",
            value: function(e, t, n) {
                return Ck("spaceToBatchND")
            }
        }, {
            key: "resizeBilinear",
            value: function(e, t, n, r) {
                return Ck("resizeBilinear")
            }
        }, {
            key: "resizeBilinearBackprop",
            value: function(e, t, n) {
                return Ck("resizeBilinearBackprop")
            }
        }, {
            key: "resizeNearestNeighbor",
            value: function(e, t, n, r) {
                return Ck("resizeNearestNeighbor")
            }
        }, {
            key: "resizeNearestNeighborBackprop",
            value: function(e, t, n) {
                return Ck("resizeNearestNeighborBackprop")
            }
        }, {
            key: "batchNorm",
            value: function(e, t, n, r, a, o) {
                return Ck("batchNorm")
            }
        }, {
            key: "localResponseNormalization4D",
            value: function(e, t, n, r, a) {
                return Ck("localResponseNormalization4D")
            }
        }, {
            key: "LRNGrad",
            value: function(e, t, n, r, a, o, i) {
                return Ck("LRNGrad")
            }
        }, {
            key: "multinomial",
            value: function(e, t, n, r) {
                return Ck("multinomial")
            }
        }, {
            key: "oneHot",
            value: function(e, t, n, r) {
                return Ck("oneHot")
            }
        }, {
            key: "cumsum",
            value: function(e, t, n, r) {
                return Ck("cumsum")
            }
        }, {
            key: "nonMaxSuppression",
            value: function(e, t, n, r, a) {
                return Ck("nonMaxSuppression")
            }
        }, {
            key: "fft",
            value: function(e) {
                return Ck("fft")
            }
        }, {
            key: "ifft",
            value: function(e) {
                return Ck("ifft")
            }
        }, {
            key: "complex",
            value: function(e, t) {
                return Ck("complex")
            }
        }, {
            key: "real",
            value: function(e) {
                return Ck("real")
            }
        }, {
            key: "imag",
            value: function(e) {
                return Ck("imag")
            }
        }, {
            key: "cropAndResize",
            value: function(e, t, n, r, a, o) {
                return Ck("cropAndResize")
            }
        }, {
            key: "depthToSpace",
            value: function(e, t, n) {
                return Ck("depthToSpace")
            }
        }, {
            key: "split",
            value: function(e, t, n) {
                return Ck("split")
            }
        }, {
            key: "sparseToDense",
            value: function(e, t, n, r) {
                return Ck("sparseToDense")
            }
        }, {
            key: "diag",
            value: function(e) {
                return Ck("diag")
            }
        }, {
            key: "fill",
            value: function(e, t, n) {
                return Ck("fill")
            }
        }, {
            key: "onesLike",
            value: function(e) {
                return Ck("onesLike")
            }
        }, {
            key: "zerosLike",
            value: function(e) {
                return Ck("zerosLike")
            }
        }, {
            key: "linspace",
            value: function(e, t, n) {
                return Ck("linspace")
            }
        }, {
            key: "dispose",
            value: function() {
                return Ck("dispose")
            }
        }]),
        e
    }();
    function Ck(e) {
        throw new Error("'".concat(e, "' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen"))
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function Ek(e, t, n) {
        return Math.max(e, Math.min(t, n))
    }
    function Sk(e) {
        return e % 2 == 0 ? e : e + 1
    }
    function Ik(e, t) {
        if (!e)
            throw new Error("string" == typeof t ? t : t())
    }
    function Tk(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
        Ik(Rk(e, t), (function() {
            return n + " Shapes ".concat(e, " and ").concat(t, " must match")
        }
        ))
    }
    function Ak(e) {
        Ik(null != e, (function() {
            return "The input to the tensor constructor must be a non-null value."
        }
        ))
    }
    function Nk(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []
          , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        if (null == t && (t = []),
        Array.isArray(e) || Wk(e) && !n)
            for (var r = 0; r < e.length; ++r)
                Nk(e[r], t, n);
        else
            t.push(e);
        return t
    }
    function _k(e) {
        if (0 === e.length)
            return 1;
        for (var t = e[0], n = 1; n < e.length; n++)
            t *= e[n];
        return t
    }
    function Rk(e, t) {
        if (e === t)
            return !0;
        if (null == e || null == t)
            return !1;
        if (e.length !== t.length)
            return !1;
        for (var n = 0; n < e.length; n++)
            if (e[n] !== t[n])
                return !1;
        return !0
    }
    function Ok(e) {
        return e % 1 == 0
    }
    function Dk(e) {
        var t = Math.ceil(Math.sqrt(e));
        return [t, Math.ceil(e / t)]
    }
    function Bk(e, t) {
        return t <= e.length ? e : e + " ".repeat(t - e.length)
    }
    function Fk(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function(e) {
            return 0
        }
          , n = arguments.length > 2 ? arguments[2] : void 0;
        return new Promise((function(r, a) {
            var o = 0;
            !function i() {
                if (e())
                    r();
                else {
                    o++;
                    var s = t(o);
                    null != n && o >= n ? a() : setTimeout(i, s)
                }
            }()
        }
        ))
    }
    function Mk(e, t) {
        for (var n = 1, r = -1, a = 0; a < e.length; ++a)
            if (e[a] >= 0)
                n *= e[a];
            else if (-1 === e[a]) {
                if (-1 !== r)
                    throw Error("Shapes can only have 1 implicit size. Found -1 at dim ".concat(r, " and dim ").concat(a));
                r = a
            } else if (e[a] < 0)
                throw Error("Shapes can not be < 0. Found ".concat(e[a], " at dim ").concat(a));
        if (-1 === r) {
            if (t > 0 && t !== n)
                throw Error("Size(".concat(t, ") must match the product of shape ").concat(e));
            return e
        }
        if (0 === n)
            throw Error("Cannot infer the missing size in [".concat(e, "] when there are 0 elements"));
        if (t % n != 0)
            throw Error("The implicit shape can't be a fractional number. Got ".concat(t, " / ").concat(n));
        var o = e.slice();
        return o[r] = t / n,
        o
    }
    function Pk(e, t) {
        var n = t.length;
        return Ik((e = null == e ? t.map((function(e, t) {
            return t
        }
        )) : [].concat(e)).every((function(e) {
            return e >= -n && e < n
        }
        )), (function() {
            return "All values in axis param must be in range [-".concat(n, ", ").concat(n, ") but got axis ").concat(e)
        }
        )),
        Ik(e.every((function(e) {
            return Ok(e)
        }
        )), (function() {
            return "All values in axis param must be integers but got axis ".concat(e)
        }
        )),
        e.map((function(e) {
            return e < 0 ? n + e : e
        }
        ))
    }
    function Lk(e, t) {
        for (var n = [], r = [], a = null != t && Array.isArray(t) && 0 === t.length, o = null == t || a ? null : Pk(t, e).sort(), i = 0, s = 0; s < e.length; ++s) {
            if (null != o) {
                if (o[i] === s && 1 !== e[s])
                    throw new Error("Can't squeeze axis ".concat(s, " since its dim '").concat(e[s], "' is not 1"));
                (null == o[i] || o[i] > s) && 1 === e[s] && (n.push(e[s]),
                r.push(s)),
                o[i] <= s && i++
            }
            1 !== e[s] && (n.push(e[s]),
            r.push(s))
        }
        return {
            newShape: n,
            keptDims: r
        }
    }
    function Uk(e, t) {
        var n = null;
        if (null == e || "float32" === e)
            n = new Float32Array(t);
        else if ("int32" === e)
            n = new Int32Array(t);
        else {
            if ("bool" !== e)
                throw new Error("Unknown data type ".concat(e));
            n = new Uint8Array(t)
        }
        return n
    }
    function Vk(e, t) {
        var n = null;
        if (null == e || "float32" === e)
            n = new Float32Array(t);
        else if ("int32" === e)
            n = new Int32Array(t);
        else if ("bool" === e)
            n = new Uint8Array(t);
        else {
            if ("string" !== e)
                throw new Error("Unknown data type ".concat(e));
            n = new Array(t)
        }
        return n
    }
    function zk(e, t) {
        return !("complex64" === t || "float32" === t && "complex64" !== e || "int32" === t && "float32" !== e && "complex64" !== e || "bool" === t && "bool" === e)
    }
    function Wk(e) {
        return e instanceof Float32Array || e instanceof Int32Array || e instanceof Uint8Array
    }
    function jk(e) {
        if ("float32" === e || "int32" === e)
            return 4;
        if ("complex64" === e)
            return 8;
        if ("bool" === e)
            return 1;
        throw new Error("Unknown dtype ".concat(e))
    }
    function Hk(e) {
        return "string" == typeof e || e instanceof String
    }
    function Gk(e) {
        return Array.isArray(e) ? Gk(e[0]) : e instanceof Float32Array ? "float32" : e instanceof Int32Array || e instanceof Uint8Array ? "int32" : "number" == typeof e ? "float32" : Hk(e) ? "string" : function(e) {
            return "boolean" == typeof e
        }(e) ? "bool" : "float32"
    }
    function Kk(e) {
        return !!(e && e.constructor && e.call && e.apply)
    }
    function qk(e, t) {
        for (var n = t; n < e; ++n)
            if (e % n == 0)
                return n;
        return e
    }
    function Xk(e) {
        var t = e.length;
        if (t < 2)
            return [];
        var n = new Array(t - 1);
        n[t - 2] = e[t - 1];
        for (var r = t - 3; r >= 0; --r)
            n[r] = n[r + 1] * e[r + 1];
        return n
    }
    function Qk(e, t, n) {
        var r = new Array;
        if (1 === t.length)
            for (var a = t[0], o = 0; o < a; o++)
                r[o] = n[e + o];
        else
            for (var i = t[0], s = t.slice(1), u = s.reduce((function(e, t) {
                return e * t
            }
            )), c = 0; c < i; c++)
                r[c] = Qk(e + c * u, s, n);
        return r
    }
    function Yk(e, t) {
        if (0 === e.length)
            return t[0];
        var n = e.reduce((function(e, t) {
            return e * t
        }
        ));
        if (0 === n)
            return [];
        if (n !== t.length)
            throw new Error("[".concat(e, "] does not match the input size ").concat(t.length, "."));
        return Qk(0, e, t)
    }
    function $k(e, t) {
        for (var n = Zk(e, t), r = 0; r < n.length; r++)
            n[r] = 1;
        return n
    }
    function Zk(e, t) {
        if (null == t || "float32" === t || "complex64" === t)
            return new Float32Array(e);
        if ("int32" === t)
            return new Int32Array(e);
        if ("bool" === t)
            return new Uint8Array(e);
        throw new Error("Unknown data type ".concat(t))
    }
    function Jk(e, t) {
        var n = e.reduce((function(e, t) {
            return e * t
        }
        ), 1);
        if (null == t || "float32" === t)
            return Yk(e, new Float32Array(n));
        if ("int32" === t)
            return Yk(e, new Int32Array(n));
        if ("bool" === t)
            return Yk(e, new Uint8Array(n));
        throw new Error("Unknown data type ".concat(t))
    }
    function eC(e) {
        e.forEach((function(t) {
            Ik(Number.isInteger(t) && t >= 0, (function() {
                return "Tensor must have a shape comprised of positive integers but got shape [".concat(e, "].")
            }
            ))
        }
        ))
    }
    function tC(e, t, n) {
        if (0 === t)
            return 0;
        if (1 === t)
            return e[0];
        for (var r = e[e.length - 1], a = 0; a < e.length - 1; ++a)
            r += n[a] * e[a];
        return r
    }
    function nC(e, t, n) {
        if (0 === t)
            return [];
        if (1 === t)
            return [e];
        for (var r = new Array(t), a = 0; a < r.length - 1; ++a)
            r[a] = Math.floor(e / n[a]),
            e -= r[a] * n[a];
        return r[r.length - 1] = e,
        r
    }
    function rC(e) {
        return e && e.then && "function" == typeof e.then
    }
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var aC = function() {
        function e(t) {
            Ay(this, e),
            this.global = t,
            this.flags = {},
            this.flagRegistry = {},
            this.urlFlags = {},
            this.populateURLFlags()
        }
        var t;
        return _y(e, [{
            key: "setPlatform",
            value: function(e, t) {
                null != this.platform && console.warn("Platform ".concat(this.platformName, " has already been set. Overwriting the platform with ").concat(t, ".")),
                this.platformName = e,
                this.platform = t
            }
        }, {
            key: "registerFlag",
            value: function(e, t, n) {
                if (this.flagRegistry[e] = {
                    evaluationFn: t,
                    setHook: n
                },
                null != this.urlFlags[e]) {
                    var r = this.urlFlags[e];
                    console.warn("Setting feature override from URL ".concat(e, ": ").concat(r, ".")),
                    this.set(e, r)
                }
            }
        }, {
            key: "getAsync",
            value: (t = Ty(regeneratorRuntime.mark((function e(t) {
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (e.t0 = t in this.flags,
                            e.t0) {
                                e.next = 5;
                                break
                            }
                            return e.next = 4,
                            this.evaluateFlag(t);
                        case 4:
                            this.flags[t] = e.sent;
                        case 5:
                            return e.abrupt("return", this.flags[t]);
                        case 6:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "get",
            value: function(e) {
                if (e in this.flags)
                    return this.flags[e];
                var t = this.evaluateFlag(e);
                if (rC(t))
                    throw new Error("Flag ".concat(e, " cannot be synchronously evaluated. Please use getAsync() instead."));
                return this.flags[e] = t,
                this.flags[e]
            }
        }, {
            key: "getNumber",
            value: function(e) {
                return this.get(e)
            }
        }, {
            key: "getBool",
            value: function(e) {
                return this.get(e)
            }
        }, {
            key: "getFlags",
            value: function() {
                return this.flags
            }
        }, {
            key: "set",
            value: function(e, t) {
                if (null == this.flagRegistry[e])
                    throw new Error("Cannot set flag ".concat(e, " as it has not been registered."));
                this.flags[e] = t,
                null != this.flagRegistry[e].setHook && this.flagRegistry[e].setHook(t)
            }
        }, {
            key: "evaluateFlag",
            value: function(e) {
                if (null == this.flagRegistry[e])
                    throw new Error("Cannot evaluate flag '".concat(e, "': no evaluation function found."));
                return this.flagRegistry[e].evaluationFn()
            }
        }, {
            key: "setFlags",
            value: function(e) {
                this.flags = Object.assign({}, e)
            }
        }, {
            key: "reset",
            value: function() {
                this.flags = {},
                this.urlFlags = {},
                this.populateURLFlags()
            }
        }, {
            key: "populateURLFlags",
            value: function() {
                var e = this;
                if (void 0 !== this.global && void 0 !== this.global.location && void 0 !== this.global.location.search) {
                    var t = function(e) {
                        var t = {};
                        return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (function(e) {
                            for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), a = 1; a < n; a++)
                                r[a - 1] = arguments[a];
                            return function(e, t, n) {
                                e[decodeURIComponent(t)] = decodeURIComponent(n || "")
                            }(t, r[0], r[1]),
                            r.join("=")
                        }
                        )),
                        t
                    }(this.global.location.search);
                    "tfjsflags"in t && t.tfjsflags.split(",").forEach((function(t) {
                        var n = Uy(t.split(":"), 2)
                          , r = n[0]
                          , a = n[1];
                        e.urlFlags[r] = function(e, t) {
                            if ("true" === (t = t.toLowerCase()) || "false" === t)
                                return "true" === t;
                            if ("" + +t === t)
                                return +t;
                            throw new Error("Could not parse value flag value ".concat(t, " for flag ").concat(e, "."))
                        }(r, a)
                    }
                    ))
                }
            }
        }, {
            key: "features",
            get: function() {
                return this.flags
            }
        }]),
        e
    }();
    function oC() {
        return sC
    }
    var iC, sC = null;
    function uC() {
        if (null == iC) {
            var e;
            if ("undefined" != typeof window)
                e = window;
            else if ("undefined" != typeof global)
                e = global;
            else if ("undefined" != typeof process)
                e = process;
            else {
                if ("undefined" == typeof self)
                    throw new Error("Could not find a global object");
                e = self
            }
            iC = e
        }
        return iC
    }
    function cC(e, t) {
        var n = function() {
            var e = uC();
            return null == e._tfGlobals && (e._tfGlobals = new Map),
            e._tfGlobals
        }();
        if (n.has(e))
            return n.get(e);
        var r = t();
        return n.set(e, r),
        n.get(e)
    }
    var lC = "Add"
      , fC = "Cos"
      , pC = "Div"
      , dC = "Max"
      , hC = "Sin"
      , mC = "Sub"
      , vC = cC("kernelRegistry", (function() {
        return new Map
    }
    ))
      , gC = cC("gradRegistry", (function() {
        return new Map
    }
    ));
    function yC(e, t) {
        var n = CC(e, t);
        return vC.get(n)
    }
    function bC(e) {
        return gC.get(e)
    }
    function xC(e) {
        for (var t = vC.entries(), n = []; ; ) {
            var r = t.next()
              , a = r.done
              , o = r.value;
            if (a)
                break;
            var i = Uy(o, 2)
              , s = i[0]
              , u = i[1];
            Uy(s.split("_"), 1)[0] === e && n.push(u)
        }
        return n
    }
    function wC(e) {
        var t = e.kernelName
          , n = e.backendName
          , r = CC(t, n);
        vC.has(r) && console.warn("The kernel '".concat(t, "' for backend '").concat(n, "' is already registered")),
        vC.set(r, e)
    }
    function kC(e) {
        var t = e.kernelName;
        gC.has(t) && oC().getBool("DEBUG") && console.warn("Overriding the gradient for '".concat(t, "'")),
        gC.set(t, e)
    }
    function CC(e, t) {
        return "".concat(t, "_").concat(e)
    }
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function EC(e, t) {
        if ("string" === t)
            throw new Error("Cannot convert a string[] to a TypedArray");
        if (Array.isArray(e) && (e = Nk(e)),
        oC().getBool("DEBUG") && function(e, t) {
            for (var n = 0; n < e.length; n++) {
                var r = e[n];
                if (isNaN(r) || !isFinite(r))
                    throw Error("A tensor of type ".concat(t, " being uploaded contains ").concat(r, "."))
            }
        }(e, t),
        function(e, t) {
            return e instanceof Float32Array && "float32" === t || e instanceof Int32Array && "int32" === t || e instanceof Uint8Array && "bool" === t
        }(e, t))
            return e;
        if (null == t || "float32" === t || "complex64" === t)
            return new Float32Array(e);
        if ("int32" === t)
            return new Int32Array(e);
        if ("bool" === t) {
            for (var n = new Uint8Array(e.length), r = 0; r < n.length; ++r)
                0 !== Math.round(e[r]) && (n[r] = 1);
            return n
        }
        throw new Error("Unknown data type ".concat(t))
    }
    function SC() {
        return oC().platform.now()
    }
    function IC(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "utf-8";
        return t = t || "utf-8",
        oC().platform.encode(e, t)
    }
    function TC(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "utf-8";
        return t = t || "utf-8",
        oC().platform.decode(e, t)
        /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    var AC = function() {
        function e(t, n) {
            Ay(this, e),
            this.backendTimer = t,
            this.logger = n,
            null == n && (this.logger = new NC)
        }
        return _y(e, [{
            key: "profileKernel",
            value: function(e, t, n) {
                for (var r, a = this.backendTimer.time((function() {
                    r = n()
                }
                )), o = function(t) {
                    var n = r[t];
                    n.data().then((function(t) {
                        !function(e, t, n) {
                            if ("float32" !== t)
                                return !1;
                            for (var r = 0; r < e.length; r++) {
                                var a = e[r];
                                if (isNaN(a) || !isFinite(a))
                                    return console.warn("Found ".concat(a, " in the result of '").concat(n, "'")),
                                    !0
                            }
                        }(t, n.dtype, e)
                    }
                    ))
                }, i = 0; i < r.length; i++)
                    o(i);
                return {
                    kernelName: e,
                    outputs: r,
                    inputs: t,
                    timeMs: a.then((function(e) {
                        return e.kernelMs
                    }
                    )),
                    extraInfo: a.then((function(e) {
                        return null != e.getExtraProfileInfo ? e.getExtraProfileInfo() : ""
                    }
                    ))
                }
            }
        }, {
            key: "logKernelProfile",
            value: function(e) {
                var t = this
                  , n = e.kernelName
                  , r = e.outputs
                  , a = e.timeMs
                  , o = e.inputs
                  , i = e.extraInfo;
                r.forEach((function(e) {
                    Promise.all([e.data(), a, i]).then((function(r) {
                        t.logger.logKernelProfile(n, e, r[0], r[1], o, r[2])
                    }
                    ))
                }
                ))
            }
        }]),
        e
    }();
    var NC = function() {
        function e() {
            Ay(this, e)
        }
        return _y(e, [{
            key: "logKernelProfile",
            value: function(e, t, n, r, a, o) {
                var i = "number" == typeof r ? Bk("".concat(r, "ms"), 9) : r.error
                  , s = Bk(e, 25)
                  , u = t.rank
                  , c = t.size
                  , l = Bk(t.shape.toString(), 14)
                  , f = "";
                for (var p in a) {
                    var d = a[p];
                    if (null != d) {
                        var h = d.shape || t.shape
                          , m = h.length;
                        f += "".concat(p, ": ").concat(m, "D ").concat(m > 0 ? h : "", " ")
                    }
                }
                console.log("%c".concat(s, "\t%c").concat(i, "\t%c").concat(u, "D ").concat(l, "\t%c").concat(c, "\t%c").concat(f, "\t%c").concat(o), "font-weight:bold", "color:red", "color:blue", "color: orange", "color: green", "color: steelblue")
            }
        }]),
        e
    }();
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function _C(e, t, n, r) {
        var a = Xk(t)
          , o = function(e, t, n, r) {
            var a = _k(t)
              , o = r[r.length - 1]
              , i = new Array(o).fill(0)
              , s = t.length
              , u = "complex64" === n ? BC(e) : e;
            if (s > 1)
                for (var c = 0; c < a / o; c++)
                    for (var l = c * o, f = 0; f < o; f++)
                        i[f] = Math.max(i[f], RC(u[l + f], 0, n).length);
            return i
        }(e, t, n, a)
          , i = t.length
          , s = DC(e, t, n, a, o)
          , u = ["Tensor"];
        return r && (u.push("  dtype: ".concat(n)),
        u.push("  rank: ".concat(i)),
        u.push("  shape: [".concat(t, "]")),
        u.push("  values:")),
        u.push(s.map((function(e) {
            return "    " + e
        }
        )).join("\n")),
        u.join("\n")
    }
    function RC(e, t, n) {
        return Bk(Array.isArray(e) ? "".concat(parseFloat(e[0].toFixed(7)), " + ").concat(parseFloat(e[1].toFixed(7)), "j") : Hk(e) ? "'".concat(e, "'") : "bool" === n ? OC(e) : parseFloat(e.toFixed(7)).toString(), t)
    }
    function OC(e) {
        return 0 === e ? "false" : "true"
    }
    function DC(e, t, n, r, a) {
        var o = !(arguments.length > 5 && void 0 !== arguments[5]) || arguments[5]
          , i = "complex64" === n ? 2 : 1
          , s = t[0]
          , u = t.length;
        if (0 === u)
            return "complex64" === n ? [RC(BC(e)[0], 0, n)] : "bool" === n ? [OC(e[0])] : [e[0].toString()];
        if (1 === u) {
            if (s > 20) {
                var c = 3 * i
                  , l = Array.from(e.slice(0, c))
                  , f = Array.from(e.slice((s - 3) * i, s * i));
                return "complex64" === n && (l = BC(l),
                f = BC(f)),
                ["[" + l.map((function(e, t) {
                    return RC(e, a[t], n)
                }
                )).join(", ") + ", ..., " + f.map((function(e, t) {
                    return RC(e, a[s - 3 + t], n)
                }
                )).join(", ") + "]"]
            }
            return ["[" + ("complex64" === n ? BC(e) : Array.from(e)).map((function(e, t) {
                return RC(e, a[t], n)
            }
            )).join(", ") + "]"]
        }
        var p = t.slice(1)
          , d = r.slice(1)
          , h = r[0] * i
          , m = [];
        if (s > 20) {
            for (var v = 0; v < 3; v++) {
                var g = v * h
                  , y = g + h;
                m.push.apply(m, Vy(DC(e.slice(g, y), p, n, d, a, !1)))
            }
            m.push("...");
            for (var b = s - 3; b < s; b++) {
                var x = b * h
                  , w = x + h;
                m.push.apply(m, Vy(DC(e.slice(x, w), p, n, d, a, b === s - 1)))
            }
        } else
            for (var k = 0; k < s; k++) {
                var C = k * h
                  , E = C + h;
                m.push.apply(m, Vy(DC(e.slice(C, E), p, n, d, a, k === s - 1)))
            }
        var S = 2 === u ? "," : "";
        m[0] = "[" + m[0] + S;
        for (var I = 1; I < m.length - 1; I++)
            m[I] = " " + m[I] + S;
        for (var T = ",\n", A = 2; A < u; A++)
            T += "\n";
        return m[m.length - 1] = " " + m[m.length - 1] + "]" + (o ? "" : T),
        m
    }
    function BC(e) {
        for (var t = [], n = 0; n < e.length; n += 2)
            t.push([e[n], e[n + 1]]);
        return t
    }
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var FC = function() {
        function e(t, n, r) {
            var a = this;
            if (Ay(this, e),
            this.dtype = n,
            this.shape = t.slice(),
            this.size = _k(t),
            null != r) {
                var o = r.length;
                Ik(o === this.size, (function() {
                    return "Length of values '".concat(o, "' does not match the size inferred by the shape '").concat(a.size, "'.")
                }
                ))
            }
            if ("complex64" === n)
                throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");
            this.values = r || Vk(n, this.size),
            this.strides = Xk(t)
        }
        return _y(e, [{
            key: "set",
            value: function(e) {
                for (var t = this, n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), a = 1; a < n; a++)
                    r[a - 1] = arguments[a];
                0 === r.length && (r = [0]),
                Ik(r.length === this.rank, (function() {
                    return "The number of provided coordinates (".concat(r.length, ") must match the rank (").concat(t.rank, ")")
                }
                ));
                var o = this.locToIndex(r);
                this.values[o] = e
            }
        }, {
            key: "get",
            value: function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                    t[n] = arguments[n];
                0 === t.length && (t = [0]);
                for (var r = 0, a = 0, o = t; a < o.length; a++) {
                    var i = o[a];
                    if (i < 0 || i >= this.shape[r]) {
                        var s = "Requested out of range element at ".concat(t, ".   Buffer shape=").concat(this.shape);
                        throw new Error(s)
                    }
                    r++
                }
                for (var u = t[t.length - 1], c = 0; c < t.length - 1; ++c)
                    u += this.strides[c] * t[c];
                return this.values[u]
            }
        }, {
            key: "locToIndex",
            value: function(e) {
                if (0 === this.rank)
                    return 0;
                if (1 === this.rank)
                    return e[0];
                for (var t = e[e.length - 1], n = 0; n < e.length - 1; ++n)
                    t += this.strides[n] * e[n];
                return t
            }
        }, {
            key: "indexToLoc",
            value: function(e) {
                if (0 === this.rank)
                    return [];
                if (1 === this.rank)
                    return [e];
                for (var t = new Array(this.shape.length), n = 0; n < t.length - 1; ++n)
                    t[n] = Math.floor(e / this.strides[n]),
                    e -= t[n] * this.strides[n];
                return t[t.length - 1] = e,
                t
            }
        }, {
            key: "toTensor",
            value: function() {
                return MC().makeTensor(this.values, this.shape, this.dtype)
            }
        }, {
            key: "rank",
            get: function() {
                return this.shape.length
            }
        }]),
        e
    }()
      , MC = null
      , PC = null
      , LC = function() {
        function e(t, n, r, a) {
            Ay(this, e),
            this.kept = !1,
            this.isDisposedInternal = !1,
            this.shape = t.slice(),
            this.dtype = n || "float32",
            this.size = _k(t),
            this.strides = Xk(t),
            this.dataId = r,
            this.id = a,
            this.rankType = this.rank < 5 ? this.rank.toString() : "higher"
        }
        var t, n, r, a;
        return _y(e, [{
            key: "buffer",
            value: (a = Ty(regeneratorRuntime.mark((function e() {
                var t;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2,
                            this.data();
                        case 2:
                            return t = e.sent,
                            e.abrupt("return", PC.buffer(this.shape, this.dtype, t));
                        case 4:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function() {
                return a.apply(this, arguments)
            }
            )
        }, {
            key: "bufferSync",
            value: function() {
                return PC.buffer(this.shape, this.dtype, this.dataSync())
            }
        }, {
            key: "array",
            value: (r = Ty(regeneratorRuntime.mark((function e() {
                var t;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2,
                            this.data();
                        case 2:
                            return t = e.sent,
                            e.abrupt("return", Yk(this.shape, t));
                        case 4:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function() {
                return r.apply(this, arguments)
            }
            )
        }, {
            key: "arraySync",
            value: function() {
                return Yk(this.shape, this.dataSync())
            }
        }, {
            key: "data",
            value: (n = Ty(regeneratorRuntime.mark((function e() {
                var t, n;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (this.throwIfDisposed(),
                            t = MC().read(this.dataId),
                            "string" !== this.dtype) {
                                e.next = 13;
                                break
                            }
                            return e.next = 5,
                            t;
                        case 5:
                            return n = e.sent,
                            e.prev = 6,
                            e.abrupt("return", n.map((function(e) {
                                return TC(e)
                            }
                            )));
                        case 10:
                            throw e.prev = 10,
                            e.t0 = e.catch(6),
                            new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().");
                        case 13:
                            return e.abrupt("return", t);
                        case 14:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this, [[6, 10]])
            }
            ))),
            function() {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "dataSync",
            value: function() {
                this.throwIfDisposed();
                var e = MC().readSync(this.dataId);
                if ("string" === this.dtype)
                    try {
                        return e.map((function(e) {
                            return TC(e)
                        }
                        ))
                    } catch (e) {
                        throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")
                    }
                return e
            }
        }, {
            key: "bytes",
            value: (t = Ty(regeneratorRuntime.mark((function e() {
                var t;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return this.throwIfDisposed(),
                            e.next = 3,
                            MC().read(this.dataId);
                        case 3:
                            return t = e.sent,
                            e.abrupt("return", "string" === this.dtype ? t : new Uint8Array(t.buffer));
                        case 5:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function() {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "dispose",
            value: function() {
                this.isDisposed || (MC().disposeTensor(this),
                this.isDisposedInternal = !0)
            }
        }, {
            key: "throwIfDisposed",
            value: function() {
                if (this.isDisposed)
                    throw new Error("Tensor is disposed.")
            }
        }, {
            key: "print",
            value: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                return PC.print(this, e)
            }
        }, {
            key: "clone",
            value: function() {
                return this.throwIfDisposed(),
                PC.clone(this)
            }
        }, {
            key: "toString",
            value: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                return _C(this.dataSync(), this.shape, this.dtype, e)
            }
        }, {
            key: "cast",
            value: function(e) {
                return this.throwIfDisposed(),
                PC.cast(this, e)
            }
        }, {
            key: "variable",
            value: function() {
                var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]
                  , t = arguments.length > 1 ? arguments[1] : void 0
                  , n = arguments.length > 2 ? arguments[2] : void 0;
                return this.throwIfDisposed(),
                MC().makeVariable(this, e, t, n)
            }
        }, {
            key: "rank",
            get: function() {
                return this.shape.length
            }
        }, {
            key: "isDisposed",
            get: function() {
                return this.isDisposedInternal
            }
        }]),
        e
    }();
    Object.defineProperty(LC, Symbol.hasInstance, {
        value: function(e) {
            return !!e && null != e.data && null != e.dataSync && null != e.throwIfDisposed
        }
    });
    var UC, VC, zC, WC, jC, HC = function(e) {
        Oy(n, e);
        var t = Py(n);
        function n(e, r, a, o) {
            var i;
            return Ay(this, n),
            (i = t.call(this, e.shape, e.dtype, e.dataId, o)).trainable = r,
            i.name = a,
            i
        }
        return _y(n, [{
            key: "assign",
            value: function(e) {
                if (e.dtype !== this.dtype)
                    throw new Error("dtype of the new value (".concat(e.dtype, ") and previous value (").concat(this.dtype, ") must match"));
                if (!Rk(e.shape, this.shape))
                    throw new Error("shape of the new value (".concat(e.shape, ") and previous value (").concat(this.shape, ") must match"));
                MC().disposeTensor(this),
                this.dataId = e.dataId,
                MC().incRef(this, null)
            }
        }, {
            key: "dispose",
            value: function() {
                MC().disposeVariable(this),
                this.isDisposedInternal = !0
            }
        }]),
        n
    }(LC);
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    Object.defineProperty(HC, Symbol.hasInstance, {
        value: function(e) {
            return e instanceof LC && null != e.assign && e.assign instanceof Function
        }
    }),
    function(e) {
        e.R0 = "R0",
        e.R1 = "R1",
        e.R2 = "R2",
        e.R3 = "R3",
        e.R4 = "R4",
        e.R5 = "R5",
        e.R6 = "R6"
    }(UC || (UC = {})),
    function(e) {
        e.float32 = "float32",
        e.int32 = "int32",
        e.bool = "int32",
        e.complex64 = "complex64"
    }(VC || (VC = {})),
    function(e) {
        e.float32 = "float32",
        e.int32 = "int32",
        e.bool = "bool",
        e.complex64 = "complex64"
    }(zC || (zC = {})),
    function(e) {
        e.float32 = "float32",
        e.int32 = "float32",
        e.bool = "float32",
        e.complex64 = "complex64"
    }(WC || (WC = {})),
    function(e) {
        e.float32 = "complex64",
        e.int32 = "complex64",
        e.bool = "complex64",
        e.complex64 = "complex64"
    }(jC || (jC = {}));
    var GC = {
        float32: WC,
        int32: VC,
        bool: zC,
        complex64: jC
    };
    function KC(e, t) {
        if ("string" === e || "string" === t) {
            if ("string" === e && "string" === t)
                return "string";
            throw new Error("Can not upcast ".concat(e, " with ").concat(t))
        }
        return GC[e][t]
    }
    function qC(e) {
        return KC(e, "int32")
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function XC(e, t) {
        if (e.dtype === t.dtype)
            return [e, t];
        var n = KC(e.dtype, t.dtype);
        return [e.cast(n), t.cast(n)]
    }
    function QC(e) {
        var t = [];
        return YC(e, t, new Set),
        t
    }
    function YC(e, t, n) {
        if (null != e)
            if (e instanceof LC)
                t.push(e);
            else if (r = e,
            Array.isArray(r) || "object" == Sy(r)) {
                var r, a = e;
                /**
	   * @license
	   * Copyright 2018 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
                for (var o in a) {
                    var i = a[o];
                    n.has(i) || (n.add(i),
                    YC(i, t, n))
                }
            }
    }
    var $C = function() {
        function e() {
            Ay(this, e),
            this.registeredVariables = {},
            this.nextTapeNodeId = 0,
            this.numBytes = 0,
            this.numTensors = 0,
            this.numStringTensors = 0,
            this.numDataBuffers = 0,
            this.gradientDepth = 0,
            this.kernelDepth = 0,
            this.scopeStack = [],
            this.numDataMovesStack = [],
            this.nextScopeId = 0,
            this.tensorInfo = new WeakMap,
            this.profiling = !1,
            this.activeProfile = {
                newBytes: 0,
                newTensors: 0,
                peakBytes: 0,
                kernels: [],
                result: null
            }
        }
        return _y(e, [{
            key: "dispose",
            value: function() {
                for (var e in this.registeredVariables)
                    this.registeredVariables[e].dispose()
            }
        }]),
        e
    }()
      , ZC = function() {
        function e(t) {
            Ay(this, e),
            this.ENV = t,
            this.registry = {},
            this.registryFactory = {},
            this.pendingBackendInitId = 0,
            this.state = new $C
        }
        var t, n, r, a;
        return _y(e, [{
            key: "ready",
            value: (a = Ty(regeneratorRuntime.mark((function e() {
                var t, n, r;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (null == this.pendingBackendInit) {
                                e.next = 2;
                                break
                            }
                            return e.abrupt("return", this.pendingBackendInit.then((function() {}
                            )));
                        case 2:
                            if (null == this.backendInstance) {
                                e.next = 4;
                                break
                            }
                            return e.abrupt("return");
                        case 4:
                            t = this.getSortedBackends(),
                            n = 0;
                        case 6:
                            if (!(n < t.length)) {
                                e.next = 17;
                                break
                            }
                            return r = t[n],
                            e.next = 10,
                            this.initializeBackend(r).success;
                        case 10:
                            if (!e.sent) {
                                e.next = 14;
                                break
                            }
                            return e.next = 13,
                            this.setBackend(r);
                        case 13:
                            return e.abrupt("return", void e.sent);
                        case 14:
                            n++,
                            e.next = 6;
                            break;
                        case 17:
                            throw new Error("Could not initialize any backends, all backend initializations failed.");
                        case 18:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function() {
                return a.apply(this, arguments)
            }
            )
        }, {
            key: "backendNames",
            value: function() {
                return Object.keys(this.registryFactory)
            }
        }, {
            key: "findBackend",
            value: function(e) {
                if (!(e in this.registry)) {
                    if (!(e in this.registryFactory))
                        return null;
                    if (this.initializeBackend(e).asyncInit)
                        return null
                }
                return this.registry[e]
            }
        }, {
            key: "findBackendFactory",
            value: function(e) {
                return e in this.registryFactory ? this.registryFactory[e].factory : null
            }
        }, {
            key: "registerBackend",
            value: function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                return e in this.registryFactory ? (console.warn("".concat(e, " backend was already registered. Reusing existing backend factory.")),
                !1) : (this.registryFactory[e] = {
                    factory: t,
                    priority: n
                },
                !0)
            }
        }, {
            key: "setBackend",
            value: (r = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (null != this.registryFactory[t]) {
                                e.next = 2;
                                break
                            }
                            throw new Error("Backend name '".concat(t, "' not found in registry"));
                        case 2:
                            if (this.backendName = t,
                            null != this.registry[t]) {
                                e.next = 14;
                                break
                            }
                            if (this.backendInstance = null,
                            n = this.initializeBackend(t),
                            r = n.success,
                            !n.asyncInit) {
                                e.next = 11;
                                break
                            }
                            return e.next = 8,
                            r;
                        case 8:
                            e.t0 = e.sent,
                            e.next = 12;
                            break;
                        case 11:
                            e.t0 = r;
                        case 12:
                            if (e.t0) {
                                e.next = 14;
                                break
                            }
                            return e.abrupt("return", !1);
                        case 14:
                            return e.abrupt("return", (this.backendInstance = this.registry[t],
                            this.setupRegisteredKernels(),
                            this.profiler = new AC(this.backendInstance),
                            !0));
                        case 15:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return r.apply(this, arguments)
            }
            )
        }, {
            key: "setupRegisteredKernels",
            value: function() {
                var e = this;
                xC(this.backendName).forEach((function(t) {
                    null != t.setupFunc && t.setupFunc(e.backendInstance)
                }
                ))
            }
        }, {
            key: "disposeRegisteredKernels",
            value: function(e) {
                var t = this;
                xC(e).forEach((function(n) {
                    null != n.disposeFunc && n.disposeFunc(t.registry[e])
                }
                ))
            }
        }, {
            key: "initializeBackend",
            value: function(e) {
                var t = this
                  , n = this.registryFactory[e];
                if (null == n)
                    throw new Error("Cannot initialize backend ".concat(e, ", no registration found."));
                try {
                    var r = n.factory();
                    if (!r || r instanceof kk || "function" != typeof r.then)
                        return this.registry[e] = r,
                        {
                            success: !0,
                            asyncInit: !1
                        };
                    var a = ++this.pendingBackendInitId
                      , o = r.then((function(n) {
                        return !(a < t.pendingBackendInitId || (t.registry[e] = n,
                        t.pendingBackendInit = null,
                        0))
                    }
                    )).catch((function(n) {
                        return a < t.pendingBackendInitId || (t.pendingBackendInit = null,
                        console.warn("Initialization of backend ".concat(e, " failed")),
                        console.warn(n.stack || n.message)),
                        !1
                    }
                    ));
                    return this.pendingBackendInit = o,
                    {
                        success: o,
                        asyncInit: !0
                    }
                } catch (n) {
                    return console.warn("Initialization of backend ".concat(e, " failed")),
                    console.warn(n.stack || n.message),
                    {
                        success: !1,
                        asyncInit: !1
                    }
                }
            }
        }, {
            key: "removeBackend",
            value: function(e) {
                if (!(e in this.registryFactory))
                    throw new Error("".concat(e, " backend not found in registry"));
                this.backendName === e && null != this.pendingBackendInit && this.pendingBackendInitId++,
                e in this.registry && (this.disposeRegisteredKernels(e),
                this.registry[e].dispose(),
                delete this.registry[e]),
                delete this.registryFactory[e],
                this.backendName === e && (this.pendingBackendInit = null,
                this.backendName = null,
                this.backendInstance = null)
            }
        }, {
            key: "getSortedBackends",
            value: function() {
                var e = this;
                if (0 === Object.keys(this.registryFactory).length)
                    throw new Error("No backend found in registry.");
                return Object.keys(this.registryFactory).sort((function(t, n) {
                    return e.registryFactory[n].priority - e.registryFactory[t].priority
                }
                ))
            }
        }, {
            key: "initializeBackendsAndReturnBest",
            value: function() {
                for (var e = this.getSortedBackends(), t = 0; t < e.length; t++) {
                    var n = e[t]
                      , r = this.initializeBackend(n)
                      , a = r.success
                      , o = r.asyncInit;
                    if (o || a)
                        return {
                            name: n,
                            asyncInit: o
                        }
                }
                throw new Error("Could not initialize any backends, all backend initializations failed.")
            }
        }, {
            key: "moveData",
            value: function(e, t) {
                var n = this.state.tensorInfo.get(t)
                  , r = n.backend
                  , a = this.readSync(t);
                r.disposeData(t),
                n.backend = e,
                e.move(t, a, n.shape, n.dtype),
                this.shouldCheckForMemLeaks() && this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++
            }
        }, {
            key: "tidy",
            value: function(e, t) {
                var n, r = this, a = null;
                if (null == t) {
                    if ("function" != typeof e)
                        throw new Error("Please provide a function to tidy()");
                    t = e
                } else {
                    if ("string" != typeof e && !(e instanceof String))
                        throw new Error("When calling with two arguments, the first argument to tidy() must be a string");
                    if ("function" != typeof t)
                        throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");
                    a = e
                }
                return this.scopedRun((function() {
                    return r.startScope(a)
                }
                ), (function() {
                    return r.endScope(n)
                }
                ), (function() {
                    return (n = t())instanceof Promise && console.error("Cannot return a Promise inside of tidy."),
                    n
                }
                ))
            }
        }, {
            key: "scopedRun",
            value: function(e, t, n) {
                e();
                try {
                    var r = n();
                    return t(),
                    r
                } catch (e) {
                    throw t(),
                    e
                }
            }
        }, {
            key: "nextTensorId",
            value: function() {
                return e.nextTensorId++
            }
        }, {
            key: "nextVariableId",
            value: function() {
                return e.nextVariableId++
            }
        }, {
            key: "clone",
            value: function(e) {
                var t = this.makeTensorFromDataId(e.dataId, e.shape, e.dtype)
                  , n = {
                    x: e
                };
                return this.addTapeNode(this.state.activeScope.name, n, [t], (function(e) {
                    return {
                        x: function() {
                            var t = "float32"
                              , n = {
                                x: e
                            }
                              , r = {
                                dtype: t
                            };
                            return eE.runKernelFunc((function(n) {
                                return n.cast(e, t)
                            }
                            ), n, null, "Cast", r)
                        }
                    }
                }
                ), [], {}),
                t
            }
        }, {
            key: "runKernel",
            value: function(e, t, n, r, a) {
                return this.runKernelFunc(null, t, null, e, n, r, a)
            }
        }, {
            key: "shouldCheckForMemLeaks",
            value: function() {
                return this.ENV.getBool("IS_TEST")
            }
        }, {
            key: "checkKernelForMemLeak",
            value: function(e, t, n) {
                var r = this.backend.numDataIds()
                  , a = 0;
                n.forEach((function(e) {
                    a += "complex64" === e.dtype ? 3 : 1
                }
                ));
                var o = this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]
                  , i = r - t - a - o;
                if (i > 0)
                    throw new Error("Backend '".concat(this.backendName, "' has an internal memory leak (").concat(i, " data ids) after running '").concat(e, "'"))
            }
        }, {
            key: "runKernelFunc",
            value: function(e, t, n, r, a, o, i) {
                var s, u = this, c = [], l = this.isTapeOn();
                null == r && (r = null != this.state.activeScope ? this.state.activeScope.name : "");
                var f, p = this.state.numBytes, d = this.state.numTensors;
                this.shouldCheckForMemLeaks() && this.state.numDataMovesStack.push(0);
                var h, m, v = yC(r, this.backendName);
                if (null != v)
                    f = function() {
                        var e = u.backend.numDataIds();
                        h = v.kernelFunc({
                            inputs: t,
                            attrs: a,
                            backend: u.backend
                        });
                        var n = Array.isArray(h) ? h : [h];
                        u.shouldCheckForMemLeaks() && u.checkKernelForMemLeak(r, e, n);
                        var s = n.map((function(e) {
                            var t = e.dataId
                              , n = e.shape
                              , r = e.dtype;
                            return u.makeTensorFromDataId(t, n, r)
                        }
                        ));
                        if (l) {
                            var f = u.getTensorsForGradient(r, t, s);
                            if (null == f) {
                                null == i && (i = []);
                                var p = s.filter((function(e, t) {
                                    return i[t]
                                }
                                ));
                                f = (o || []).slice().concat(p)
                            }
                            c = u.saveTensorsForBackwardMode(f)
                        }
                        return s
                    }
                    ;
                else {
                    var g = function(e) {
                        l && (c = e.map((function(e) {
                            return u.keep(u.clone(e))
                        }
                        )))
                    };
                    f = function() {
                        var t = u.backend.numDataIds();
                        h = u.tidy((function() {
                            return e(u.backend, g)
                        }
                        ));
                        var n = Array.isArray(h) ? h : [h];
                        return u.shouldCheckForMemLeaks() && u.checkKernelForMemLeak(r, t, n),
                        n
                    }
                }
                return this.scopedRun((function() {
                    return u.state.kernelDepth++
                }
                ), (function() {
                    return u.state.kernelDepth--
                }
                ), (function() {
                    u.ENV.getBool("DEBUG") || u.state.profiling ? (m = u.profiler.profileKernel(r, t, (function() {
                        return f()
                    }
                    )),
                    u.ENV.getBool("DEBUG") && u.profiler.logKernelProfile(m),
                    s = m.outputs) : s = f()
                }
                )),
                l && this.addTapeNode(r, t, s, n, c, a),
                this.state.profiling && this.state.activeProfile.kernels.push({
                    name: r,
                    bytesAdded: this.state.numBytes - p,
                    totalBytesSnapshot: this.state.numBytes,
                    tensorsAdded: this.state.numTensors - d,
                    totalTensorsSnapshot: this.state.numTensors,
                    inputShapes: Object.keys(t).map((function(e) {
                        return null != t[e] ? t[e].shape : null
                    }
                    )),
                    outputShapes: s.map((function(e) {
                        return e.shape
                    }
                    )),
                    kernelTimeMs: m.timeMs,
                    extraInfo: m.extraInfo
                }),
                Array.isArray(h) ? s : s[0]
            }
        }, {
            key: "saveTensorsForBackwardMode",
            value: function(e) {
                var t = this;
                return e.map((function(e) {
                    return t.keep(t.clone(e))
                }
                ))
            }
        }, {
            key: "getTensorsForGradient",
            value: function(e, t, n) {
                var r = bC(e);
                if (null != r) {
                    var a, o = r.inputsToSave || [], i = r.outputsToSave || [];
                    r.saveAllInputs ? (Ik(Array.isArray(t), (function() {
                        return "saveAllInputs is true, expected inputs to be an array."
                    }
                    )),
                    a = Object.keys(t).map((function(e) {
                        return t[e]
                    }
                    ))) : a = o.map((function(e) {
                        return t[e]
                    }
                    ));
                    var s = n.filter((function(e, t) {
                        return i[t]
                    }
                    ));
                    return a.concat(s)
                }
                return null
            }
        }, {
            key: "makeTensor",
            value: function(e, t, n, r) {
                if (null == e)
                    throw new Error("Values passed to engine.makeTensor() are null");
                n = n || "float32",
                r = r || this.backend;
                var a = e;
                "string" === n && Hk(e[0]) && (a = e.map((function(e) {
                    return IC(e)
                }
                )));
                var o = r.write(a, t, n)
                  , i = new LC(t,n,o,this.nextTensorId());
                if (this.incRef(i, r),
                "string" === n) {
                    var s = this.state.tensorInfo.get(o)
                      , u = function(e) {
                        if (null == e)
                            return 0;
                        var t = 0;
                        return e.forEach((function(e) {
                            return t += e.length
                        }
                        )),
                        t
                    }(a);
                    this.state.numBytes += u - s.bytes,
                    s.bytes = u
                }
                return i
            }
        }, {
            key: "makeTensorFromDataId",
            value: function(e, t, n, r) {
                var a = new LC(t,n = n || "float32",e,this.nextTensorId());
                return this.incRef(a, r),
                a
            }
        }, {
            key: "makeVariable",
            value: function(e) {
                var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]
                  , n = arguments.length > 2 ? arguments[2] : void 0
                  , r = arguments.length > 3 ? arguments[3] : void 0;
                n = n || this.nextVariableId().toString(),
                null != r && r !== e.dtype && (e = e.cast(r));
                var a = new HC(e,t,n,this.nextTensorId());
                if (null != this.state.registeredVariables[a.name])
                    throw new Error("Variable with name ".concat(a.name, " was already registered"));
                return this.state.registeredVariables[a.name] = a,
                this.incRef(a, this.backend),
                a
            }
        }, {
            key: "incRef",
            value: function(e, t) {
                var n = this.state.tensorInfo.has(e.dataId) ? this.state.tensorInfo.get(e.dataId).refCount : 0;
                if (this.state.numTensors++,
                "string" === e.dtype && this.state.numStringTensors++,
                0 === n) {
                    this.state.numDataBuffers++;
                    var r = 0;
                    "complex64" !== e.dtype && "string" !== e.dtype && (r = e.size * jk(e.dtype)),
                    this.state.tensorInfo.set(e.dataId, {
                        backend: t || this.backend,
                        dtype: e.dtype,
                        shape: e.shape,
                        bytes: r,
                        refCount: 0
                    }),
                    this.state.numBytes += r
                }
                this.state.tensorInfo.get(e.dataId).refCount++,
                e instanceof HC || this.track(e)
            }
        }, {
            key: "disposeTensor",
            value: function(e) {
                if (this.state.tensorInfo.has(e.dataId)) {
                    this.state.numTensors--,
                    "string" === e.dtype && this.state.numStringTensors--;
                    var t = this.state.tensorInfo.get(e.dataId);
                    t.refCount <= 1 ? ("complex64" !== e.dtype && (this.state.numBytes -= t.bytes),
                    this.state.numDataBuffers--,
                    t.backend.disposeData(e.dataId),
                    this.state.tensorInfo.delete(e.dataId)) : this.state.tensorInfo.get(e.dataId).refCount--
                }
            }
        }, {
            key: "disposeVariables",
            value: function() {
                for (var e in this.state.registeredVariables) {
                    var t = this.state.registeredVariables[e];
                    this.disposeVariable(t)
                }
            }
        }, {
            key: "disposeVariable",
            value: function(e) {
                this.disposeTensor(e),
                null != this.state.registeredVariables[e.name] && delete this.state.registeredVariables[e.name]
            }
        }, {
            key: "memory",
            value: function() {
                var e = this.backend.memory();
                return e.numTensors = this.state.numTensors,
                e.numDataBuffers = this.state.numDataBuffers,
                e.numBytes = this.state.numBytes,
                this.state.numStringTensors > 0 && (e.unreliable = !0,
                null == e.reasons && (e.reasons = []),
                e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),
                e
            }
        }, {
            key: "profile",
            value: (n = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r, a, o, i;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return this.state.profiling = !0,
                            n = this.state.numBytes,
                            r = this.state.numTensors,
                            this.state.activeProfile.kernels = [],
                            e.next = 5,
                            t();
                        case 5:
                            this.state.activeProfile.result = e.sent,
                            this.state.profiling = !1,
                            this.state.activeProfile.peakBytes = Math.max.apply(Math, Vy(this.state.activeProfile.kernels.map((function(e) {
                                return e.totalBytesSnapshot
                            }
                            )))),
                            this.state.activeProfile.newBytes = this.state.numBytes - n,
                            this.state.activeProfile.newTensors = this.state.numTensors - r,
                            a = jy(this.state.activeProfile.kernels),
                            e.prev = 11,
                            a.s();
                        case 13:
                            if ((o = a.n()).done) {
                                e.next = 23;
                                break
                            }
                            return i = o.value,
                            e.next = 17,
                            i.kernelTimeMs;
                        case 17:
                            return i.kernelTimeMs = e.sent,
                            e.next = 20,
                            i.extraInfo;
                        case 20:
                            i.extraInfo = e.sent;
                        case 21:
                            e.next = 13;
                            break;
                        case 23:
                            e.next = 28;
                            break;
                        case 25:
                            e.prev = 25,
                            e.t0 = e.catch(11),
                            a.e(e.t0);
                        case 28:
                            return e.prev = 28,
                            a.f(),
                            e.finish(28);
                        case 31:
                            return e.abrupt("return", this.state.activeProfile);
                        case 32:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this, [[11, 25, 28, 31]])
            }
            ))),
            function(e) {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "isTapeOn",
            value: function() {
                return this.state.gradientDepth > 0 && 0 === this.state.kernelDepth
            }
        }, {
            key: "addTapeNode",
            value: function(e, t, n, r, a, o) {
                var i = this
                  , s = {
                    id: this.state.nextTapeNodeId++,
                    kernelName: e,
                    inputs: t,
                    outputs: n,
                    saved: a
                }
                  , u = bC(e);
                null != u && (r = u.gradFunc),
                null != r && (s.gradient = function(e) {
                    return e = e.map((function(e, t) {
                        if (null == e) {
                            var r = n[t]
                              , a = Zk(r.size, r.dtype);
                            return i.makeTensor(a, r.shape, r.dtype)
                        }
                        return e
                    }
                    )),
                    r(e.length > 1 ? e : e[0], a, o)
                }
                ),
                this.state.activeTape.push(s)
            }
        }, {
            key: "keep",
            value: function(e) {
                return e.kept = !0,
                e
            }
        }, {
            key: "startTape",
            value: function() {
                0 === this.state.gradientDepth && (this.state.activeTape = []),
                this.state.gradientDepth++
            }
        }, {
            key: "endTape",
            value: function() {
                this.state.gradientDepth--
            }
        }, {
            key: "startScope",
            value: function(e) {
                var t = {
                    track: [],
                    name: "unnamed scope",
                    id: this.state.nextScopeId++
                };
                e && (t.name = e),
                this.state.scopeStack.push(t),
                this.state.activeScope = t
            }
        }, {
            key: "endScope",
            value: function(e) {
                for (var t = this, n = QC(e), r = new Set(n.map((function(e) {
                    return e.id
                }
                ))), a = 0; a < this.state.activeScope.track.length; a++) {
                    var o = this.state.activeScope.track[a];
                    o.kept || r.has(o.id) || o.dispose()
                }
                var i = this.state.scopeStack.pop();
                this.state.activeScope = 0 === this.state.scopeStack.length ? null : this.state.scopeStack[this.state.scopeStack.length - 1],
                n.forEach((function(e) {
                    e.kept || e.scopeId !== i.id || t.track(e)
                }
                ))
            }
        }, {
            key: "gradients",
            value: function(e, t, n) {
                var r = this
                  , a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                if (Ik(t.length > 0, (function() {
                    return "gradients() received an empty list of xs."
                }
                )),
                null != n && "float32" !== n.dtype)
                    throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype, "'"));
                var o = this.scopedRun((function() {
                    return r.startTape()
                }
                ), (function() {
                    return r.endTape()
                }
                ), (function() {
                    return r.tidy("forward", e)
                }
                ));
                Ik(o instanceof LC, (function() {
                    return "The result y returned by f() must be a tensor."
                }
                ));
                var i = function(e, t, n) {
                    for (var r = {}, a = {}, o = 0; o < t.length; o++)
                        r[t[o].id] = !0;
                    for (var i = 0; i < e.length; i++) {
                        var s = e[i]
                          , u = s.inputs;
                        for (var c in u) {
                            for (var l = u[c], f = !1, p = 0; p < t.length; p++)
                                if (r[l.id]) {
                                    s.outputs.forEach((function(e) {
                                        return r[e.id] = !0
                                    }
                                    )),
                                    f = !0,
                                    a[s.id] = !0;
                                    break
                                }
                            if (f)
                                break
                        }
                    }
                    var d = {};
                    d[n.id] = !0;
                    for (var h = {}, m = e.length - 1; m >= 0; m--)
                        for (var v = e[m], g = v.inputs, y = 0; y < v.outputs.length; y++)
                            if (d[v.outputs[y].id]) {
                                for (var b in g)
                                    d[g[b].id] = !0,
                                    h[v.id] = !0;
                                break
                            }
                    for (var x = [], w = 0; w < e.length; w++) {
                        var k = e[w];
                        if (a[k.id] && h[k.id]) {
                            var C = {};
                            for (var E in k.inputs) {
                                var S = k.inputs[E];
                                r[S.id] && (C[E] = S)
                            }
                            var I = Object.assign({}, k);
                            I.inputs = C,
                            I.outputs = k.outputs,
                            x.push(I)
                        }
                    }
                    return x
                }(this.state.activeTape, t, o);
                if (!a && 0 === i.length && t.length > 0)
                    throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");
                return this.tidy("backward", (function() {
                    var e = {};
                    e[o.id] = null == n ? function(e) {
                        var t = $k(_k(e), "float32");
                        return eE.makeTensor(t, e, "float32")
                    }(o.shape) : n,
                    function(e, t, n, a) {
                        for (var o = function(n) {
                            var o = t[n]
                              , i = [];
                            if (o.outputs.forEach((function(t) {
                                var n = e[t.id];
                                null != n ? i.push(n) : i.push(null)
                            }
                            )),
                            null == o.gradient)
                                throw new Error("Cannot compute gradient: gradient function not found for ".concat(o.kernelName, "."));
                            var s = o.gradient(i)
                              , u = function(t) {
                                if (!(t in s))
                                    throw new Error("Cannot backprop through input ".concat(t, ". Available gradients found: ").concat(Object.keys(s), "."));
                                var n = function(e) {
                                    return r.tidy(e)
                                }((function() {
                                    return s[t]()
                                }
                                ));
                                if ("float32" !== n.dtype)
                                    throw new Error("Error in gradient for op ".concat(o.kernelName, ". The gradient of input ").concat(t, " must have 'float32' dtype, but has '").concat(n.dtype, "'"));
                                var i = o.inputs[t];
                                if (!Rk(n.shape, i.shape))
                                    throw new Error("Error in gradient for op ".concat(o.kernelName, ". The gradient of input '").concat(t, "' has shape '").concat(n.shape, "', which does not match the shape of the input '").concat(i.shape, "'"));
                                if (null == e[i.id])
                                    e[i.id] = n;
                                else {
                                    var u = e[i.id];
                                    e[i.id] = a(u, n),
                                    u.dispose()
                                }
                            };
                            for (var c in o.inputs)
                                u(c)
                        }, i = t.length - 1; i >= 0; i--)
                            o(i)
                    }/**
	         * @license
	         * Copyright 2018 Google LLC. All Rights Reserved.
	         * Licensed under the Apache License, Version 2.0 (the "License");
	         * you may not use this file except in compliance with the License.
	         * You may obtain a copy of the License at
	         *
	         * http://www.apache.org/licenses/LICENSE-2.0
	         *
	         * Unless required by applicable law or agreed to in writing, software
	         * distributed under the License is distributed on an "AS IS" BASIS,
	         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	         * See the License for the specific language governing permissions and
	         * limitations under the License.
	         * =============================================================================
	         */
                    (e, i, 0, tE);
                    var a = t.map((function(t) {
                        return e[t.id]
                    }
                    ));
                    return 0 === r.state.gradientDepth && (r.state.activeTape.forEach((function(e) {
                        var t, n = jy(e.saved);
                        try {
                            for (n.s(); !(t = n.n()).done; ) {
                                t.value.dispose()
                            }
                        } catch (e) {
                            n.e(e)
                        } finally {
                            n.f()
                        }
                    }
                    )),
                    r.state.activeTape = null),
                    {
                        value: o,
                        grads: a
                    }
                }
                ))
            }
        }, {
            key: "customGrad",
            value: function(e) {
                var t = this;
                return Ik(Kk(e), (function() {
                    return "The f passed in customGrad(f) must be a function."
                }
                )),
                function() {
                    for (var n = arguments.length, r = new Array(n), a = 0; a < n; a++)
                        r[a] = arguments[a];
                    var o;
                    Ik(r.every((function(e) {
                        return e instanceof LC
                    }
                    )), (function() {
                        return "The args passed in customGrad(f)(x1, x2,...) must all be tensors"
                    }
                    ));
                    var i = {};
                    return r.forEach((function(e, t) {
                        i[t] = e
                    }
                    )),
                    t.runKernelFunc((function(t, n) {
                        return Ik((o = e.apply(void 0, r.concat([n]))).value instanceof LC, (function() {
                            return "The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"
                        }
                        )),
                        Ik(Kk(o.gradFunc), (function() {
                            return "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."
                        }
                        )),
                        o.value
                    }
                    ), i, (function(e, t) {
                        var n = o.gradFunc(e, t)
                          , a = Array.isArray(n) ? n : [n];
                        Ik(a.length === r.length, (function() {
                            return "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."
                        }
                        )),
                        Ik(a.every((function(e) {
                            return e instanceof LC
                        }
                        )), (function() {
                            return "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."
                        }
                        ));
                        var i = {};
                        return a.forEach((function(e, t) {
                            i[t] = function() {
                                return e
                            }
                        }
                        )),
                        i
                    }
                    ))
                }
            }
        }, {
            key: "readSync",
            value: function(e) {
                return this.state.tensorInfo.get(e).backend.readSync(e)
            }
        }, {
            key: "read",
            value: function(e) {
                return this.state.tensorInfo.get(e).backend.read(e)
            }
        }, {
            key: "time",
            value: (t = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return n = SC(),
                            e.next = 3,
                            this.backend.time(t);
                        case 3:
                            return r = e.sent,
                            e.abrupt("return", (r.wallMs = SC() - n,
                            r));
                        case 5:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "track",
            value: function(e) {
                return null != this.state.activeScope && (e.scopeId = this.state.activeScope.id,
                this.state.activeScope.track.push(e)),
                e
            }
        }, {
            key: "reset",
            value: function() {
                for (var e in this.pendingBackendInitId++,
                this.state.dispose(),
                this.ENV.reset(),
                this.state = new $C,
                this.registry)
                    this.disposeRegisteredKernels(e),
                    this.registry[e].dispose(),
                    delete this.registry[e];
                this.backendName = null,
                this.backendInstance = null,
                this.pendingBackendInit = null
            }
        }, {
            key: "backend",
            get: function() {
                if (null != this.pendingBackendInit)
                    throw new Error("Backend '".concat(this.backendName, "' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods"));
                if (null == this.backendInstance) {
                    var e = this.initializeBackendsAndReturnBest()
                      , t = e.name;
                    if (e.asyncInit)
                        throw new Error("The highest priority backend '".concat(t, "' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods"));
                    this.setBackend(t)
                }
                return this.backendInstance
            }
        }, {
            key: "registeredVariables",
            get: function() {
                return this.state.registeredVariables
            }
        }]),
        e
    }();
    function JC() {
        var e, t = uC();
        if (null == t._tfengine) {
            var n = new aC(t);
            t._tfengine = new ZC(n)
        }
        /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        return e = t._tfengine.ENV,
        sC = e,
        MC = function() {
            return t._tfengine
        }
        ,
        t._tfengine
    }
    ZC.nextTensorId = 0,
    ZC.nextVariableId = 0;
    var eE = JC();
    function tE(e, t) {
        var n = {
            a: e,
            b: t
        };
        return eE.runKernelFunc((function(n, r) {
            var a = n.add(e, t);
            return r([e, t]),
            a
        }
        ), n, null, lC)
    }
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function nE() {
        return "undefined" != typeof window && null != window.document || "undefined" != typeof WorkerGlobalScope
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var rE = oC();
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function aE(e, t) {
        var n = e;
        if (Wk(e))
            return "string" === t ? [] : [e.length];
        if (!Array.isArray(e))
            return [];
        for (var r = []; Array.isArray(n) || Wk(n) && "string" !== t; )
            r.push(n.length),
            n = n[0];
        return Array.isArray(e) && oC().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY") && oE(e, r, []),
        r
    }
    function oE(e, t, n) {
        if (n = n || [],
        Array.isArray(e) || Wk(e)) {
            Ik(t.length > 0, (function() {
                return "Element arr[".concat(n.join("]["), "] should be a primitive, but is an array of ").concat(e.length, " elements")
            }
            )),
            Ik(e.length === t[0], (function() {
                return "Element arr[".concat(n.join("]["), "] should have ").concat(t[0], " elements, but has ").concat(e.length, " elements")
            }
            ));
            for (var r = t.slice(1), a = 0; a < e.length; ++a)
                oE(e[a], r, n.concat(a))
        } else
            Ik(0 === t.length, (function() {
                return "Element arr[".concat(n.join("]["), "] is a primitive, but should be an array/TypedArray of ").concat(t[0], " elements")
            }
            ))
    }
    function iE(e, t, n, r) {
        if (null != e && ("numeric" !== e && e !== t || "numeric" === e && "string" === t))
            throw new Error("Argument '".concat(n, "' passed to '").concat(r, "' must be ").concat(e, " tensor, but got ").concat(t, " tensor"))
    }
    function sE(e, t, n) {
        var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "numeric";
        if (e instanceof LC)
            return iE(r, e.dtype, t, n),
            e;
        var a = Gk(e);
        if ("string" !== a && ["bool", "int32", "float32"].indexOf(r) >= 0 && (a = r),
        iE(r, a, t, n),
        null == e || !Wk(e) && !Array.isArray(e) && "number" != typeof e && "boolean" != typeof e && "string" != typeof e) {
            var o = null == e ? "null" : e.constructor.name;
            throw new Error("Argument '".concat(t, "' passed to '").concat(n, "' must be a Tensor or TensorLike, but got '").concat(o, "'"))
        }
        var i = aE(e, a);
        Wk(e) || Array.isArray(e) || (e = [e]);
        var s = "string" !== a ? EC(e, a) : Nk(e, [], !0);
        return eE.makeTensor(s, i, a)
    }
    function uE(e, t, n) {
        var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "numeric";
        if (!Array.isArray(e))
            throw new Error("Argument ".concat(t, " passed to ").concat(n, " must be a `Tensor[]` or `TensorLike[]`"));
        return e.map((function(e, r) {
            return sE(e, "".concat(t, "[").concat(r, "]"), n)
        }
        ), r)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function cE(e) {
        var t = Object.keys(e);
        if (1 !== t.length)
            throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with ".concat(t.length, " keys."));
        var n = t[0]
          , r = e[n];
        n.endsWith("_") && (n = n.substring(0, n.length - 1)),
        n += "__op";
        var a = function() {
            eE.startScope(n);
            try {
                var e = r.apply(void 0, arguments);
                return rC(e) && console.error("Cannot return a Promise inside of tidy."),
                eE.endScope(e),
                e
            } catch (e) {
                throw eE.endScope(null),
                e
            }
        };
        return Object.defineProperty(a, "name", {
            value: n,
            configurable: !0
        }),
        a
        /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    rE.registerFlag("DEBUG", (function() {
        return !1
    }
    ), (function(e) {
        e && console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")
    }
    )),
    rE.registerFlag("IS_BROWSER", (function() {
        return nE()
    }
    )),
    rE.registerFlag("IS_NODE", (function() {
        return "undefined" != typeof process && void 0 !== process.versions && void 0 !== process.versions.node
    }
    )),
    rE.registerFlag("IS_CHROME", (function() {
        return "undefined" != typeof navigator && null != navigator && null != navigator.userAgent && /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)
    }
    )),
    rE.registerFlag("PROD", (function() {
        return !1
    }
    )),
    rE.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY", (function() {
        return rE.getBool("DEBUG")
    }
    )),
    rE.registerFlag("DEPRECATION_WARNINGS_ENABLED", (function() {
        return !0
    }
    )),
    rE.registerFlag("IS_TEST", (function() {
        return !1
    }
    ));
    var lE = cE({
        complex_: function(e, t) {
            var n = sE(e, "real", "complex")
              , r = sE(t, "imag", "complex");
            Tk(n.shape, r.shape, "real and imag shapes, ".concat(n.shape, " and ").concat(r.shape, ", must match in call to tf.complex()."));
            var a = {
                real: n,
                imag: r
            };
            return eE.runKernelFunc((function(e) {
                return e.complex(n, r)
            }
            ), a, null, "Complex")
        }
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function fE(e, t, n, r) {
        if (null == r && (r = Gk(e)),
        "complex64" === r)
            throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");
        if (!Wk(e) && !Array.isArray(e) && "number" != typeof e && "boolean" != typeof e && "string" != typeof e)
            throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");
        if (null != t) {
            eC(t);
            var a = _k(t)
              , o = _k(n);
            Ik(a === o, (function() {
                return "Based on the provided shape, [".concat(t, "], the tensor should have ").concat(a, " values but has ").concat(o)
            }
            ));
            for (var i = 0; i < n.length; ++i) {
                var s = n[i]
                  , u = i !== n.length - 1 || s !== _k(t.slice(i));
                Ik(n[i] === t[i] || !u, (function() {
                    return "Error creating a new Tensor. Inferred shape (".concat(n, ") does not match the provided shape (").concat(t, "). ")
                }
                ))
            }
        }
        return Wk(e) || Array.isArray(e) || (e = [e]),
        t = t || n,
        e = "string" !== r ? EC(e, r) : Nk(e, [], !0),
        eE.makeTensor(e, t, r)
        /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    function pE(e, t, n) {
        return fE(e, t, aE(e, n), n)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var dE = {
        float32: 4,
        float16: 2,
        int32: 4,
        uint16: 2,
        uint8: 1,
        bool: 1,
        complex64: 8
    }
      , hE = "undefined" != typeof Buffer && ("undefined" == typeof Blob || "undefined" == typeof atob || "undefined" == typeof btoa);
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function mE(e) {
        return hE ? Buffer.byteLength(e) : new Blob([e]).size
    }
    function vE(e) {
        if (1 === e.length)
            return e[0];
        var t = 0;
        e.forEach((function(e) {
            t += e.byteLength
        }
        ));
        var n = new Uint8Array(t)
          , r = 0;
        return e.forEach((function(e) {
            n.set(new Uint8Array(e), r),
            r += e.byteLength
        }
        )),
        n.buffer
    }
    function gE(e) {
        if (e.modelTopology instanceof ArrayBuffer)
            throw new Error("Expected JSON model topology, received ArrayBuffer.");
        return {
            dateSaved: new Date,
            modelTopologyType: "JSON",
            modelTopologyBytes: null == e.modelTopology ? 0 : mE(JSON.stringify(e.modelTopology)),
            weightSpecsBytes: null == e.weightSpecs ? 0 : mE(JSON.stringify(e.weightSpecs)),
            weightDataBytes: null == e.weightData ? 0 : e.weightData.byteLength
        }
    }
    function yE() {
        var e = function() {
            var e = function(e) {
                for (var t = e << 13, n = 0; 0 == (8388608 & t); )
                    n -= 8388608,
                    t <<= 1;
                return (t &= -8388609) | (n += 947912704)
            }
              , t = new Uint32Array(2048);
            t[0] = 0;
            for (var n = 1; n < 1024; n++)
                t[n] = e(n);
            for (var r = 1024; r < 2048; r++)
                t[r] = 939524096 + (r - 1024 << 13);
            return t
        }()
          , t = function() {
            var e = new Uint32Array(64);
            e[0] = 0,
            e[31] = 1199570944,
            e[32] = 2147483648,
            e[63] = 3347054592;
            for (var t = 1; t < 31; t++)
                e[t] = t << 23;
            for (var n = 33; n < 63; n++)
                e[n] = 2147483648 + (n - 32 << 23);
            return e
        }()
          , n = function() {
            for (var e = new Uint32Array(64), t = 0; t < 64; t++)
                e[t] = 1024;
            return e[0] = e[32] = 0,
            e
        }();
        return function(r) {
            for (var a = new ArrayBuffer(4 * r.length), o = new Uint32Array(a), i = 0; i < r.length; i++) {
                var s = r[i]
                  , u = e[n[s >> 10] + (1023 & s)] + t[s >> 10];
                o[i] = u
            }
            return new Float32Array(a)
        }
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var bE = function() {
        function e() {
            Ay(this, e),
            this.saveRouters = [],
            this.loadRouters = []
        }
        return _y(e, null, [{
            key: "getInstance",
            value: function() {
                return null == e.instance && (e.instance = new e),
                e.instance
            }
        }, {
            key: "registerSaveRouter",
            value: function(t) {
                e.getInstance().saveRouters.push(t)
            }
        }, {
            key: "registerLoadRouter",
            value: function(t) {
                e.getInstance().loadRouters.push(t)
            }
        }, {
            key: "getSaveHandlers",
            value: function(t) {
                return e.getHandlers(t, "save")
            }
        }, {
            key: "getLoadHandlers",
            value: function(t, n) {
                return e.getHandlers(t, "load", n)
            }
        }, {
            key: "getHandlers",
            value: function(t, n, r) {
                var a = [];
                return ("load" === n ? e.getInstance().loadRouters : e.getInstance().saveRouters).forEach((function(e) {
                    var n = e(t, r);
                    null !== n && a.push(n)
                }
                )),
                a
            }
        }]),
        e
    }();
    function xE() {
        if (!oC().getBool("IS_BROWSER"))
            throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");
        var e = "undefined" == typeof window ? self : window
          , t = e.indexedDB || e.mozIndexedDB || e.webkitIndexedDB || e.msIndexedDB || e.shimIndexedDB;
        if (null == t)
            throw new Error("The current browser does not appear to support IndexedDB.");
        return t
    }
    function wE(e) {
        var t = e.result;
        t.createObjectStore("models_store", {
            keyPath: "modelPath"
        }),
        t.createObjectStore("model_info_store", {
            keyPath: "modelPath"
        })
    }
    var kE = function() {
        function e(t) {
            if (Ay(this, e),
            this.indexedDB = xE(),
            null == t || !t)
                throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");
            this.modelPath = t
        }
        var t, n;
        return _y(e, [{
            key: "save",
            value: (n = Ty(regeneratorRuntime.mark((function e(t) {
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (!(t.modelTopology instanceof ArrayBuffer)) {
                                e.next = 2;
                                break
                            }
                            throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");
                        case 2:
                            return e.abrupt("return", this.databaseAction(this.modelPath, t));
                        case 3:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "load",
            value: (t = Ty(regeneratorRuntime.mark((function e() {
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.abrupt("return", this.databaseAction(this.modelPath));
                        case 1:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function() {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "databaseAction",
            value: function(e, t) {
                var n = this;
                return new Promise((function(e, r) {
                    var a = n.indexedDB.open("tensorflowjs", 1);
                    a.onupgradeneeded = function() {
                        return wE(a)
                    }
                    ,
                    a.onsuccess = function() {
                        var o = a.result;
                        if (null == t) {
                            var i = o.transaction("models_store", "readonly")
                              , s = i.objectStore("models_store").get(n.modelPath);
                            s.onsuccess = function() {
                                if (null == s.result)
                                    return o.close(),
                                    r(new Error("Cannot find model with path '".concat(n.modelPath, "' in IndexedDB.")));
                                e(s.result.modelArtifacts)
                            }
                            ,
                            s.onerror = function(e) {
                                return o.close(),
                                r(s.error)
                            }
                            ,
                            i.oncomplete = function() {
                                return o.close()
                            }
                        } else {
                            var u, c = gE(t), l = o.transaction("model_info_store", "readwrite"), f = l.objectStore("model_info_store"), p = f.put({
                                modelPath: n.modelPath,
                                modelArtifactsInfo: c
                            });
                            p.onsuccess = function() {
                                var a = (u = o.transaction("models_store", "readwrite")).objectStore("models_store").put({
                                    modelPath: n.modelPath,
                                    modelArtifacts: t,
                                    modelArtifactsInfo: c
                                });
                                a.onsuccess = function() {
                                    return e({
                                        modelArtifactsInfo: c
                                    })
                                }
                                ,
                                a.onerror = function(e) {
                                    var t = (f = l.objectStore("model_info_store")).delete(n.modelPath);
                                    t.onsuccess = function() {
                                        return o.close(),
                                        r(a.error)
                                    }
                                    ,
                                    t.onerror = function(e) {
                                        return o.close(),
                                        r(a.error)
                                    }
                                }
                            }
                            ,
                            p.onerror = function(e) {
                                return o.close(),
                                r(p.error)
                            }
                            ,
                            l.oncomplete = function() {
                                null == u ? o.close() : u.oncomplete = function() {
                                    return o.close()
                                }
                            }
                        }
                    }
                    ,
                    a.onerror = function(e) {
                        return r(a.error)
                    }
                }
                ))
            }
        }]),
        e
    }();
    kE.URL_SCHEME = "indexeddb://";
    var CE = function(e) {
        return oC().getBool("IS_BROWSER") && !Array.isArray(e) && e.startsWith(kE.URL_SCHEME) ? (t = e.slice(kE.URL_SCHEME.length),
        new kE(t)) : null;
        var t
    };
    bE.registerSaveRouter(CE),
    bE.registerLoadRouter(CE);
    var EE = function() {
        function e() {
            Ay(this, e),
            this.indexedDB = xE()
        }
        var t, n;
        return _y(e, [{
            key: "listModels",
            value: (n = Ty(regeneratorRuntime.mark((function e() {
                var t = this;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.abrupt("return", new Promise((function(e, n) {
                                var r = t.indexedDB.open("tensorflowjs", 1);
                                r.onupgradeneeded = function() {
                                    return wE(r)
                                }
                                ,
                                r.onsuccess = function() {
                                    var t = r.result
                                      , a = t.transaction("model_info_store", "readonly")
                                      , o = a.objectStore("model_info_store").getAll();
                                    o.onsuccess = function() {
                                        var t, n = {}, r = jy(o.result);
                                        try {
                                            for (r.s(); !(t = r.n()).done; ) {
                                                var a = t.value;
                                                n[a.modelPath] = a.modelArtifactsInfo
                                            }
                                        } catch (e) {
                                            r.e(e)
                                        } finally {
                                            r.f()
                                        }
                                        e(n)
                                    }
                                    ,
                                    o.onerror = function(e) {
                                        return t.close(),
                                        n(o.error)
                                    }
                                    ,
                                    a.oncomplete = function() {
                                        return t.close()
                                    }
                                }
                                ,
                                r.onerror = function(e) {
                                    return n(r.error)
                                }
                            }
                            )));
                        case 1:
                        case "end":
                            return e.stop()
                        }
                }
                ), e)
            }
            ))),
            function() {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "removeModel",
            value: (t = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r = this;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.abrupt("return", (t = (n = t).startsWith(kE.URL_SCHEME) ? n.slice(kE.URL_SCHEME.length) : n,
                            new Promise((function(e, n) {
                                var a = r.indexedDB.open("tensorflowjs", 1);
                                a.onupgradeneeded = function() {
                                    return wE(a)
                                }
                                ,
                                a.onsuccess = function() {
                                    var r, o = a.result, i = o.transaction("model_info_store", "readwrite"), s = i.objectStore("model_info_store"), u = s.get(t);
                                    u.onsuccess = function() {
                                        if (null == u.result)
                                            return o.close(),
                                            n(new Error("Cannot find model with path '".concat(t, "' in IndexedDB.")));
                                        var a = s.delete(t)
                                          , i = function() {
                                            var a = (r = o.transaction("models_store", "readwrite")).objectStore("models_store").delete(t);
                                            a.onsuccess = function() {
                                                return e(u.result.modelArtifactsInfo)
                                            }
                                            ,
                                            a.onerror = function(e) {
                                                return n(u.error)
                                            }
                                        };
                                        a.onsuccess = i,
                                        a.onerror = function(e) {
                                            return i(),
                                            o.close(),
                                            n(u.error)
                                        }
                                    }
                                    ,
                                    u.onerror = function(e) {
                                        return o.close(),
                                        n(u.error)
                                    }
                                    ,
                                    i.oncomplete = function() {
                                        null == r ? o.close() : r.oncomplete = function() {
                                            return o.close()
                                        }
                                    }
                                }
                                ,
                                a.onerror = function(e) {
                                    return n(a.error)
                                }
                            }
                            ))));
                        case 1:
                        case "end":
                            return e.stop()
                        }
                }
                ), e)
            }
            ))),
            function(e) {
                return t.apply(this, arguments)
            }
            )
        }]),
        e
    }()
      , SE = "tensorflowjs_models"
      , IE = "info"
      , TE = "model_topology"
      , AE = "weight_specs"
      , NE = "weight_data"
      , _E = "model_metadata";
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function RE(e) {
        return {
            info: [SE, e, IE].join("/"),
            topology: [SE, e, TE].join("/"),
            weightSpecs: [SE, e, AE].join("/"),
            weightData: [SE, e, NE].join("/"),
            modelMetadata: [SE, e, _E].join("/")
        }
    }
    function OE(e) {
        var t = e.split("/");
        if (t.length < 3)
            throw new Error("Invalid key format: ".concat(e));
        return t.slice(1, t.length - 1).join("/")
    }
    var DE = function() {
        function e(t) {
            if (Ay(this, e),
            !oC().getBool("IS_BROWSER") || "undefined" == typeof window || void 0 === window.localStorage)
                throw new Error("The current environment does not support local storage.");
            if (this.LS = window.localStorage,
            null == t || !t)
                throw new Error("For local storage, modelPath must not be null, undefined or empty.");
            this.modelPath = t,
            this.keys = RE(this.modelPath)
        }
        var t, n;
        return _y(e, [{
            key: "save",
            value: (n = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r, a;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (!(t.modelTopology instanceof ArrayBuffer)) {
                                e.next = 2;
                                break
                            }
                            throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");
                        case 2:
                            return n = JSON.stringify(t.modelTopology),
                            r = JSON.stringify(t.weightSpecs),
                            a = gE(t),
                            e.prev = 3,
                            e.abrupt("return", (this.LS.setItem(this.keys.info, JSON.stringify(a)),
                            this.LS.setItem(this.keys.topology, n),
                            this.LS.setItem(this.keys.weightSpecs, r),
                            this.LS.setItem(this.keys.weightData, function(e) {
                                if (hE)
                                    return Buffer.from(e).toString("base64");
                                for (var t = new Uint8Array(e), n = "", r = 0, a = t.length; r < a; r++)
                                    n += String.fromCharCode(t[r]);
                                return btoa(n)
                            }(t.weightData)),
                            this.LS.setItem(this.keys.modelMetadata, JSON.stringify({
                                format: t.format,
                                generatedBy: t.generatedBy,
                                convertedBy: t.convertedBy,
                                userDefinedMetadata: t.userDefinedMetadata
                            })),
                            {
                                modelArtifactsInfo: a
                            }));
                        case 7:
                            throw e.prev = 7,
                            e.t0 = e.catch(3),
                            this.LS.removeItem(this.keys.info),
                            this.LS.removeItem(this.keys.topology),
                            this.LS.removeItem(this.keys.weightSpecs),
                            this.LS.removeItem(this.keys.weightData),
                            this.LS.removeItem(this.keys.modelMetadata),
                            new Error("Failed to save model '".concat(this.modelPath, "' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=").concat(a.modelTopologyBytes, ", weightSpecsBytes=").concat(a.weightSpecsBytes, ", weightDataBytes=").concat(a.weightDataBytes, "."));
                        case 10:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this, [[3, 7]])
            }
            ))),
            function(e) {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "load",
            value: (t = Ty(regeneratorRuntime.mark((function e() {
                var t, n, r, a, o, i, s;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (null != (t = JSON.parse(this.LS.getItem(this.keys.info)))) {
                                e.next = 3;
                                break
                            }
                            throw new Error("In local storage, there is no model with name '".concat(this.modelPath, "'"));
                        case 3:
                            if ("JSON" === t.modelTopologyType) {
                                e.next = 5;
                                break
                            }
                            throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");
                        case 5:
                            if (n = {},
                            null != (r = JSON.parse(this.LS.getItem(this.keys.topology)))) {
                                e.next = 8;
                                break
                            }
                            throw new Error("In local storage, the topology of model '".concat(this.modelPath, "' is missing."));
                        case 8:
                            if (n.modelTopology = r,
                            null != (a = JSON.parse(this.LS.getItem(this.keys.weightSpecs)))) {
                                e.next = 12;
                                break
                            }
                            throw new Error("In local storage, the weight specs of model '".concat(this.modelPath, "' are missing."));
                        case 12:
                            if (n.weightSpecs = a,
                            null != (o = this.LS.getItem(this.keys.modelMetadata)) && (i = JSON.parse(o),
                            n.format = i.format,
                            n.generatedBy = i.generatedBy,
                            n.convertedBy = i.convertedBy,
                            n.userDefinedMetadata = i.userDefinedMetadata),
                            null != (s = this.LS.getItem(this.keys.weightData))) {
                                e.next = 18;
                                break
                            }
                            throw new Error("In local storage, the binary weight values of model '".concat(this.modelPath, "' are missing."));
                        case 18:
                            return e.abrupt("return", (n.weightData = function(e) {
                                if (hE) {
                                    var t = Buffer.from(e, "base64");
                                    return t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength)
                                }
                                for (var n = atob(e), r = new Uint8Array(n.length), a = 0; a < n.length; ++a)
                                    r.set([n.charCodeAt(a)], a);
                                return r.buffer
                            }(s),
                            n));
                        case 19:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function() {
                return t.apply(this, arguments)
            }
            )
        }]),
        e
    }();
    DE.URL_SCHEME = "localstorage://";
    var BE = function(e) {
        return oC().getBool("IS_BROWSER") && !Array.isArray(e) && e.startsWith(DE.URL_SCHEME) ? (t = e.slice(DE.URL_SCHEME.length),
        new DE(t)) : null;
        var t
    };
    bE.registerSaveRouter(BE),
    bE.registerLoadRouter(BE);
    var FE = function() {
        function e() {
            Ay(this, e),
            Ik(oC().getBool("IS_BROWSER"), (function() {
                return "Current environment is not a web browser"
            }
            )),
            Ik("undefined" == typeof window || void 0 !== window.localStorage, (function() {
                return "Current browser does not appear to support localStorage"
            }
            )),
            this.LS = window.localStorage
        }
        var t, n;
        return _y(e, [{
            key: "listModels",
            value: (n = Ty(regeneratorRuntime.mark((function e() {
                var t, n, r, a, o;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            for (t = {},
                            n = SE + "/",
                            r = "/" + IE,
                            a = 0; a < this.LS.length; ++a)
                                (o = this.LS.key(a)).startsWith(n) && o.endsWith(r) && (t[OE(o)] = JSON.parse(this.LS.getItem(o)));
                            return e.abrupt("return", t);
                        case 3:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function() {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "removeModel",
            value: (t = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r, a;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (r = RE(t = (n = t).startsWith(DE.URL_SCHEME) ? n.slice(DE.URL_SCHEME.length) : n),
                            null != this.LS.getItem(r.info)) {
                                e.next = 3;
                                break
                            }
                            throw new Error("Cannot find model at path '".concat(t, "'"));
                        case 3:
                            return a = JSON.parse(this.LS.getItem(r.info)),
                            e.abrupt("return", (this.LS.removeItem(r.info),
                            this.LS.removeItem(r.topology),
                            this.LS.removeItem(r.weightSpecs),
                            this.LS.removeItem(r.weightData),
                            a));
                        case 5:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return t.apply(this, arguments)
            }
            )
        }]),
        e
    }()
      , ME = function() {
        function e() {
            Ay(this, e),
            this.managers = {}
        }
        return _y(e, null, [{
            key: "getInstance",
            value: function() {
                return null == e.instance && (e.instance = new e),
                e.instance
            }
        }, {
            key: "registerManager",
            value: function(t, n) {
                Ik(null != t, (function() {
                    return "scheme must not be undefined or null."
                }
                )),
                t.endsWith("://") && (t = t.slice(0, t.indexOf("://"))),
                Ik(t.length > 0, (function() {
                    return "scheme must not be an empty string."
                }
                ));
                var r = e.getInstance();
                Ik(null == r.managers[t], (function() {
                    return "A model store manager is already registered for scheme '".concat(t, "'.")
                }
                )),
                r.managers[t] = n
            }
        }, {
            key: "getManager",
            value: function(e) {
                var t = this.getInstance().managers[e];
                if (null == t)
                    throw new Error("Cannot find model manager for scheme '".concat(e, "'"));
                return t
            }
        }, {
            key: "getSchemes",
            value: function() {
                return Object.keys(this.getInstance().managers)
            }
        }]),
        e
    }()
      , PE = function() {
        function e() {
            Ay(this, e)
        }
        return _y(e, [{
            key: "fetch",
            value: function(e) {
                function t(t, n) {
                    return e.apply(this, arguments)
                }
                return t.toString = function() {
                    return e.toString()
                }
                ,
                t
            }((function(e, t) {
                return fetch(e, t)
            }
            ))
        }, {
            key: "now",
            value: function() {
                return performance.now()
            }
        }, {
            key: "encode",
            value: function(e, t) {
                if ("utf-8" !== t && "utf8" !== t)
                    throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));
                return null == this.textEncoder && (this.textEncoder = new TextEncoder),
                this.textEncoder.encode(e)
            }
        }, {
            key: "decode",
            value: function(e, t) {
                return new TextDecoder(t).decode(e)
            }
        }]),
        e
    }();
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    if (oC().get("IS_BROWSER")) {
        oC().setPlatform("browser", new PE);
        try {
            ME.registerManager(DE.URL_SCHEME, new FE)
        } catch (Ig) {}
        try {
            ME.registerManager(kE.URL_SCHEME, new EE)
        } catch (Ig) {}
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var LE, UE = function() {
        function e() {
            Ay(this, e),
            this.util = require("util"),
            this.textEncoder = new this.util.TextEncoder
        }
        return _y(e, [{
            key: "fetch",
            value: function(e, t) {
                return null != oC().global.fetch ? oC().global.fetch(e, t) : (null == LE && (LE = require("node-fetch")),
                LE(e, t))
            }
        }, {
            key: "now",
            value: function() {
                var e = process.hrtime();
                return 1e3 * e[0] + e[1] / 1e6
            }
        }, {
            key: "encode",
            value: function(e, t) {
                if ("utf-8" !== t && "utf8" !== t)
                    throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));
                return this.textEncoder.encode(e)
            }
        }, {
            key: "decode",
            value: function(e, t) {
                return 0 === e.length ? "" : new this.util.TextDecoder(t).decode(e)
            }
        }]),
        e
    }();
    /**
	 * @license
	 * Copyright 2020 Google Inc. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function VE(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "float32"
          , n = arguments.length > 2 ? arguments[2] : void 0;
        return t = t || "float32",
        eC(e),
        new FC(e,t,n)
        /**
	 * @license
	 * Copyright 2020 Google Inc. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    oC().get("IS_NODE") && oC().setPlatform("node", new UE);
    var zE = cE({
        cast_: function(e, t) {
            var n = sE(e, "x", "cast");
            if (!function(e) {
                return "bool" === e || "complex64" === e || "float32" === e || "int32" === e || "string" === e
            }(t))
                throw new Error("Failed to cast to unknown dtype ".concat(t));
            if ("string" === t && "string" !== n.dtype || "string" !== t && "string" === n.dtype)
                throw new Error("Only strings can be casted to strings");
            var r = {
                x: n
            }
              , a = {
                dtype: t
            };
            return eE.runKernelFunc((function(e) {
                return e.cast(n, t)
            }
            ), r, null, "Cast", a)
        }
    })
      , WE = cE({
        clone_: function(e) {
            var t = sE(e, "x", "clone", null)
              , n = {
                x: t
            };
            return eE.runKernelFunc((function() {
                return eE.makeTensorFromDataId(t.dataId, t.shape, t.dtype)
            }
            ), n, null, "Identity")
        }
    });
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function jE(e, t, n, r) {
        !function(e) {
            Ik(null != e && Array.isArray(e) && e.length > 0, (function() {
                return "promises must be a none empty array"
            }
            ))
        }(e),
        function(e, t) {
            Ik(e >= 0 && e <= 1, (function() {
                return "Progress fraction must be in range [0, 1], but got startFraction ".concat(e)
            }
            )),
            Ik(t >= 0 && t <= 1, (function() {
                return "Progress fraction must be in range [0, 1], but got endFraction ".concat(t)
            }
            )),
            Ik(t >= e, (function() {
                return "startFraction must be no more than endFraction, but got startFraction ".concat(e, " and endFraction ").concat(t)
            }
            ))
        }(n = null == n ? 0 : n, r = null == r ? 1 : r);
        var a = 0;
        return Promise.all(e.map((function(o) {
            return o.then((function(o) {
                var i = n + ++a / e.length * (r - n);
                return t(i),
                o
            }
            )),
            o
        }
        )))
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google Inc. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google Inc. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    JC(),
    PC = {
        buffer: VE,
        cast: zE,
        clone: WE,
        print: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            console.log(e.toString(t))
        }
    };
    var HE = function() {
        function e(t, n) {
            if (Ay(this, e),
            this.DEFAULT_METHOD = "POST",
            null == n && (n = {}),
            this.weightPathPrefix = n.weightPathPrefix,
            this.onProgress = n.onProgress,
            this.weightUrlConverter = n.weightUrlConverter,
            null != n.fetchFunc ? (Ik("function" == typeof n.fetchFunc, (function() {
                return "Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"
            }
            )),
            this.fetch = n.fetchFunc) : this.fetch = oC().platform.fetch,
            Ik(null != t && t.length > 0, (function() {
                return "URL path for http must not be null, undefined or empty."
            }
            )),
            Array.isArray(t) && Ik(2 === t.length, (function() {
                return "URL paths for http must have a length of 2, (actual length is ".concat(t.length, ").")
            }
            )),
            this.path = t,
            null != n.requestInit && null != n.requestInit.body)
                throw new Error("requestInit is expected to have no pre-existing body, but has one.");
            this.requestInit = n.requestInit || {}
        }
        var t, n, r;
        return _y(e, [{
            key: "save",
            value: (r = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r, a, o;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (!(t.modelTopology instanceof ArrayBuffer)) {
                                e.next = 2;
                                break
                            }
                            throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");
                        case 2:
                            return (n = Object.assign({
                                method: this.DEFAULT_METHOD
                            }, this.requestInit)).body = new FormData,
                            r = [{
                                paths: ["./model.weights.bin"],
                                weights: t.weightSpecs
                            }],
                            a = {
                                modelTopology: t.modelTopology,
                                format: t.format,
                                generatedBy: t.generatedBy,
                                convertedBy: t.convertedBy,
                                userDefinedMetadata: t.userDefinedMetadata,
                                weightsManifest: r
                            },
                            n.body.append("model.json", new Blob([JSON.stringify(a)],{
                                type: "application/json"
                            }), "model.json"),
                            null != t.weightData && n.body.append("model.weights.bin", new Blob([t.weightData],{
                                type: "application/octet-stream"
                            }), "model.weights.bin"),
                            e.next = 8,
                            this.fetch(this.path, n);
                        case 8:
                            if (!(o = e.sent).ok) {
                                e.next = 11;
                                break
                            }
                            return e.abrupt("return", {
                                modelArtifactsInfo: gE(t),
                                responses: [o]
                            });
                        case 11:
                            throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status ".concat(o.status, "."));
                        case 12:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return r.apply(this, arguments)
            }
            )
        }, {
            key: "load",
            value: (n = Ty(regeneratorRuntime.mark((function e() {
                var t, n, r, a, o, i, s, u, c, l, f, p, d, h, m;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2,
                            this.fetch(this.path, this.requestInit);
                        case 2:
                            if ((t = e.sent).ok) {
                                e.next = 5;
                                break
                            }
                            throw new Error("Request to ".concat(this.path, " failed with status code ").concat(t.status, ". Please verify this URL points to the model JSON of the model to load."));
                        case 5:
                            return e.prev = 5,
                            e.next = 8,
                            t.json();
                        case 8:
                            n = e.sent,
                            e.next = 15;
                            break;
                        case 11:
                            throw e.prev = 11,
                            e.t0 = e.catch(5),
                            r = "Failed to parse model JSON of response from ".concat(this.path, "."),
                            this.path.endsWith(".pb") ? r += " Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository." : r += " Please make sure the server is serving valid JSON for this request.",
                            new Error(r);
                        case 15:
                            if (a = n.modelTopology,
                            o = n.weightsManifest,
                            i = n.generatedBy,
                            s = n.convertedBy,
                            u = n.format,
                            c = n.userDefinedMetadata,
                            null != a || null != o) {
                                e.next = 18;
                                break
                            }
                            throw new Error("The JSON from HTTP path ".concat(this.path, " contains neither model topology or manifest for weights."));
                        case 18:
                            if (null == o) {
                                e.next = 25;
                                break
                            }
                            return e.next = 21,
                            this.loadWeights(o);
                        case 21:
                            p = e.sent,
                            d = Uy(p, 2),
                            l = d[0],
                            f = d[1];
                        case 25:
                            return h = {
                                modelTopology: a,
                                weightSpecs: l,
                                weightData: f,
                                userDefinedMetadata: c,
                                generatedBy: i,
                                convertedBy: s,
                                format: u
                            },
                            m = n.modelInitializer,
                            e.abrupt("return", (m && (h.modelInitializer = m),
                            h));
                        case 27:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this, [[5, 11]])
            }
            ))),
            function() {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "loadWeights",
            value: (t = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r, a, o, i, s, u, c, l, f, p, d, h, m, v, g, y, b;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            n = Array.isArray(this.path) ? this.path[1] : this.path,
                            r = function(e) {
                                var t = e.lastIndexOf("/")
                                  , n = e.lastIndexOf("?");
                                return [e.substring(0, t) + "/", n > t ? e.substring(n) : ""]
                            }(n),
                            a = Uy(r, 2),
                            o = a[0],
                            i = a[1],
                            s = this.weightPathPrefix || o,
                            u = [],
                            c = jy(t);
                            try {
                                for (c.s(); !(l = c.n()).done; )
                                    f = l.value,
                                    u.push.apply(u, Vy(f.weights))
                            } catch (e) {
                                c.e(e)
                            } finally {
                                c.f()
                            }
                            p = [],
                            d = [],
                            h = jy(t);
                            try {
                                for (h.s(); !(m = h.n()).done; ) {
                                    v = m.value,
                                    g = jy(v.paths);
                                    try {
                                        for (g.s(); !(y = g.n()).done; )
                                            b = y.value,
                                            null != this.weightUrlConverter ? d.push(this.weightUrlConverter(b)) : p.push(s + b + i)
                                    } catch (e) {
                                        g.e(e)
                                    } finally {
                                        g.f()
                                    }
                                }
                            } catch (e) {
                                h.e(e)
                            } finally {
                                h.f()
                            }
                            if (e.t0 = this.weightUrlConverter,
                            !e.t0) {
                                e.next = 16;
                                break
                            }
                            return e.t1 = p.push,
                            e.t2 = p,
                            e.t3 = Vy,
                            e.next = 13,
                            Promise.all(d);
                        case 13:
                            e.t4 = e.sent,
                            e.t5 = (0,
                            e.t3)(e.t4),
                            e.t1.apply.call(e.t1, e.t2, e.t5);
                        case 16:
                            return e.t6 = u,
                            e.t7 = vE,
                            e.next = 20,
                            function() {
                                var e = Ty(regeneratorRuntime.mark((function e(t, n) {
                                    var r, a, o;
                                    return regeneratorRuntime.wrap((function(e) {
                                        for (; ; )
                                            switch (e.prev = e.next) {
                                            case 0:
                                                if (null == n && (n = {}),
                                                r = null == n.fetchFunc ? oC().platform.fetch : n.fetchFunc,
                                                a = t.map((function(e) {
                                                    return r(e, n.requestInit, {
                                                        isBinary: !0
                                                    })
                                                }
                                                )),
                                                null != n.onProgress) {
                                                    e.next = 9;
                                                    break
                                                }
                                                return e.next = 6,
                                                Promise.all(a);
                                            case 6:
                                                e.t0 = e.sent,
                                                e.next = 12;
                                                break;
                                            case 9:
                                                return e.next = 11,
                                                jE(a, n.onProgress, 0, .5);
                                            case 11:
                                                e.t0 = e.sent;
                                            case 12:
                                                if (o = e.t0.map((function(e) {
                                                    return e.arrayBuffer()
                                                }
                                                )),
                                                null != n.onProgress) {
                                                    e.next = 19;
                                                    break
                                                }
                                                return e.next = 16,
                                                Promise.all(o);
                                            case 16:
                                                e.t1 = e.sent,
                                                e.next = 22;
                                                break;
                                            case 19:
                                                return e.next = 21,
                                                jE(o, n.onProgress, .5, 1);
                                            case 21:
                                                e.t1 = e.sent;
                                            case 22:
                                                return e.abrupt("return", e.t1);
                                            case 23:
                                            case "end":
                                                return e.stop()
                                            }
                                    }
                                    ), e)
                                }
                                )));
                                return function(t, n) {
                                    return e.apply(this, arguments)
                                }
                            }()/**
	                 * @license
	                 * Copyright 2018 Google LLC. All Rights Reserved.
	                 * Licensed under the Apache License, Version 2.0 (the "License");
	                 * you may not use this file except in compliance with the License.
	                 * You may obtain a copy of the License at
	                 *
	                 * http://www.apache.org/licenses/LICENSE-2.0
	                 *
	                 * Unless required by applicable law or agreed to in writing, software
	                 * distributed under the License is distributed on an "AS IS" BASIS,
	                 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                 * See the License for the specific language governing permissions and
	                 * limitations under the License.
	                 * =============================================================================
	                 */
                            (p, {
                                requestInit: this.requestInit,
                                fetchFunc: this.fetch,
                                onProgress: this.onProgress
                            });
                        case 20:
                            return e.t8 = e.sent,
                            e.t9 = (0,
                            e.t7)(e.t8),
                            e.abrupt("return", [e.t6, e.t9]);
                        case 23:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return t.apply(this, arguments)
            }
            )
        }]),
        e
    }();
    function GE(e) {
        return null != e.match(HE.URL_SCHEME_REGEX)
    }
    HE.URL_SCHEME_REGEX = /^https?:\/\//;
    var KE = function(e, t) {
        if ("undefined" == typeof fetch && (null == t || null == t.fetchFunc))
            return null;
        return (Array.isArray(e) ? e.every((function(e) {
            return GE(e)
        }
        )) : GE(e)) ? qE(e, t) : null
    };
    function qE(e, t) {
        return new HE(e,t)
    }
    function XE(e, t) {
        return qE(e, t)
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    bE.registerSaveRouter(KE),
    bE.registerLoadRouter(KE);
    var QE, YE = cE({
        reshape_: function(e, t) {
            var n = sE(e, "x", "reshape", null)
              , r = {
                x: n
            }
              , a = {
                shape: t
            };
            return eE.runKernelFunc((function(e, r) {
                return t = Mk(t, n.size),
                Ik(n.size === _k(t), (function() {
                    return "new shape and old shape must have the same number of elements."
                }
                )),
                r([n]),
                e.reshape(n, t)
            }
            ), r, null, "Reshape", a)
        }
    }), $E = cE({
        matMul_: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]
              , a = sE(e, "a", "matMul")
              , o = sE(t, "b", "matMul")
              , i = XC(a, o)
              , s = Uy(i, 2);
            a = s[0],
            o = s[1];
            var u = {
                a: a,
                b: o
            }
              , c = {
                transposeA: n,
                transposeB: r
            };
            return eE.runKernelFunc((function(e, t) {
                t([a, o]);
                var i = n ? a.shape[a.rank - 2] : a.shape[a.rank - 1]
                  , s = r ? o.shape[o.rank - 1] : o.shape[o.rank - 2]
                  , u = n ? a.shape[a.rank - 1] : a.shape[a.rank - 2]
                  , c = r ? o.shape[o.rank - 2] : o.shape[o.rank - 1]
                  , l = a.shape.slice(0, -2)
                  , f = o.shape.slice(0, -2)
                  , p = _k(l)
                  , d = _k(f)
                  , h = p === d || 1 === p || 1 === d;
                Ik(a.rank >= 2 && o.rank >= 2 && h, (function() {
                    return "Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (".concat(l, ") and (").concat(f, ").")
                }
                )),
                Ik(i === s, (function() {
                    return "Error in matMul: inner shapes (".concat(i, ") and (").concat(s, ") of Tensors with shapes ").concat(a.shape, " and ").concat(o.shape, " and transposeA=").concat(n, " and transposeB=").concat(r, " must match.")
                }
                ));
                var m = (p > d ? l : f).concat([u, c])
                  , v = YE(a, n ? [p, i, u] : [p, u, i])
                  , g = YE(o, r ? [d, c, s] : [d, s, c])
                  , y = e.batchMatMul(v, g, n, r);
                return YE(y, m)
            }
            ), u, null, "BatchMatMul", c)
        }
    }), ZE = cE({
        oneHot_: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1
              , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
            if (t < 2)
                throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));
            var a = sE(e, "indices", "oneHot", "int32")
              , o = [].concat(Vy(a.shape), [t])
              , i = {
                indices: a
            }
              , s = {
                depth: t,
                onValue: n,
                offValue: r
            };
            return eE.runKernelFunc((function(e, i) {
                return i([a]),
                YE(e.oneHot(YE(a, [a.size]), t, n, r), o)
            }
            ), i, null, "OneHot", s)
        }
    }), JE = cE({
        transpose_: function(e, t) {
            var n = sE(e, "x", "transpose");
            if (null == t && (t = n.shape.map((function(e, t) {
                return t
            }
            )).reverse()),
            Ik(n.rank === t.length, (function() {
                return "Error in transpose: rank of input ".concat(n.rank, " must match length of perm ").concat(t, ".")
            }
            )),
            t.forEach((function(e) {
                Ik(e >= 0 && e < n.rank, (function() {
                    return "All entries in 'perm' must be between 0 and " + (n.rank - 1) + " but got ".concat(t)
                }
                ))
            }
            )),
            n.rank <= 1)
                return n.clone();
            var r = {
                x: n
            }
              , a = {
                perm: t
            };
            return eE.runKernelFunc((function(e) {
                return e.transpose(n, t)
            }
            ), r, null, "Transpose", a)
        }
    }), eS = cE({
        fromPixels_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3;
            if (t > 4)
                throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");
            if (null == e)
                throw new Error("pixels passed to tf.browser.fromPixels() can not be null");
            var n = !1
              , r = !1
              , a = !1
              , o = !1
              , i = !1;
            if (e.data instanceof Uint8Array)
                n = !0;
            else if ("undefined" != typeof ImageData && e instanceof ImageData)
                r = !0;
            else if ("undefined" != typeof HTMLVideoElement && e instanceof HTMLVideoElement)
                a = !0;
            else if ("undefined" != typeof HTMLImageElement && e instanceof HTMLImageElement)
                o = !0;
            else {
                if (null == e.getContext)
                    throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ".concat(e.constructor.name));
                i = !0
            }
            if (a) {
                var s = 2;
                if (a && e.readyState < s)
                    throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")
            }
            if (null != yC("FromPixels", eE.backendName)) {
                var u = {
                    pixels: e
                }
                  , c = {
                    numChannels: t
                };
                return eE.runKernel("FromPixels", u, c)
            }
            var l, f, p = a ? [e.videoWidth, e.videoHeight] : [e.width, e.height], d = Uy(p, 2), h = d[0], m = d[1];
            if (i ? l = e.getContext("2d").getImageData(0, 0, h, m).data : r || n ? l = e.data : (o || a) && (null == QE && (QE = document.createElement("canvas").getContext("2d")),
            QE.canvas.width = h,
            QE.canvas.height = m,
            QE.drawImage(e, 0, 0, h, m),
            l = QE.getImageData(0, 0, h, m).data),
            4 === t)
                f = new Int32Array(l);
            else {
                var v = h * m;
                f = new Int32Array(v * t);
                for (var g = 0; g < v; g++)
                    for (var y = 0; y < t; ++y)
                        f[g * t + y] = l[4 * g + y]
            }
            return function(e, t, n) {
                if (Ak(e),
                null != t && 3 !== t.length)
                    throw new Error("tensor3d() requires shape to have three numbers");
                var r = aE(e, n);
                if (3 !== r.length && 1 !== r.length)
                    throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");
                if (1 === r.length && null == t)
                    throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");
                return fE(e, t, r, n)
            }(f, [m, h, t], "int32")
        }
    });
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function tS(e, t) {
        if (e.rank < 1)
            throw new Error("tf.gatherND() expects the input to be rank 1 or higher, but the rank was ".concat(e.rank, "."));
        if (t.rank < 1)
            throw new Error("tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ".concat(t.rank, "."));
        if ("int32" !== t.dtype)
            throw new Error("tf.gatherND() expects the indices to be int32 type, but the dtype was ".concat(t.dtype, "."));
        if (t.shape[t.rank - 1] > e.rank)
            throw new Error("index innermost dimension length must be <= tensor rank; saw: ".concat(t.shape[t.rank - 1], " vs. ").concat(e.rank));
        if (0 === e.size)
            throw new Error("Requested more than 0 entries, but input is empty. Input shape: ".concat(e.shape, "."));
        for (var n = t.shape, r = n[n.length - 1], a = 1, o = 0; o < n.length - 1; ++o)
            a *= n[o];
        var i = e.shape
          , s = n.slice();
        s.pop();
        for (var u = 1, c = r; c < e.rank; ++c)
            u *= i[c],
            s.push(i[c]);
        var l = [].concat(Vy(Xk(e.shape).map((function(e) {
            return e / u
        }
        ))), [1]).slice(0, r);
        return [s, a, u, l]
    }
    function nS(e, t, n) {
        var r = t.rank > 1 ? t.shape[t.rank - 1] : 1
          , a = t.rank > 1 ? t.rank - 1 : 1
          , o = "Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ".concat(n.shape, ", indices.shape: ").concat(t.shape, ", shape: ").concat(e, ", sliceDim: ").concat(r, ", and batchDim: ").concat(a, ".");
        if (n.rank < a)
            throw new Error(o + " update.rank < ".concat(a, ". "));
        if (e.length < r + (n.rank - a))
            throw new Error(o + " Output shape length < ".concat(r + (n.rank - a)));
        if (n.rank !== a + e.length - r)
            throw new Error(o + " update.rank != " + (a + e.length - r));
        for (var i = 0; i < a; ++i)
            if (n.shape[i] !== t.shape[i])
                throw new Error(o + " updates.shape[".concat(i, "] (").concat(n.shape[i], ") != indices.shape[").concat(i, "] (").concat(t.shape[i], ")."));
        for (var s = 0; s < n.rank - a; ++s)
            if (n.shape[s + a] !== e[s + r])
                throw new Error(o + " updates.shape[".concat(s + a, "] (").concat(n.shape[s + a], ") != shape[").concat(s + a, "] (").concat(e[s + a], ")"))
    }
    function rS(e, t, n) {
        if (t.rank < 1)
            throw new Error("tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ".concat(t.rank, "."));
        if (e.rank < 1)
            throw new Error("tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ".concat(e.rank, "."));
        if ("int32" !== t.dtype)
            throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));
        if (n.length < 1)
            throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));
        if (0 === n.length) {
            if (0 === t.size)
                throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));
            if (0 === e.size)
                throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))
        }
        nS(n, t, e)
    }
    function aS(e, t, n) {
        for (var r = t.shape.length, a = r > 1 ? t.shape[r - 1] : 1, o = n.length, i = 1, s = a; s < o; ++s)
            i *= n[s];
        var u = a < 1 ? 1 : a;
        return {
            sliceRank: a,
            numUpdates: _k(t.shape) / u,
            sliceSize: i,
            strides: [].concat(Vy(Xk(n.slice(0, a))), [1]),
            outputSize: _k(n)
        }
    }
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function oS(e, t, n) {
        var r = e.shape.length;
        Ik(r === t.length, (function() {
            return "Error in slice".concat(r, "D: Length of begin ").concat(t, " must match the rank of the array (").concat(r, ").")
        }
        )),
        Ik(r === n.length, (function() {
            return "Error in slice".concat(r, "D: Length of size ").concat(n, " must match the rank of the array (").concat(r, ").")
        }
        ));
        for (var a = function(a) {
            Ik(t[a] + n[a] <= e.shape[a], (function() {
                return "Error in slice".concat(r, "D: begin[").concat(a, "] + size[").concat(a, "] (").concat(t[a] + n[a], ") would overflow input.shape[").concat(a, "] (").concat(e.shape[a], ")")
            }
            ))
        }, o = 0; o < r; ++o)
            a(o)
    }
    function iS(e) {
        for (var t = [], n = 0; e > 0; )
            1 & e && t.push(n),
            e /= 2,
            n++;
        return t
    }
    function sS(e, t, n) {
        for (var r = [], a = 0; a < e.length; a++)
            r[a] = Math.ceil((t[a] - e[a]) / n[a]);
        return r
    }
    function uS(e, t, n, r) {
        for (var a = Vy(e), o = a.length; o < r.length; o++)
            a.push(1);
        for (var i = 0; i < n; i++)
            0 === i ? a[t] = 1 : (a.splice(t, 0, 1),
            a.pop());
        return a
    }
    function cS(e, t, n) {
        return n <= e ? n : n - (t - 1)
    }
    function lS(e, t) {
        for (var n = [], r = 0; r < e; r++)
            n.push(t + r);
        return n
    }
    function fS(e, t, n, r, a, o, i, s, u) {
        var c = e.length
          , l = new Array(c)
          , f = new Array(c)
          , p = new Array(c);
        if (t.length && n > 0) {
            var d = t[0]
              , h = n + 1;
            l = pS(i, d, h, r, e),
            f = dS(s, d, h, a, e),
            p = uS(o, d, h, e)
        } else
            for (var m = 0; m < c; m++)
                l[m] = mS(i, r, o, e, m, u),
                f[m] = vS(s, a, o, e, m, u),
                p[m] = hS(o, m, u);
        return {
            begin: l,
            end: f,
            strides: p
        }
    }
    function pS(e, t, n, r, a) {
        for (var o = Vy(a), i = lS(n, t), s = 0; s < o.length; s++)
            if (i.indexOf(s) > -1)
                o[s] = 0;
            else {
                var u = cS(t, n, s)
                  , c = r[u];
                e & 1 << u && (c = 0),
                o[s] = c
            }
        return o
    }
    function dS(e, t, n, r, a) {
        for (var o = Vy(a), i = lS(n, t), s = 0; s < o.length; s++)
            if (i.indexOf(s) > -1)
                o[s] = Number.MAX_SAFE_INTEGER;
            else {
                var u = cS(t, n, s)
                  , c = r[u];
                e & 1 << u && (c = Number.MAX_SAFE_INTEGER),
                o[s] = c
            }
        for (var l = 0; l < o.length; l++) {
            var f = a[l];
            o[l] < 0 && (o[l] += f),
            o[l] = Ek(0, o[l], a[l])
        }
        return o
    }
    function hS(e, t, n) {
        var r = e[t];
        return (n & 1 << t || null == r) && (r = 1),
        r
    }
    function mS(e, t, n, r, a, o) {
        var i = t[a]
          , s = n[a] || 1;
        (e & 1 << a || o & 1 << a || null == i) && (i = s > 0 ? Number.MIN_SAFE_INTEGER : Number.MAX_SAFE_INTEGER);
        var u = r[a];
        return i < 0 && (i += u),
        i = Ek(0, i, u - 1)
    }
    function vS(e, t, n, r, a, o) {
        var i = t[a]
          , s = n[a] || 1;
        (e & 1 << a || o & 1 << a || null == i) && (i = s > 0 ? Number.MAX_SAFE_INTEGER : Number.MIN_SAFE_INTEGER);
        var u = r[a];
        return i < 0 && (i += u),
        i = s > 0 ? Ek(0, i, u) : Ek(-1, i, u - 1)
    }
    function gS(e, t, n) {
        for (var r = n.length, a = 0; a < n.length; a++)
            if (n[a] > 1) {
                r = a;
                break
            }
        for (var o = r + 1; o < n.length; o++)
            if (t[o] > 0 || n[o] !== e[o])
                return !1;
        return !0
    }
    function yS(e, t) {
        for (var n = e.length > 0 ? e[e.length - 1] : 1, r = 0; r < e.length - 1; r++)
            n += e[r] * t[r];
        return n
    }
    function bS(e, t, n) {
        var r, a, o = e.shape.length;
        return (r = "number" == typeof t ? [t].concat(Vy(new Array(o - 1).fill(0))) : t.length < o ? t.concat(new Array(o - t.length).fill(0)) : t.slice()).forEach((function(e) {
            Ik(-1 !== e, (function() {
                return "slice() does not support negative begin indexing."
            }
            ))
        }
        )),
        a = (a = null == n ? new Array(o).fill(-1) : "number" == typeof n ? [n].concat(Vy(new Array(o - 1).fill(-1))) : n.length < o ? n.concat(new Array(o - n.length).fill(-1)) : n).map((function(t, n) {
            return t >= 0 ? t : (Ik(-1 === t, (function() {
                return "Negative size values should be exactly -1 but got ".concat(t, " for the slice() size at index ").concat(n, ".")
            }
            )),
            e.shape[n] - r[n])
        }
        )),
        [r, a]
    }
    var xS = Object.freeze({
        __proto__: null,
        assertParamsValid: oS,
        maskToAxes: iS,
        computeOutShape: sS,
        stridesWithElidedDims: uS,
        getNormalizedAxes: fS,
        startIndicesWithElidedDims: pS,
        stopIndicesWithElidedDims: dS,
        stridesForAxis: hS,
        startForAxis: mS,
        stopForAxis: vS,
        isSliceContinous: gS,
        computeFlatOffset: yS,
        parseSliceParams: bS
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function wS(e) {
        oC().getBool("DEPRECATION_WARNINGS_ENABLED") && console.warn(e + " You can disable deprecation warnings with tf.disableDeprecationWarnings().")
    }
    function kS() {
        return eE
    }
    function CS(e, t) {
        return eE.tidy(e, t)
    }
    function ES(e) {
        return eE.keep(e)
    }
    function SS(e) {
        return eE.setBackend(e)
    }
    function IS(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        return eE.registerBackend(e, t, n)
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var TS = cE({
        add_: function(e, t) {
            var n = sE(e, "a", "add")
              , r = sE(t, "b", "add")
              , a = Uy(XC(n, r), 2);
            n = a[0],
            r = a[1];
            var o = {
                a: n,
                b: r
            };
            return eE.runKernelFunc((function(e, t) {
                var a = e.add(n, r);
                return t([n, r]),
                a
            }
            ), o, null, lC)
        }
    })
      , AS = cE({
        floorDiv_: function(e, t) {
            var n = sE(e, "a", "floorDiv")
              , r = sE(t, "b", "floorDiv")
              , a = Uy(XC(n, r), 2);
            n = a[0],
            r = a[1];
            var o = {
                a: n,
                b: r
            };
            return eE.runKernelFunc((function(e, t) {
                var a = e.floorDiv(n, r);
                return t([n, r]),
                a
            }
            ), o, null, "FloorDiv")
        }
    })
      , NS = cE({
        div_: function(e, t) {
            var n, r = sE(e, "a", "div"), a = sE(t, "b", "div");
            if (n = Uy(XC(r, a), 2),
            r = n[0],
            a = n[1],
            "int32" === r.dtype && "int32" === a.dtype)
                return AS(r, a);
            var o = {
                a: r,
                b: a
            };
            return eE.runKernelFunc((function(e, t) {
                var n = e.realDivide(r, a);
                return t([r, a]),
                n
            }
            ), o, null, pC, {})
        }
    })
      , _S = cE({
        mul_: function(e, t) {
            var n = sE(e, "a", "mul")
              , r = sE(t, "b", "mul")
              , a = Uy(XC(n, r), 2);
            n = a[0],
            r = a[1];
            var o = {
                a: n,
                b: r
            };
            return eE.runKernelFunc((function(e, t) {
                var a = e.multiply(n, r);
                return t([n, r]),
                a
            }
            ), o, null, "Multiply")
        }
    })
      , RS = cE({
        abs_: function(e) {
            var t = sE(e, "x", "abs")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                return n([t]),
                "complex64" === t.dtype ? e.complexAbs(t) : e.abs(t)
            }
            ), n, null, "Abs")
        }
    })
      , OS = cE({
        acos_: function(e) {
            var t = sE(e, "x", "acos")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.acos(t);
                return n([t]),
                r
            }
            ), n, null, "Acos")
        }
    })
      , DS = cE({
        acosh_: function(e) {
            var t = sE(e, "x", "acosh")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.acosh(t);
                return n([t]),
                r
            }
            ), n, null, "Acosh")
        }
    })
      , BS = cE({
        addN_: function(e) {
            Ik(Array.isArray(e), (function() {
                return "The argument passed to tf.addN() must be a list of tensors"
            }
            )),
            Ik(e.length >= 1, (function() {
                return "Must pass at least one tensor to tf.addN(), but got ".concat(e.length)
            }
            ));
            var t = e.map((function(e, t) {
                return sE(e, "tensors".concat(t), "addN")
            }
            ))
              , n = t[0];
            t.forEach((function(e) {
                if (e.dtype !== n.dtype)
                    throw new Error("All tensors passed to tf.addN() must have the same dtype")
            }
            )),
            t.forEach((function(e) {
                if (!Rk(e.shape, n.shape))
                    throw new Error("All tensors passed to tf.addN() must have the same shape")
            }
            ));
            var r = t;
            return eE.runKernelFunc((function(e, n) {
                var r = e.addN(t);
                return n(t),
                r
            }
            ), r, null, "AddN")
        }
    });
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function FS(e, t) {
        for (var n = 0; n < e.length; ++n)
            if (e[e.length - n - 1] !== t - 1 - n)
                return !1;
        return !0
    }
    function MS(e, t, n) {
        for (var r = e.length + t.length, a = [], o = 0, i = 0, s = 0; s < r; s++)
            -1 === n.indexOf(s) ? a.push(e[o++]) : a.push(t[i++]);
        return a
    }
    function PS(e, t) {
        for (var n = [], r = e.length, a = 0; a < r; a++)
            -1 === t.indexOf(a) && n.push(e[a]);
        return [n, t.map((function(t) {
            return e[t]
        }
        ))]
    }
    function LS(e, t) {
        return MS(e, t.map((function(e) {
            return 1
        }
        )), t)
    }
    function US(e, t, n) {
        Ik(FS(t, n), (function() {
            return "".concat(e, " supports only inner-most axes for now. Got axes ").concat(t, " and rank-").concat(n, " input.")
        }
        ))
    }
    function VS(e, t) {
        if (FS(e, t))
            return null;
        for (var n = [], r = 0; r < t; ++r)
            -1 === e.indexOf(r) && n.push(r);
        return e.forEach((function(e) {
            return n.push(e)
        }
        )),
        n
    }
    function zS(e) {
        return e.map((function(e, t) {
            return [t, e]
        }
        )).sort((function(e, t) {
            return e[1] - t[1]
        }
        )).map((function(e) {
            return e[0]
        }
        ))
    }
    function WS(e, t) {
        for (var n = [], r = t - e; r < t; ++r)
            n.push(r);
        return n
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var jS = cE({
        all_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
              , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = sE(e, "x", "all", "bool")
              , a = {
                x: r
            }
              , o = {
                axis: t,
                keepDims: n
            };
            return eE.runKernelFunc((function(e) {
                var a = Pk(t, r.shape)
                  , o = a
                  , i = VS(o, r.rank);
                null != i && (r = JE(r, i),
                o = WS(o.length, r.rank));
                var s = e.all(r, o);
                if (n) {
                    var u = LS(s.shape, a);
                    return YE(s, u)
                }
                return s
            }
            ), a, null, "All", o)
        }
    })
      , HS = cE({
        any_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
              , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = sE(e, "x", "any", "bool")
              , a = {
                x: r
            }
              , o = {
                axis: t,
                keepDims: n
            };
            return eE.runKernelFunc((function(e) {
                var a = Pk(t, r.shape)
                  , o = a
                  , i = VS(o, r.rank);
                null != i && (r = JE(r, i),
                o = WS(o.length, r.rank));
                var s = e.any(r, o);
                if (n) {
                    var u = LS(s.shape, a);
                    return YE(s, u)
                }
                return s
            }
            ), a, null, "Any", o)
        }
    })
      , GS = cE({
        argMax_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = sE(e, "x", "argMax")
              , r = {
                x: n
            }
              , a = {
                axis: t
            };
            return eE.runKernelFunc((function(e, r) {
                r([n]);
                var a = Pk(t, n.shape)
                  , o = VS(a, n.rank);
                return null != o && (n = JE(n, o),
                a = WS(a.length, n.rank)),
                e.argMax(n, a[0])
            }
            ), r, null, "ArgMax", a)
        }
    })
      , KS = cE({
        argMin_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = sE(e, "x", "argMin")
              , r = {
                x: n
            }
              , a = {
                axis: t
            };
            return eE.runKernelFunc((function(e, r) {
                r([n]),
                null == t && (t = 0);
                var a = Pk(t, n.shape)
                  , o = VS(a, n.rank);
                return null != o && (n = JE(n, o),
                a = WS(a.length, n.rank)),
                e.argMin(n, a[0])
            }
            ), r, null, "ArgMin", a)
        }
    })
      , qS = cE({
        asin_: function(e) {
            var t = sE(e, "x", "asin")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.asin(t);
                return n([t]),
                r
            }
            ), n, null, "Asin")
        }
    })
      , XS = cE({
        asinh_: function(e) {
            var t = sE(e, "x", "asinh")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.asinh(t);
                return n([t]),
                r
            }
            ), n, null, "Asinh")
        }
    })
      , QS = cE({
        atan_: function(e) {
            var t = sE(e, "x", "atan")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.atan(t);
                return n([t]),
                r
            }
            ), n, null, "Atan")
        }
    })
      , YS = cE({
        atan2_: function(e, t) {
            var n = sE(e, "a", "atan2")
              , r = sE(t, "b", "atan2")
              , a = Uy(XC(n, r), 2);
            n = a[0],
            r = a[1];
            var o = {
                a: n,
                b: r
            };
            return eE.runKernelFunc((function(e, t) {
                var a = e.atan2(n, r);
                return t([n, r]),
                a
            }
            ), o, null, "Atan2")
        }
    })
      , $S = cE({
        atanh_: function(e) {
            var t = sE(e, "x", "atanh")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.atanh(t);
                return n([t]),
                r
            }
            ), n, null, "Atanh")
        }
    });
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function ZS(e, t, n, r) {
        var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "NHWC"
          , o = arguments.length > 5 ? arguments[5] : void 0;
        return tI(e, [].concat(Vy(t), [e[3]]), n, o, r, null, null, lI(a))
    }
    function JS(e, t, n, r, a, o) {
        var i, s = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : "channelsLast", u = aI(t), c = Uy(u, 2), l = c[0], f = c[1];
        if ("channelsLast" === s)
            i = [l, f, e[3], e[3]];
        else {
            if ("channelsFirst" !== s)
                throw new Error("Unknown dataFormat ".concat(s));
            i = [l, f, e[1], e[1]]
        }
        return tI(e, i, n, r, a, o, !1, s)
    }
    function eI(e, t, n, r, a, o) {
        var i, s, u = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : "NDHWC", c = oI(t), l = Uy(c, 3), f = l[0], p = l[1], d = l[2];
        if ("NDHWC" === u)
            s = "channelsLast",
            i = [f, p, d, e[4], e[4]];
        else {
            if ("NCDHW" !== u)
                throw new Error("Unknown dataFormat ".concat(u));
            s = "channelsFirst",
            i = [f, p, d, e[1], e[1]]
        }
        return nI(e, i, n, r, a, !1, s, o)
    }
    function tI(e, t, n, r, a, o) {
        var i = arguments.length > 6 && void 0 !== arguments[6] && arguments[6]
          , s = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : "channelsLast"
          , u = -1
          , c = -1
          , l = -1
          , f = -1;
        if ("channelsLast" === s) {
            var p = Uy(e, 4);
            u = p[0],
            c = p[1],
            l = p[2],
            f = p[3]
        } else {
            if ("channelsFirst" !== s)
                throw new Error("Unknown dataFormat ".concat(s));
            var d = Uy(e, 4);
            u = d[0],
            f = d[1],
            c = d[2],
            l = d[3]
        }
        var h, m = Uy(t, 4), v = m[0], g = m[1], y = m[3], b = aI(n), x = Uy(b, 2), w = x[0], k = x[1], C = aI(r), E = Uy(C, 2), S = E[0], I = E[1], T = iI(v, S), A = iI(g, I), N = function(e, t, n, r, a, o, i, s, u) {
            var c, l, f;
            if ("number" == typeof e) {
                c = {
                    top: e,
                    bottom: e,
                    left: e,
                    right: e,
                    type: 0 === e ? "VALID" : "NUMBER"
                };
                var p = function(e, t, n, r, a) {
                    null == r && (r = rI(e, t, n));
                    var o = e[1]
                      , i = sI((e[0] - t + 2 * r) / n + 1, a);
                    Ik(Ok(i), (function() {
                        return "The output # of rows (".concat(i, ") must be an integer. Change the stride and/or zero pad parameters")
                    }
                    ));
                    var s = sI((o - t + 2 * r) / n + 1, a);
                    return Ik(Ok(s), (function() {
                        return "The output # of columns (".concat(s, ") must be an integer. Change the stride and/or zero pad parameters")
                    }
                    )),
                    [i, s]
                }([t, n], o, r, e, s);
                l = p[0],
                f = p[1]
            } else if ("same" === e) {
                l = Math.ceil(t / r),
                f = Math.ceil(n / a);
                var d = Math.max(0, (l - 1) * r + o - t)
                  , h = Math.max(0, (f - 1) * a + i - n)
                  , m = Math.floor(d / 2)
                  , v = d - m
                  , g = Math.floor(h / 2);
                c = {
                    top: m,
                    bottom: v,
                    left: g,
                    right: h - g,
                    type: "SAME"
                }
            } else if ("valid" === e)
                c = {
                    top: 0,
                    bottom: 0,
                    left: 0,
                    right: 0,
                    type: "VALID"
                },
                l = Math.ceil((t - o + 1) / r),
                f = Math.ceil((n - i + 1) / a);
            else {
                if ("object" != Sy(e))
                    throw Error("Unknown padding parameter: ".concat(e));
                var y = "channelsLast" === u ? e[1][0] : e[2][0]
                  , b = "channelsLast" === u ? e[1][1] : e[2][1]
                  , x = "channelsLast" === u ? e[2][0] : e[3][0]
                  , w = "channelsLast" === u ? e[2][1] : e[3][1];
                c = {
                    top: y,
                    bottom: b,
                    left: x,
                    right: w,
                    type: 0 === y && 0 === b && 0 === x && 0 === w ? "VALID" : "EXPLICIT"
                },
                l = sI((t - o + y + b) / r + 1, s),
                f = sI((n - i + x + w) / a + 1, s)
            }
            return {
                padInfo: c,
                outHeight: l,
                outWidth: f
            }
        }(a, c, l, w, k, T, A, o, s), _ = N.padInfo, R = N.outHeight, O = N.outWidth, D = i ? y * f : y;
        return "channelsFirst" === s ? h = [u, D, R, O] : "channelsLast" === s && (h = [u, R, O, D]),
        {
            batchSize: u,
            dataFormat: s,
            inHeight: c,
            inWidth: l,
            inChannels: f,
            outHeight: R,
            outWidth: O,
            outChannels: D,
            padInfo: _,
            strideHeight: w,
            strideWidth: k,
            filterHeight: v,
            filterWidth: g,
            effectiveFilterHeight: T,
            effectiveFilterWidth: A,
            dilationHeight: S,
            dilationWidth: I,
            inShape: e,
            outShape: h,
            filterShape: t
        }
    }
    function nI(e, t, n, r, a) {
        var o = arguments.length > 5 && void 0 !== arguments[5] && arguments[5]
          , i = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : "channelsLast"
          , s = arguments.length > 7 ? arguments[7] : void 0
          , u = -1
          , c = -1
          , l = -1
          , f = -1
          , p = -1;
        if ("channelsLast" === i) {
            var d = Uy(e, 5);
            u = d[0],
            c = d[1],
            l = d[2],
            f = d[3],
            p = d[4]
        } else {
            if ("channelsFirst" !== i)
                throw new Error("Unknown dataFormat ".concat(i));
            var h = Uy(e, 5);
            u = h[0],
            p = h[1],
            c = h[2],
            l = h[3],
            f = h[4]
        }
        var m, v = Uy(t, 5), g = v[0], y = v[1], b = v[2], x = v[4], w = oI(n), k = Uy(w, 3), C = k[0], E = k[1], S = k[2], I = oI(r), T = Uy(I, 3), A = T[0], N = T[1], _ = T[2], R = iI(g, A), O = iI(y, N), D = iI(b, _), B = function(e, t, n, r, a, o, i, s, u, c, l) {
            var f, p, d, h;
            if ("number" == typeof e) {
                f = {
                    top: e,
                    bottom: e,
                    left: e,
                    right: e,
                    front: e,
                    back: e,
                    type: 0 === e ? "VALID" : "NUMBER"
                };
                var m = function(e, t, n, r, a, o) {
                    null == a && (a = rI(e, t, r));
                    var i = e[1]
                      , s = e[2]
                      , u = sI((e[0] - t + 2 * a) / r + 1, o);
                    Ik(Ok(u), (function() {
                        return "The output # of depths (".concat(u, ") must be an integer. Change the stride and/or zero pad parameters")
                    }
                    ));
                    var c = sI((i - t + 2 * a) / r + 1, o);
                    Ik(Ok(c), (function() {
                        return "The output # of rows (".concat(c, ") must be an integer. Change the stride and/or zero pad parameters")
                    }
                    ));
                    var l = sI((s - t + 2 * a) / r + 1, o);
                    return Ik(Ok(l), (function() {
                        return "The output # of columns (".concat(l, ") must be an integer. Change the stride and/or zero pad parameters")
                    }
                    )),
                    [u, c, l, 1]
                }([t, n, r, 1], s, 0, a, e, l);
                p = m[0],
                d = m[1],
                h = m[2]
            } else if ("same" === e) {
                var v = ((p = Math.ceil(t / a)) - 1) * a + s - t
                  , g = ((d = Math.ceil(n / o)) - 1) * o + u - n
                  , y = ((h = Math.ceil(r / i)) - 1) * i + c - r
                  , b = Math.floor(v / 2)
                  , x = v - b
                  , w = Math.floor(g / 2)
                  , k = g - w
                  , C = Math.floor(y / 2);
                f = {
                    top: w,
                    bottom: k,
                    left: C,
                    right: y - C,
                    front: b,
                    back: x,
                    type: "SAME"
                }
            } else {
                if ("valid" !== e)
                    throw Error("Unknown padding parameter: ".concat(e));
                f = {
                    top: 0,
                    bottom: 0,
                    left: 0,
                    right: 0,
                    front: 0,
                    back: 0,
                    type: "VALID"
                },
                p = Math.ceil((t - s + 1) / a),
                d = Math.ceil((n - u + 1) / o),
                h = Math.ceil((r - c + 1) / i)
            }
            return {
                padInfo: f,
                outDepth: p,
                outHeight: d,
                outWidth: h
            }
        }(a, c, l, f, C, E, S, R, O, D, s), F = B.padInfo, M = B.outDepth, P = B.outHeight, L = B.outWidth, U = o ? x * p : x;
        return "channelsFirst" === i ? m = [u, U, M, P, L] : "channelsLast" === i && (m = [u, M, P, L, U]),
        {
            batchSize: u,
            dataFormat: i,
            inDepth: c,
            inHeight: l,
            inWidth: f,
            inChannels: p,
            outDepth: M,
            outHeight: P,
            outWidth: L,
            outChannels: U,
            padInfo: F,
            strideDepth: C,
            strideHeight: E,
            strideWidth: S,
            filterDepth: g,
            filterHeight: y,
            filterWidth: b,
            effectiveFilterDepth: R,
            effectiveFilterHeight: O,
            effectiveFilterWidth: D,
            dilationDepth: A,
            dilationHeight: N,
            dilationWidth: _,
            inShape: e,
            outShape: m,
            filterShape: t
        }
    }
    function rI(e, t, n) {
        var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1
          , a = iI(t, r);
        return Math.floor((e[0] * (n - 1) - n + a) / 2)
    }
    function aI(e) {
        return "number" == typeof e ? [e, e, e] : 2 === e.length ? [e[0], e[1], 1] : e
    }
    function oI(e) {
        return "number" == typeof e ? [e, e, e] : e
    }
    function iI(e, t) {
        return t <= 1 ? e : e + (e - 1) * (t - 1)
    }
    function sI(e, t) {
        if (!t)
            return e;
        switch (t) {
        case "round":
            return Math.round(e);
        case "ceil":
            return Math.ceil(e);
        case "floor":
            return Math.floor(e);
        default:
            throw new Error("Unknown roundingMode ".concat(t))
        }
    }
    function uI(e) {
        var t = Uy(aI(e), 3)
          , n = t[0]
          , r = t[1]
          , a = t[2];
        return 1 === n && 1 === r && 1 === a
    }
    function cI(e, t) {
        return uI(e) || uI(t)
    }
    function lI(e) {
        if ("NHWC" === e)
            return "channelsLast";
        if ("NCHW" === e)
            return "channelsFirst";
        throw new Error("Unknown dataFormat ".concat(e))
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var fI = cE({
        avgPool_: function(e, t, n, r, a) {
            var o = sE(e, "x", "avgPool", "float32");
            Ik(cI(n, 1), (function() {
                return "Error in avgPool: Either strides or dilations must be 1. Got strides ".concat(n, " and dilations '1'")
            }
            ));
            var i = o
              , s = !1;
            3 === o.rank && (s = !0,
            i = YE(o, [1, o.shape[0], o.shape[1], o.shape[2]])),
            Ik(4 === i.rank, (function() {
                return "Error in avgPool: x must be rank 4 but got rank ".concat(i.rank, ".")
            }
            )),
            null != a && Ik(Ok(r), (function() {
                return "Error in avgPool: pad must be an integer when using, dimRoundingMode ".concat(a, " but got pad ").concat(r, ".")
            }
            ));
            var u = {
                x: i
            }
              , c = {
                filterSize: t,
                strides: n,
                pad: r,
                dimRoundingMode: a
            }
              , l = eE.runKernelFunc((function(e, o) {
                var s = JS(i.shape, t, n, 1, r, a);
                return o([i]),
                1 === s.filterWidth && 1 === s.filterHeight && Rk(s.inShape, s.outShape) ? i.clone() : e.avgPool(i, s)
            }
            ), u, null, "AvgPool", c);
            return l = zE(l, o.dtype),
            s ? YE(l, [l.shape[1], l.shape[2], l.shape[3]]) : l
        }
    })
      , pI = cE({
        avgPool3d_: function(e, t, n, r, a) {
            var o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "NDHWC"
              , i = arguments.length > 6 ? arguments[6] : void 0;
            null == i ? i = [1, 1, 1] : wS("dilations is deprecated, this field will be gone in v3.0.0.");
            var s = sE(e, "x", "avgPool3d", "float32")
              , u = s
              , c = !1;
            4 === s.rank && (c = !0,
            u = YE(s, [1, s.shape[0], s.shape[1], s.shape[2], s.shape[3]])),
            Ik(5 === u.rank, (function() {
                return "Error in avgPool3d: x must be rank 5 but got rank ".concat(u.rank, ".")
            }
            )),
            Ik("NDHWC" === o, (function() {
                return "Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ".concat(o)
            }
            )),
            Ik(cI(n, i), (function() {
                return "Error in avgPool3d: Either strides or dilations must be 1. Got strides ".concat(n, " and dilations '").concat(i, "'")
            }
            )),
            null != a && Ik(Ok(r), (function() {
                return "Error in avgPool3d: pad must be an integer when using, dimRoundingMode ".concat(a, " but got pad ").concat(r, ".")
            }
            ));
            var l = {
                x: u
            }
              , f = {
                filterSize: t,
                strides: n,
                pad: r,
                dimRoundingMode: a,
                dataFormat: o,
                dilations: i
            }
              , p = eE.runKernelFunc((function(e, s) {
                null == i && (i = [1, 1, 1]);
                var c = eI(u.shape, t, n, i, r, a, o);
                return s([u]),
                e.avgPool3d(u, c)
            }
            ), l, null, "AvgPool3D", f);
            return p = zE(p, u.dtype),
            c ? YE(p, [p.shape[1], p.shape[2], p.shape[3], p.shape[4]]) : p
        }
    });
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function dI(e, t) {
        var n = e[0].length;
        e.forEach((function(e, t) {
            Ik(e.length === n, (function() {
                return "Error in concat".concat(n, "D: rank of tensors[").concat(t, "] must be the same as the rank of the rest (").concat(n, ")")
            }
            ))
        }
        )),
        Ik(t >= 0 && t < n, (function() {
            return "Error in concat".concat(n, "D: axis must be between 0 and ").concat(n - 1, ".")
        }
        ));
        var r = e[0];
        e.forEach((function(e, a) {
            for (var o = 0; o < n; o++)
                Ik(o === t || e[o] === r[o], (function() {
                    return "Error in concat".concat(n, "D: Shape of tensors[").concat(a, "] (").concat(e, ") does not match the shape of the rest (").concat(r, ") along the non-concatenated axis ").concat(a, ".")
                }
                ))
        }
        ))
    }
    function hI(e, t) {
        for (var n = e[0].slice(), r = 1; r < e.length; r++)
            n[t] += e[r][t];
        return n
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var mI = cE({
        concat_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            Ik(e.length >= 1, (function() {
                return "Pass at least one tensor to concat"
            }
            ));
            var n = uE(e, "tensors", "concat");
            "complex64" === n[0].dtype && n.forEach((function(e) {
                if ("complex64" !== e.dtype)
                    throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype, ". "))
            }
            ));
            var r = n
              , a = {
                axis: t
            };
            return eE.runKernelFunc((function(e, r) {
                var a = Pk(t, n[0].shape)[0]
                  , o = hI(n.map((function(e) {
                    return e.shape
                }
                )), a);
                if (0 === _k(o))
                    return pE([], o);
                if (1 === (n = n.filter((function(e) {
                    return e.size > 0
                }
                ))).length)
                    return n[0];
                dI(n.map((function(e) {
                    return e.shape
                }
                )), a);
                var i = e.concat(n, a);
                return r(n),
                i
            }
            ), r, null, "Concat", a)
        }
    })
      , vI = cE({
        sigmoid_: function(e) {
            var t = sE(e, "x", "sigmoid")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.sigmoid(t);
                return n([r]),
                r
            }
            ), n, null, "Sigmoid")
        }
    })
      , gI = cE({
        slice_: function(e, t, n) {
            var r = sE(e, "x", "slice");
            if (0 === r.rank)
                throw new Error("Slicing scalar is not possible");
            var a = {
                x: r
            }
              , o = {
                begin: t,
                size: n
            };
            return eE.runKernelFunc((function(e, a) {
                var o = Uy(bS(r, t, n), 2)
                  , i = o[0]
                  , s = o[1];
                return oS(r, i, s),
                a([r]),
                e.slice(r, i, s)
            }
            ), a, null, "Slice", o)
        }
    })
      , yI = cE({
        tanh_: function(e) {
            var t = sE(e, "x", "tanh")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.tanh(t);
                return n([r]),
                r
            }
            ), n, null, "Tanh")
        }
    })
      , bI = cE({
        batchToSpaceND_: function(e, t, n) {
            var r = sE(e, "x", "batchToSpaceND")
              , a = t.reduce((function(e, t) {
                return e * t
            }
            ));
            Ik(r.rank >= 1 + t.length, (function() {
                return "input rank is ".concat(r.rank, " but should be > than blockShape.length ").concat(t.length)
            }
            )),
            Ik(n.length === t.length, (function() {
                return "crops.length is ".concat(n.length, " but should be equal to blockShape.length  ").concat(t.length)
            }
            )),
            Ik(r.shape[0] % a == 0, (function() {
                return "input tensor batch is ".concat(r.shape[0], " but is not divisible by the product of the elements of blockShape ").concat(t.join(" * "), " === ").concat(a)
            }
            ));
            var o = {
                x: r
            }
              , i = {
                blockShape: t,
                crops: n
            };
            return eE.runKernelFunc((function(e) {
                return e.batchToSpaceND(r, t, n)
            }
            ), o, null, "BatchToSpaceND", i)
        }
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function xI(e) {
        return null == e ? null : 0 === e.rank ? YE(e, [e.size]) : 1 === e.rank ? e : 2 === e.rank ? YE(e, [1, 1, e.shape[0], e.shape[1]]) : 3 === e.rank ? YE(e, [1, e.shape[0], e.shape[1], e.shape[2]]) : e
    }
    var wI = cE({
        batchNorm_: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e, t, n, r, a, o) {
            null == o && (o = .001);
            var i, s, u = sE(e, "x", "batchNorm"), c = sE(t, "mean", "batchNorm"), l = sE(n, "variance", "batchNorm");
            null != a && (i = sE(a, "scale", "batchNorm")),
            null != r && (s = sE(r, "offset", "batchNorm")),
            Ik(c.rank === l.rank, (function() {
                return "Batch normalization gradient requires mean and variance to have equal ranks."
            }
            )),
            Ik(null == s || c.rank === s.rank, (function() {
                return "Batch normalization gradient requires mean and offset to have equal ranks."
            }
            )),
            Ik(null == i || c.rank === i.rank, (function() {
                return "Batch normalization gradient requires mean and scale to have equal ranks."
            }
            ));
            var f = function(e) {
                return 0 === e.rank || 1 === e.rank ? YE(e, [1, 1, 1, e.size]) : 2 === e.rank ? YE(e, [1, 1, e.shape[0], e.shape[1]]) : 3 === e.rank ? YE(e, [1, e.shape[0], e.shape[1], e.shape[2]]) : e
            }(u)
              , p = {
                x: f,
                scale: i,
                offset: s,
                mean: c,
                variance: l
            }
              , d = {
                varianceEpsilon: o
            }
              , h = eE.runKernelFunc((function(e, t) {
                return t([f, c, l, i]),
                e.batchNorm(f, xI(c), xI(l), xI(s), xI(i), o)
            }
            ), p, null, "FusedBatchNorm", d);
            return YE(h, u.shape)
        }
    })
      , kI = cE({
        broadcastTo_: function(e, t) {
            var n = sE(e, "broadcastTo", "x")
              , r = n.shape;
            if (t.some((function(e) {
                return !(e > 0) || e % 1 != 0
            }
            )))
                throw new Error("broadcastTo(): Invalid broadcast shape [".concat(t, "]."));
            if (t.length < n.rank)
                throw new Error("broadcastTo(): shape.length=".concat(t.length, " < input.rank=").concat(n.rank, "."));
            if (t.length > n.rank) {
                for (var a = n.shape.slice(); a.length < t.length; )
                    a.unshift(1);
                n = YE(n, a)
            }
            for (var o = n.shape, i = Array.from(t), s = t.length - 1; s >= 0; s--)
                if (o[s] === t[s])
                    i[s] = 1;
                else if (1 !== n.shape[s])
                    throw new Error("broadcastTo(): [".concat(r, "] cannot be broadcast to [").concat(t, "]."));
            if (0 === i.map((function(e, t) {
                return e > 1 ? t : -1
            }
            )).filter((function(e) {
                return e >= 0
            }
            )).length)
                return WE(n);
            var u = {
                x: n
            }
              , c = {
                shape: t,
                inputShape: o
            };
            return eE.runKernelFunc((function(e) {
                return e.tile(n, i)
            }
            ), u, null, "BroadcastTo", c)
        }
    })
      , CI = cE({
        ceil_: function(e) {
            var t = sE(e, "x", "ceil")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e) {
                return e.ceil(t)
            }
            ), n, null, "Ceil")
        }
    })
      , EI = cE({
        clipByValue_: function(e, t, n) {
            var r = sE(e, "x", "clipByValue");
            Ik(t <= n, (function() {
                return "Error in clip: min (".concat(t, ") must be less than or equal to max (").concat(n, ").")
            }
            ));
            var a = {
                x: r
            }
              , o = {
                clipValueMin: t,
                clipValueMax: n
            };
            return eE.runKernelFunc((function(e, a) {
                var o = e.clip(r, t, n);
                return a([r]),
                o
            }
            ), a, null, "ClipByValue", o)
        }
    })
      , SI = cE({
        concat2d_: function(e, t) {
            return mI(e, t)
        }
    })
      , II = cE({
        conv2d_: function(e, t, n, r) {
            var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "NHWC"
              , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : [1, 1]
              , i = arguments.length > 6 ? arguments[6] : void 0
              , s = sE(e, "x", "conv2d")
              , u = sE(t, "filter", "conv2d")
              , c = s
              , l = !1;
            3 === s.rank && (l = !0,
            c = YE(s, [1, s.shape[0], s.shape[1], s.shape[2]])),
            Ik(4 === c.rank, (function() {
                return "Error in conv2d: input must be rank 4, but got rank ".concat(c.rank, ".")
            }
            )),
            Ik(4 === u.rank, (function() {
                return "Error in conv2d: filter must be rank 4, but got rank ".concat(u.rank, ".")
            }
            )),
            null != i && Ik(Ok(r), (function() {
                return "Error in conv2d: pad must be an integer when using, dimRoundingMode ".concat(i, " but got pad ").concat(r, ".")
            }
            ));
            var f = "NHWC" === a ? c.shape[3] : c.shape[1];
            Ik(f === u.shape[2], (function() {
                return "Error in conv2d: depth of input (".concat(f, ") must match input depth for filter ").concat(u.shape[2], ".")
            }
            )),
            Ik(cI(n, o), (function() {
                return "Error in conv2D: Either strides or dilations must be 1. Got strides ".concat(n, " and dilations '").concat(o, "'")
            }
            ));
            var p = {
                x: c,
                filter: u
            }
              , d = {
                strides: n,
                pad: r,
                dataFormat: a,
                dilations: o,
                dimRoundingMode: i
            }
              , h = eE.runKernelFunc((function(e, t) {
                var s = lI(a)
                  , l = tI(c.shape, u.shape, n, o, r, i, !1, s)
                  , f = e.conv2d(c, u, l);
                return t([c, u]),
                f
            }
            ), p, null, "Conv2D", d);
            return l ? YE(h, [h.shape[1], h.shape[2], h.shape[3]]) : h
        }
    })
      , TI = cE({
        conv1d_: function(e, t, n, r) {
            var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "NWC"
              , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1
              , i = arguments.length > 6 ? arguments[6] : void 0
              , s = sE(e, "x", "conv1d")
              , u = sE(t, "filter", "conv1d")
              , c = s
              , l = !1;
            2 === s.rank && (l = !0,
            c = YE(s, [1, s.shape[0], s.shape[1]])),
            Ik(3 === c.rank, (function() {
                return "Error in conv1d: input must be rank 3, but got rank ".concat(c.rank, ".")
            }
            )),
            Ik(3 === u.rank, (function() {
                return "Error in conv1d: filter must be rank 3, but got rank ".concat(u.rank, ".")
            }
            )),
            null != i && Ik(Ok(r), (function() {
                return "Error in conv1d: pad must be an integer when using, dimRoundingMode ".concat(i, " but got pad ").concat(r, ".")
            }
            )),
            Ik(c.shape[2] === u.shape[1], (function() {
                return "Error in conv1d: depth of input (".concat(c.shape[2], ") must match input depth for filter ").concat(u.shape[1], ".")
            }
            )),
            Ik(cI(n, o), (function() {
                return "Error in conv1D: Either stride or dilation must be 1. Got stride ".concat(n, " and dilation '").concat(o, "'")
            }
            )),
            Ik("NWC" === a, (function() {
                return "Error in conv1d: got dataFormat of ".concat(a, " but only NWC is currently supported.")
            }
            ));
            var f = YE(u, [1, u.shape[0], u.shape[1], u.shape[2]])
              , p = YE(c, [c.shape[0], 1, c.shape[1], c.shape[2]])
              , d = II(p, f, [1, n], r, "NHWC", [1, o], i);
            return YE(d, l ? [d.shape[2], d.shape[3]] : [d.shape[0], d.shape[2], d.shape[3]])
        }
    })
      , AI = cE({
        conv2DBackpropInput_: function(e, t, n, r, a) {
            var o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "NHWC"
              , i = arguments.length > 6 ? arguments[6] : void 0;
            Ik(e.length === t.rank, (function() {
                return "Length of inShape (".concat(e.length, ") and rank of dy (").concat(t.rank, ") must match")
            }
            ));
            var s = e
              , u = t
              , c = !1;
            3 === t.rank && (c = !0,
            u = YE(t, [1, t.shape[0], t.shape[1], t.shape[2]]),
            s = [1, e[0], e[1], e[2]]),
            Ik(4 === s.length, (function() {
                return "Error in conv2dDerInput: inShape must be length 4, but got length ".concat(s.length, ".")
            }
            )),
            Ik(4 === u.rank, (function() {
                return "Error in conv2dDerInput: dy must be rank 4, but got rank ".concat(u.rank)
            }
            )),
            Ik(4 === n.rank, (function() {
                return "Error in conv2dDerInput: filter must be rank 4, but got rank ".concat(n.rank)
            }
            ));
            var l = "NHWC" === o ? s[3] : s[1]
              , f = "NHWC" === o ? u.shape[3] : u.shape[1];
            Ik(l === n.shape[2], (function() {
                return "Error in conv2dDerInput: depth of input (".concat(l, ") must match input depth for filter ").concat(n.shape[2], ".")
            }
            )),
            Ik(f === n.shape[3], (function() {
                return "Error in conv2dDerInput: depth of output (".concat(f, ") must match output depth for filter ").concat(n.shape[3], ".")
            }
            )),
            null != i && Ik(Ok(a), (function() {
                return "Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ".concat(i, " but got pad ").concat(a, ".")
            }
            ));
            var p = {
                dy: u,
                filter: n
            }
              , d = {
                strides: r,
                pad: a,
                dataFormat: o,
                dimRoundingMode: i,
                inputShape: s
            }
              , h = eE.runKernelFunc((function(e, t) {
                var c = lI(o)
                  , l = tI(s, n.shape, r, 1, a, i, !1, c)
                  , f = e.conv2dDerInput(u, n, l);
                return t([u, n]),
                f
            }
            ), p, null, "Conv2DBackpropInput", d);
            return c ? YE(h, [h.shape[1], h.shape[2], h.shape[3]]) : h
        }
    })
      , NI = cE({
        conv2dTranspose_: function(e, t, n, r, a, o) {
            var i = sE(e, "x", "conv2dTranspose")
              , s = sE(t, "filter", "conv2dTranspose");
            return AI(n, i, s, r, a, "NHWC", o)
        }
    })
      , _I = cE({
        conv3d_: function(e, t, n, r) {
            var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "NDHWC"
              , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : [1, 1, 1]
              , i = sE(e, "x", "conv3d")
              , s = sE(t, "filter", "conv3d")
              , u = i
              , c = !1;
            4 === i.rank && (c = !0,
            u = YE(i, [1, i.shape[0], i.shape[1], i.shape[2], i.shape[3]])),
            Ik(5 === u.rank, (function() {
                return "Error in conv3d: input must be rank 5, but got rank ".concat(u.rank, ".")
            }
            )),
            Ik(5 === s.rank, (function() {
                return "Error in conv3d: filter must be rank 5, but got rank ".concat(s.rank, ".")
            }
            )),
            Ik(u.shape[4] === s.shape[3], (function() {
                return "Error in conv3d: depth of input (".concat(u.shape[4], ") must match input depth for filter ").concat(s.shape[3], ".")
            }
            )),
            Ik(cI(n, o), (function() {
                return "Error in conv3D: Either strides or dilations must be 1. Got strides ".concat(n, " and dilations '").concat(o, "'")
            }
            )),
            Ik("NDHWC" === a, (function() {
                return "Error in conv3d: got dataFormat of ".concat(a, " but only NDHWC is currently supported.")
            }
            ));
            var l = {
                x: u,
                filter: s
            }
              , f = {
                strides: n,
                pad: r,
                dataFormat: a,
                dilations: o
            }
              , p = eE.runKernelFunc((function(e, t) {
                var a = nI(u.shape, s.shape, n, o, r)
                  , i = e.conv3d(u, s, a);
                return t([u, s]),
                i
            }
            ), l, null, "Conv3D", f);
            return c ? YE(p, [p.shape[1], p.shape[2], p.shape[3], p.shape[4]]) : p
        }
    })
      , RI = cE({
        conv3DBackpropInput_: function(e, t, n, r, a) {
            Ik(e.length === t.rank, (function() {
                return "Length of inShape (".concat(e.length, ") and rank of dy (").concat(t.rank, ") must match")
            }
            ));
            var o = e
              , i = t
              , s = !1;
            4 === t.rank && (s = !0,
            i = YE(t, [1, t.shape[0], t.shape[1], t.shape[2], t.shape[3]]),
            o = [1, e[0], e[1], e[2], e[3]]);
            var u = o[4]
              , c = i.shape[4];
            Ik(5 === o.length, (function() {
                return "Error in conv3dDerInput: inShape must be length 5, but got length ".concat(o.length, ".")
            }
            )),
            Ik(5 === i.rank, (function() {
                return "Error in conv3dDerInput: dy must be rank 5, but got rank ".concat(i.rank)
            }
            )),
            Ik(5 === n.rank, (function() {
                return "Error in conv3dDerInput: filter must be rank 5, but got rank ".concat(n.rank)
            }
            )),
            Ik(u === n.shape[3], (function() {
                return "Error in conv3dDerInput: depth of input (".concat(u, ") must match input depth for filter ").concat(n.shape[3], ".")
            }
            )),
            Ik(c === n.shape[4], (function() {
                return "Error in conv3dDerInput: depth of output (".concat(c, ") must match output depth for filter ").concat(n.shape[4], ".")
            }
            ));
            var l = {
                dy: i,
                filter: n
            }
              , f = {
                pad: a,
                strides: r,
                inputShape: o
            }
              , p = eE.runKernelFunc((function(e) {
                var t = nI(o, n.shape, r, 1, a);
                return e.conv3dDerInput(i, n, t)
            }
            ), l, null, "Conv3DBackpropInputV2", f);
            return s ? YE(p, [p.shape[1], p.shape[2], p.shape[3], p.shape[4]]) : p
        }
    })
      , OI = cE({
        cos_: function(e) {
            var t = sE(e, "x", "cos")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.cos(t);
                return n([t]),
                r
            }
            ), n, null, fC)
        }
    })
      , DI = cE({
        cosh_: function(e) {
            var t = sE(e, "x", "cosh")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.cosh(t);
                return n([t]),
                r
            }
            ), n, null, "Cosh")
        }
    })
      , BI = cE({
        cumsum_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]
              , a = sE(e, "x", "cumsum")
              , o = {
                x: a
            }
              , i = {
                axis: t,
                exclusive: n,
                reverse: r
            };
            return eE.runKernelFunc((function(e, o) {
                var i = VS([t], a.rank)
                  , s = a;
                null != i && (s = JE(a, i));
                var u = WS(1, a.rank)[0]
                  , c = e.cumsum(s, u, n, r);
                if (o([a]),
                null != i) {
                    var l = zS(i);
                    c = JE(c, l)
                }
                return c
            }
            ), o, null, "Cumsum", i)
        }
    })
      , FI = cE({
        depthToSpace_: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "NHWC"
              , r = sE(e, "x", "depthToSpace")
              , a = "NHWC" === n ? r.shape[1] : r.shape[2]
              , o = "NHWC" === n ? r.shape[2] : r.shape[3]
              , i = "NHWC" === n ? r.shape[3] : r.shape[1];
            Ik(a * t >= 0, (function() {
                return "Negative dimension size caused by overflow when multiplying\n    ".concat(a, " and ").concat(t, "  for depthToSpace with input shape\n    ").concat(r.shape)
            }
            )),
            Ik(o * t >= 0, (function() {
                return "Negative dimension size caused by overflow when multiplying\n    ".concat(o, " and ").concat(t, " for depthToSpace with input shape\n        ").concat(r.shape)
            }
            )),
            Ik(i % (t * t) == 0, (function() {
                return "Dimension size must be evenly divisible by ".concat(t * t, " but is ").concat(i, " for depthToSpace with input shape ").concat(r.shape)
            }
            ));
            var s = {
                x: r
            }
              , u = {
                blockSize: t,
                dataFormat: n
            };
            return eE.runKernelFunc((function(e) {
                return e.depthToSpace(r, t, n)
            }
            ), s, null, "DepthToSpace", u)
        }
    })
      , MI = cE({
        depthwiseConv2d_: function(e, t, n, r) {
            var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "NHWC"
              , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : [1, 1]
              , i = arguments.length > 6 ? arguments[6] : void 0
              , s = sE(e, "x", "depthwiseConv2d")
              , u = sE(t, "filter", "depthwiseConv2d")
              , c = s
              , l = !1;
            3 === s.rank && (l = !0,
            c = YE(s, [1, s.shape[0], s.shape[1], s.shape[2]])),
            Ik(4 === c.rank, (function() {
                return "Error in depthwiseConv2d: input must be rank 4, but got rank ".concat(c.rank, ".")
            }
            )),
            Ik(4 === u.rank, (function() {
                return "Error in depthwiseConv2d: filter must be rank 4, but got rank ".concat(u.rank, ".")
            }
            )),
            Ik(c.shape[3] === u.shape[2], (function() {
                return "Error in depthwiseConv2d: number of input channels (".concat(c.shape[3], ") must match the inChannels dimension in filter ").concat(u.shape[2], ".")
            }
            )),
            null != i && Ik(Ok(r), (function() {
                return "Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ".concat(i, " but got pad ").concat(r, ".")
            }
            ));
            var f = {
                x: c,
                filter: u
            }
              , p = {
                strides: n,
                pad: r,
                dataFormat: a,
                dilations: o,
                dimRoundingMode: i
            }
              , d = eE.runKernelFunc((function(e, t) {
                null == o && (o = [1, 1]),
                Ik(cI(n, o), (function() {
                    return "Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ".concat(n, " and dilations '").concat(o, "'")
                }
                ));
                var a = tI(c.shape, u.shape, n, o, r, i, !0)
                  , s = e.depthwiseConv2D(c, u, a);
                return t([c, u]),
                s
            }
            ), f, null, "DepthwiseConv2dNative", p);
            return l ? YE(d, [d.shape[1], d.shape[2], d.shape[3]]) : d
        }
    })
      , PI = cE({
        dilation2d_: function(e, t, n, r) {
            var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [1, 1]
              , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "NHWC"
              , i = sE(e, "x", "dilation2d")
              , s = sE(t, "filter", "dilation2d");
            Ik(3 === i.rank || 4 === i.rank, (function() {
                return "Error in dilation2d: input must be rank 3 or 4, but got rank ".concat(i.rank, ".")
            }
            )),
            Ik(3 === s.rank, (function() {
                return "Error in dilation2d: filter must be rank 3, but got rank ".concat(s.rank, ".")
            }
            )),
            Ik("NHWC" === o, (function() {
                return "Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ".concat(o)
            }
            ));
            var u = i
              , c = !1;
            3 === i.rank && (u = YE(i, [1, i.shape[0], i.shape[1], i.shape[2]]),
            c = !0);
            var l = {
                x: u,
                filter: s
            }
              , f = {
                strides: n,
                pad: r,
                dilations: a
            }
              , p = eE.runKernel("Dilation2D", l, f);
            return c ? YE(p, [p.shape[1], p.shape[2], p.shape[3]]) : p
        }
    });
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function LI(e, t) {
        for (var n = e.length, r = [], a = 0; a < n; a++) {
            var o = n - 1 - a
              , i = e[o] || 1;
            (t[t.length - 1 - a] || 1) > 1 && 1 === i && r.unshift(o)
        }
        return r
    }
    function UI(e, t) {
        for (var n = [], r = 0; r < t.length; r++) {
            var a = e[e.length - r - 1]
              , o = t.length - r - 1
              , i = t[o];
            (null == a || 1 === a && i > 1) && n.unshift(o)
        }
        return n
    }
    function VI(e, t) {
        for (var n = [], r = Math.max(e.length, t.length), a = 0; a < r; a++) {
            var o = e[e.length - a - 1];
            null == o && (o = 1);
            var i = t[t.length - a - 1];
            if (null == i && (i = 1),
            1 === o)
                n.unshift(i);
            else if (1 === i)
                n.unshift(o);
            else {
                if (o !== i)
                    throw Error("Operands could not be broadcast together with shapes ".concat(e, " and ").concat(t, "."));
                n.unshift(o)
            }
        }
        return n
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var zI = cE({
        equal_: function(e, t) {
            var n, r = sE(e, "a", "equal"), a = sE(t, "b", "equal");
            n = Uy(XC(r, a), 2),
            r = n[0],
            a = n[1],
            VI(r.shape, a.shape);
            var o = {
                a: r,
                b: a
            };
            return eE.runKernelFunc((function(e) {
                return e.equal(r, a)
            }
            ), o, null, "Equal")
        }
    })
      , WI = cE({
        where_: function(e, t, n) {
            var r = sE(t, "a", "where")
              , a = sE(n, "b", "where")
              , o = sE(e, "condition", "where", "bool")
              , i = VI(r.shape, a.shape)
              , s = kI(r, i)
              , u = kI(a, i);
            1 === o.rank && Ik(o.shape[0] === r.shape[0], (function() {
                return "The first dimension of `a` must match the size of `condition`."
            }
            )),
            1 !== o.rank && Tk(o.shape, u.shape, "Error in where: ");
            var c = {
                condition: o,
                t: s,
                e: u
            };
            return eE.runKernelFunc((function(e, t) {
                var n = e.select(o, s, u);
                return t([o]),
                n
            }
            ), c, null, "SelectV2")
        }
    })
      , jI = cE({
        zerosLike_: function(e) {
            var t = sE(e, "x", "zerosLike")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e) {
                return e.zerosLike(t)
            }
            ), n, null, "ZerosLike")
        }
    })
      , HI = cE({
        divNoNan_: function(e, t) {
            var n = sE(e, "a", "div")
              , r = sE(t, "b", "div")
              , a = Uy(XC(n, r), 2);
            n = a[0],
            r = a[1];
            var o = NS(n, r)
              , i = jI(o)
              , s = zI(r, i);
            return WI(s, i, o)
        }
    })
      , GI = cE({
        dot_: function(e, t) {
            var n = sE(e, "t1", "dot")
              , r = sE(t, "t2", "dot");
            Ik(!(1 !== n.rank && 2 !== n.rank || 1 !== r.rank && 2 !== r.rank), (function() {
                return "Error in dot: inputs must all be rank 1 or 2, but got ranks ".concat(n.rank, " and ").concat(r.rank, ".")
            }
            ));
            var a = 1 === n.rank ? n.size : n.shape[1]
              , o = 1 === r.rank ? r.size : r.shape[0];
            if (Ik(a === o, (function() {
                return "Error in dot: inner dimensions of inputs must match, but got ".concat(a, " and ").concat(o, ".")
            }
            )),
            1 === n.rank && 1 === r.rank) {
                var i = YE(n, [1, -1])
                  , s = YE(r, [-1, 1])
                  , u = $E(i, s);
                return YE(u, [])
            }
            if (1 === n.rank && 2 === r.rank) {
                var c = YE(n, [1, -1])
                  , l = YE(r, [r.shape[0], r.shape[1]])
                  , f = $E(c, l);
                return YE(f, [f.size])
            }
            if (2 === n.rank && 1 === r.rank) {
                var p = YE(r, [-1, 1])
                  , d = $E(n, p);
                return YE(d, [d.size])
            }
            var h = YE(r, [r.shape[0], r.shape[1]]);
            return $E(n, h)
        }
    })
      , KI = cE({
        elu_: function(e) {
            var t = sE(e, "x", "elu")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.elu(t);
                return n([r]),
                r
            }
            ), n, null, "Elu")
        }
    })
      , qI = cE({
        erf_: function(e) {
            var t = sE(e, "x", "erf");
            Ik("int32" === t.dtype || "float32" === t.dtype, (function() {
                return "Input dtype must be `int32` or `float32`."
            }
            )),
            "int32" === t.dtype && (t = zE(t, "float32"));
            var n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.erf(t);
                return n([t]),
                r
            }
            ), n, null, "Erf")
        }
    })
      , XI = cE({
        exp_: function(e) {
            var t = sE(e, "x", "exp")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.exp(t);
                return n([r]),
                r
            }
            ), n, null, "Exp")
        }
    })
      , QI = cE({
        expandDims_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = sE(e, "x", "expandDims", null);
            Ik(t <= n.rank, (function() {
                return "Axis must be <= rank of the tensor"
            }
            ));
            var r = n.shape.slice();
            return t < 0 && (Ik(-(n.rank + 1) <= t, (function() {
                return "Axis must be in the interval [".concat(-(n.rank + 1), ", ").concat(n.rank, "]")
            }
            )),
            t = n.rank + t + 1),
            r.splice(t, 0, 1),
            YE(n, r)
        }
    })
      , YI = cE({
        expm1_: function(e) {
            var t = sE(e, "x", "expm1")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.expm1(t);
                return n([t]),
                r
            }
            ), n, null, "Expm1")
        }
    })
      , $I = cE({
        tile_: function(e, t) {
            var n = sE(e, "x", "tile", null);
            Ik(n.rank === t.length, (function() {
                return "Error in transpose: rank of input ".concat(n.rank, " must match length of reps ").concat(t, ".")
            }
            ));
            var r = [n]
              , a = {
                x: n
            }
              , o = {
                reps: t
            };
            return eE.runKernelFunc((function(e, r) {
                var a = e.tile(n, t);
                return r([n]),
                a
            }
            ), a, null, "Tile", o, r)
        }
    });
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function ZI(e, t, n) {
        var r = {
            shape: e,
            value: t,
            dtype: n
        };
        return eE.runKernelFunc((function(r) {
            return r.fill(e, t, n)
        }
        ), {}, null, "Fill", r)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var JI = cE({
        floor_: function(e) {
            var t = sE(e, "x", "floor")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e) {
                return e.floor(t)
            }
            ), n, null, "Floor")
        }
    });
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function eT(e) {
        return e <= 30 ? e : qk(e, Math.floor(Math.sqrt(e)))
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function tT(e, t, n) {
        for (var r = e.shape[n], a = [], o = 1, i = 1, s = 0; s < n; s++)
            a.push(e.shape[s]),
            o *= e.shape[s];
        for (var u = 0; u < t.rank; u++)
            a.push(t.shape[u]);
        for (var c = n + 1; c < e.rank; c++)
            a.push(e.shape[c]),
            i *= e.shape[c];
        return {
            batchSize: o,
            sliceSize: i,
            dimSize: r,
            outputShape: a
        }
    }
    var nT = Object.freeze({
        __proto__: null,
        segOpComputeOptimalWindowSize: function(e, t) {
            var n, r = !1;
            for (e <= 30 ? (n = e,
            r = !0) : n = qk(e, Math.floor(Math.sqrt(e))); !r; )
                n > t || n === e ? r = !0 : n = qk(e, n + 1);
            return n
        },
        computeOutShape: function(e, t, n) {
            for (var r = [], a = e.length, o = 0; o < a; o++)
                o !== t ? r.push(e[o]) : r.push(n);
            return r
        },
        collectGatherOpShapeInfo: tT
    })
      , rT = cE({
        gather_: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
              , r = sE(e, "x", "gather")
              , a = sE(t, "indices", "gather", "int32")
              , o = {
                x: r,
                indices: a
            }
              , i = {
                axis: n
            };
            return eE.runKernelFunc((function(e, t) {
                var o = Pk(n, r.shape)[0]
                  , i = tT(r, a, o)
                  , s = e.gather(r, YE(a, [a.size]), o);
                return t([r, a]),
                YE(s, i.outputShape)
            }
            ), o, null, "GatherV2", i)
        }
    })
      , aT = cE({
        greater_: function(e, t) {
            var n, r = sE(e, "a", "greater"), a = sE(t, "b", "greater");
            n = Uy(XC(r, a), 2),
            r = n[0],
            a = n[1],
            VI(r.shape, a.shape);
            var o = {
                a: r,
                b: a
            };
            return eE.runKernelFunc((function(e) {
                return e.greater(r, a)
            }
            ), o, null, "Greater")
        }
    })
      , oT = cE({
        greaterEqual_: function(e, t) {
            var n, r = sE(e, "a", "greaterEqual"), a = sE(t, "b", "greaterEqual");
            n = Uy(XC(r, a), 2),
            r = n[0],
            a = n[1],
            VI(r.shape, a.shape);
            var o = {
                a: r,
                b: a
            };
            return eE.runKernelFunc((function(e, t) {
                var n = e.greaterEqual(r, a);
                return t([r, a]),
                n
            }
            ), o, null, "GreaterEqual")
        }
    })
      , iT = cE({
        imag_: function(e) {
            var t = sE(e, "input", "imag")
              , n = {
                input: t
            };
            return eE.runKernelFunc((function(e) {
                return e.imag(t)
            }
            ), n, null, "Imag")
        }
    })
      , sT = cE({
        isFinite_: function(e) {
            var t = sE(e, "x", "isFinite")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e) {
                return e.isFinite(t)
            }
            ), n, null, "IsFinite")
        }
    })
      , uT = cE({
        isInf_: function(e) {
            var t = sE(e, "x", "isInf")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e) {
                return e.isInf(t)
            }
            ), n, null, "IsInf")
        }
    })
      , cT = cE({
        isNaN_: function(e) {
            var t = sE(e, "x", "isNaN")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e) {
                return e.isNaN(t)
            }
            ), n, null, "IsNan")
        }
    })
      , lT = cE({
        maximum_: function(e, t) {
            var n, r = sE(e, "a", "maximum"), a = sE(t, "b", "maximum");
            n = Uy(XC(r, a), 2),
            r = n[0],
            a = n[1],
            "bool" === r.dtype && (r = zE(r, "int32"),
            a = zE(a, "int32")),
            VI(r.shape, a.shape);
            var o = {
                a: r,
                b: a
            };
            return eE.runKernelFunc((function(e, t) {
                var n = e.maximum(r, a);
                return t([r, a]),
                n
            }
            ), o, null, "Maximum")
        }
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function fT(e, t) {
        if ((Wk(e) && "string" !== t || Array.isArray(e)) && "complex64" !== t)
            throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");
        if ("string" === t && Wk(e) && !(e instanceof Uint8Array))
            throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");
        return fE(e, [], [], t)
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var pT = cE({
        leakyRelu_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .2
              , n = sE(e, "x", "leakyRelu");
            return lT(_S(fT(t), n), n)
        }
    })
      , dT = cE({
        less_: function(e, t) {
            var n, r = sE(e, "a", "less"), a = sE(t, "b", "less");
            n = Uy(XC(r, a), 2),
            r = n[0],
            a = n[1],
            VI(r.shape, a.shape);
            var o = {
                a: r,
                b: a
            };
            return eE.runKernelFunc((function(e) {
                return e.less(r, a)
            }
            ), o, null, "Less")
        }
    })
      , hT = cE({
        lessEqual_: function(e, t) {
            var n, r = sE(e, "a", "lessEqual"), a = sE(t, "b", "lessEqual");
            n = Uy(XC(r, a), 2),
            r = n[0],
            a = n[1],
            VI(r.shape, a.shape);
            var o = {
                a: r,
                b: a
            };
            return eE.runKernelFunc((function(e, t) {
                var n = e.lessEqual(r, a);
                return t([r, a]),
                n
            }
            ), o, null, "LessEqual")
        }
    });
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function mT(e, t, n) {
        if (n <= 0)
            throw new Error("The number of values should be positive.");
        var r = {
            start: e,
            stop: t,
            num: n
        };
        return eE.runKernelFunc((function(r) {
            return r.linspace(e, t, n)
        }
        ), {}, null, "LinSpace", r)
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var vT = cE({
        localResponseNormalization_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5
              , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1
              , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1
              , a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : .5
              , o = sE(e, "x", "localResponseNormalization");
            Ik(4 === o.rank || 3 === o.rank, (function() {
                return "Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(o.rank, ".")
            }
            )),
            Ik(Ok(t), (function() {
                return "Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ".concat(t, ".")
            }
            ));
            var i = o
              , s = !1;
            3 === o.rank && (s = !0,
            i = YE(o, [1, o.shape[0], o.shape[1], o.shape[2]]));
            var u = {
                x: i
            }
              , c = {
                depthRadius: t,
                bias: n,
                alpha: r,
                beta: a
            }
              , l = eE.runKernelFunc((function(e, o) {
                var s = e.localResponseNormalization4D(i, t, n, r, a);
                return o([i, s]),
                s
            }
            ), u, null, "LRN", c);
            return s ? YE(l, [l.shape[1], l.shape[2], l.shape[3]]) : l
        }
    })
      , gT = cE({
        log_: function(e) {
            var t = sE(e, "x", "log")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.log(t);
                return n([t]),
                r
            }
            ), n, null, "Log")
        }
    })
      , yT = cE({
        log1p_: function(e) {
            var t = sE(e, "x", "log1p")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.log1p(t);
                return n([t]),
                r
            }
            ), n, null, "Log1p")
        }
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function bT(e) {
        return eE.customGrad(e)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var xT = cE({
        neg_: function(e) {
            var t = sE(e, "x", "neg")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e) {
                return e.neg(t)
            }
            ), n, null, "Negate")
        }
    })
      , wT = cE({
        softplus_: function(e) {
            var t = sE(e, "x", "softplus")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.softplus(t);
                return n([t]),
                r
            }
            ), n, null, "Softplus")
        }
    })
      , kT = cE({
        logSigmoid_: function(e) {
            var t = sE(e, "x", "logSigmoid");
            return bT((function(e) {
                return {
                    value: xT(wT(xT(e))),
                    gradFunc: function(t) {
                        return _S(t, vI(xT(e)))
                    }
                }
            }
            ))(t)
        }
    })
      , CT = cE({
        max_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
              , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = sE(e, "x", "max")
              , a = {
                x: r
            }
              , o = {
                reductionIndices: t,
                keepDims: n
            };
            return eE.runKernelFunc((function(e, a) {
                var o = Pk(t, r.shape)
                  , i = VS(o, r.rank)
                  , s = r;
                null != i && (s = JE(r, i),
                o = WS(o.length, s.rank));
                var u = e.max(s, o);
                null != i && s.dispose();
                var c = u;
                if (n) {
                    var l = LS(c.shape, Pk(t, r.shape));
                    c = YE(c, l),
                    u.dispose()
                }
                return a([r, c]),
                c
            }
            ), a, null, dC, o)
        }
    })
      , ET = cE({
        sub_: function(e, t) {
            var n = sE(e, "a", "sub")
              , r = sE(t, "b", "sub")
              , a = Uy(XC(n, r), 2);
            n = a[0],
            r = a[1];
            var o = {
                a: n,
                b: r
            };
            return eE.runKernelFunc((function(e, t) {
                var a = e.subtract(n, r);
                return t([n, r]),
                a
            }
            ), o, null, mC)
        }
    })
      , ST = cE({
        sum_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
              , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = sE(e, "x", "sum");
            "bool" === r.dtype && (r = zE(r, "int32"));
            var a = {
                x: r
            }
              , o = {
                axis: t,
                keepDims: n
            };
            return eE.runKernelFunc((function(e, a) {
                a([r]);
                var o = Pk(t, r.shape)
                  , i = VS(o, r.rank)
                  , s = o
                  , u = r;
                null != i && (u = JE(r, i),
                s = WS(s.length, r.rank));
                var c = e.sum(u, s);
                if (n) {
                    var l = LS(c.shape, o);
                    c = YE(c, l)
                }
                return c
            }
            ), a, null, "Sum", o)
        }
    })
      , IT = cE({
        logSoftmax_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1
              , n = sE(e, "logits", "logSoftmax");
            if (-1 === t && (t = n.rank - 1),
            t !== n.rank - 1)
                throw Error("Log Softmax along a non-last dimension is not yet supported. Logits was rank ".concat(n.rank, " and axis was ").concat(t));
            var r = {
                logits: n
            }
              , a = {
                axis: t
            };
            return eE.runKernelFunc((function(n, r) {
                var a = CT(e, t, !0)
                  , o = ET(e, a)
                  , i = ET(zE(o, "float32"), gT(ST(XI(o), t, !0)));
                return r([i]),
                i
            }
            ), r, null, "LogSoftmax", a)
        }
    })
      , TT = cE({
        logSumExp_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
              , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = sE(e, "x", "logSumExp")
              , a = Pk(t, r.shape)
              , o = CT(r, a, !0)
              , i = ET(r, o)
              , s = XI(i)
              , u = ST(s, a)
              , c = gT(u)
              , l = TS(YE(o, c.shape), c);
            if (n) {
                var f = LS(l.shape, a);
                return YE(l, f)
            }
            return l
        }
    })
      , AT = cE({
        logicalAnd_: function(e, t) {
            var n = sE(e, "a", "logicalAnd", "bool")
              , r = sE(t, "b", "logicalAnd", "bool");
            VI(n.shape, r.shape);
            var a = {
                a: n,
                b: r
            };
            return eE.runKernelFunc((function(e) {
                return e.logicalAnd(n, r)
            }
            ), a, null, "LogicalAnd")
        }
    })
      , NT = cE({
        logicalNot_: function(e) {
            var t = sE(e, "x", "logicalNot", "bool")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e) {
                return e.logicalNot(t)
            }
            ), n, null, "LogicalNot")
        }
    })
      , _T = cE({
        logicalOr_: function(e, t) {
            var n = sE(e, "a", "logicalOr", "bool")
              , r = sE(t, "b", "logicalOr", "bool");
            VI(n.shape, r.shape);
            var a = {
                a: n,
                b: r
            };
            return eE.runKernelFunc((function(e) {
                return e.logicalOr(n, r)
            }
            ), a, null, "LogicalOr")
        }
    })
      , RT = cE({
        logicalXor_: function(e, t) {
            var n = sE(e, "a", "logicalXor", "bool")
              , r = sE(t, "b", "logicalXor", "bool");
            return VI(n.shape, r.shape),
            AT(_T(e, t), NT(AT(e, t)))
        }
    })
      , OT = cE({
        maxPool_: function(e, t, n, r, a) {
            var o = sE(e, "x", "maxPool")
              , i = o
              , s = !1;
            3 === o.rank && (s = !0,
            i = YE(o, [1, o.shape[0], o.shape[1], o.shape[2]])),
            Ik(4 === i.rank, (function() {
                return "Error in maxPool: input must be rank 4 but got rank ".concat(i.rank, ".")
            }
            )),
            Ik(cI(n, 1), (function() {
                return "Error in maxPool: Either strides or dilations must be 1. Got strides ".concat(n, " and dilations '1'")
            }
            )),
            null != a && Ik(Ok(r), (function() {
                return "Error in maxPool: pad must be an integer when using, dimRoundingMode ".concat(a, " but got pad ").concat(r, ".")
            }
            ));
            var u = {
                x: i
            }
              , c = {
                filterSize: t,
                strides: n,
                pad: r,
                dimRoundingMode: a
            }
              , l = eE.runKernelFunc((function(e, o) {
                var s, u = JS(i.shape, t, n, 1, r, a);
                return s = 1 === u.filterWidth && 1 === u.filterHeight && Rk(u.inShape, u.outShape) ? i.clone() : e.maxPool(i, u),
                o([i, s]),
                s
            }
            ), u, null, "MaxPool", c);
            return s ? YE(l, [l.shape[1], l.shape[2], l.shape[3]]) : l
        }
    })
      , DT = cE({
        maxPool3d_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [1, 1, 1]
              , n = arguments.length > 2 ? arguments[2] : void 0
              , r = arguments.length > 3 ? arguments[3] : void 0
              , a = arguments.length > 4 ? arguments[4] : void 0
              , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "NDHWC"
              , i = arguments.length > 6 ? arguments[6] : void 0;
            null == i ? i = [1, 1, 1] : wS("dilations is deprecated, this field will be gone in v3.0.0.");
            var s = sE(e, "x", "maxPool3d")
              , u = s
              , c = !1;
            4 === s.rank && (c = !0,
            u = YE(s, [1, s.shape[0], s.shape[1], s.shape[2], s.shape[3]])),
            Ik(5 === u.rank, (function() {
                return "Error in maxPool3d: x must be rank 5 but got rank ".concat(u.rank, ".")
            }
            )),
            Ik("NDHWC" === o, (function() {
                return "Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ".concat(o)
            }
            )),
            Ik(cI(n, i), (function() {
                return "Error in maxPool3d: Either strides or dilations must be 1. Got strides ".concat(n, " and dilations '").concat(i, "'")
            }
            )),
            null != a && Ik(Ok(r), (function() {
                return "Error in maxPool3d: pad must be an integer when using, dimRoundingMode ".concat(a, " but got pad ").concat(r, ".")
            }
            ));
            var l = {
                x: u
            }
              , f = {
                filterSize: t,
                strides: n,
                pad: r,
                dimRoundingMode: a,
                dataFormat: o,
                dilations: i
            }
              , p = eE.runKernelFunc((function(e, s) {
                null == i && (i = [1, 1, 1]);
                var c = eI(u.shape, t, n, i, r, a, o)
                  , l = e.maxPool3d(u, c);
                return s([u, l]),
                l
            }
            ), l, null, "MaxPool3D", f);
            return c ? YE(p, [p.shape[1], p.shape[2], p.shape[3], p.shape[4]]) : p
        }
    })
      , BT = cE({
        maxPoolWithArgmax_: function(e, t, n, r) {
            var a = arguments.length > 4 && void 0 !== arguments[4] && arguments[4]
              , o = {
                x: sE(e, "x", "maxPoolWithArgmax")
            }
              , i = {
                filterSize: t,
                strides: n,
                pad: r,
                includeBatchInIndex: a
            }
              , s = eE.runKernel("MaxPoolWithArgmax", o, i);
            return {
                result: s[0],
                indexes: s[1]
            }
        }
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function FT(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "float32";
        if ("complex64" === t) {
            var n = FT(e, "float32")
              , r = FT(e, "float32");
            return lE(n, r)
        }
        var a = Zk(_k(e), t);
        return eE.makeTensor(a, e, t)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function MT(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "float32";
        if ("complex64" === t) {
            var n = MT(e, "float32")
              , r = FT(e, "float32");
            return lE(n, r)
        }
        var a = $k(_k(e), t);
        return eE.makeTensor(a, e, t)
    }
    /**
	 * @license
	 * Copyright 2020 Google Inc. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var PT = cE({
        mean_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
              , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = sE(e, "x", "mean")
              , a = Pk(t, r.shape)
              , o = _k(PS(r.shape, a)[1])
              , i = {
                x: r
            }
              , s = {
                axis: t,
                keepDims: n
            }
              , u = function() {
                var e = fT(o)
                  , a = e.dtype === r.dtype ? r : zE(r, e.dtype)
                  , i = NS(a, e);
                return ST(i, t, n)
            };
            return bT((function(e) {
                return {
                    value: eE.runKernelFunc(u, i, null, "Mean", s),
                    gradFunc: function(t) {
                        var n = e.shape.slice();
                        a.forEach((function(e) {
                            n[e] = 1
                        }
                        ));
                        var r = YE(t, n);
                        return NS(_S(r, MT(e.shape, "float32")), o)
                    }
                }
            }
            ))(r)
        }
    })
      , LT = cE({
        min_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
              , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = sE(e, "x", "min")
              , a = {
                x: r
            }
              , o = {
                axis: t,
                keepDims: n
            };
            return eE.runKernelFunc((function(e, a) {
                var o = Pk(t, r.shape)
                  , i = o
                  , s = VS(i, r.rank)
                  , u = r;
                null != s && (u = JE(r, s),
                i = WS(i.length, r.rank));
                var c = e.min(u, i);
                null != s && u.dispose();
                var l = c;
                if (n) {
                    var f = LS(l.shape, o);
                    l = YE(c, f),
                    c.dispose()
                }
                return a([r, l]),
                l
            }
            ), a, null, "Min", o)
        }
    })
      , UT = cE({
        minimum_: function(e, t) {
            var n, r = sE(e, "a", "minimum"), a = sE(t, "b", "minimum");
            n = Uy(XC(r, a), 2),
            r = n[0],
            a = n[1],
            "bool" === r.dtype && (r = zE(r, "int32"),
            a = zE(a, "int32")),
            VI(r.shape, a.shape);
            var o = {
                a: r,
                b: a
            };
            return eE.runKernelFunc((function(e, t) {
                var n = e.minimum(r, a);
                return t([r, a]),
                n
            }
            ), o, null, "Minimum")
        }
    })
      , VT = cE({
        mirrorPad_: function(e, t, n) {
            Ik("reflect" === n || "symmetric" === n, (function() {
                return "Invalid mode. Mode must be either reflect or symmetric. Got ".concat(n, ".")
            }
            ));
            var r = sE(e, "x", "mirrorPad");
            if (0 === r.rank)
                throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");
            Ik(t.length === r.rank, (function() {
                return "Padding doesn't match input. Must be ".concat(r.rank, ". Got ").concat(t.length, ".")
            }
            ));
            for (var a = "reflect" === n ? 1 : 0, o = function(e) {
                Ik(2 === t[e].length, (function() {
                    return "Invalid number of paddings. Must be length of 2 each."
                }
                )),
                Ik(t[e][0] >= 0 && t[e][0] <= r.shape[e] - a && t[e][1] >= 0 && t[e][1] <= r.shape[e] - a, (function() {
                    return "Padding in dimension ".concat(e, " cannot be greater than or equal to ").concat(r.shape[e] - a, " or less than 0 for input of shape ").concat(r.shape)
                }
                ))
            }, i = 0; i < r.rank; i++)
                o(i);
            var s = {
                paddings: t,
                mode: n
            }
              , u = {
                x: r
            };
            return eE.runKernel("MirrorPad", u, s)
        }
    })
      , zT = cE({
        mod_: function(e, t) {
            var n = sE(e, "a", "mod")
              , r = sE(t, "b", "mod")
              , a = Uy(XC(n, r), 2);
            n = a[0],
            r = a[1];
            var o = {
                a: n,
                b: r
            };
            return eE.runKernelFunc((function(e, t) {
                var a = e.mod(n, r);
                return t([n, r]),
                a
            }
            ), o, null, "Mod")
        }
    })
      , WT = cE({
        square_: function(e) {
            var t = sE(e, "x", "square")
              , n = [t];
            return eE.runKernelFunc((function(e, n) {
                return n([t]),
                e.square(t)
            }
            ), {
                x: t
            }, null, "Square", {}, n, [])
        }
    })
      , jT = cE({
        multinomial_: function(e, t, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]
              , a = sE(e, "logits", "multinomial")
              , o = a.size
              , i = a.rank;
            if (o < 2)
                throw new Error("Error in multinomial: you need at least 2 outcomes, but got ".concat(o, "."));
            if (i > 2)
                throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(i));
            n = n || Math.random();
            var s = 1 === i ? YE(a, [1, -1]) : a
              , u = eE.runKernelFunc((function(e) {
                return e.multinomial(s, r, t, n)
            }
            ), {
                logits2D: s
            });
            return 1 === i ? YE(u, [u.size]) : u
        }
    })
      , HT = cE({
        notEqual_: function(e, t) {
            var n, r = sE(e, "a", "notEqual"), a = sE(t, "b", "notEqual");
            n = Uy(XC(r, a), 2),
            r = n[0],
            a = n[1],
            VI(r.shape, a.shape);
            var o = {
                a: r,
                b: a
            };
            return eE.runKernelFunc((function(e) {
                return e.notEqual(r, a)
            }
            ), o, null, "NotEqual")
        }
    })
      , GT = cE({
        real_: function(e) {
            var t = sE(e, "input", "real")
              , n = {
                input: t
            };
            return eE.runKernelFunc((function(e) {
                return e.real(t)
            }
            ), n, null, "Real")
        }
    })
      , KT = cE({
        onesLike_: function(e) {
            var t = sE(e, "x", "onesLike")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                if ("complex64" === t.dtype) {
                    var r = KT(GT(t))
                      , a = jI(iT(t));
                    return lE(r, a)
                }
                return e.onesLike(t)
            }
            ), n, null, "OnesLike")
        }
    })
      , qT = cE({
        pad_: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
              , r = sE(e, "x", "pad");
            if (0 === r.rank)
                throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");
            var a = {
                paddings: t,
                constantValue: n
            }
              , o = {
                x: r
            };
            return eE.runKernelFunc((function(e, a) {
                return a([r]),
                e.pad(r, t, n)
            }
            ), o, null, "PadV2", a)
        }
    })
      , XT = cE({
        spaceToBatchND_: function(e, t, n) {
            var r = sE(e, "x", "spaceToBatchND");
            Ik(r.rank >= 1 + t.length, (function() {
                return "input rank ".concat(r.rank, " should be > than [blockShape] ").concat(t.length)
            }
            )),
            Ik(n.length === t.length, (function() {
                return "paddings.shape[0] ".concat(n.length, " must be equal to [blockShape] ").concat(t.length)
            }
            )),
            Ik(r.shape.reduce((function(e, r, a) {
                return a > 0 && a <= t.length ? e && (r + n[a - 1][0] + n[a - 1][1]) % t[a - 1] == 0 : e
            }
            ), !0), (function() {
                return "input spatial dimensions ".concat(r.shape.slice(1), " with paddings ").concat(n.toString(), " must be divisible by blockShapes ").concat(t.toString())
            }
            ));
            var a = {
                x: r
            }
              , o = {
                blockShape: t,
                paddings: n
            };
            return eE.runKernelFunc((function(e) {
                return e.spaceToBatchND(r, t, n)
            }
            ), a, null, "SpaceToBatchND", o)
        }
    })
      , QT = cE({
        pool_: function(e, t, n, r, a, o) {
            null == a && (a = [1, 1]),
            null == o && (o = 1),
            0 === r && (r = "valid");
            var i = sE(e, "x", "maxPool")
              , s = i
              , u = !1;
            3 === i.rank && (u = !0,
            s = YE(i, [1, i.shape[0], i.shape[1], i.shape[2]])),
            Ik(cI(o, a), (function() {
                return "Error in pool: Either strides or dilations must be 1. Got strides ".concat(o, " and dilations '").concat(a, "'")
            }
            ));
            var c, l = JS(s.shape, t, o, a, r), f = [l.dilationHeight, l.dilationWidth];
            c = "same" === r ? function(e, t) {
                var n = e.map((function(e, n) {
                    return e + (e - 1) * (t[n] - 1)
                }
                )).map((function(e) {
                    return e - 1
                }
                ))
                  , r = n.map((function(e) {
                    return Math.floor(e / 2)
                }
                ))
                  , a = n.map((function(e, t) {
                    return e - r[t]
                }
                ));
                return n.map((function(e, t) {
                    return [r[t], a[t]]
                }
                ))
            }([l.filterHeight, l.filterWidth], f) : [[0, 0], [0, 0]];
            var p = 1 === f[0] && 1 === f[1]
              , d = Uy(function(e, t, n) {
                var r = n.map((function(e) {
                    return e[0]
                }
                ))
                  , a = n.map((function(e) {
                    return e[1]
                }
                ))
                  , o = e.concat(r, a)
                  , i = t.map((function(e, t) {
                    return (e - o[t] % e) % e
                }
                ))
                  , s = a.map((function(e, t) {
                    return e + i[t]
                }
                ));
                return [t.map((function(e, t) {
                    return [r[t], s[t]]
                }
                )), t.map((function(e, t) {
                    return [0, i[t]]
                }
                ))]
            }([l.inHeight, l.inWidth], f, c), 2)
              , h = d[0]
              , m = d[1]
              , v = p ? r : "valid"
              , g = p ? s : XT(s, f, h)
              , y = ("avg" === n ? function() {
                return fI(g, t, o, v)
            }
            : function() {
                return OT(g, t, o, v)
            }
            )()
              , b = p ? y : bI(y, f, m);
            return u ? YE(b, [b.shape[1], b.shape[2], b.shape[3]]) : b
        }
    })
      , YT = cE({
        pow_: function(e, t) {
            var n = sE(e, "base", "pow")
              , r = sE(t, "exp", "pow")
              , a = Uy(XC(n, r), 2);
            n = a[0],
            r = a[1];
            var o = {
                a: n,
                b: r
            };
            return eE.runKernelFunc((function(e, t) {
                var a = e.pow(n, r);
                return t([n, r, a]),
                a
            }
            ), o, null, "Pow")
        }
    })
      , $T = cE({
        prelu_: function(e, t) {
            var n = sE(e, "x", "prelu")
              , r = sE(t, "alpha", "prelu")
              , a = {
                x: n,
                alpha: r
            };
            return eE.runKernelFunc((function(e, t) {
                var a = e.prelu(n, r);
                return t([n, r]),
                a
            }
            ), a, null, "Prelu")
        }
    })
      , ZT = cE({
        prod_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
              , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = sE(e, "x", "prod");
            "bool" === r.dtype && (r = zE(r, "int32"));
            var a = {
                x: r
            }
              , o = {
                axis: t,
                keepDims: n
            };
            return eE.runKernelFunc((function(e) {
                var a = Pk(t, r.shape)
                  , o = VS(a, r.rank)
                  , i = a
                  , s = r;
                null != o && (s = JE(r, o),
                i = WS(i.length, r.rank));
                var u = e.prod(s, i);
                if (n) {
                    var c = LS(u.shape, a);
                    u = YE(u, c)
                }
                return u
            }
            ), a, null, "Prod", o)
        }
    })
      , JT = bw((function(e) {
        !function(e, t, n) {
            function r(e) {
                var t, n = this, r = (t = 4022871197,
                function(e) {
                    e = e.toString();
                    for (var n = 0; n < e.length; n++) {
                        var r = .02519603282416938 * (t += e.charCodeAt(n));
                        r -= t = r >>> 0,
                        t = (r *= t) >>> 0,
                        t += 4294967296 * (r -= t)
                    }
                    return 2.3283064365386963e-10 * (t >>> 0)
                }
                );
                n.next = function() {
                    var e = 2091639 * n.s0 + 2.3283064365386963e-10 * n.c;
                    return n.s0 = n.s1,
                    n.s1 = n.s2,
                    n.s2 = e - (n.c = 0 | e)
                }
                ,
                n.c = 1,
                n.s0 = r(" "),
                n.s1 = r(" "),
                n.s2 = r(" "),
                n.s0 -= r(e),
                n.s0 < 0 && (n.s0 += 1),
                n.s1 -= r(e),
                n.s1 < 0 && (n.s1 += 1),
                n.s2 -= r(e),
                n.s2 < 0 && (n.s2 += 1),
                r = null
            }
            function a(e, t) {
                return t.c = e.c,
                t.s0 = e.s0,
                t.s1 = e.s1,
                t.s2 = e.s2,
                t
            }
            function o(e, t) {
                var n = new r(e)
                  , o = t && t.state
                  , i = n.next;
                return i.int32 = function() {
                    return 4294967296 * n.next() | 0
                }
                ,
                i.double = function() {
                    return i() + 11102230246251565e-32 * (2097152 * i() | 0)
                }
                ,
                i.quick = i,
                o && ("object" == Sy(o) && a(o, n),
                i.state = function() {
                    return a(n, {})
                }
                ),
                i
            }
            t && t.exports ? t.exports = o : this.alea = o
        }(0, e)
    }
    ))
      , eA = bw((function(e) {
        !function(e, t, n) {
            function r(e) {
                var t = this
                  , n = "";
                t.x = 0,
                t.y = 0,
                t.z = 0,
                t.w = 0,
                t.next = function() {
                    var e = t.x ^ t.x << 11;
                    return t.x = t.y,
                    t.y = t.z,
                    t.z = t.w,
                    t.w ^= t.w >>> 19 ^ e ^ e >>> 8
                }
                ,
                e === (0 | e) ? t.x = e : n += e;
                for (var r = 0; r < n.length + 64; r++)
                    t.x ^= 0 | n.charCodeAt(r),
                    t.next()
            }
            function a(e, t) {
                return t.x = e.x,
                t.y = e.y,
                t.z = e.z,
                t.w = e.w,
                t
            }
            function o(e, t) {
                var n = new r(e)
                  , o = t && t.state
                  , i = function() {
                    return (n.next() >>> 0) / 4294967296
                };
                return i.double = function() {
                    do {
                        var e = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21)
                    } while (0 === e);return e
                }
                ,
                i.int32 = n.next,
                i.quick = i,
                o && ("object" == Sy(o) && a(o, n),
                i.state = function() {
                    return a(n, {})
                }
                ),
                i
            }
            t && t.exports ? t.exports = o : this.xor128 = o
        }(0, e)
    }
    ))
      , tA = bw((function(e) {
        !function(e, t, n) {
            function r(e) {
                var t = this
                  , n = "";
                t.next = function() {
                    var e = t.x ^ t.x >>> 2;
                    return t.x = t.y,
                    t.y = t.z,
                    t.z = t.w,
                    t.w = t.v,
                    (t.d = t.d + 362437 | 0) + (t.v = t.v ^ t.v << 4 ^ e ^ e << 1) | 0
                }
                ,
                t.x = 0,
                t.y = 0,
                t.z = 0,
                t.w = 0,
                t.v = 0,
                e === (0 | e) ? t.x = e : n += e;
                for (var r = 0; r < n.length + 64; r++)
                    t.x ^= 0 | n.charCodeAt(r),
                    r == n.length && (t.d = t.x << 10 ^ t.x >>> 4),
                    t.next()
            }
            function a(e, t) {
                return t.x = e.x,
                t.y = e.y,
                t.z = e.z,
                t.w = e.w,
                t.v = e.v,
                t.d = e.d,
                t
            }
            function o(e, t) {
                var n = new r(e)
                  , o = t && t.state
                  , i = function() {
                    return (n.next() >>> 0) / 4294967296
                };
                return i.double = function() {
                    do {
                        var e = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21)
                    } while (0 === e);return e
                }
                ,
                i.int32 = n.next,
                i.quick = i,
                o && ("object" == Sy(o) && a(o, n),
                i.state = function() {
                    return a(n, {})
                }
                ),
                i
            }
            t && t.exports ? t.exports = o : this.xorwow = o
        }(0, e)
    }
    ))
      , nA = bw((function(e) {
        !function(e, t, n) {
            function r(e) {
                var t = this;
                t.next = function() {
                    var e, n, r = t.x, a = t.i;
                    return e = r[a],
                    n = (e ^= e >>> 7) ^ e << 24,
                    n ^= (e = r[a + 1 & 7]) ^ e >>> 10,
                    n ^= (e = r[a + 3 & 7]) ^ e >>> 3,
                    n ^= (e = r[a + 4 & 7]) ^ e << 7,
                    e = r[a + 7 & 7],
                    n ^= (e ^= e << 13) ^ e << 9,
                    r[a] = n,
                    t.i = a + 1 & 7,
                    n
                }
                ,
                function(e, t) {
                    var n, r = [];
                    if (t === (0 | t))
                        r[0] = t;
                    else
                        for (t = "" + t,
                        n = 0; n < t.length; ++n)
                            r[7 & n] = r[7 & n] << 15 ^ t.charCodeAt(n) + r[n + 1 & 7] << 13;
                    for (; r.length < 8; )
                        r.push(0);
                    for (n = 0; n < 8 && 0 === r[n]; ++n)
                        ;
                    for (8 == n ? r[7] = -1 : r[n],
                    e.x = r,
                    e.i = 0,
                    n = 256; n > 0; --n)
                        e.next()
                }(t, e)
            }
            function a(e, t) {
                return t.x = e.x.slice(),
                t.i = e.i,
                t
            }
            function o(e, t) {
                null == e && (e = +new Date);
                var n = new r(e)
                  , o = t && t.state
                  , i = function() {
                    return (n.next() >>> 0) / 4294967296
                };
                return i.double = function() {
                    do {
                        var e = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21)
                    } while (0 === e);return e
                }
                ,
                i.int32 = n.next,
                i.quick = i,
                o && (o.x && a(o, n),
                i.state = function() {
                    return a(n, {})
                }
                ),
                i
            }
            t && t.exports ? t.exports = o : this.xorshift7 = o
        }(0, e)
    }
    ))
      , rA = bw((function(e) {
        !function(e, t, n) {
            function r(e) {
                var t = this;
                t.next = function() {
                    var e, n, r = t.w, a = t.X, o = t.i;
                    return t.w = r = r + 1640531527 | 0,
                    n = a[o + 34 & 127],
                    e = a[o = o + 1 & 127],
                    n ^= n << 13,
                    e ^= e << 17,
                    n ^= n >>> 15,
                    e ^= e >>> 12,
                    n = a[o] = n ^ e,
                    t.i = o,
                    n + (r ^ r >>> 16) | 0
                }
                ,
                function(e, t) {
                    var n, r, a, o, i, s = [], u = 128;
                    for (t === (0 | t) ? (r = t,
                    t = null) : (t += "\0",
                    r = 0,
                    u = Math.max(u, t.length)),
                    a = 0,
                    o = -32; o < u; ++o)
                        t && (r ^= t.charCodeAt((o + 32) % t.length)),
                        0 === o && (i = r),
                        r ^= r << 10,
                        r ^= r >>> 15,
                        r ^= r << 4,
                        r ^= r >>> 13,
                        o >= 0 && (i = i + 1640531527 | 0,
                        a = 0 == (n = s[127 & o] ^= r + i) ? a + 1 : 0);
                    for (a >= 128 && (s[127 & (t && t.length || 0)] = -1),
                    a = 127,
                    o = 512; o > 0; --o)
                        r = s[a + 34 & 127],
                        n = s[a = a + 1 & 127],
                        r ^= r << 13,
                        n ^= n << 17,
                        r ^= r >>> 15,
                        n ^= n >>> 12,
                        s[a] = r ^ n;
                    e.w = i,
                    e.X = s,
                    e.i = a
                }(t, e)
            }
            function a(e, t) {
                return t.i = e.i,
                t.w = e.w,
                t.X = e.X.slice(),
                t
            }
            function o(e, t) {
                null == e && (e = +new Date);
                var n = new r(e)
                  , o = t && t.state
                  , i = function() {
                    return (n.next() >>> 0) / 4294967296
                };
                return i.double = function() {
                    do {
                        var e = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21)
                    } while (0 === e);return e
                }
                ,
                i.int32 = n.next,
                i.quick = i,
                o && (o.X && a(o, n),
                i.state = function() {
                    return a(n, {})
                }
                ),
                i
            }
            t && t.exports ? t.exports = o : this.xor4096 = o
        }(0, e)
    }
    ))
      , aA = bw((function(e) {
        !function(e, t, n) {
            function r(e) {
                var t = this
                  , n = "";
                t.next = function() {
                    var e = t.b
                      , n = t.c
                      , r = t.d
                      , a = t.a;
                    return e = e << 25 ^ e >>> 7 ^ n,
                    n = n - r | 0,
                    r = r << 24 ^ r >>> 8 ^ a,
                    a = a - e | 0,
                    t.b = e = e << 20 ^ e >>> 12 ^ n,
                    t.c = n = n - r | 0,
                    t.d = r << 16 ^ n >>> 16 ^ a,
                    t.a = a - e | 0
                }
                ,
                t.a = 0,
                t.b = 0,
                t.c = -1640531527,
                t.d = 1367130551,
                e === Math.floor(e) ? (t.a = e / 4294967296 | 0,
                t.b = 0 | e) : n += e;
                for (var r = 0; r < n.length + 20; r++)
                    t.b ^= 0 | n.charCodeAt(r),
                    t.next()
            }
            function a(e, t) {
                return t.a = e.a,
                t.b = e.b,
                t.c = e.c,
                t.d = e.d,
                t
            }
            function o(e, t) {
                var n = new r(e)
                  , o = t && t.state
                  , i = function() {
                    return (n.next() >>> 0) / 4294967296
                };
                return i.double = function() {
                    do {
                        var e = ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) / (1 << 21)
                    } while (0 === e);return e
                }
                ,
                i.int32 = n.next,
                i.quick = i,
                o && ("object" == Sy(o) && a(o, n),
                i.state = function() {
                    return a(n, {})
                }
                ),
                i
            }
            t && t.exports ? t.exports = o : this.tychei = o
        }(0, e)
    }
    ))
      , oA = xw(Object.freeze({
        __proto__: null,
        default: {}
    }))
      , iA = bw((function(e) {
        !function(t, n) {
            var r, a = this, o = 256, i = n.pow(o, 6), s = n.pow(2, 52), u = 2 * s, c = 255;
            function l(e, c, l) {
                var v = []
                  , g = h(d((c = 1 == c ? {
                    entropy: !0
                } : c || {}).entropy ? [e, m(t)] : null == e ? function() {
                    try {
                        var e;
                        return r && (e = r.randomBytes) ? e = e(o) : (e = new Uint8Array(o),
                        (a.crypto || a.msCrypto).getRandomValues(e)),
                        m(e)
                    } catch (e) {
                        var n = a.navigator
                          , i = n && n.plugins;
                        return [+new Date, a, i, a.screen, m(t)]
                    }
                }() : e, 3), v)
                  , y = new f(v)
                  , b = function() {
                    for (var e = y.g(6), t = i, n = 0; e < s; )
                        e = (e + n) * o,
                        t *= o,
                        n = y.g(1);
                    for (; e >= u; )
                        e /= 2,
                        t /= 2,
                        n >>>= 1;
                    return (e + n) / t
                };
                return b.int32 = function() {
                    return 0 | y.g(4)
                }
                ,
                b.quick = function() {
                    return y.g(4) / 4294967296
                }
                ,
                b.double = b,
                h(m(y.S), t),
                (c.pass || l || function(e, t, r, a) {
                    return a && (a.S && p(a, y),
                    e.state = function() {
                        return p(y, {})
                    }
                    ),
                    r ? (n.random = e,
                    t) : e
                }
                )(b, g, "global"in c ? c.global : this == n, c.state)
            }
            function f(e) {
                var t, n = e.length, r = this, a = 0, i = r.i = r.j = 0, s = r.S = [];
                for (n || (e = [n++]); a < o; )
                    s[a] = a++;
                for (a = 0; a < o; a++)
                    s[a] = s[i = c & i + e[a % n] + (t = s[a])],
                    s[i] = t;
                (r.g = function(e) {
                    for (var t, n = 0, a = r.i, i = r.j, s = r.S; e--; )
                        t = s[a = c & a + 1],
                        n = n * o + s[c & (s[a] = s[i = c & i + t]) + (s[i] = t)];
                    return r.i = a,
                    r.j = i,
                    n
                }
                )(o)
            }
            function p(e, t) {
                return t.i = e.i,
                t.j = e.j,
                t.S = e.S.slice(),
                t
            }
            function d(e, t) {
                var n, r = [], a = Sy(e);
                if (t && "object" == a)
                    for (n in e)
                        try {
                            r.push(d(e[n], t - 1))
                        } catch (e) {}
                return r.length ? r : "string" == a ? e : e + "\0"
            }
            function h(e, t) {
                for (var n, r = e + "", a = 0; a < r.length; )
                    t[c & a] = c & (n ^= 19 * t[c & a]) + r.charCodeAt(a++);
                return m(t)
            }
            function m(e) {
                return String.fromCharCode.apply(0, e)
            }
            if (n.seedrandom = l,
            h(n.random(), t),
            e.exports) {
                e.exports = l;
                try {
                    r = oA
                } catch (e) {}
            }
        }([], Math)
    }
    ));
    iA.alea = JT,
    iA.xor128 = eA,
    iA.xorwow = tA,
    iA.xorshift7 = nA,
    iA.xor4096 = rA,
    iA.tychei = aA;
    var sA = iA
      , uA = function() {
        function e(t, n, r, a, o) {
            Ay(this, e),
            this.mean = t,
            this.stdDev = n,
            this.dtype = r,
            this.nextVal = NaN,
            this.truncated = a,
            this.truncated && (this.upper = this.mean + 2 * this.stdDev,
            this.lower = this.mean - 2 * this.stdDev);
            var i = o || Math.random();
            this.random = sA.alea(i.toString())
        }
        return _y(e, [{
            key: "nextValue",
            value: function() {
                if (!isNaN(this.nextVal)) {
                    var e = this.nextVal;
                    return this.nextVal = NaN,
                    e
                }
                for (var t, n, r = !1; !r; ) {
                    var a = void 0
                      , o = void 0
                      , i = void 0;
                    do {
                        i = (a = 2 * this.random() - 1) * a + (o = 2 * this.random() - 1) * o
                    } while (i >= 1 || 0 === i);var s = Math.sqrt(-2 * Math.log(i) / i);
                    t = this.mean + this.stdDev * a * s,
                    n = this.mean + this.stdDev * o * s,
                    this.truncated && !this.isValidTruncated(t) || (r = !0)
                }
                return this.truncated && !this.isValidTruncated(n) || (this.nextVal = this.convertValue(n)),
                this.convertValue(t)
            }
        }, {
            key: "convertValue",
            value: function(e) {
                return null == this.dtype || "float32" === this.dtype ? e : Math.round(e)
            }
        }, {
            key: "isValidTruncated",
            value: function(e) {
                return e <= this.upper && e >= this.lower
            }
        }]),
        e
    }()
      , cA = function() {
        function e() {
            var t = this
              , n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
              , r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1
              , a = arguments.length > 2 ? arguments[2] : void 0
              , o = arguments.length > 3 ? arguments[3] : void 0;
            if (Ay(this, e),
            this.canReturnFloat = function() {
                return null == t.dtype || "float32" === t.dtype
            }
            ,
            this.min = n,
            this.range = r - n,
            this.dtype = a,
            null == o && (o = Math.random()),
            "number" == typeof o && (o = o.toString()),
            !this.canReturnFloat() && this.range <= 1)
                throw new Error("The difference between ".concat(n, " - ").concat(r, " <= 1 and dtype is not float"));
            this.random = sA.alea(o)
        }
        return _y(e, [{
            key: "convertValue",
            value: function(e) {
                return this.canReturnFloat() ? e : Math.round(e)
            }
        }, {
            key: "nextValue",
            value: function() {
                return this.convertValue(this.min + this.range * this.random())
            }
        }]),
        e
    }()
      , lA = cE({
        randomUniform_: function(e) {
            for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "float32", a = arguments.length > 4 ? arguments[4] : void 0, o = VE(e, r), i = new cA(t,n,null,a), s = 0; s < o.values.length; s++)
                o.values[s] = i.nextValue();
            return o.toTensor()
        }
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function fA(e, t) {
        Ak(e);
        var n = aE(e, t);
        if (1 !== n.length)
            throw new Error("tensor1d() requires values to be a flat/TypedArray");
        return fE(e, null, n, t)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function pA(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1
          , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "float32";
        if (0 === n)
            throw new Error("Cannot have a step of zero");
        var a = {
            start: e,
            stop: t,
            step: n,
            dtype: r
        };
        return eE.runKernelFunc((function() {
            if (e === t || e < t && n < 0 || t < e && n > 1)
                return FT([0], r);
            var a = Zk(Math.abs(Math.ceil((t - e) / n)), r);
            t < e && 1 === n && (n = -1),
            a[0] = e;
            for (var o = 1; o < a.length; o++)
                a[o] = a[o - 1] + n;
            return fA(a, r)
        }
        ), {}, null, "Range", a)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var dA = cE({
        reciprocal_: function(e) {
            var t = sE(e, "x", "reciprocal")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.reciprocal(t);
                return n([t]),
                r
            }
            ), n, null, "Reciprocal")
        }
    })
      , hA = cE({
        relu_: function(e) {
            var t = sE(e, "x", "relu")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                return n([t]),
                "bool" === t.dtype ? zE(t, "int32") : e.relu(t)
            }
            ), n, null, "Relu")
        }
    })
      , mA = cE({
        relu6_: function(e) {
            var t = sE(e, "x", "relu6")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                return n([t]),
                "bool" === t.dtype ? zE(t, "int32") : e.relu6(t)
            }
            ), n, null, "Relu6")
        }
    })
      , vA = cE({
        reverse_: function(e, t) {
            var n = sE(e, "x", "reverse")
              , r = {
                x: n
            }
              , a = {
                dims: t
            };
            return eE.runKernelFunc((function(e) {
                var r = Pk(t, n.shape);
                if (0 === n.rank)
                    return WE(n);
                var a = e.reverse(n, r);
                return YE(a, n.shape)
            }
            ), r, null, "Reverse", a)
        }
    })
      , gA = cE({
        round_: function(e) {
            var t = sE(e, "x", "round")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e) {
                return e.round(t)
            }
            ), n, null, "Round")
        }
    })
      , yA = cE({
        rsqrt_: function(e) {
            var t = sE(e, "x", "rsqrt")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.rsqrt(t);
                return n([t]),
                r
            }
            ), n, null, "Rsqrt")
        }
    })
      , bA = cE({
        selu_: function(e) {
            var t = sE(e, "x", "selu")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.selu(t);
                return n([t]),
                r
            }
            ), n, null, "Selu")
        }
    })
      , xA = cE({
        separableConv2d_: function(e, t, n, r, a) {
            var o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : [1, 1]
              , i = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : "NHWC"
              , s = sE(e, "x", "separableConv2d")
              , u = sE(t, "depthwiseFilter", "separableConv2d")
              , c = sE(n, "pointwiseFilter", "separableConv2d")
              , l = s
              , f = !1;
            if (3 === s.rank && (f = !0,
            l = YE(s, [1, s.shape[0], s.shape[1], s.shape[2]])),
            "NCHW" === i)
                throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");
            Ik(4 === l.rank, (function() {
                return "Error in separableConv2d: input must be rank 4, but got rank ".concat(l.rank, ".")
            }
            )),
            Ik(4 === u.rank, (function() {
                return "Error in separableConv2d: depthwise filter must be rank 4, but got rank ".concat(u.rank, ".")
            }
            )),
            Ik(4 === c.rank, (function() {
                return "Error in separableConv2d: pointwise filter must be rank 4, but got rank ".concat(u.rank, ".")
            }
            )),
            Ik(1 === c.shape[0], (function() {
                return "Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ".concat(c.shape[0], ".")
            }
            )),
            Ik(1 === c.shape[1], (function() {
                return "Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ".concat(c.shape[1], ".")
            }
            ));
            var p = u.shape[2]
              , d = u.shape[3];
            Ik(c.shape[2] === p * d, (function() {
                return "Error in separableConv2d: the third dimension of pointwise filter must be ".concat(p * d, ", but got ").concat(c.shape[2], ".")
            }
            ));
            var h = MI(l, u, r, a, i, o)
              , m = II(h, c, 1, "valid", i);
            return f ? YE(m, [m.shape[1], m.shape[2], m.shape[3]]) : m
        }
    })
      , wA = function() {
        var e = Ty(regeneratorRuntime.mark((function e(t, n) {
            var r, a, o, i, s, u, c, l, f, p, d;
            return regeneratorRuntime.wrap((function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return r = sE(t, "x", "setdiff1d"),
                        a = sE(n, "y", "setdiff1d"),
                        Ik(r.dtype === a.dtype, (function() {
                            return "x and y should have the same dtype, but got x (".concat(r.dtype, ") and y (").concat(a.dtype, ").")
                        }
                        )),
                        Ik(1 === r.rank, (function() {
                            return "x should be 1D tensor, but got x (".concat(r.shape, ").")
                        }
                        )),
                        Ik(1 === a.rank, (function() {
                            return "y should be 1D tensor, but got y (".concat(a.shape, ").")
                        }
                        )),
                        e.next = 4,
                        r.data();
                    case 4:
                        return o = e.sent,
                        e.next = 7,
                        a.data();
                    case 7:
                        for (i = e.sent,
                        s = new Set(i),
                        u = 0,
                        c = 0; c < o.length; c++)
                            s.has(o[c]) || u++;
                        for (l = new FC([u],r.dtype),
                        f = new FC([u],"int32"),
                        p = 0,
                        d = 0; p < o.length; p++)
                            s.has(o[p]) || (l.values[d] = o[p],
                            f.values[d] = p,
                            d++);
                        return e.abrupt("return", [l.toTensor(), f.toTensor()]);
                    case 14:
                    case "end":
                        return e.stop()
                    }
            }
            ), e)
        }
        )));
        return function(t, n) {
            return e.apply(this, arguments)
        }
    }()
      , kA = cE({
        sign_: function(e) {
            var t = sE(e, "x", "sign")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e) {
                return e.sign(t)
            }
            ), n, null, "Sign")
        }
    })
      , CA = cE({
        sin_: function(e) {
            var t = sE(e, "x", "sin")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.sin(t);
                return n([t]),
                r
            }
            ), n, null, hC)
        }
    })
      , EA = cE({
        sinh_: function(e) {
            var t = sE(e, "x", "sinh")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.sinh(t);
                return n([t]),
                r
            }
            ), n, null, "Sinh")
        }
    })
      , SA = cE({
        softmax_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1
              , n = sE(e, "logits", "softmax", "float32");
            if (-1 === t && (t = n.rank - 1),
            t !== n.rank - 1)
                throw Error("Softmax along a non-last dimension is not yet supported. Logits was rank ".concat(n.rank, " and dim was ").concat(t));
            var r = {
                logits: n
            }
              , a = {
                dim: t
            };
            return eE.runKernelFunc((function(e, r) {
                var a = e.softmax(n, t);
                return r([a]),
                a
            }
            ), r, null, "Softmax", a)
        }
    })
      , IA = cE({
        fft_: function(e) {
            Ik("complex64" === e.dtype, (function() {
                return "The dtype for tf.spectral.fft() must be complex64 but got ".concat(e.dtype, ".")
            }
            ));
            var t = {
                input: e
            };
            return eE.runKernelFunc((function(t) {
                var n = e.shape[e.shape.length - 1]
                  , r = e.size / n
                  , a = e.as2D(r, n);
                return t.fft(a).reshape(e.shape)
            }
            ), t, null, "FFT")
        }
    })
      , TA = cE({
        ifft_: function(e) {
            Ik("complex64" === e.dtype, (function() {
                return "The dtype for tf.spectral.ifft() must be complex64 but got ".concat(e.dtype, ".")
            }
            ));
            var t = {
                input: e
            };
            return eE.runKernelFunc((function(t) {
                var n = e.shape[e.shape.length - 1]
                  , r = e.size / n
                  , a = YE(e, [r, n])
                  , o = t.ifft(a);
                return YE(o, e.shape)
            }
            ), t, null, "IFFT")
        }
    })
      , AA = cE({
        irfft_: function(e) {
            var t, n = e.shape[e.shape.length - 1], r = e.size / n;
            if (n <= 2) {
                var a = YE(e, [r, n]);
                t = TA(a)
            } else {
                var o = [r, 2 * (n - 1)]
                  , i = YE(GT(e), [r, n])
                  , s = YE(iT(e), [r, n])
                  , u = vA(gI(i, [0, 1], [r, n - 2]), 1)
                  , c = _S(vA(gI(s, [0, 1], [r, n - 2]), 1), fT(-1))
                  , l = mI([i, u], 1)
                  , f = mI([s, c], 1)
                  , p = YE(lE(l, f), [o[0], o[1]]);
                t = TA(p)
            }
            if (t = GT(t),
            3 === e.rank && 0 !== e.shape[0]) {
                var d = t
                  , h = e.shape[0];
                t = YE(t, [h, t.shape[0] / h, t.shape[1]]),
                d.dispose()
            }
            return t
        }
    });
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function NA(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
          , r = [];
        if ("number" == typeof t)
            Ik(e.shape[n] % t == 0, (function() {
                return "Number of splits must evenly divide the axis."
            }
            )),
            r = new Array(t).fill(e.shape[n] / t);
        else {
            Ik(t.reduce((function(e, t) {
                return -1 === t && (e += 1),
                e
            }
            ), 0) <= 1, (function() {
                return "There should be only one negative value in split array."
            }
            ));
            var a = t.indexOf(-1);
            if (-1 !== a) {
                var o = t.reduce((function(e, t) {
                    return t > 0 ? e + t : e
                }
                ));
                t[a] = e.shape[n] - o
            }
            Ik(e.shape[n] === t.reduce((function(e, t) {
                return e + t
            }
            )), (function() {
                return "The sum of sizes must match the size of the axis dimension."
            }
            )),
            r = t
        }
        return r
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var _A = cE({
        split_: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
              , r = sE(e, "x", "split")
              , a = {
                x: r
            }
              , o = {
                numOrSizeSplits: t,
                axis: n
            };
            return eE.runKernelFunc((function(e, a) {
                var o = Pk(n, r.shape)[0]
                  , i = NA(r, t, o);
                return e.split(r, i, o)
            }
            ), a, null, "SplitV", o)
        }
    })
      , RA = cE({
        rfft_: function(e, t) {
            Ik("float32" === e.dtype, (function() {
                return "The dtype for rfft() must be real value but got ".concat(e.dtype)
            }
            ));
            var n, r = e.shape[e.shape.length - 1], a = e.size / r;
            if (null != t && t < r) {
                var o = e.shape.map((function(e) {
                    return 0
                }
                ))
                  , i = e.shape.map((function(e) {
                    return e
                }
                ));
                i[e.shape.length - 1] = t,
                n = gI(e, o, i),
                r = t
            } else if (null != t && t > r) {
                var s = e.shape.map((function(e) {
                    return e
                }
                ));
                s[e.shape.length - 1] = t - r,
                n = mI([e, FT(s)], e.shape.length - 1),
                r = t
            } else
                n = e;
            var u = jI(n)
              , c = YE(lE(n, u), [a, r])
              , l = IA(c)
              , f = Math.floor(r / 2) + 1
              , p = GT(l)
              , d = iT(l)
              , h = _A(p, [f, r - f], p.shape.length - 1)
              , m = _A(d, [f, r - f], d.shape.length - 1)
              , v = n.shape.slice();
            return v[n.shape.length - 1] = f,
            YE(lE(h[0], m[0]), v)
        }
    })
      , OA = cE({
        sqrt_: function(e) {
            var t = sE(e, "x", "sqrt")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.sqrt(t);
                return n([t]),
                r
            }
            ), n, null, "Sqrt")
        }
    })
      , DA = cE({
        squaredDifference_: function(e, t) {
            var n, r = sE(e, "a", "squaredDifference"), a = sE(t, "b", "squaredDifference");
            n = Uy(XC(r, a), 2),
            r = n[0],
            a = n[1],
            VI(r.shape, a.shape);
            var o = {
                a: r,
                b: a
            };
            return eE.runKernelFunc((function(e, t) {
                var n = e.squaredDifference(r, a);
                return t([r, a]),
                n
            }
            ), o, null, "SquaredDifference", {})
        }
    })
      , BA = cE({
        squeeze_: function(e, t) {
            var n = sE(e, "x", "squeeze");
            return YE(n, Lk(n.shape, t).newShape)
        }
    })
      , FA = cE({
        stack_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = uE(e, "tensors", "stack");
            if (Ik(n.length >= 1, (function() {
                return "Pass at least one tensor to tf.stack"
            }
            )),
            1 === n.length)
                return QI(n[0], t);
            var r = n[0].rank
              , a = n[0].shape
              , o = n[0].dtype;
            Ik(t <= r, (function() {
                return "Axis must be <= rank of the tensor"
            }
            )),
            n.forEach((function(e) {
                Tk(a, e.shape, "All tensors passed to stack must have matching shapes"),
                Ik(o === e.dtype, (function() {
                    return "All tensors passed to stack must have matching dtypes"
                }
                ))
            }
            ));
            var i = n.map((function(e) {
                return QI(e, t)
            }
            ));
            return mI(i, t)
        }
    })
      , MA = cE({
        step_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = sE(e, "x", "step")
              , r = {
                x: n
            }
              , a = {
                alpha: t
            };
            return eE.runKernelFunc((function(e) {
                return e.step(n, t)
            }
            ), r, null, "Step", a)
        }
    })
      , PA = cE({
        stridedSlice_: function(e, t, n, r) {
            var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0
              , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0
              , i = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 0
              , s = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 0
              , u = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0
              , c = sE(e, "x", "stridedSlice")
              , l = {
                x: c
            }
              , f = {
                begin: t,
                end: n,
                strides: r,
                beginMask: a,
                endMask: o,
                ellipsisMask: i,
                newAxisMask: s,
                shrinkAxisMask: u
            };
            return eE.runKernelFunc((function(e) {
                null == r && (r = new Array(t.length));
                var l = iS(i);
                if (l.length > 1)
                    throw new Error("Multiple ellipses in slice is not allowed.");
                if (0 !== i && 0 !== s)
                    throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");
                if (0 !== i && 0 !== u)
                    throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");
                var f = c.rank - t.length
                  , p = iS(s)
                  , d = c.shape.slice();
                p.forEach((function(e) {
                    t[e] = 0,
                    n[e] = 1,
                    d.splice(e, 0, 1)
                }
                ));
                var h = fS((c = YE(c, d)).shape, l, f, t, n, r, a, o, i)
                  , m = h.begin
                  , v = h.end
                  , g = h.strides;
                t = m,
                n = v,
                r = g;
                var y = iS(u);
                y.forEach((function(e) {
                    n[e] = t[e] + 1,
                    r[e] = 1
                }
                ));
                var b = sS(t, n, r)
                  , x = b.filter((function(e, t) {
                    return -1 === y.indexOf(t)
                }
                ));
                if (r.every((function(e) {
                    return 1 === e
                }
                )))
                    return YE(gI(c, t, b), x);
                var w = e.stridedSlice(c, t, n, r);
                return YE(w, x)
            }
            ), l, null, "StridedSlice", f)
        }
    })
      , LA = cE({
        tan_: function(e) {
            var t = sE(e, "x", "tan")
              , n = {
                x: t
            };
            return eE.runKernelFunc((function(e, n) {
                var r = e.tan(t);
                return n([t]),
                r
            }
            ), n, null, "Tan")
        }
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function UA(e, t, n) {
        if (Ak(e),
        null != t && 2 !== t.length)
            throw new Error("tensor2d() requires shape to have two numbers");
        var r = aE(e, n);
        if (2 !== r.length && 1 !== r.length)
            throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");
        if (1 === r.length && null == t)
            throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");
        return fE(e, t, r, n)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function VA(e, t, n) {
        if (Ak(e),
        null != t && 4 !== t.length)
            throw new Error("tensor4d() requires shape to have four numbers");
        var r = aE(e, n);
        if (4 !== r.length && 1 !== r.length)
            throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");
        if (1 === r.length && null == t)
            throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");
        return fE(e, t, r, n)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var zA = cE({
        topk_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1
              , n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]
              , r = sE(e, "x", "topk");
            if (0 === r.rank)
                throw new Error("topk() expects the input to be of rank 1 or higher");
            var a = r.shape[r.shape.length - 1];
            if (t > a)
                throw new Error("'k' passed to topk() must be <= the last dimension (".concat(a, ") but got ").concat(t));
            var o = {
                x: r
            }
              , i = {
                k: t,
                sorted: n
            }
              , s = eE.runKernelFunc((function(e) {
                return e.topk(r, t, n)
            }
            ), o, null, "TopK", i)
              , u = Uy(s, 2)
              , c = u[0]
              , l = u[1];
            return {
                values: c,
                indices: l
            }
        }
    })
      , WA = cE({
        truncatedNormal_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1
              , r = arguments.length > 3 ? arguments[3] : void 0
              , a = arguments.length > 4 ? arguments[4] : void 0;
            if (null != r && "bool" === r)
                throw new Error("Unsupported data type $ { dtype }");
            for (var o = new uA(t,n,r,!0,a), i = VE(e, r), s = 0; s < i.values.length; s++)
                i.values[s] = o.nextValue();
            return i.toTensor()
        }
    })
      , jA = cE({
        unique_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = sE(e, "x", "unique", null);
            Ik(n.rank > 0, (function() {
                return "The input tensor must be at least 1D"
            }
            ));
            var r = {
                x: n
            }
              , a = {
                axis: t
            }
              , o = eE.runKernel("Unique", r, a)
              , i = Uy(o, 2)
              , s = i[0]
              , u = i[1];
            return {
                values: s,
                indices: u
            }
        }
    })
      , HA = cE({
        unsortedSegmentSum_: function(e, t, n) {
            var r = sE(e, "x", "unsortedSegmentSum")
              , a = sE(t, "segmentIds", "unsortedSegmentSum", "int32");
            Ik(Ok(n), (function() {
                return "numSegments must be of dtype int"
            }
            ));
            var o = {
                x: r,
                segmentIds: a
            }
              , i = {
                numSegments: n
            };
            return eE.runKernelFunc((function(e, t) {
                var o = e.unsortedSegmentSum(r, a, n);
                return t([a]),
                o
            }
            ), o, null, "UnsortedSegmentSum", i)
        }
    })
      , GA = cE({
        unstack_: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = sE(e, "x", "unstack");
            Ik(t >= -n.shape.length && t < n.shape.length, (function() {
                return "Axis = ".concat(t, " is not in [-").concat(n.shape.length, ", ").concat(n.shape.length, ")")
            }
            )),
            t < 0 && (t += n.shape.length);
            var r = {
                value: n
            }
              , a = {
                axis: t
            };
            return eE.runKernelFunc((function(e) {
                return e.unstack(n, t)
            }
            ), r, null, "Unpack", a)
        }
    });
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function KA(e, t) {
        for (var n = [], r = 0; r < t.length; r++)
            t[r] && n.push(r);
        for (var a = VE(e, "int32"), o = VE([n.length, e.length], "int32"), i = 0; i < n.length; i++) {
            var s = a.indexToLoc(n[i])
              , u = i * e.length;
            o.values.set(s, u)
        }
        return o.toTensor()
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var qA = function() {
        var e = Ty(regeneratorRuntime.mark((function e(t) {
            var n, r, a;
            return regeneratorRuntime.wrap((function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return n = sE(t, "condition", "whereAsync", "bool"),
                        e.next = 3,
                        n.data();
                    case 3:
                        return r = e.sent,
                        a = KA(n.shape, r),
                        e.abrupt("return", (t !== n && n.dispose(),
                        a));
                    case 6:
                    case "end":
                        return e.stop()
                    }
            }
            ), e)
        }
        )));
        return function(t) {
            return e.apply(this, arguments)
        }
    }()
      , XA = cE({
        equalStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "equalStrict")
              , r = sE(t, "b", "equalStrict");
            return Tk(n.shape, r.shape, "Error in equalStrict: "),
            zI(n, r)
        }
    })
      , QA = cE({
        greaterEqualStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "greaterEqualStrict")
              , r = sE(t, "b", "greaterEqualStrict");
            return Tk(n.shape, r.shape, "Error in greaterEqualStrict: "),
            oT(n, r)
        }
    })
      , YA = cE({
        greaterStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "greaterStrict")
              , r = sE(t, "b", "greaterStrict");
            return Tk(n.shape, r.shape, "Error in greaterStrict: "),
            aT(n, r)
        }
    })
      , $A = cE({
        lessEqualStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "lessEqualStrict")
              , r = sE(t, "b", "lessEqualStrict");
            return Tk(n.shape, r.shape, "Error in lessEqualStrict: "),
            hT(n, r)
        }
    })
      , ZA = cE({
        lessStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "lessStrict")
              , r = sE(t, "b", "lessStrict");
            return Tk(n.shape, r.shape, "Error in lessStrict: "),
            dT(n, r)
        }
    })
      , JA = cE({
        notEqualStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "notEqualStrict")
              , r = sE(t, "b", "notEqualStrict");
            return Tk(n.shape, r.shape, "Error in notEqualStrict: "),
            HT(n, r)
        }
    })
      , eN = cE({
        addStrict_: /**
	   * @license
	   * Copyright 2018 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "addStrict")
              , r = sE(t, "b", "addStrict");
            return Tk(n.shape, r.shape, "Error in addStrict: "),
            TS(n, r)
        }
    })
      , tN = cE({
        divStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "div")
              , r = sE(t, "b", "div");
            return Tk(n.shape, r.shape, "Error in divideStrict: "),
            NS(n, r)
        }
    })
      , nN = cE({
        maximumStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "maximumStrict")
              , r = sE(t, "b", "maximumStrict");
            return Tk(n.shape, r.shape, "Error in maximumStrict: "),
            lT(n, r)
        }
    })
      , rN = cE({
        minimumStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "minimumStrict")
              , r = sE(t, "b", "minimumStrict");
            return Tk(n.shape, r.shape, "Error in minimumStrict: "),
            UT(n, r)
        }
    })
      , aN = cE({
        modStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "modStrict")
              , r = sE(t, "b", "modStrict");
            return Tk(n.shape, r.shape, "Error in modStrict: "),
            zT(n, r)
        }
    })
      , oN = cE({
        mulStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "mul")
              , r = sE(t, "b", "mul");
            return Tk(n.shape, r.shape, "Error in multiplyStrict: "),
            _S(n, r)
        }
    })
      , iN = cE({
        powStrict_: function(e, t) {
            return wS("strict variants of ops have been deprecated and will be removed in future"),
            Tk(e.shape, t.shape, "Error in powStrict: "),
            YT(e, t)
        }
    })
      , sN = cE({
        squaredDifferenceStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "squaredDifferenceStrict")
              , r = sE(t, "b", "squaredDifferenceStrict");
            return Tk(n.shape, r.shape, "Error in squaredDifferenceStrict: "),
            DA(n, r)
        }
    })
      , uN = cE({
        subStrict_: function(e, t) {
            wS("strict variants of ops have been deprecated and will be removed in future");
            var n = sE(e, "a", "subStrict")
              , r = sE(t, "b", "subStrict");
            return Tk(n.shape, r.shape, "Error in subStrict: "),
            ET(n, r)
        }
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function cN(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
        if (0 === e.rank)
            return RS(e);
        if (1 !== e.rank && null === n)
            return cN(YE(e, [-1]), t, n);
        if (1 === e.rank || "number" == typeof n || Array.isArray(n) && 1 === n.length) {
            if (1 === t)
                return ST(RS(e), n);
            if (t === 1 / 0)
                return CT(RS(e), n);
            if (t === -1 / 0)
                return LT(RS(e), n);
            if ("euclidean" === t || 2 === t)
                return OA(ST(YT(RS(e), fT(2, "int32")), n));
            throw new Error("Error in norm: invalid ord value: ".concat(t))
        }
        if (Array.isArray(n) && 2 === n.length) {
            if (1 === t)
                return CT(ST(RS(e), n[0]), n[1] - 1);
            if (t === 1 / 0)
                return CT(ST(RS(e), n[1]), n[0]);
            if (t === -1 / 0)
                return LT(ST(RS(e), n[1]), n[0]);
            if ("fro" === t || "euclidean" === t)
                return OA(ST(WT(e), n));
            throw new Error("Error in norm: invalid ord value: ".concat(t))
        }
        throw new Error("Error in norm: invalid axis: ".concat(n))
    }
    var lN = cE({
        norm_: /**
	   * @license
	   * Copyright 2018 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "euclidean"
              , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
              , r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]
              , a = cN(e = sE(e, "x", "norm"), t, n)
              , o = a.shape;
            if (r) {
                var i = Pk(n, e.shape);
                o = LS(a.shape, i)
            }
            return YE(a, o)
        }
    })
      , fN = cE({
        scatterND_: function(e, t, n) {
            var r = sE(e, "indices", "scatterND", "int32")
              , a = sE(t, "updates", "scatterND");
            rS(a, r, n);
            var o = {
                indices: r,
                updates: a
            }
              , i = {
                shape: n
            };
            return eE.runKernelFunc((function(e) {
                return e.scatterND(r, a, n)
            }
            ), o, null, "ScatterNd", i)
        }
    })
      , pN = cE({
        sparseToDense_: /**
	   * @license
	   * Copyright 2018 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e, t, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0
              , a = sE(e, "sparseIndices", "sparseToDense", "int32")
              , o = sE(t, "sparseValues", "sparseToDense")
              , i = sE(r, "defaultValue", "sparseToDense", o.dtype);
            !function(e, t, n, r) {
                if ("int32" !== e.dtype)
                    throw new Error("tf.sparseToDense() expects the indices to be int32 type, but the dtype was ".concat(e.dtype, "."));
                if (e.rank > 2)
                    throw new Error("sparseIndices should be a scalar, vector, or matrix, but got shape ".concat(e.shape, "."));
                var a = e.rank > 0 ? e.shape[0] : 1
                  , o = e.rank > 1 ? e.shape[1] : 1;
                if (n.length !== o)
                    throw new Error("outputShape has incorrect number of elements:, ".concat(n.length, ", should be: ").concat(o, "."));
                var i = t.size;
                if (0 !== t.rank && (1 !== t.rank || i !== a))
                    throw new Error("sparseValues has incorrect shape ".concat(t.shape, ", should be [] or [").concat(a, "]"));
                if (t.dtype !== r.dtype)
                    throw new Error("sparseValues.dtype must match defaultValues.dtype")
            }(a, o, n, i);
            var s = {
                sparseIndices: a,
                sparseValues: o,
                defaultValue: i
            }
              , u = {
                outputShape: n
            };
            return eE.runKernelFunc((function(e) {
                return e.sparseToDense(a, o, n, i)
            }
            ), s, null, "SparseToDense", u)
        }
    })
      , dN = cE({
        gatherND_: function(e, t) {
            var n = sE(t, "indices", "gatherND", "int32")
              , r = sE(e, "x", "gatherND")
              , a = {
                params: r,
                indices: n
            };
            return eE.runKernelFunc((function(e) {
                return e.gatherND(r, n)
            }
            ), a, null, "GatherNd")
        }
    })
      , hN = cE({
        conv2DBackpropFilter_: function(e, t, n, r, a) {
            var o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "NHWC"
              , i = arguments.length > 6 ? arguments[6] : void 0
              , s = e;
            3 === e.rank && (s = YE(e, [1, e.shape[0], e.shape[1], e.shape[2]]));
            var u = t;
            3 === u.rank && (u = YE(t, [1, t.shape[0], t.shape[1], t.shape[2]])),
            Ik(4 === s.rank, (function() {
                return "Error in conv2dDerFilter: input must be rank 4, but got shape ".concat(s.shape, ".")
            }
            )),
            Ik(4 === u.rank, (function() {
                return "Error in conv2dDerFilter: dy must be rank 4, but got shape ".concat(u.shape, ".")
            }
            )),
            Ik(4 === n.length, (function() {
                return "Error in conv2dDerFilter: filterShape must be length 4, but got ".concat(n, ".")
            }
            ));
            var c = "NHWC" === o ? s.shape[3] : s.shape[1]
              , l = "NHWC" === o ? u.shape[3] : u.shape[1];
            Ik(c === n[2], (function() {
                return "Error in conv2dDerFilter: depth of input ".concat(c, ") must match input depth in filter (").concat(n[2], ".")
            }
            )),
            Ik(l === n[3], (function() {
                return "Error in conv2dDerFilter: depth of dy (".concat(l, ") must match output depth for filter (").concat(n[3], ").")
            }
            )),
            null != i && Ik(Ok(a), (function() {
                return "Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ".concat(i, " but got pad ").concat(a, ".")
            }
            ));
            var f = {
                x: s,
                dy: u
            }
              , p = {
                strides: r,
                pad: a,
                dataFormat: o,
                dimRoundingMode: i,
                filterShape: n
            };
            return eE.runKernelFunc((function(e) {
                var t = lI(o)
                  , c = tI(s.shape, n, r, 1, a, i, !1, t);
                return e.conv2dDerFilter(s, u, c)
            }
            ), f, null, "Conv2DBackpropFilter", p)
        }
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function mN(e, t, n) {
        if (null == n || "linear" === n)
            return e;
        if ("relu" === n)
            return _S(e, MA(t));
        throw new Error("Cannot compute gradient for fused activation ".concat(n, "."))
    }
    function vN(e, t) {
        var n = t
          , r = UI(e.shape, t.shape);
        return r.length > 0 && (n = ST(n, r)),
        YE(n, e.shape)
    }
    function gN(e, t, n) {
        if ("linear" === t)
            return e;
        if ("relu" === t)
            return hA(e);
        if ("elu" === t)
            return KI(e);
        if ("relu6" === t)
            return mA(e);
        if ("prelu" === t)
            return $T(e, n);
        throw new Error("Unknown fused activation ".concat(t, "."))
    }
    var yN = function(e, t) {
        return !(e > 0) || "linear" === t
    }
      , bN = cE({
        fusedConv2d_: function(e) {
            var t, n = e.x, r = e.filter, a = e.strides, o = e.pad, i = e.dataFormat, s = void 0 === i ? "NHWC" : i, u = e.dilations, c = void 0 === u ? [1, 1] : u, l = e.dimRoundingMode, f = e.bias, p = e.activation, d = void 0 === p ? "linear" : p, h = e.preluActivationWeights;
            if (d = d || "linear",
            !1 === yN(eE.state.gradientDepth, d)) {
                var m = II(n, r, a, o, s, c, l);
                return null != f && (m = TS(m, f)),
                gN(m, d, h)
            }
            var v = sE(n, "x", "conv2d")
              , g = sE(r, "filter", "conv2d")
              , y = v
              , b = !1;
            3 === v.rank && (b = !0,
            y = YE(v, [1, v.shape[0], v.shape[1], v.shape[2]])),
            Ik(4 === y.rank, (function() {
                return "Error in fused conv2d: input must be rank 4, but got rank ".concat(y.rank, ".")
            }
            )),
            Ik(4 === g.rank, (function() {
                return "Error in fused conv2d: filter must be rank 4, but got rank ".concat(g.rank, ".")
            }
            )),
            null != l && Ik(Ok(o), (function() {
                return "Error in fused conv2d: pad must be an integer when using, dimRoundingMode ".concat(l, " but got pad ").concat(o, ".")
            }
            )),
            Ik(y.shape[3] === g.shape[2], (function() {
                return "Error in conv2d: depth of input (".concat(y.shape[3], ") must match input depth for filter ").concat(g.shape[2], ".")
            }
            )),
            Ik(cI(a, c), (function() {
                return "Error in conv2D: Either strides or dilations must be 1. Got strides ".concat(a, " and dilations '").concat(c, "'")
            }
            )),
            Ik("NHWC" === s, (function() {
                return "Error in conv2d: got dataFormat of ".concat(s, " but only NHWC is currently supported.")
            }
            ));
            var x, w, k = tI(y.shape, g.shape, a, c, o, l);
            null != f && (t = Uy(XC(x = sE(f, "bias", "fused conv2d"), v), 1),
            x = t[0],
            VI(k.outShape, x.shape)),
            null != h && (w = sE(h, "prelu weights", "fused conv2d"));
            var C = function(e, t) {
                var n = Uy(t, 4)
                  , r = n[0]
                  , i = n[1]
                  , s = n[2]
                  , u = n[3]
                  , l = mN(e, s, d);
                Ik(uI(c), (function() {
                    return "Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '".concat(c, "'")
                }
                ));
                var f = [AI(i.shape, l, r, a, o), hN(i, l, r.shape, a, o)];
                if (null != u) {
                    var p = vN(u, l);
                    f.push(p)
                }
                return f
            }
              , E = function(e) {
                return e.fusedConv2d({
                    input: y,
                    filter: g,
                    convInfo: k,
                    bias: x,
                    activation: d,
                    preluActivationWeights: w
                })
            }
              , S = {
                x: y,
                filter: g,
                bias: x,
                preluActivationWeights: w
            }
              , I = {
                strides: a,
                pad: o,
                dataFormat: s,
                dilations: c,
                dimRoundingMode: l,
                activation: d
            };
            return null == f ? bT((function(e, t, n) {
                var r = eE.runKernelFunc(E, S, null, "FusedConv2D", I);
                return n([t, e, r]),
                b && (r = YE(r, [r.shape[1], r.shape[2], r.shape[3]])),
                {
                    value: r,
                    gradFunc: C
                }
            }
            ))(y, g) : bT((function(e, t, n, r) {
                var a = eE.runKernelFunc(E, S, null, "FusedConv2D", I);
                return r([t, e, a, n]),
                b && (a = YE(a, [a.shape[1], a.shape[2], a.shape[3]])),
                {
                    value: a,
                    gradFunc: C
                }
            }
            ))(y, g, x)
        }
    })
      , xN = cE({
        depthwiseConv2dNativeBackpropFilter_: function(e, t, n, r, a) {
            var o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : [1, 1]
              , i = arguments.length > 6 ? arguments[6] : void 0
              , s = e;
            3 === e.rank && (s = YE(e, [1, e.shape[0], e.shape[1], e.shape[2]]));
            var u = t;
            3 === u.rank && (u = YE(t, [1, t.shape[0], t.shape[1], t.shape[2]]));
            var c = {
                x: s,
                dy: u
            }
              , l = {
                strides: r,
                pad: a,
                dimRoundingMode: i,
                dilations: o,
                filterShape: n
            };
            return eE.runKernelFunc((function(t) {
                var c = tI(e.shape, n, r, o, a, i, !0);
                return t.depthwiseConv2DDerFilter(s, u, c)
            }
            ), c, null, "DepthwiseConv2dNativeBackpropFilter", l)
        }
    })
      , wN = cE({
        depthwiseConv2dNativeBackpropInput_: function(e, t, n, r, a) {
            var o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : [1, 1]
              , i = arguments.length > 6 ? arguments[6] : void 0
              , s = t
              , u = !1;
            3 === t.rank && (u = !0,
            s = YE(t, [1, t.shape[0], t.shape[1], t.shape[2]]));
            var c = {
                dy: s,
                filter: n
            }
              , l = {
                strides: r,
                pad: a,
                dimRoundingMode: i,
                dilations: o,
                inputShape: e
            }
              , f = eE.runKernelFunc((function(t) {
                var u = tI(e, n.shape, r, o, a, i, !0);
                return t.depthwiseConv2DDerInput(s, n, u)
            }
            ), c, null, "DepthwiseConv2dNativeBackpropInput", l);
            return u ? YE(f, [f.shape[1], f.shape[2], f.shape[3]]) : f
        }
    })
      , kN = cE({
        fusedDepthwiseConv2d_: function(e) {
            var t, n = e.x, r = e.filter, a = e.strides, o = e.pad, i = e.dataFormat, s = void 0 === i ? "NHWC" : i, u = e.dilations, c = void 0 === u ? [1, 1] : u, l = e.dimRoundingMode, f = e.bias, p = e.activation, d = void 0 === p ? "linear" : p, h = e.preluActivationWeights;
            if (!1 === yN(eE.state.gradientDepth, d)) {
                var m = MI(n, r, a, o, s, c, l);
                return null != f && (m = TS(m, f)),
                gN(m, d, h)
            }
            var v = sE(n, "x", "depthwiseConv2d")
              , g = sE(r, "filter", "depthwiseConv2d")
              , y = v
              , b = !1;
            3 === v.rank && (b = !0,
            y = YE(v, [1, v.shape[0], v.shape[1], v.shape[2]])),
            Ik(4 === y.rank, (function() {
                return "Error in fused depthwiseConv2d: input must be rank 4, but got rank ".concat(y.rank, ".")
            }
            )),
            Ik(4 === g.rank, (function() {
                return "Error in fused depthwiseConv2d: filter must be rank 4, but got rank ".concat(g.rank, ".")
            }
            )),
            Ik(y.shape[3] === g.shape[2], (function() {
                return "Error in fused depthwiseConv2d: number of input channels (".concat(y.shape[3], ") must match the inChannels dimension in filter ").concat(g.shape[2], ".")
            }
            )),
            null == c && (c = [1, 1]),
            Ik(cI(a, c), (function() {
                return "Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ".concat(a, " and dilations '").concat(c, "'")
            }
            )),
            null != l && Ik(Ok(o), (function() {
                return "Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ".concat(l, " but got pad ").concat(o, ".")
            }
            ));
            var x, w, k = tI(y.shape, g.shape, a, c, o, l, !0);
            null != f && (t = Uy(XC(x = sE(f, "bias", "fused conv2d"), v), 1),
            x = t[0],
            VI(k.outShape, x.shape)),
            null != h && (w = sE(h, "prelu weights", "fused depthwiseConv2d"));
            var C = function(e, t) {
                Ik(uI(c), (function() {
                    return "Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '".concat(c, "'")
                }
                ));
                var n = Uy(t, 4)
                  , r = n[0]
                  , i = n[1]
                  , s = n[2]
                  , u = n[3]
                  , f = mN(e, s, d)
                  , p = wN(i.shape, f, r, a, o, c, l)
                  , h = xN(i, f, r.shape, a, o, c, l);
                return null != u ? [p, h, vN(x, f)] : [p, h]
            }
              , E = function(e) {
                return e.fusedDepthwiseConv2D({
                    input: y,
                    filter: g,
                    convInfo: k,
                    bias: x,
                    activation: d,
                    preluActivationWeights: w
                })
            }
              , S = {
                x: y,
                filter: g,
                bias: x,
                preluActivationWeights: w
            }
              , I = {
                strides: a,
                pad: o,
                dataFormat: s,
                dilations: c,
                dimRoundingMode: l,
                activation: d
            };
            return null == f ? bT((function(e, t, n) {
                var r = eE.runKernelFunc(E, S, null, "FusedDepthwiseConv2D", I);
                return n([t, e, r]),
                b && (r = YE(r, [r.shape[1], r.shape[2], r.shape[3]])),
                {
                    value: r,
                    gradFunc: C
                }
            }
            ))(y, g) : bT((function(e, t, n, r) {
                var a = eE.runKernelFunc(E, S, null, "FusedDepthwiseConv2D", I);
                return r([t, e, a, n]),
                b && (a = YE(a, [a.shape[1], a.shape[2], a.shape[3]])),
                {
                    value: a,
                    gradFunc: C
                }
            }
            ))(y, g, x)
        }
    })
      , CN = cE({
        fusedMatMul_: function(e) {
            var t, n = e.a, r = e.b, a = e.transposeA, o = void 0 !== a && a, i = e.transposeB, s = void 0 !== i && i, u = e.bias, c = e.activation, l = void 0 === c ? "linear" : c, f = e.preluActivationWeights;
            if (!1 === yN(eE.state.gradientDepth, l)) {
                var p = $E(n, r, o, s);
                return null != u && (p = TS(p, u)),
                gN(p, l, f)
            }
            var d = sE(n, "a", "fused matMul")
              , h = sE(r, "b", "fused matMul")
              , m = Uy(XC(d, h), 2);
            d = m[0],
            h = m[1];
            var v = o ? d.shape[d.rank - 2] : d.shape[d.rank - 1]
              , g = s ? h.shape[h.rank - 1] : h.shape[h.rank - 2]
              , y = o ? d.shape[d.rank - 1] : d.shape[d.rank - 2]
              , b = s ? h.shape[h.rank - 2] : h.shape[h.rank - 1]
              , x = d.shape.slice(0, -2)
              , w = h.shape.slice(0, -2)
              , k = _k(x)
              , C = _k(w);
            Ik(d.rank >= 2 && h.rank >= 2 && d.rank === h.rank, (function() {
                return "Error in fused matMul: inputs must have the same rank of at least 2, got ranks ".concat(d.rank, " and ").concat(h.rank, ".")
            }
            )),
            Ik(Rk(x, w), (function() {
                return "Error in fused matMul: outer dimensions (".concat(x, ") and (").concat(w, ") of Tensors with shapes ").concat(d.shape, " and ").concat(h.shape, " must match.")
            }
            )),
            Ik(v === g, (function() {
                return "Error in fused matMul: inner shapes (".concat(v, ") and (").concat(g, ") of Tensors with shapes ").concat(d.shape, " and ").concat(h.shape, " and transposeA=").concat(o, " and transposeB=").concat(s, " must match.")
            }
            ));
            var E, S, I = d.shape.slice(0, -2).concat([y, b]), T = YE(d, o ? [k, v, y] : [k, y, v]), A = YE(h, s ? [C, b, g] : [C, g, b]);
            null != u && (t = Uy(XC(E = sE(u, "bias", "fused matMul"), d), 1),
            E = t[0],
            VI(I, E.shape)),
            null != f && (S = sE(f, "prelu weights", "fused matMul"));
            var N = function(e, t) {
                var n, r, a = Uy(t, 4), i = a[0], c = a[1], f = a[2], p = a[3], d = mN(YE(e, f.shape), f, l);
                return o || s ? !o && s ? (n = $E(d, c, !1, !1),
                r = $E(d, i, !0, !1)) : o && !s ? (n = $E(c, d, !1, !0),
                r = $E(i, d, !1, !1)) : (n = $E(c, d, !0, !0),
                r = $E(d, i, !0, !0)) : (n = $E(d, c, !1, !0),
                r = $E(i, d, !0, !1)),
                null != u ? [n, r, vN(p, d)] : [n, r]
            }
              , _ = function(e) {
                return e.fusedBatchMatMul({
                    a: T,
                    b: A,
                    transposeA: o,
                    transposeB: s,
                    bias: E,
                    activation: l,
                    preluActivationWeights: S
                })
            }
              , R = {
                a: T,
                b: A,
                bias: E,
                preluActivationWeights: S
            }
              , O = {
                transposeA: o,
                transposeB: s,
                activation: l
            };
            return null == u ? bT((function(e, t, n) {
                var r = eE.runKernelFunc(_, R, null, "_FusedMatMul", O);
                return n([e, t, r]),
                {
                    value: YE(r, I),
                    gradFunc: N
                }
            }
            ))(T, A) : bT((function(e, t, n, r) {
                var a = eE.runKernelFunc(_, R, null, "_FusedMatMul", O);
                return r([e, t, a, n]),
                {
                    value: YE(a, I),
                    gradFunc: N
                }
            }
            ))(T, A, E)
        }
    })
      , EN = cE({
        cropAndResize_: function(e, t, n, r, a, o) {
            var i = sE(e, "image", "cropAndResize")
              , s = sE(t, "boxes", "cropAndResize", "float32")
              , u = sE(n, "boxInd", "cropAndResize", "int32");
            a = a || "bilinear",
            o = o || 0;
            var c = s.shape[0];
            Ik(4 === i.rank, (function() {
                return "Error in cropAndResize: image must be rank 4,but got rank ".concat(i.rank, ".")
            }
            )),
            Ik(2 === s.rank && 4 === s.shape[1], (function() {
                return "Error in cropAndResize: boxes must be have size [".concat(c, ",4] but had shape ").concat(s.shape, ".")
            }
            )),
            Ik(1 === u.rank && u.shape[0] === c, (function() {
                return "Error in cropAndResize: boxInd must be have size [".concat(c, "] but had shape ").concat(s.shape, ".")
            }
            )),
            Ik(2 === r.length, (function() {
                return "Error in cropAndResize: cropSize must be of length 2, but got length ".concat(r.length, ".")
            }
            )),
            Ik(r[0] >= 1 && r[1] >= 1, (function() {
                return "cropSize must be atleast [1,1], but was ".concat(r)
            }
            )),
            Ik("bilinear" === a || "nearest" === a, (function() {
                return "method must be bilinear or nearest, but was ".concat(a)
            }
            ));
            var l = {
                image: i,
                boxes: s,
                boxInd: u
            }
              , f = {
                method: a,
                extrapolationValue: o,
                cropSize: r
            };
            return eE.runKernelFunc((function(e) {
                return e.cropAndResize(i, s, u, r, a, o)
            }
            ), l, null, "CropAndResize", f)
        }
    })
      , SN = cE({
        flipLeftRight_: function(e) {
            var t = sE(e, "image", "flipLeftRight", "float32");
            Ik(4 === t.rank, (function() {
                return "Error in flipLeftRight: image must be rank 4,but got rank ".concat(t.rank, ".")
            }
            ));
            var n = {
                image: t
            };
            return eE.runKernel("FlipLeftRight", n, {})
        }
    })
      , IN = cE({
        rotateWithOffset_: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
              , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5
              , a = sE(e, "image", "rotateWithOffset", "float32");
            Ik(4 === a.rank, (function() {
                return "Error in rotateWithOffset: image must be rank 4,but got rank ".concat(a.rank, ".")
            }
            ));
            var o = {
                image: a
            }
              , i = {
                radians: t,
                fillValue: n,
                center: r
            };
            return eE.runKernel("RotateWithOffset", o, i)
        }
    });
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function TN(e, t, n, r, a, o) {
        null == r && (r = .5),
        null == a && (a = Number.NEGATIVE_INFINITY),
        null == o && (o = 0);
        var i = e.shape[0];
        return n = Math.min(n, i),
        Ik(0 <= r && r <= 1, (function() {
            return "iouThreshold must be in [0, 1], but was '".concat(r, "'")
        }
        )),
        Ik(2 === e.rank, (function() {
            return "boxes must be a 2D tensor, but was of rank '".concat(e.rank, "'")
        }
        )),
        Ik(4 === e.shape[1], (function() {
            return "boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1])
        }
        )),
        Ik(1 === t.rank, (function() {
            return "scores must be a 1D tensor"
        }
        )),
        Ik(t.shape[0] === i, (function() {
            return "scores has incompatible shape with boxes. Expected ".concat(i, ", but was ").concat(t.shape[0])
        }
        )),
        Ik(0 <= o && o <= 1, (function() {
            return "softNmsSigma must be in [0, 1], but was '".concat(o, "'")
        }
        )),
        {
            maxOutputSize: n,
            iouThreshold: r,
            scoreThreshold: a,
            softNmsSigma: o
        }
        /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    var AN = cE({
        nonMaxSuppression_: function(e, t, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5
              , a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : Number.NEGATIVE_INFINITY
              , o = sE(e, "boxes", "nonMaxSuppression")
              , i = sE(t, "scores", "nonMaxSuppression")
              , s = TN(o, i, n, r, a);
            n = s.maxOutputSize,
            r = s.iouThreshold,
            a = s.scoreThreshold;
            var u = {
                maxOutputSize: n,
                iouThreshold: r,
                scoreThreshold: a
            };
            return eE.runKernelFunc((function(e) {
                return e.nonMaxSuppression(o, i, n, r, a)
            }
            ), {
                boxes: o,
                scores: i
            }, null, "NonMaxSuppressionV3", u)
        }
    });
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function NN(e, t, n) {
        var r = function(e, t, n) {
            return function(e, t, n) {
                for (var r = 0, a = e.length, o = 0, i = !1; r < a; ) {
                    var s = n(t, e[o = r + (a - r >>> 1)]);
                    s > 0 ? r = o + 1 : (a = o,
                    i = !s)
                }
                return i ? r : -r - 1
            }/**
	     * @license
	     * Copyright 2020 Google LLC. All Rights Reserved.
	     * Licensed under the Apache License, Version 2.0 (the "License");
	     * you may not use this file except in compliance with the License.
	     * You may obtain a copy of the License at
	     *
	     * http://www.apache.org/licenses/LICENSE-2.0
	     *
	     * Unless required by applicable law or agreed to in writing, software
	     * distributed under the License is distributed on an "AS IS" BASIS,
	     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	     * See the License for the specific language governing permissions and
	     * limitations under the License.
	     * =============================================================================
	     */
            (e, t, n || _N)
        }(e, t, n)
          , a = r < 0 ? -(r + 1) : r;
        e.splice(a, 0, t)
    }
    function _N(e, t) {
        return e > t ? 1 : e < t ? -1 : 0
    }
    function RN(e, t, n, r, a) {
        return BN(e, t, n, r, a, 0).selectedIndices
    }
    function ON(e, t, n, r, a, o) {
        return BN(e, t, n, r, a, 0, !1, o, !0)
    }
    function DN(e, t, n, r, a, o) {
        return BN(e, t, n, r, a, o, !0)
    }
    function BN(e, t, n, r, a, o) {
        for (var i = arguments.length > 6 && void 0 !== arguments[6] && arguments[6], s = arguments.length > 7 && void 0 !== arguments[7] && arguments[7], u = arguments.length > 8 && void 0 !== arguments[8] && arguments[8], c = [], l = 0; l < t.length; l++)
            t[l] > a && c.push({
                score: t[l],
                boxIndex: l,
                suppressBeginIndex: 0
            });
        c.sort(PN);
        for (var f = o > 0 ? -.5 / o : 0, p = [], d = []; p.length < n && c.length > 0; ) {
            var h = c.pop()
              , m = h.score
              , v = h.boxIndex
              , g = h.suppressBeginIndex;
            if (m < a)
                break;
            for (var y = !1, b = p.length - 1; b >= g; --b) {
                var x = FN(e, v, p[b]);
                if (x >= r) {
                    y = !0;
                    break
                }
                if (h.score = h.score * MN(r, f, x),
                h.score <= a)
                    break
            }
            h.suppressBeginIndex = p.length,
            y || (h.score === m ? (p.push(v),
            d.push(h.score)) : h.score > a && NN(c, h, PN))
        }
        var w = p.length
          , k = n - w;
        s && k > 0 && (p.push.apply(p, Vy(new Array(k).fill(0))),
        d.push.apply(d, Vy(new Array(k).fill(0))));
        var C = {
            selectedIndices: fA(p, "int32")
        };
        return i && (C.selectedScores = fA(d, "float32")),
        u && (C.validOutputs = fT(w, "int32")),
        C
    }
    function FN(e, t, n) {
        var r = e.subarray(4 * t, 4 * t + 4)
          , a = e.subarray(4 * n, 4 * n + 4)
          , o = Math.min(r[0], r[2])
          , i = Math.min(r[1], r[3])
          , s = Math.max(r[0], r[2])
          , u = Math.max(r[1], r[3])
          , c = Math.min(a[0], a[2])
          , l = Math.min(a[1], a[3])
          , f = Math.max(a[0], a[2])
          , p = Math.max(a[1], a[3])
          , d = (s - o) * (u - i)
          , h = (f - c) * (p - l);
        if (d <= 0 || h <= 0)
            return 0;
        var m = Math.max(o, c)
          , v = Math.max(i, l)
          , g = Math.min(s, f)
          , y = Math.min(u, p)
          , b = Math.max(g - m, 0) * Math.max(y - v, 0);
        return b / (d + h - b)
    }
    function MN(e, t, n) {
        var r = Math.exp(t * n * n);
        return n <= e ? r : 0
    }
    function PN(e, t) {
        return e.score - t.score || e.score === t.score && t.boxIndex - e.boxIndex
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var LN = function() {
        var e = Ty(regeneratorRuntime.mark((function e(t, n, r) {
            var a, o, i, s, u, c, l, f = arguments;
            return regeneratorRuntime.wrap((function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return a = f.length > 3 && void 0 !== f[3] ? f[3] : .5,
                        o = f.length > 4 && void 0 !== f[4] ? f[4] : Number.NEGATIVE_INFINITY,
                        i = sE(t, "boxes", "nonMaxSuppressionAsync"),
                        s = sE(n, "scores", "nonMaxSuppressionAsync"),
                        u = TN(i, s, r, a, o),
                        r = u.maxOutputSize,
                        a = u.iouThreshold,
                        o = u.scoreThreshold,
                        e.next = 6,
                        Promise.all([i.data(), s.data()]);
                    case 6:
                        return c = e.sent,
                        l = RN(c[0], c[1], r, a, o),
                        e.abrupt("return", (i !== t && i.dispose(),
                        s !== n && s.dispose(),
                        l));
                    case 9:
                    case "end":
                        return e.stop()
                    }
            }
            ), e)
        }
        )));
        return function(t, n, r) {
            return e.apply(this, arguments)
        }
    }()
      , UN = cE({
        nonMaxSuppressionWithScore_: function(e, t, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5
              , a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : Number.NEGATIVE_INFINITY
              , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0
              , i = sE(e, "boxes", "nonMaxSuppression")
              , s = sE(t, "scores", "nonMaxSuppression")
              , u = TN(i, s, n, r, a, o)
              , c = {
                boxes: i,
                scores: s
            }
              , l = {
                maxOutputSize: n = u.maxOutputSize,
                iouThreshold: r = u.iouThreshold,
                scoreThreshold: a = u.scoreThreshold,
                softNmsSigma: o = u.softNmsSigma
            }
              , f = eE.runKernel("NonMaxSuppressionV5", c, l);
            return {
                selectedIndices: f[0],
                selectedScores: f[1]
            }
        }
    })
      , VN = function() {
        var e = Ty(regeneratorRuntime.mark((function e(t, n, r) {
            var a, o, i, s, u, c, l, f, p = arguments;
            return regeneratorRuntime.wrap((function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return a = p.length > 3 && void 0 !== p[3] ? p[3] : .5,
                        o = p.length > 4 && void 0 !== p[4] ? p[4] : Number.NEGATIVE_INFINITY,
                        i = p.length > 5 && void 0 !== p[5] ? p[5] : 0,
                        s = sE(t, "boxes", "nonMaxSuppressionAsync"),
                        u = sE(n, "scores", "nonMaxSuppressionAsync"),
                        c = TN(s, u, r, a, o, i),
                        r = c.maxOutputSize,
                        a = c.iouThreshold,
                        o = c.scoreThreshold,
                        i = c.softNmsSigma,
                        e.next = 7,
                        Promise.all([s.data(), u.data()]);
                    case 7:
                        return l = e.sent,
                        f = DN(l[0], l[1], r, a, o, i),
                        e.abrupt("return", (s !== t && s.dispose(),
                        u !== n && u.dispose(),
                        f));
                    case 10:
                    case "end":
                        return e.stop()
                    }
            }
            ), e)
        }
        )));
        return function(t, n, r) {
            return e.apply(this, arguments)
        }
    }()
      , zN = cE({
        nonMaxSuppressionPadded_: function(e, t, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5
              , a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : Number.NEGATIVE_INFINITY
              , o = arguments.length > 5 && void 0 !== arguments[5] && arguments[5]
              , i = sE(e, "boxes", "nonMaxSuppression")
              , s = sE(t, "scores", "nonMaxSuppression")
              , u = TN(i, s, n, r, a, null)
              , c = {
                boxes: i,
                scores: s
            }
              , l = {
                maxOutputSize: u.maxOutputSize,
                iouThreshold: u.iouThreshold,
                scoreThreshold: u.scoreThreshold,
                padToMaxOutputSize: o
            }
              , f = eE.runKernel("NonMaxSuppressionV4", c, l);
            return {
                selectedIndices: f[0],
                validOutputs: f[1]
            }
        }
    })
      , WN = function() {
        var e = Ty(regeneratorRuntime.mark((function e(t, n, r) {
            var a, o, i, s, u, c, l, f, p, d, h, m, v, g, y = arguments;
            return regeneratorRuntime.wrap((function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return a = y.length > 3 && void 0 !== y[3] ? y[3] : .5,
                        o = y.length > 4 && void 0 !== y[4] ? y[4] : Number.NEGATIVE_INFINITY,
                        i = y.length > 5 && void 0 !== y[5] && y[5],
                        s = sE(t, "boxes", "nonMaxSuppressionAsync"),
                        u = sE(n, "scores", "nonMaxSuppressionAsync"),
                        c = TN(s, u, r, a, o, null),
                        l = c.maxOutputSize,
                        f = c.iouThreshold,
                        p = c.scoreThreshold,
                        e.next = 11,
                        Promise.all([s.data(), u.data()]);
                    case 11:
                        return d = e.sent,
                        h = Uy(d, 2),
                        m = h[0],
                        v = h[1],
                        g = ON(m, v, l, f, p, i),
                        e.abrupt("return", (s !== t && s.dispose(),
                        u !== n && u.dispose(),
                        g));
                    case 17:
                    case "end":
                        return e.stop()
                    }
            }
            ), e)
        }
        )));
        return function(t, n, r) {
            return e.apply(this, arguments)
        }
    }()
      , jN = cE({
        resizeBilinear_: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = sE(e, "images", "resizeBilinear");
            Ik(3 === r.rank || 4 === r.rank, (function() {
                return "Error in resizeBilinear: x must be rank 3 or 4, but got rank ".concat(r.rank, ".")
            }
            )),
            Ik(2 === t.length, (function() {
                return "Error in resizeBilinear: new shape must 2D, but got shape ".concat(t, ".")
            }
            ));
            var a = r
              , o = !1;
            3 === r.rank && (o = !0,
            a = YE(r, [1, r.shape[0], r.shape[1], r.shape[2]]));
            var i = Uy(t, 2)
              , s = i[0]
              , u = i[1]
              , c = {
                images: a
            }
              , l = {
                alignCorners: n,
                size: t
            }
              , f = eE.runKernelFunc((function(e, t) {
                return t([a]),
                e.resizeBilinear(a, s, u, n)
            }
            ), c, null, "ResizeBilinear", l);
            return o ? YE(f, [f.shape[1], f.shape[2], f.shape[3]]) : f
        }
    })
      , HN = cE({
        resizeNearestNeighbor_: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
              , r = sE(e, "images", "resizeNearestNeighbor");
            Ik(3 === r.rank || 4 === r.rank, (function() {
                return "Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ".concat(r.rank, ".")
            }
            )),
            Ik(2 === t.length, (function() {
                return "Error in resizeNearestNeighbor: new shape must 2D, but got shape ".concat(t, ".")
            }
            )),
            Ik("float32" === r.dtype || "int32" === r.dtype, (function() {
                return "`images` must have `int32` or `float32` as dtype"
            }
            ));
            var a = r
              , o = !1;
            3 === r.rank && (o = !0,
            a = YE(r, [1, r.shape[0], r.shape[1], r.shape[2]]));
            var i = Uy(t, 2)
              , s = i[0]
              , u = i[1]
              , c = {
                images: a
            }
              , l = {
                alignCorners: n,
                size: t
            }
              , f = eE.runKernelFunc((function(e, t) {
                return t([a]),
                e.resizeNearestNeighbor(a, s, u, n)
            }
            ), c, null, "ResizeNearestNeighbor", l);
            return o ? YE(f, [f.shape[1], f.shape[2], f.shape[3]]) : f
        }
    })
      , GN = {
        flipLeftRight: SN,
        resizeNearestNeighbor: HN,
        resizeBilinear: jN,
        rotateWithOffset: IN,
        cropAndResize: EN,
        nonMaxSuppression: AN,
        nonMaxSuppressionAsync: LN,
        nonMaxSuppressionWithScore: UN,
        nonMaxSuppressionWithScoreAsync: VN,
        nonMaxSuppressionPadded: zN,
        nonMaxSuppressionPaddedAsync: WN
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function KN(e, t, n) {
        return [n * ("number" == typeof e ? e : e[0]), t * ("number" == typeof e ? e : e[1])]
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function qN(e, t, n) {
        var r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3]
          , a = [];
        if (r)
            (a = a.concat(t.slice(0))).push(e[0] / n),
            a = a.concat(e.slice(1));
        else {
            a = a.concat(e[0]);
            for (var o = t.length, i = 0; i < o; ++i)
                a = a.concat([e[i + 1] / t[i], t[i]]);
            a = a.concat(e.slice(o + 1))
        }
        return a
    }
    function XN(e, t) {
        var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]
          , r = [];
        if (n) {
            r.push(t);
            for (var a = t + 1; a < e; ++a)
                a <= 2 * t ? (r.push(a),
                r.push(a - (t + 1))) : r.push(a)
        } else {
            for (var o = [], i = [], s = 1; s < e; ++s)
                s >= 2 * t + 1 || s % 2 == 1 ? i.push(s) : o.push(s);
            r.push.apply(r, o),
            r.push(0),
            r.push.apply(r, i)
        }
        return r
    }
    function QN(e, t, n) {
        var r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3]
          , a = [];
        r ? a.push(e[0] / n) : a.push(e[0] * n);
        for (var o = 1; o < e.length; ++o)
            o <= t.length ? r ? a.push(t[o - 1] * e[o]) : a.push(e[o] / t[o - 1]) : a.push(e[o]);
        return a
    }
    function YN(e, t) {
        for (var n = [0], r = 0; r < t; ++r)
            n.push(e[r][0]);
        return n
    }
    function $N(e, t, n) {
        for (var r = e.slice(0, 1), a = 0; a < n; ++a)
            r.push(e[a + 1] - t[a][0] - t[a][1]);
        return r
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var ZN = 1.0507009873554805;
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function JN() {
        var e;
        oC().getBool("IS_TEST") || (e = console).warn.apply(e, arguments)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function e_(e, t) {
        if (e.length !== t.length)
            throw new Error("Cannot merge real and imag arrays of different lengths. real:".concat(e.length, ", imag: ").concat(t.length, "."));
        for (var n = new Float32Array(2 * e.length), r = 0; r < n.length; r += 2)
            n[r] = e[r / 2],
            n[r + 1] = t[r / 2];
        return n
    }
    function t_(e) {
        for (var t = new Float32Array(e.length / 2), n = new Float32Array(e.length / 2), r = 0; r < e.length; r += 2)
            t[r / 2] = e[r],
            n[r / 2] = e[r + 1];
        return {
            real: t,
            imag: n
        }
    }
    function n_(e) {
        for (var t = Math.ceil(e.length / 4), n = new Float32Array(t), r = new Float32Array(t), a = 0; a < e.length; a += 4)
            n[Math.floor(a / 4)] = e[a],
            r[Math.floor(a / 4)] = e[a + 1];
        return {
            real: n,
            imag: r
        }
    }
    function r_(e) {
        for (var t = Math.floor(e.length / 4), n = new Float32Array(t), r = new Float32Array(t), a = 2; a < e.length; a += 4)
            n[Math.floor(a / 4)] = e[a],
            r[Math.floor(a / 4)] = e[a + 1];
        return {
            real: n,
            imag: r
        }
    }
    function a_(e, t) {
        return {
            real: e[2 * t],
            imag: e[2 * t + 1]
        }
    }
    function o_(e, t, n, r) {
        e[2 * r] = t,
        e[2 * r + 1] = n
    }
    function i_(e, t) {
        for (var n = new Float32Array(e / 2), r = new Float32Array(e / 2), a = 0; a < Math.ceil(e / 2); a++) {
            var o = (t ? 2 : -2) * Math.PI * (a / e);
            n[a] = Math.cos(o),
            r[a] = Math.sin(o)
        }
        return {
            real: n,
            imag: r
        }
    }
    function s_(e, t, n) {
        var r = (n ? 2 : -2) * Math.PI * (e / t);
        return {
            real: Math.cos(r),
            imag: Math.sin(r)
        }
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function u_(e, t) {
        return eE.makeTensorFromDataId(e.dataId, t, e.dtype)
    }
    function c_(e, t, n) {
        var r = (t - e) / (n - 1)
          , a = Zk(n, "float32");
        a[0] = e;
        for (var o = 1; o < a.length; o++)
            a[o] = a[o - 1] + r;
        return fA(a, "float32")
    }
    var l_ = Object.freeze({
        __proto__: null,
        slice_util: xS,
        segment_util: nT,
        castTensor: function(e, t, n) {
            if ("complex64" === t) {
                if ("complex64" === e.dtype)
                    return e.clone();
                var r = FT(e.shape)
                  , a = zE(e, "float32")
                  , o = n.complex(a, r);
                return r.dispose(),
                a.dispose(),
                o
            }
            if (!zk(e.dtype, t))
                return eE.makeTensorFromDataId(e.dataId, e.shape, t);
            if ("complex64" === e.dtype) {
                var i = n.real(e)
                  , s = zE(i, t);
                return i.dispose(),
                s
            }
            if ("int32" === t)
                return n.int(e);
            if ("bool" === t) {
                var u = fT(0, e.dtype)
                  , c = n.notEqual(e, u);
                return u.dispose(),
                c
            }
            throw new Error("Error in Cast: failed to cast ".concat(e.dtype, " to ").concat(t))
        },
        reshapeTensor: u_,
        linspaceImpl: c_,
        upcastType: KC,
        axesAreInnerMostDims: FS,
        combineLocations: MS,
        computeOutAndReduceShapes: PS,
        expandShapeToKeepDim: LS,
        assertAxesAreInnerMostDims: US,
        getAxesPermutation: VS,
        getUndoAxesPermutation: zS,
        getInnerMostAxes: WS,
        getBroadcastDims: LI,
        getReductionAxes: UI,
        assertAndGetBroadcastShape: VI,
        assertParamsConsistent: dI,
        computeOutShape: hI,
        computeDilation2DInfo: ZS,
        computePool2DInfo: JS,
        computePool3DInfo: eI,
        computeConv2DInfo: tI,
        computeConv3DInfo: nI,
        computeDefaultPad: rI,
        tupleValuesAreOne: uI,
        eitherStridesOrDilationsAreOne: cI,
        convertConv2DDataFormat: lI,
        getFusedDyActivation: mN,
        getFusedBiasGradient: vN,
        applyActivation: gN,
        shouldFuse: yN,
        PARALLELIZE_THRESHOLD: 30,
        computeOptimalWindowSize: eT,
        getImageCenter: KN,
        getReshaped: qN,
        getPermuted: XN,
        getReshapedPermuted: QN,
        getSliceBeginCoords: YN,
        getSliceSize: $N,
        prepareAndValidate: tS,
        validateUpdateShape: nS,
        validateInput: rS,
        calculateShapes: aS,
        SELU_SCALEALPHA: 1.7580993408473768,
        SELU_SCALE: ZN,
        ERF_P: .3275911,
        ERF_A1: .254829592,
        ERF_A2: -.284496736,
        ERF_A3: 1.421413741,
        ERF_A4: -1.453152027,
        ERF_A5: 1.061405429,
        warn: JN,
        log: function() {
            var e;
            oC().getBool("IS_TEST") || (e = console).log.apply(e, arguments)
        },
        mergeRealAndImagArrays: e_,
        splitRealAndImagArrays: t_,
        complexWithEvenIndex: n_,
        complexWithOddIndex: r_,
        getComplexWithIndex: a_,
        assignToTypedArray: o_,
        exponents: i_,
        exponent: s_,
        prepareSplitSize: NA
    });
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function f_(e, t, n) {
        var r = new Array(e.rank).fill(0)
          , a = e.shape.slice();
        return t.map((function(t) {
            var o = Vy(a);
            o[n] = t;
            var i = gI(e, r, o);
            return r[n] += t,
            i
        }
        ))
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function p_(e, t) {
        for (var n = new Array(e.rank), r = 0; r < n.length; r++)
            n[r] = e.shape[r] * t[r];
        for (var a = VE(n, e.dtype), o = 0; o < a.values.length; ++o) {
            for (var i = a.indexToLoc(o), s = new Array(e.rank), u = 0; u < s.length; u++)
                s[u] = i[u] % e.shape[u];
            var c = e.locToIndex(s);
            a.values[o] = e.values[c]
        }
        return a.toTensor()
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function d_(e, t, n, r, a) {
        for (var o = t[t.length - 1], i = e.length / o, s = o, u = Uk(n, i * r), c = Uk("int32", i * r), l = 0; l < i; l++) {
            for (var f = l * s, p = e.subarray(f, f + s), d = [], h = 0; h < p.length; h++)
                d.push({
                    value: p[h],
                    index: h
                });
            d.sort((function(e, t) {
                return t.value - e.value
            }
            ));
            for (var m = l * r, v = u.subarray(m, m + r), g = c.subarray(m, m + r), y = 0; y < r; y++)
                v[y] = d[y].value,
                g[y] = d[y].index
        }
        var b = t.slice();
        return b[b.length - 1] = r,
        [pE(u, b, n), pE(c, b, "int32")]
        /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    var h_ = {
        kernelName: "Abs",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(e, MA(zE(n, "float32"), -1))
                }
            }
        }
    }
      , m_ = {
        kernelName: "Acos",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    var t = WT(zE(n, "float32"))
                      , r = OA(ET(fT(1), t));
                    return xT(NS(e, r))
                }
            }
        }
    }
      , v_ = {
        kernelName: "Acosh",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    var t = OA(ET(WT(zE(n, "float32")), 1));
                    return NS(e, t)
                }
            }
        }
    }
      , g_ = {
        kernelName: lC,
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1]
              , o = VI(r.shape, a.shape);
            return {
                a: function() {
                    var t = e
                      , n = UI(r.shape, o);
                    return n.length > 0 && (t = ST(t, n)),
                    YE(t, r.shape)
                },
                b: function() {
                    var t = e
                      , n = UI(a.shape, o);
                    return n.length > 0 && (t = ST(t, n)),
                    YE(t, a.shape)
                }
            }
        }
    }
      , y_ = {
        kernelName: "ArgMax",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return jI(n)
                }
            }
        }
    }
      , b_ = {
        kernelName: "ArgMin",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return jI(n)
                }
            }
        }
    }
      , x_ = {
        kernelName: "Asin",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return NS(e, OA(ET(fT(1), WT(zE(n, "float32")))))
                }
            }
        }
    }
      , w_ = {
        kernelName: "Asinh",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    var t = OA(TS(fT(1), WT(zE(n, "float32"))));
                    return NS(e, t)
                }
            }
        }
    }
      , k_ = {
        kernelName: "Atan2",
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1]
              , o = VI(r.shape, a.shape);
            return {
                a: function() {
                    var t = TS(WT(r), WT(a))
                      , n = _S(e, NS(a, t))
                      , i = UI(r.shape, o);
                    return i.length > 0 && (n = ST(n, i)),
                    YE(n, r.shape)
                },
                b: function() {
                    var t = TS(WT(r), WT(a))
                      , n = xT(_S(e, NS(r, t)))
                      , i = UI(a.shape, o);
                    return i.length > 0 && (n = ST(n, i)),
                    YE(n, a.shape)
                }
            }
        }
    }
      , C_ = {
        kernelName: "Atan",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return NS(e, TS(WT(zE(n, "float32")), 1))
                }
            }
        }
    }
      , E_ = {
        kernelName: "Atanh",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return NS(e, ET(fT(1), WT(zE(n, "float32"))))
                }
            }
        }
    }
      , S_ = cE({
        avgPool3dBackprop_: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e, t, n, r) {
            var a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [1, 1, 1]
              , o = arguments.length > 5 ? arguments[5] : void 0
              , i = arguments.length > 6 ? arguments[6] : void 0
              , s = sE(e, "dy", "avgPool3dBackprop")
              , u = sE(t, "input", "avgPool3dBackprop")
              , c = s
              , l = u
              , f = !1;
            4 === u.rank && (f = !0,
            c = YE(s, [1, s.shape[0], s.shape[1], s.shape[2], s.shape[3]]),
            l = YE(u, [1, u.shape[0], u.shape[1], u.shape[2], u.shape[3]])),
            Ik(5 === c.rank, (function() {
                return "Error in avgPool3dBackprop: dy must be rank 5 but got rank ".concat(c.rank, ".")
            }
            )),
            Ik(5 === l.rank, (function() {
                return "Error in avgPool3dBackprop: input must be rank 5 but got rank ".concat(l.rank, ".")
            }
            )),
            Ik(cI(r, a), (function() {
                return "Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ".concat(r, " and dilations '").concat(a, "'")
            }
            )),
            null != i && Ik(Ok(o), (function() {
                return "Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ".concat(i, " but got pad ").concat(o, ".")
            }
            ));
            var p = {
                dy: c,
                input: l
            }
              , d = {
                filterSize: n,
                strides: r,
                dilations: a,
                pad: o,
                dimRoundingMode: i
            }
              , h = eE.runKernelFunc((function(e) {
                var t = eI(l.shape, n, r, a, o, i);
                return e.avgPool3dBackprop(c, l, t)
            }
            ), p, null, "AvgPool3DBackprop", d);
            return f ? YE(h, [h.shape[1], h.shape[2], h.shape[3], h.shape[4]]) : h
        }
    })
      , I_ = {
        kernelName: "AvgPool3D",
        inputsToSave: ["x"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 1)[0]
              , a = n.filterSize
              , o = n.strides
              , i = n.dilations
              , s = n.pad
              , u = n.dimRoundingMode
              , c = null == i ? [1, 1, 1] : i;
            return {
                x: function() {
                    return S_(e, r, a, o, c, s, u)
                }
            }
        }
    }
      , T_ = cE({
        avgPoolBackprop_: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e, t, n, r, a) {
            var o = sE(e, "dy", "avgPoolBackprop")
              , i = sE(t, "input", "avgPoolBackprop");
            Ik(i.rank === o.rank, (function() {
                return "Rank of input (".concat(i.rank, ") does not match rank of dy (").concat(o.rank, ")")
            }
            ));
            var s = i
              , u = o
              , c = !1;
            3 === i.rank && (c = !0,
            s = YE(i, [1, i.shape[0], i.shape[1], i.shape[2]]),
            u = YE(o, [1, o.shape[0], o.shape[1], o.shape[2]])),
            Ik(4 === u.rank, (function() {
                return "Error in avgPoolBackprop: dy must be rank 4 but got rank ".concat(u.rank, ".")
            }
            )),
            Ik(4 === s.rank, (function() {
                return "Error in avgPoolBackprop: input must be rank 4 but got rank ".concat(s.rank, ".")
            }
            ));
            var l = {
                dy: u,
                input: s
            }
              , f = {
                filterSize: n,
                strides: r,
                pad: a
            }
              , p = eE.runKernelFunc((function(e) {
                var t = JS(s.shape, n, r, 1, a);
                return e.avgPoolBackprop(u, s, t)
            }
            ), l, null, "AvgPoolBackprop", f);
            return c ? YE(p, [p.shape[1], p.shape[2], p.shape[3]]) : p
        }
    })
      , A_ = {
        kernelName: "AvgPool",
        inputsToSave: ["x"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 1)[0]
              , a = n.filterSize
              , o = n.strides
              , i = n.pad;
            return {
                x: function() {
                    return T_(e, r, a, o, i)
                }
            }
        }
    }
      , N_ = {
        kernelName: "BatchMatMul",
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 2)
              , a = r[0]
              , o = r[1]
              , i = n.transposeA
              , s = n.transposeB;
            return i || s ? !i && s ? {
                a: function() {
                    return $E(e, o, !1, !1)
                },
                b: function() {
                    return $E(e, a, !0, !1)
                }
            } : i && !s ? {
                a: function() {
                    return $E(o, e, !1, !0)
                },
                b: function() {
                    return $E(a, e, !1, !1)
                }
            } : {
                a: function() {
                    return $E(o, e, !0, !0)
                },
                b: function() {
                    return $E(e, a, !0, !0)
                }
            } : {
                a: function() {
                    return $E(e, o, !1, !0)
                },
                b: function() {
                    return $E(a, e, !0, !1)
                }
            }
        }
    }
      , __ = {
        kernelName: "BatchToSpaceND",
        gradFunc: function(e, t, n) {
            var r = n.blockShape
              , a = n.crops;
            return {
                x: function() {
                    return XT(e, r, a)
                }
            }
        }
    }
      , R_ = {
        kernelName: "BroadcastTo",
        gradFunc: function(e, t, n) {
            for (var r = n, a = r.inputShape, o = r.shape, i = Array.from(o), s = a.length - 1; s >= 0; s--)
                if (a[s] === o[s])
                    i[s] = 1;
                else if (1 !== a[s])
                    throw new Error("broadcastTo(): [".concat(a, "] cannot be broadcast to [").concat(o, "]."));
            for (var u = [], c = 0; c < i.length; c++)
                i[c] > 1 && u.push(c);
            return {
                x: function() {
                    return ST(e, u, !0)
                }
            }
        }
    }
      , O_ = {
        kernelName: "Ceil",
        gradFunc: function(e) {
            return {
                x: function() {
                    return jI(e)
                }
            }
        }
    }
      , D_ = {
        kernelName: "ClipByValue",
        inputsToSave: ["x"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 1)[0]
              , a = n.clipValueMin
              , o = n.clipValueMax;
            return {
                x: function() {
                    return WI(AT(oT(r, a), hT(r, o)), e, jI(e))
                }
            }
        }
    }
      , B_ = {
        kernelName: "Concat",
        saveAllInputs: !0,
        gradFunc: function(e, t, n) {
            var r = t.map((function(e) {
                return e.shape
            }
            ))
              , a = Pk(n.axis, t[0].shape)[0]
              , o = r.map((function(e) {
                return e[a]
            }
            ));
            return _A(e, o, a).map((function(e) {
                return function() {
                    return e
                }
            }
            ))
        }
    }
      , F_ = {
        kernelName: "Conv2D",
        inputsToSave: ["x", "filter"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 2)
              , a = r[0]
              , o = r[1]
              , i = n.dilations
              , s = n.strides
              , u = n.pad
              , c = n.dataFormat;
            return Ik(uI(i), (function() {
                return "Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '".concat(i, "'")
            }
            )),
            {
                x: function() {
                    return AI(a.shape, e, o, s, u, c)
                },
                filter: function() {
                    return hN(a, e, o.shape, s, u, c)
                }
            }
        }
    }
      , M_ = {
        kernelName: "Conv2DBackpropInput",
        inputsToSave: ["dy", "filter"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 2)
              , a = r[0]
              , o = r[1]
              , i = n.strides
              , s = n.pad
              , u = n.dataFormat
              , c = n.dimRoundingMode;
            return {
                dy: function() {
                    return II(e, o, i, s, u, 1, c)
                },
                filter: function() {
                    return hN(e, a, o.shape, i, s, u, c)
                }
            }
        }
    }
      , P_ = cE({
        conv3DBackpropFilter_: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e, t, n, r, a) {
            var o = e;
            4 === e.rank && (o = YE(e, [1, e.shape[0], e.shape[1], e.shape[2], e.shape[3]]));
            var i = t;
            4 === i.rank && (i = YE(t, [1, t.shape[0], t.shape[1], t.shape[2], t.shape[3]])),
            Ik(5 === o.rank, (function() {
                return "Error in conv3dDerFilter: input must be rank 5, but got shape ".concat(o.shape, ".")
            }
            )),
            Ik(5 === i.rank, (function() {
                return "Error in conv3dDerFilter: dy must be rank 5, but got shape ".concat(i.shape, ".")
            }
            )),
            Ik(5 === n.length, (function() {
                return "Error in conv3dDerFilter: filterShape must be length 5, but got ".concat(n, ".")
            }
            )),
            Ik(o.shape[4] === n[3], (function() {
                return "Error in conv3dDerFilter: depth of input ".concat(o.shape[4], ") must match input depth in filter (").concat(n[3], ".")
            }
            )),
            Ik(i.shape[4] === n[4], (function() {
                return "Error in conv3dDerFilter: depth of dy (".concat(i.shape[4], ") must match output depth for filter (").concat(n[4], ").")
            }
            ));
            var s = {
                x: o,
                dy: i
            }
              , u = {
                strides: r,
                pad: a,
                filterShape: n
            };
            return eE.runKernelFunc((function(e) {
                var t = nI(o.shape, n, r, 1, a);
                return e.conv3dDerFilter(o, i, t)
            }
            ), s, null, "Conv3DBackpropFilterV2", u)
        }
    })
      , L_ = {
        kernelName: "Conv3D",
        inputsToSave: ["x", "filter"],
        gradFunc: function(e, t, n) {
            var r = n.dilations
              , a = n.strides
              , o = n.pad;
            Ik(uI(r), (function() {
                return "Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '".concat(r, "'")
            }
            ));
            var i = Uy(t, 2)
              , s = i[0]
              , u = i[1];
            return {
                x: function() {
                    return RI(s.shape, e, u, a, o)
                },
                filter: function() {
                    return P_(s, e, u.shape, a, o)
                }
            }
        }
    }
      , U_ = {
        kernelName: fC,
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(xT(CA(zE(n, "float32"))), e)
                }
            }
        }
    }
      , V_ = {
        kernelName: "Cosh",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(EA(zE(n, "float32")), e)
                }
            }
        }
    }
      , z_ = {
        kernelName: "Cumsum",
        inputsToSave: ["x"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 1)[0]
              , a = n.axis
              , o = n.exclusive
              , i = n.reverse;
            return {
                x: function() {
                    var t = VS([a], r.rank)
                      , n = BI(e, a, o, !i);
                    return null != t && (n = JE(n, t)),
                    n
                }
            }
        }
    }
      , W_ = {
        kernelName: "DepthwiseConv2dNative",
        inputsToSave: ["x", "filter"],
        gradFunc: function(e, t, n) {
            var r = n.dilations
              , a = n.strides
              , o = n.pad
              , i = n.dimRoundingMode
              , s = null == r ? [1, 1] : r;
            Ik(uI(s), (function() {
                return "Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '".concat(s, "'")
            }
            ));
            var u = Uy(t, 2)
              , c = u[0]
              , l = u[1];
            return Ik(4 === c.rank, (function() {
                return "Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ".concat(c.rank, ".")
            }
            )),
            Ik(4 === l.rank, (function() {
                return "Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ".concat(l.rank, ".")
            }
            )),
            Ik(c.shape[3] === l.shape[2], (function() {
                return "Error in gradient of depthwiseConv2d: number of input channels (".concat(c.shape[3], ") must match the inChannels dimension in filter ").concat(l.shape[2], ".")
            }
            )),
            Ik(cI(a, s), (function() {
                return "Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ".concat(a, " and dilations '").concat(s, "'.")
            }
            )),
            null != i && Ik(Ok(o), (function() {
                return "Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ".concat(i, " but got pad ").concat(o, ".")
            }
            )),
            {
                x: function() {
                    return wN(c.shape, e, l, a, o, r, i)
                },
                filter: function() {
                    return xN(c, e, l.shape, a, o, r, i)
                }
            }
        }
    }
      , j_ = {
        kernelName: "Dilation2D",
        inputsToSave: ["x", "filter"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 2)
              , a = r[0]
              , o = r[1]
              , i = {
                x: a,
                filter: o,
                dy: e
            }
              , s = {
                x: a,
                filter: o,
                dy: e
            };
            return {
                x: function() {
                    return eE.runKernel("Dilation2DBackpropInput", i, n)
                },
                filter: function() {
                    return eE.runKernel("Dilation2DBackpropFilter", s, n)
                }
            }
        }
    }
      , H_ = {
        kernelName: pC,
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1]
              , o = VI(r.shape, a.shape);
            return {
                a: function() {
                    var t = NS(e, zE(a, "float32"))
                      , n = UI(r.shape, o);
                    return n.length > 0 ? YE(ST(t, n), r.shape) : t
                },
                b: function() {
                    var t = _S(e, zE(r, "float32"))
                      , n = UI(a.shape, o);
                    n.length > 0 && (t = YE(ST(t, n), a.shape));
                    var i = WT(a);
                    return xT(NS(t, zE(i, "float32")))
                }
            }
        }
    }
      , G_ = {
        kernelName: "Elu",
        outputsToSave: [!0],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0]
              , r = function(t) {
                return t.eluDer(e, n)
            }
              , a = {
                dy: e,
                y: n
            };
            return {
                x: function() {
                    return eE.runKernelFunc(r, a, null, "EluGrad")
                }
            }
        }
    }
      , K_ = {
        kernelName: "Erf",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0]
              , r = _S(XI(xT(WT(n))), 2 / Math.sqrt(Math.PI));
            return {
                x: function() {
                    return _S(e, r)
                }
            }
        }
    }
      , q_ = {
        kernelName: "Exp",
        outputsToSave: [!0],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(e, n)
                }
            }
        }
    }
      , X_ = {
        kernelName: "Expm1",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(e, XI(n))
                }
            }
        }
    }
      , Q_ = {
        kernelName: "Floor",
        gradFunc: function(e) {
            return {
                x: function() {
                    return jI(e)
                }
            }
        }
    }
      , Y_ = {
        kernelName: "FloorDiv",
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1]
              , o = VI(r.shape, a.shape);
            return {
                a: function() {
                    var t = NS(e, zE(a, "float32"))
                      , n = UI(r.shape, o);
                    return n.length > 0 ? YE(ST(t, n), r.shape) : t
                },
                b: function() {
                    var t = _S(e, zE(r, "float32"))
                      , n = UI(a.shape, o);
                    n.length > 0 && (t = YE(ST(t, n), a.shape));
                    var i = WT(a);
                    return xT(NS(t, zE(i, "float32")))
                }
            }
        }
    }
      , $_ = {
        kernelName: "FusedBatchNorm",
        inputsToSave: ["x", "mean", "variance", "scale"],
        gradFunc: function(e, t, n) {
            var r = n.varianceEpsilon
              , a = Uy(t, 4)
              , o = a[0]
              , i = a[1]
              , s = a[2]
              , u = a[3]
              , c = null == u ? fT(1) : u
              , l = UI(i.shape, o.shape)
              , f = [];
            if (1 === i.rank) {
                for (var p = 0; p < o.shape.length - 1; ++p)
                    f.push(o.shape[p]);
                f.push(1)
            }
            var d = ET(o, i)
              , h = _S(e, c)
              , m = yA(TS(s, fT(r)))
              , v = _S(_S(_S(m, m), m), fT(-.5));
            return {
                x: function() {
                    return 1 === i.rank ? YE(_S(_S(e, $I(YE(m, [1, 1, 1, i.shape[0]]), f)), c), o.shape) : YE(_S(_S(e, m), c), o.shape)
                },
                mean: function() {
                    var e = _S(_S(m, fT(-1)), h);
                    return 1 === i.rank && (e = ST(e, l)),
                    YE(e, i.shape)
                },
                variance: function() {
                    var e = _S(_S(v, d), h);
                    return 1 === i.rank && (e = ST(e, l)),
                    YE(e, i.shape)
                },
                scale: function() {
                    var t = _S(d, m)
                      , n = _S(e, t);
                    return 1 === i.rank && (n = ST(n, l)),
                    YE(n, i.shape)
                },
                offset: function() {
                    var t = e;
                    return 1 === i.rank && (t = ST(t, l)),
                    YE(t, i.shape)
                }
            }
        }
    }
      , Z_ = {
        kernelName: "GatherV2",
        inputsToSave: ["x", "indices"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 2)
              , a = r[0]
              , o = r[1]
              , i = n.axis
              , s = Pk(i, a.shape)[0];
            return {
                x: function() {
                    var t = a.shape
                      , n = o.size
                      , r = t.slice(0, s)
                      , u = r.length
                      , c = t.slice(i, t.length).slice(1)
                      , l = c.length
                      , f = J_(0, u)
                      , p = J_(u + 1, u + 1 + l)
                      , d = eR([r, [n], c])
                      , h = YE(e, d)
                      , m = YE(o, [n])
                      , v = eR([[u], f, p])
                      , g = JE(h, v)
                      , y = HA(g, m, a.shape[s])
                      , b = zS(v);
                    return y = JE(y, b),
                    y
                },
                indices: function() {
                    return o
                }
            }
        }
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function J_(e, t) {
        for (var n = [], r = e; r < t; ++r)
            n.push(r);
        return n
    }
    function eR(e) {
        for (var t = [], n = 0; n < e.length; ++n)
            for (var r = 0; r < e[n].length; ++r)
                t.push(e[n][r]);
        return t
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var tR = {
        kernelName: "GreaterEqual",
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1];
            return {
                a: function() {
                    return jI(r)
                },
                b: function() {
                    return jI(a)
                }
            }
        }
    }
      , nR = {
        kernelName: "Identity",
        gradFunc: function(e) {
            return {
                x: function() {
                    return zE(e, "float32")
                }
            }
        }
    }
      , rR = {
        kernelName: "IsFinite",
        gradFunc: function(e) {
            return {
                x: function() {
                    return jI(e)
                }
            }
        }
    }
      , aR = {
        kernelName: "IsInf",
        gradFunc: function(e) {
            return {
                x: function() {
                    return jI(e)
                }
            }
        }
    }
      , oR = {
        kernelName: "IsNan",
        gradFunc: function(e) {
            return {
                x: function() {
                    return jI(e)
                }
            }
        }
    }
      , iR = {
        kernelName: "Log1p",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return NS(e, TS(n, 1))
                }
            }
        }
    }
      , sR = {
        kernelName: "Log",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return NS(e, zE(n, "float32"))
                }
            }
        }
    }
      , uR = {
        kernelName: "LogSoftmax",
        inputsToSave: [],
        outputsToSave: [!0],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 1)[0]
              , a = n.axis;
            return {
                logits: function() {
                    var t = XI(r);
                    return ET(e, _S(ST(e, a, !0), t))
                }
            }
        }
    }
      , cR = cE({
        localResponseNormalizationBackprop_: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e, t, n) {
            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 5
              , a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1
              , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1
              , i = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : .5
              , s = {
                x: e,
                y: t,
                dy: n
            }
              , u = {
                depthRadius: r,
                bias: a,
                alpha: o,
                beta: i
            };
            return eE.runKernelFunc((function(s) {
                return s.LRNGrad(n, e, t, r, a, o, i)
            }
            ), s, null, "LRNBackprop", u)
        }
    })
      , lR = {
        kernelName: "LRN",
        inputsToSave: ["x"],
        outputsToSave: [!0],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 2)
              , a = r[0]
              , o = r[1]
              , i = n.depthRadius
              , s = n.bias
              , u = n.alpha
              , c = n.beta;
            return {
                x: function() {
                    return cR(a, o, e, i, s, u, c)
                }
            }
        }
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function fR(e, t, n, r) {
        return t.rank < n.rank && (t = YE(t, LS(t.shape, r))),
        e.rank < n.rank && (e = YE(e, LS(e.shape, r))),
        {
            x: function() {
                return _S(e, zE(zI(n, t), e.dtype))
            }
        }
        /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    for (var pR, dR, hR = {
        kernelName: dC,
        inputsToSave: ["x"],
        outputsToSave: [!0],
        gradFunc: function(e, t, n) {
            var r = n.reductionIndices
              , a = t[0]
              , o = fR(e, t[1], a, Pk(r, a.shape));
            return {
                x: function() {
                    return o.x()
                }
            }
        }
    }, mR = {
        kernelName: "Maximum",
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1];
            return {
                a: function() {
                    return _S(e, zE(oT(r, a), "float32"))
                },
                b: function() {
                    return _S(e, zE(dT(r, a), "float32"))
                }
            }
        }
    }, vR = cE({
        maxPool3dBackprop_: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e, t, n, r, a) {
            var o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : [1, 1, 1]
              , i = arguments.length > 6 ? arguments[6] : void 0
              , s = arguments.length > 7 ? arguments[7] : void 0
              , u = sE(e, "dy", "maxPool3dBackprop")
              , c = sE(t, "input", "maxPool3dBackprop")
              , l = sE(n, "output", "maxPool3dBackprop")
              , f = u
              , p = c
              , d = l
              , h = !1;
            4 === c.rank && (h = !0,
            f = YE(u, [1, u.shape[0], u.shape[1], u.shape[2], u.shape[3]]),
            p = YE(c, [1, c.shape[0], c.shape[1], c.shape[2], c.shape[3]]),
            d = YE(l, [1, l.shape[0], l.shape[1], l.shape[2], l.shape[3]])),
            Ik(5 === f.rank, (function() {
                return "Error in maxPool3dBackprop: dy must be rank 5 but got rank ".concat(f.rank, ".")
            }
            )),
            Ik(5 === p.rank, (function() {
                return "Error in maxPool3dBackprop: input must be rank 5 but got rank ".concat(p.rank, ".")
            }
            )),
            Ik(5 === d.rank, (function() {
                return "Error in maxPool3dBackprop: output must be rank 5 but got rank ".concat(d.rank, ".")
            }
            )),
            Ik(cI(a, o), (function() {
                return "Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ".concat(a, " and dilations '").concat(o, "'")
            }
            )),
            null != s && Ik(Ok(i), (function() {
                return "Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ".concat(s, " but got pad ").concat(i, ".")
            }
            ));
            var m = {
                dy: f,
                input: p,
                output: d
            }
              , v = {
                filterSize: r,
                strides: a,
                dilations: o,
                pad: i,
                dimRoundingMode: s
            }
              , g = eE.runKernelFunc((function(e) {
                var t = eI(p.shape, r, a, o, i, s);
                return e.maxPool3dBackprop(f, p, d, t)
            }
            ), m, null, "MaxPool3DBackprop", v);
            return h ? YE(g, [g.shape[1], g.shape[2], g.shape[3], g.shape[4]]) : g
        }
    }), gR = {
        kernelName: "MaxPool3D",
        inputsToSave: ["x"],
        outputsToSave: [!0],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 2)
              , a = r[0]
              , o = r[1]
              , i = n.filterSize
              , s = n.strides
              , u = n.dilations
              , c = n.pad
              , l = n.dimRoundingMode
              , f = null == u ? [1, 1, 1] : u;
            return {
                x: function() {
                    return vR(e, a, o, i, s, f, c, l)
                }
            }
        }
    }, yR = cE({
        maxPoolBackprop_: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e, t, n, r, a, o, i) {
            var s = sE(e, "dy", "maxPoolBackprop")
              , u = sE(t, "input", "maxPoolBackprop")
              , c = sE(n, "output", "maxPoolBackprop");
            Ik(u.rank === s.rank, (function() {
                return "Rank of input (".concat(u.rank, ") does not match rank of dy (").concat(s.rank, ")")
            }
            )),
            Ik(4 === s.rank, (function() {
                return "Error in maxPoolBackprop: dy must be rank 4 but got rank ".concat(s.rank, ".")
            }
            )),
            Ik(4 === u.rank, (function() {
                return "Error in maxPoolBackprop: input must be rank 4 but got rank ".concat(u.rank, ".")
            }
            )),
            null != i && Ik(Ok(o), (function() {
                return "Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ".concat(i, " but got pad ").concat(o, ".")
            }
            ));
            var l = {
                dy: s,
                input: u,
                output: c
            }
              , f = {
                filterSize: r,
                strides: a,
                pad: o,
                dimRoundingMode: i
            };
            return eE.runKernelFunc((function(e) {
                var t = JS(u.shape, r, a, 1, o, i);
                return e.maxPoolBackprop(s, u, c, t)
            }
            ), l, null, "MaxPoolBackprop", f)
        }
    }), bR = {
        kernelName: "PadV2",
        inputsToSave: ["x"],
        gradFunc: function(e, t, n) {
            var r = t[0]
              , a = n.paddings.map((function(e) {
                return e[0]
            }
            ));
            return {
                x: function() {
                    return gI(e, a, r.shape)
                }
            }
        }
    }, xR = {
        kernelName: "SpaceToBatchND",
        gradFunc: function(e, t, n) {
            var r = n.blockShape
              , a = n.paddings;
            return {
                x: function() {
                    return bI(e, r, a)
                }
            }
        }
    }, wR = {
        kernelName: "SplitV",
        gradFunc: function(e, t, n) {
            var r = n.axis;
            return {
                x: function() {
                    return mI(e, r)
                }
            }
        }
    }, kR = 0, CR = [h_, m_, v_, g_, {
        kernelName: "AddN",
        saveAllInputs: !0,
        gradFunc: function(e, t) {
            var n = {};
            return t.forEach((function(t, r) {
                n[r] = function() {
                    return e.clone()
                }
            }
            )),
            n
        }
    }, y_, b_, x_, w_, k_, C_, E_, I_, A_, N_, __, R_, {
        kernelName: "Cast",
        gradFunc: function(e) {
            return {
                x: function() {
                    return e.clone()
                }
            }
        }
    }, O_, D_, B_, M_, F_, L_, U_, V_, z_, W_, j_, H_, G_, K_, q_, X_, Y_, Q_, $_, Z_, tR, nR, rR, aR, oR, iR, sR, uR, lR, hR, hR, mR, gR, {
        kernelName: "MaxPool",
        inputsToSave: ["x"],
        outputsToSave: [!0],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 2)
              , a = r[0]
              , o = r[1]
              , i = n.filterSize
              , s = n.strides
              , u = n.pad;
            return {
                x: function() {
                    return yR(e, a, o, i, s, u)
                }
            }
        }
    }, {
        kernelName: "Min",
        inputsToSave: ["x"],
        outputsToSave: [!0],
        gradFunc: function(e, t, n) {
            var r = n.axis
              , a = Uy(t, 2)
              , o = a[0]
              , i = fR(e, a[1], o, Pk(r, o.shape));
            return {
                x: function() {
                    return i.x()
                }
            }
        }
    }, {
        kernelName: "Minimum",
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1];
            return {
                a: function() {
                    return _S(e, zE(hT(r, a), "float32"))
                },
                b: function() {
                    return _S(e, zE(aT(r, a), "float32"))
                }
            }
        }
    }, {
        kernelName: "MirrorPad",
        inputsToSave: ["x"],
        gradFunc: function(e, t, n) {
            var r = t[0]
              , a = n.paddings.map((function(e) {
                return e[0]
            }
            ));
            return {
                x: function() {
                    return gI(e, a, r.shape)
                }
            }
        }
    }, {
        kernelName: "Mod",
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1]
              , o = VI(r.shape, a.shape);
            return {
                a: function() {
                    var t = UI(r.shape, o);
                    return t.length > 0 ? YE(ST(e, t), r.shape) : e
                },
                b: function() {
                    var t = _S(e, xT(JI(NS(r, a))))
                      , n = UI(a.shape, o);
                    return n.length > 0 ? YE(ST(t, n), a.shape) : t
                }
            }
        }
    }, {
        kernelName: "Multiply",
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1]
              , o = VI(r.shape, a.shape);
            return {
                a: function() {
                    var t = _S(e, zE(a, "float32"))
                      , n = UI(r.shape, o);
                    return n.length > 0 ? YE(ST(t, n), r.shape) : t
                },
                b: function() {
                    var t = _S(e, zE(r, "float32"))
                      , n = UI(a.shape, o);
                    return n.length > 0 ? YE(ST(t, n), a.shape) : t
                }
            }
        }
    }, {
        kernelName: "Negate",
        gradFunc: function(e) {
            return {
                x: function() {
                    return xT(e)
                }
            }
        }
    }, {
        kernelName: "OneHot",
        inputsToSave: ["indices"],
        gradFunc: function(e, t) {
            var n = t[0];
            return {
                indices: function() {
                    return FT(n.shape, "float32")
                }
            }
        }
    }, {
        kernelName: "OnesLike",
        gradFunc: function(e) {
            return {
                x: function() {
                    return jI(e)
                }
            }
        }
    }, bR, bR, {
        kernelName: "Pow",
        inputsToSave: ["a", "b"],
        outputsToSave: [!0],
        gradFunc: function(e, t) {
            var n = Uy(t, 3)
              , r = n[0]
              , a = n[1]
              , o = n[2]
              , i = r
              , s = a
              , u = VI(i.shape, s.shape);
            return {
                a: function() {
                    var t = zE(s, "float32")
                      , n = _S(e, _S(t, YT(i, ET(t, fT(1)))))
                      , r = UI(i.shape, u);
                    return r.length > 0 && (n = ST(n, r)),
                    YE(n, i.shape)
                },
                b: function() {
                    var t = aT(i, 0)
                      , n = WI(t, gT(i), jI(i))
                      , r = _S(e, _S(o, n))
                      , a = UI(s.shape, u);
                    return a.length > 0 && (r = ST(r, a)),
                    YE(r, s.shape)
                }
            }
        }
    }, {
        kernelName: "Prelu",
        inputsToSave: ["x", "alpha"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1]
              , o = aT(r, 0);
            return {
                x: function() {
                    return WI(o, e, _S(e, a))
                },
                alpha: function() {
                    var t = WI(o, jI(e), _S(e, r))
                      , n = UI(a.shape, e.shape);
                    return n.length > 0 && (t = ST(t, n)),
                    YE(t, a.shape)
                }
            }
        }
    }, {
        kernelName: "Reciprocal",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return NS(e, xT(WT(n)))
                }
            }
        }
    }, {
        kernelName: "Relu6",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0]
              , r = _S(hT(n, 6), MA(n));
            return {
                x: function() {
                    return _S(e, zE(r, "float32"))
                }
            }
        }
    }, {
        kernelName: "Relu",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(e, zE(MA(n), "float32"))
                }
            }
        }
    }, {
        kernelName: "Reshape",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return YE(e, n.shape)
                }
            }
        }
    }, {
        kernelName: "ResizeBilinear",
        inputsToSave: ["images"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 1)[0]
              , a = function(t) {
                var a = n.alignCorners;
                return t.resizeBilinearBackprop(e, r, a)
            }
              , o = {
                images: r
            };
            return {
                images: function() {
                    return eE.runKernelFunc(a, o, null, "ResizeBilinearGrad", n)
                }
            }
        }
    }, {
        kernelName: "ResizeNearestNeighbor",
        inputsToSave: ["images"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 1)[0]
              , a = function(t) {
                var a = n.alignCorners;
                return t.resizeNearestNeighborBackprop(e, r, a)
            }
              , o = {
                images: r
            };
            return {
                images: function() {
                    return eE.runKernelFunc(a, o, null, "ResizeNearestNeighborGrad", n)
                }
            }
        }
    }, {
        kernelName: "Reverse",
        gradFunc: function(e, t, n) {
            var r = Pk(n.dims, e.shape);
            return {
                x: function() {
                    return vA(e, r)
                }
            }
        }
    }, {
        kernelName: "Round",
        gradFunc: function(e) {
            return {
                x: function() {
                    return jI(e)
                }
            }
        }
    }, {
        kernelName: "Rsqrt",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return xT(NS(e, _S(YT(n, 1.5), 2)))
                }
            }
        }
    }, {
        kernelName: "SelectV2",
        inputsToSave: ["condition"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                condition: function() {
                    return zE(jI(n), "float32")
                },
                t: function() {
                    return _S(e, zE(n, e.dtype))
                },
                e: function() {
                    return _S(e, zE(NT(n), e.dtype))
                }
            }
        }
    }, {
        kernelName: "Selu",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    var t = aT(n, fT(0))
                      , r = fT(1.7580993408473768)
                      , a = fT(ZN)
                      , o = _S(e, a)
                      , i = _S(_S(e, r), XI(zE(n, "float32")));
                    return WI(t, o, i)
                }
            }
        }
    }, {
        kernelName: "Sigmoid",
        outputsToSave: [!0],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(e, _S(n, ET(fT(1), n)))
                }
            }
        }
    }, {
        kernelName: "Sign",
        gradFunc: function(e) {
            return {
                x: function() {
                    return jI(e)
                }
            }
        }
    }, {
        kernelName: hC,
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(OI(zE(n, "float32")), e)
                }
            }
        }
    }, {
        kernelName: "Sinh",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(DI(zE(n, "float32")), e)
                }
            }
        }
    }, {
        kernelName: "Slice",
        inputsToSave: ["x"],
        gradFunc: function(e, t, n) {
            for (var r = Uy(t, 1)[0], a = n.begin, o = n.size, i = r.shape, s = Uy(bS(r, a, o), 2), u = s[0], c = s[1], l = [], f = 0; f < e.rank; f++)
                l.push([u[f], i[f] - u[f] - c[f]]);
            return {
                x: function() {
                    return qT(e, l)
                }
            }
        }
    }, {
        kernelName: "Softmax",
        outputsToSave: [!0],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 1)[0]
              , a = n.dim
              , o = _S(e, r);
            return {
                logits: function() {
                    return ET(o, _S(ST(o, [a], !0), r))
                }
            }
        }
    }, {
        kernelName: "Softplus",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(e, vI(n))
                }
            }
        }
    }, xR, xR, wR, wR, {
        kernelName: "Sqrt",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return NS(e, _S(OA(zE(n, "float32")), 2))
                }
            }
        }
    }, {
        kernelName: "SquaredDifference",
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1]
              , o = fT(2);
            return {
                a: function() {
                    return _S(e, _S(o, ET(r, a)))
                },
                b: function() {
                    return _S(e, _S(o, ET(a, r)))
                }
            }
        }
    }, {
        kernelName: "Square",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(e, _S(zE(n, "float32"), 2))
                }
            }
        }
    }, {
        kernelName: "Step",
        gradFunc: function(e) {
            return {
                x: function() {
                    return jI(e)
                }
            }
        }
    }, {
        kernelName: mC,
        inputsToSave: ["a", "b"],
        gradFunc: function(e, t) {
            var n = Uy(t, 2)
              , r = n[0]
              , a = n[1]
              , o = VI(r.shape, a.shape);
            return {
                a: function() {
                    var t = e
                      , n = UI(r.shape, o);
                    return n.length > 0 && (t = ST(t, n)),
                    YE(t, r.shape)
                },
                b: function() {
                    var t = e
                      , n = UI(a.shape, o);
                    return n.length > 0 && (t = ST(t, n)),
                    YE(xT(t), a.shape)
                }
            }
        }
    }, {
        kernelName: "Sum",
        inputsToSave: ["x"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 1)[0]
              , a = r.shape.slice();
            Pk(n.axis, r.shape).forEach((function(e) {
                a[e] = 1
            }
            ));
            var o = YE(e, a)
              , i = _S(o, MT(r.shape, "float32"));
            return {
                x: function() {
                    return i
                }
            }
        }
    }, {
        kernelName: "Tan",
        inputsToSave: ["x"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return NS(e, WT(OI(n)))
                }
            }
        }
    }, {
        kernelName: "Tanh",
        outputsToSave: [!0],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return _S(ET(fT(1), WT(n)), e)
                }
            }
        }
    }, {
        kernelName: "Tile",
        inputsToSave: ["x"],
        gradFunc: function(e, t, n) {
            var r = Uy(t, 1)[0]
              , a = n.reps;
            return {
                x: function() {
                    var t = jI(r);
                    if (1 === r.rank)
                        for (var n = 0; n < a[0]; ++n)
                            t = TS(t, gI(e, [n * r.shape[0]], [r.shape[0]]));
                    else if (2 === r.rank)
                        for (var o = 0; o < a[0]; ++o)
                            for (var i = 0; i < a[1]; ++i)
                                t = TS(t, gI(e, [o * r.shape[0], i * r.shape[1]], [r.shape[0], r.shape[1]]));
                    else if (3 === r.rank)
                        for (var s = 0; s < a[0]; ++s)
                            for (var u = 0; u < a[1]; ++u)
                                for (var c = 0; c < a[2]; ++c)
                                    t = TS(t, gI(e, [s * r.shape[0], u * r.shape[1], c * r.shape[2]], [r.shape[0], r.shape[1], r.shape[2]]));
                    else {
                        if (4 !== r.rank)
                            throw new Error("Gradient for tile operation is not implemented for rank-".concat(r.rank, " tensors yet."));
                        for (var l = 0; l < a[0]; ++l)
                            for (var f = 0; f < a[1]; ++f)
                                for (var p = 0; p < a[2]; ++p)
                                    for (var d = 0; d < a[3]; ++d)
                                        t = TS(t, gI(e, [l * r.shape[0], f * r.shape[1], p * r.shape[2], d * r.shape[3]], [r.shape[0], r.shape[1], r.shape[2], r.shape[3]]))
                    }
                    return t
                }
            }
        }
    }, {
        kernelName: "Transpose",
        gradFunc: function(e, t, n) {
            var r = zS(n.perm);
            return {
                x: function() {
                    return JE(e, r)
                }
            }
        }
    }, {
        kernelName: "Unpack",
        gradFunc: function(e, t, n) {
            var r = n.axis;
            return {
                value: function() {
                    return FA(e, r)
                }
            }
        }
    }, {
        kernelName: "UnsortedSegmentSum",
        inputsToSave: ["segmentIds"],
        gradFunc: function(e, t) {
            var n = Uy(t, 1)[0];
            return {
                x: function() {
                    return function(e, t) {
                        for (var n = lT(t, jI(t)), r = rT(e, n), a = oT(t, fT(0, "int32")), o = r.rank - a.rank, i = 0; i < o; ++i)
                            a = QI(a, i + 1);
                        a = AT(a, MT(r.shape, "bool"));
                        var s = jI(r);
                        return WI(a, r, s)
                    }(e, n)
                }
            }
        }
    }, {
        kernelName: "ZerosLike",
        gradFunc: function(e) {
            return {
                x: function() {
                    return jI(e)
                }
            }
        }
    }]/**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    ; kR < CR.length; kR++) {
        kC(CR[kR])
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * =============================================================================
	 */
    LC.prototype.abs = function() {
        return this.throwIfDisposed(),
        RS(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.acos = function() {
        return this.throwIfDisposed(),
        OS(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.acosh = function() {
        return this.throwIfDisposed(),
        DS(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.addStrict = function(e) {
        return this.throwIfDisposed(),
        eN(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.add = function(e) {
        return this.throwIfDisposed(),
        TS(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.all = function(e, t) {
        return this.throwIfDisposed(),
        jS(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.any = function(e, t) {
        return this.throwIfDisposed(),
        HS(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.argMax = function(e) {
        return this.throwIfDisposed(),
        GS(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.argMin = function(e) {
        return this.throwIfDisposed(),
        KS(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.asScalar = function() {
        return this.throwIfDisposed(),
        Ik(1 === this.size, (function() {
            return "The array must have only 1 element."
        }
        )),
        YE(this, [])
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.asType = function(e) {
        return this.throwIfDisposed(),
        zE(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.as1D = function() {
        return this.throwIfDisposed(),
        YE(this, [this.size])
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.as2D = function(e, t) {
        return this.throwIfDisposed(),
        YE(this, [e, t])
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.as3D = function(e, t, n) {
        return this.throwIfDisposed(),
        YE(this, [e, t, n])
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.as4D = function(e, t, n, r) {
        return this.throwIfDisposed(),
        YE(this, [e, t, n, r])
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.as5D = function(e, t, n, r, a) {
        return this.throwIfDisposed(),
        YE(this, [e, t, n, r, a])
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.asin = function() {
        return this.throwIfDisposed(),
        qS(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.asinh = function() {
        return this.throwIfDisposed(),
        XS(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.atan = function() {
        return this.throwIfDisposed(),
        QS(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.atan2 = function(e) {
        return this.throwIfDisposed(),
        YS(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.atanh = function() {
        return this.throwIfDisposed(),
        $S(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.avgPool = function(e, t, n, r) {
        return this.throwIfDisposed(),
        fI(this, e, t, n, r)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.batchToSpaceND = function(e, t) {
        return this.throwIfDisposed(),
        bI(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.batchNorm = function(e, t, n, r, a) {
        return this.throwIfDisposed(),
        wI(this, e, t, n, r, a)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.broadcastTo = function(e) {
        return this.throwIfDisposed(),
        kI(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.cast = function(e) {
        return this.throwIfDisposed(),
        zE(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.ceil = function() {
        return this.throwIfDisposed(),
        CI(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.clipByValue = function(e, t) {
        return this.throwIfDisposed(),
        EI(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.concat = function(e, t) {
        return this.throwIfDisposed(),
        e instanceof LC && (e = [e]),
        mI([this].concat(Vy(e)), t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.conv1d = function(e, t, n, r, a, o) {
        return this.throwIfDisposed(),
        TI(this, e, t, n, r, a, o)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.conv2dTranspose = function(e, t, n, r, a) {
        return this.throwIfDisposed(),
        NI(this, e, t, n, r, a)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.conv2d = function(e, t, n, r, a, o) {
        return this.throwIfDisposed(),
        II(this, e, t, n, r, a, o)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.cos = function() {
        return this.throwIfDisposed(),
        OI(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.cosh = function() {
        return this.throwIfDisposed(),
        DI(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.cumsum = function(e, t, n) {
        return this.throwIfDisposed(),
        BI(this, e, t, n)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.depthToSpace = function(e, t) {
        return this.throwIfDisposed(),
        FI(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.depthwiseConv2D = function(e, t, n, r, a, o) {
        return wS("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),
        this.throwIfDisposed(),
        MI(this, e, t, n, r, a, o)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.depthwiseConv2d = function(e, t, n, r, a, o) {
        return this.throwIfDisposed(),
        MI(this, e, t, n, r, a, o)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.dilation2d = function(e, t, n, r, a) {
        return this.throwIfDisposed(),
        PI(this, e, t, n, r, a)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.divNoNan = function(e) {
        return this.throwIfDisposed(),
        HI(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.divStrict = function(e) {
        return this.throwIfDisposed(),
        tN(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.div = function(e) {
        return this.throwIfDisposed(),
        NS(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.dot = function(e) {
        return this.throwIfDisposed(),
        GI(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.elu = function() {
        return this.throwIfDisposed(),
        KI(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.equalStrict = function(e) {
        return this.throwIfDisposed(),
        XA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.equal = function(e) {
        return this.throwIfDisposed(),
        zI(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.erf = function() {
        return this.throwIfDisposed(),
        qI(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.exp = function() {
        return this.throwIfDisposed(),
        XI(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.expandDims = function(e) {
        return this.throwIfDisposed(),
        QI(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.expm1 = function() {
        return this.throwIfDisposed(),
        YI(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.fft = function() {
        return this.throwIfDisposed(),
        IA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.flatten = function() {
        return this.throwIfDisposed(),
        YE(this, [this.size])
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.floor = function() {
        return this.throwIfDisposed(),
        JI(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.floorDiv = function(e) {
        return this.throwIfDisposed(),
        AS(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.gather = function(e, t) {
        return this.throwIfDisposed(),
        rT(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.greaterEqualStrict = function(e) {
        return this.throwIfDisposed(),
        QA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.greaterEqual = function(e) {
        return this.throwIfDisposed(),
        oT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.greaterStrict = function(e) {
        return this.throwIfDisposed(),
        YA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.greater = function(e) {
        return this.throwIfDisposed(),
        aT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.ifft = function() {
        return this.throwIfDisposed(),
        TA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.irfft = function() {
        return this.throwIfDisposed(),
        AA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.isFinite = function() {
        return this.throwIfDisposed(),
        sT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.isInf = function() {
        return this.throwIfDisposed(),
        uT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.isNaN = function() {
        return this.throwIfDisposed(),
        cT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.leakyRelu = function(e) {
        return this.throwIfDisposed(),
        pT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.lessEqualStrict = function(e) {
        return this.throwIfDisposed(),
        $A(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.lessEqual = function(e) {
        return this.throwIfDisposed(),
        hT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.lessStrict = function(e) {
        return this.throwIfDisposed(),
        ZA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.less = function(e) {
        return this.throwIfDisposed(),
        dT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.localResponseNormalization = function(e, t, n, r) {
        return this.throwIfDisposed(),
        vT(this, e, t, n, r)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.logSigmoid = function() {
        return this.throwIfDisposed(),
        kT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.logSoftmax = function(e) {
        return this.throwIfDisposed(),
        IT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.logSumExp = function(e, t) {
        return this.throwIfDisposed(),
        TT(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.log = function() {
        return this.throwIfDisposed(),
        gT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.log1p = function() {
        return this.throwIfDisposed(),
        yT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.logicalAnd = function(e) {
        return this.throwIfDisposed(),
        AT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.logicalNot = function() {
        return this.throwIfDisposed(),
        NT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.logicalOr = function(e) {
        return this.throwIfDisposed(),
        _T(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.logicalXor = function(e) {
        return this.throwIfDisposed(),
        RT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.matMul = function(e, t, n) {
        return this.throwIfDisposed(),
        $E(this, e, t, n)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.maxPool = function(e, t, n, r) {
        return this.throwIfDisposed(),
        OT(this, e, t, n, r)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.max = function(e, t) {
        return this.throwIfDisposed(),
        CT(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.maximumStrict = function(e) {
        return this.throwIfDisposed(),
        nN(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.maximum = function(e) {
        return this.throwIfDisposed(),
        lT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.mean = function(e, t) {
        return this.throwIfDisposed(),
        PT(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.min = function(e, t) {
        return this.throwIfDisposed(),
        LT(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.minimumStrict = function(e) {
        return this.throwIfDisposed(),
        rN(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.minimum = function(e) {
        return this.throwIfDisposed(),
        UT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.mirrorPad = function(e, t) {
        return this.throwIfDisposed(),
        VT(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.modStrict = function(e) {
        return this.throwIfDisposed(),
        aN(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.mod = function(e) {
        return this.throwIfDisposed(),
        zT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.mulStrict = function(e) {
        return this.throwIfDisposed(),
        oN(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.mul = function(e) {
        return this.throwIfDisposed(),
        _S(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.neg = function() {
        return this.throwIfDisposed(),
        xT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.norm = function(e, t, n) {
        return this.throwIfDisposed(),
        lN(this, e, t, n)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.notEqualStrict = function(e) {
        return this.throwIfDisposed(),
        JA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.notEqual = function(e) {
        return this.throwIfDisposed(),
        HT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.oneHot = function(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1
          , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
        return this.throwIfDisposed(),
        ZE(this, e, t, n)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.onesLike = function() {
        return this.throwIfDisposed(),
        KT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.pad = function(e, t) {
        return this.throwIfDisposed(),
        qT(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.pool = function(e, t, n, r, a) {
        return this.throwIfDisposed(),
        QT(this, e, t, n, r, a)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.powStrict = function(e) {
        return this.throwIfDisposed(),
        iN(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.pow = function(e) {
        return this.throwIfDisposed(),
        YT(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.prelu = function(e) {
        return this.throwIfDisposed(),
        $T(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.prod = function(e, t) {
        return this.throwIfDisposed(),
        ZT(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.reciprocal = function() {
        return this.throwIfDisposed(),
        dA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.relu = function() {
        return this.throwIfDisposed(),
        hA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.relu6 = function() {
        return this.throwIfDisposed(),
        mA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.reshapeAs = function(e) {
        return this.throwIfDisposed(),
        YE(this, e.shape)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.reshape = function(e) {
        return this.throwIfDisposed(),
        YE(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.resizeBilinear = function(e, t) {
        return this.throwIfDisposed(),
        jN(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.resizeNearestNeighbor = function(e, t) {
        return this.throwIfDisposed(),
        HN(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.reverse = function(e) {
        return this.throwIfDisposed(),
        vA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.rfft = function() {
        return this.throwIfDisposed(),
        RA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.round = function() {
        return this.throwIfDisposed(),
        gA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.rsqrt = function() {
        return this.throwIfDisposed(),
        yA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.selu = function() {
        return this.throwIfDisposed(),
        bA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.separableConv2d = function(e, t, n, r, a, o) {
        return this.throwIfDisposed(),
        xA(this, e, t, n, r, a, o)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.sigmoid = function() {
        return this.throwIfDisposed(),
        vI(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.sign = function() {
        return this.throwIfDisposed(),
        kA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.sin = function() {
        return this.throwIfDisposed(),
        CA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.sinh = function() {
        return this.throwIfDisposed(),
        EA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.slice = function(e, t) {
        return this.throwIfDisposed(),
        gI(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.softmax = function(e) {
        return this.throwIfDisposed(),
        SA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.softplus = function() {
        return this.throwIfDisposed(),
        wT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.spaceToBatchND = function(e, t) {
        return this.throwIfDisposed(),
        XT(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.split = function(e, t) {
        return this.throwIfDisposed(),
        _A(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.sqrt = function() {
        return this.throwIfDisposed(),
        OA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.square = function() {
        return this.throwIfDisposed(),
        WT(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.squaredDifference = function(e) {
        return this.throwIfDisposed(),
        DA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.squaredDifferenceStrict = function(e) {
        return this.throwIfDisposed(),
        sN(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.squeeze = function(e) {
        return this.throwIfDisposed(),
        BA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.stack = function(e, t) {
        this.throwIfDisposed();
        var n = e instanceof LC ? [this, e] : [this].concat(Vy(e));
        return FA(n, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.step = function(e) {
        return this.throwIfDisposed(),
        MA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.stridedSlice = function(e, t, n, r, a, o, i, s) {
        return this.throwIfDisposed(),
        PA(this, e, t, n, r, a, o, i, s)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.subStrict = function(e) {
        return this.throwIfDisposed(),
        uN(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.sub = function(e) {
        return this.throwIfDisposed(),
        ET(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.sum = function(e, t) {
        return this.throwIfDisposed(),
        ST(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.tan = function() {
        return this.throwIfDisposed(),
        LA(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.tanh = function() {
        return this.throwIfDisposed(),
        yI(this)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.tile = function(e) {
        return this.throwIfDisposed(),
        $I(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.toBool = function() {
        return this.throwIfDisposed(),
        zE(this, "bool")
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.toFloat = function() {
        return this.throwIfDisposed(),
        zE(this, "float32")
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.toInt = function() {
        return this.throwIfDisposed(),
        zE(this, "int32")
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.topk = function(e, t) {
        return this.throwIfDisposed(),
        zA(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.transpose = function(e) {
        return this.throwIfDisposed(),
        JE(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.unique = function(e) {
        return this.throwIfDisposed(),
        jA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.unsortedSegmentSum = function(e, t) {
        return this.throwIfDisposed(),
        HA(this, e, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.unstack = function(e) {
        return this.throwIfDisposed(),
        GA(this, e)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.where = function(e, t) {
        return this.throwIfDisposed(),
        WI(e, this, t)
    }
    ,
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    LC.prototype.zerosLike = function() {
        return this.throwIfDisposed(),
        jI(this)
    }
    ,
    function(e) {
        e[e.DT_INVALID = 0] = "DT_INVALID",
        e[e.DT_FLOAT = 1] = "DT_FLOAT",
        e[e.DT_DOUBLE = 2] = "DT_DOUBLE",
        e[e.DT_INT32 = 3] = "DT_INT32",
        e[e.DT_UINT8 = 4] = "DT_UINT8",
        e[e.DT_INT16 = 5] = "DT_INT16",
        e[e.DT_INT8 = 6] = "DT_INT8",
        e[e.DT_STRING = 7] = "DT_STRING",
        e[e.DT_COMPLEX64 = 8] = "DT_COMPLEX64",
        e[e.DT_INT64 = 9] = "DT_INT64",
        e[e.DT_BOOL = 10] = "DT_BOOL",
        e[e.DT_QINT8 = 11] = "DT_QINT8",
        e[e.DT_QUINT8 = 12] = "DT_QUINT8",
        e[e.DT_QINT32 = 13] = "DT_QINT32",
        e[e.DT_BFLOAT16 = 14] = "DT_BFLOAT16",
        e[e.DT_FLOAT_REF = 101] = "DT_FLOAT_REF",
        e[e.DT_DOUBLE_REF = 102] = "DT_DOUBLE_REF",
        e[e.DT_INT32_REF = 103] = "DT_INT32_REF",
        e[e.DT_UINT8_REF = 104] = "DT_UINT8_REF",
        e[e.DT_INT16_REF = 105] = "DT_INT16_REF",
        e[e.DT_INT8_REF = 106] = "DT_INT8_REF",
        e[e.DT_STRING_REF = 107] = "DT_STRING_REF",
        e[e.DT_COMPLEX64_REF = 108] = "DT_COMPLEX64_REF",
        e[e.DT_INT64_REF = 109] = "DT_INT64_REF",
        e[e.DT_BOOL_REF = 110] = "DT_BOOL_REF",
        e[e.DT_QINT8_REF = 111] = "DT_QINT8_REF",
        e[e.DT_QUINT8_REF = 112] = "DT_QUINT8_REF",
        e[e.DT_QINT32_REF = 113] = "DT_QINT32_REF",
        e[e.DT_BFLOAT16_REF = 114] = "DT_BFLOAT16_REF"
    }(pR || (pR = {})),
    function(e) {
        !function(e) {
            e[e.LEGACY = 0] = "LEGACY",
            e[e.V1 = 1] = "V1",
            e[e.V2 = 2] = "V2"
        }(e.CheckpointFormatVersion || (e.CheckpointFormatVersion = {}))
    }(dR || (dR = {}));
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var ER = {};
    function SR(e) {
        return ER[e]
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function IR(e, t, n, r, a) {
        var o = t.inputParams[e];
        if (o && void 0 !== o.inputIndexStart) {
            var i = o.inputIndexStart
              , s = 0 === o.inputIndexEnd ? void 0 : void 0 === o.inputIndexEnd ? i + 1 : o.inputIndexEnd;
            if ("tensor" === o.type)
                return TR(t.inputNames[o.inputIndexStart], n, r, a);
            if ("tensors" === o.type)
                return t.inputNames.slice(i, s).map((function(e) {
                    return TR(e, n, r, a)
                }
                ));
            var u = TR(t.inputNames.slice(i)[0], n, r, a)
              , c = u.dataSync();
            return "number" === o.type ? c[0] : Yk(u.shape, c)
        }
        var l = t.attrParams[e];
        return l && l.value
    }
    function TR(e, t, n, r) {
        var a = Uy(_R(e), 2)
          , o = a[0]
          , i = a[1];
        if (null != r) {
            var s = r.getHashTableHandleByName(o);
            if (null != s)
                return s
        }
        var u = n.currentContextIds.find((function(e) {
            return !!t[NR(o, e)]
        }
        ));
        return void 0 !== u ? t[NR(o, u)][i] : void 0
    }
    function AR(e, t) {
        var n = Uy(_R(e), 2)
          , r = n[0]
          , a = n[1];
        return [NR(r, t && t.currentContextId), a]
    }
    function NR(e, t) {
        return t ? "".concat(e, "-").concat(t) : e
    }
    function _R(e) {
        var t = e.split(":");
        return 1 === t.length ? [e, 0] : [t[0], Number(t[t.length - 1])]
    }
    function RR(e, t, n) {
        var r = IR("pad", e, t, n);
        if ("explicit" === r) {
            r = IR("explicitPaddings", e, t, n);
            for (var a = [[0, 0], [0, 0], [0, 0], [0, 0]], o = 0; o < 4; o++)
                a[o][0] = r[2 * o],
                a[o][1] = r[2 * o + 1];
            return a
        }
        return r
    }
    function OR(e) {
        return e.kept ? e : WE(e)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var DR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "Add",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "AddV2",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "AddN",
            category: "arithmetic",
            inputs: [{
                start: 0,
                end: 0,
                name: "tensors",
                type: "tensors"
            }]
        }, {
            tfOpName: "BiasAdd",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Sub",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "RealDiv",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Div",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "DivNoNan",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "FloorDiv",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Mul",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Maximum",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }]
        }, {
            tfOpName: "Minimum",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }]
        }, {
            tfOpName: "Pow",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "SquaredDifference",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Mod",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "FloorMod",
            category: "arithmetic",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }]
    })
      , BR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "Abs",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Acos",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Asin",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Atan",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Atan2",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "y",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Ceil",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "ClipByValue",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "clip_value_min",
                name: "clipValueMin",
                type: "number"
            }, {
                tfName: "clip_value_max",
                name: "clipValueMax",
                type: "number"
            }]
        }, {
            tfOpName: "Complex",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "real",
                type: "tensor"
            }, {
                start: 1,
                name: "imag",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "ComplexAbs",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Cos",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Cosh",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Elu",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Exp",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Floor",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Log",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Imag",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "Tout",
                name: "outputType",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Neg",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Real",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "Tout",
                name: "outputType",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Prelu",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "alpha",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Relu",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Relu6",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "clipValueMin",
                name: "clipValueMin",
                type: "number",
                defaultValue: 0
            }, {
                tfName: "clipValueMax",
                name: "clipValueMax",
                type: "number",
                defaultValue: 6
            }]
        }, {
            tfOpName: "Selu",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Sigmoid",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Sin",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Sinh",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Sqrt",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Rsqrt",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Square",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Tan",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Tanh",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Sign",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Round",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Expm1",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Log1p",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Reciprocal",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Softplus",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Asinh",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Acosh",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Atanh",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Erf",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Prod",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axes",
                type: "number[]"
            }],
            attrs: [{
                tfName: "keep_dims",
                name: "keepDims",
                type: "bool",
                notSupported: !0
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "LeakyRelu",
            category: "basic_math",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "alpha",
                name: "alpha",
                type: "number",
                defaultValue: .2
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }]
    })
      , FR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "LoopCond",
            category: "control",
            inputs: [{
                start: 0,
                name: "pred",
                type: "tensor"
            }]
        }, {
            tfOpName: "Switch",
            category: "control",
            inputs: [{
                start: 0,
                name: "data",
                type: "tensor"
            }, {
                start: 1,
                name: "pred",
                type: "tensor"
            }]
        }, {
            tfOpName: "Merge",
            category: "control",
            inputs: [{
                start: 0,
                end: 0,
                name: "tensors",
                type: "tensors"
            }]
        }, {
            tfOpName: "Enter",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensor",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "frame_name",
                name: "frameName",
                type: "string"
            }, {
                tfName: "is_constant",
                name: "isConstant",
                type: "bool"
            }]
        }, {
            tfOpName: "Exit",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensor",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "NextIteration",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensor",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "TensorArrayV3",
            category: "control",
            inputs: [{
                start: 0,
                name: "size",
                type: "number"
            }],
            attrs: [{
                tfName: "dtype",
                name: "dtype",
                type: "dtype"
            }, {
                tfName: "element_shape",
                name: "elementShape",
                type: "shape"
            }, {
                tfName: "dynamic_size",
                name: "dynamicSize",
                type: "bool"
            }, {
                tfName: "clear_after_read",
                name: "clearAfterRead",
                type: "bool"
            }, {
                tfName: "identical_element_shapes",
                name: "identicalElementShapes",
                type: "bool"
            }, {
                tfName: "tensor_array_name",
                name: "name",
                type: "string"
            }]
        }, {
            tfOpName: "TensorArrayWriteV3",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorArrayId",
                type: "tensor"
            }, {
                start: 1,
                name: "index",
                type: "number"
            }, {
                start: 2,
                name: "tensor",
                type: "tensor"
            }, {
                start: 3,
                name: "flowIn",
                type: "number"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "TensorArrayReadV3",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorArrayId",
                type: "tensor"
            }, {
                start: 1,
                name: "index",
                type: "number"
            }, {
                start: 2,
                name: "flowIn",
                type: "number"
            }],
            attrs: [{
                tfName: "dtype",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "TensorArrayGatherV3",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorArrayId",
                type: "tensor"
            }, {
                start: 1,
                name: "indices",
                type: "number[]"
            }, {
                start: 2,
                name: "flowIn",
                type: "number"
            }],
            attrs: [{
                tfName: "dtype",
                name: "dtype",
                type: "dtype"
            }, {
                tfName: "element_shape",
                name: "elementShape",
                type: "shape"
            }]
        }, {
            tfOpName: "TensorArrayScatterV3",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorArrayId",
                type: "tensor"
            }, {
                start: 1,
                name: "indices",
                type: "number[]"
            }, {
                start: 2,
                name: "tensor",
                type: "tensor"
            }, {
                start: 3,
                name: "flowIn",
                type: "number"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorArrayConcatV3",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorArrayId",
                type: "tensor"
            }, {
                start: 1,
                name: "flowIn",
                type: "number"
            }],
            attrs: [{
                tfName: "dtype",
                name: "dtype",
                type: "dtype"
            }, {
                tfName: "element_shape_except0",
                name: "elementShapeExcept0",
                type: "shape",
                notSupported: !0
            }]
        }, {
            tfOpName: "TensorArraySplitV3",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorArrayId",
                type: "tensor"
            }, {
                start: 1,
                name: "tensor",
                type: "tensor"
            }, {
                start: 2,
                name: "lengths",
                type: "number[]"
            }, {
                start: 3,
                name: "flowIn",
                type: "number"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorArraySizeV3",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorArrayId",
                type: "tensor"
            }, {
                start: 1,
                name: "flowIn",
                type: "number"
            }]
        }, {
            tfOpName: "TensorArrayCloseV3",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorArrayId",
                type: "tensor"
            }]
        }, {
            tfOpName: "StatelessIf",
            category: "control",
            inputs: [{
                start: 0,
                name: "cond",
                type: "tensor"
            }, {
                start: 1,
                end: 0,
                name: "args",
                type: "tensors"
            }],
            attrs: [{
                tfName: "then_branch",
                name: "thenBranch",
                type: "func"
            }, {
                tfName: "else_branch",
                name: "elseBranch",
                type: "func"
            }]
        }, {
            tfOpName: "If",
            category: "control",
            inputs: [{
                start: 0,
                name: "cond",
                type: "tensor"
            }, {
                start: 1,
                end: 0,
                name: "args",
                type: "tensors"
            }],
            attrs: [{
                tfName: "then_branch",
                name: "thenBranch",
                type: "func"
            }, {
                tfName: "else_branch",
                name: "elseBranch",
                type: "func"
            }]
        }, {
            tfOpName: "StatelessWhile",
            category: "control",
            inputs: [{
                start: 0,
                end: 0,
                name: "args",
                type: "tensors"
            }],
            attrs: [{
                tfName: "cond",
                name: "cond",
                type: "func"
            }, {
                tfName: "body",
                name: "body",
                type: "func"
            }]
        }, {
            tfOpName: "While",
            category: "control",
            inputs: [{
                start: 0,
                end: 0,
                name: "args",
                type: "tensors"
            }],
            attrs: [{
                tfName: "cond",
                name: "cond",
                type: "func"
            }, {
                tfName: "body",
                name: "body",
                type: "func"
            }]
        }, {
            tfOpName: "TensorListScatter",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensor",
                type: "tensor"
            }, {
                start: 1,
                name: "indices",
                type: "number[]"
            }, {
                start: 2,
                name: "elementShape",
                type: "shape"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListScatterV2",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensor",
                type: "tensor"
            }, {
                start: 1,
                name: "indices",
                type: "number[]"
            }, {
                start: 2,
                name: "elementShape",
                type: "shape"
            }, {
                start: 3,
                name: "numElements",
                type: "number"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListGather",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorListId",
                type: "tensor"
            }, {
                start: 1,
                name: "indices",
                type: "number[]"
            }, {
                start: 2,
                name: "elementShape",
                type: "shape"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListGetItem",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorListId",
                type: "tensor"
            }, {
                start: 1,
                name: "index",
                type: "number"
            }, {
                start: 2,
                name: "elementShape",
                type: "shape"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListSetItem",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorListId",
                type: "tensor"
            }, {
                start: 1,
                name: "index",
                type: "number"
            }, {
                start: 2,
                name: "tensor",
                type: "tensor"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListReserve",
            category: "control",
            inputs: [{
                start: 0,
                name: "elementShape",
                type: "shape"
            }, {
                start: 1,
                name: "numElements",
                type: "number"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListFromTensor",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensor",
                type: "tensor"
            }, {
                start: 1,
                name: "elementShape",
                type: "shape"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListStack",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorListId",
                type: "tensor"
            }, {
                start: 1,
                name: "elementShape",
                type: "shape"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }, {
                tfName: "num_elements",
                name: "numElements",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListSplit",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensor",
                type: "tensor"
            }, {
                start: 1,
                name: "elementShape",
                type: "shape"
            }, {
                start: 2,
                name: "lengths",
                type: "number[]"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListConcat",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorListId",
                type: "tensor"
            }],
            attrs: [{
                tfName: "element_shape",
                name: "elementShape",
                type: "shape"
            }, {
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListPopBack",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorListId",
                type: "tensor"
            }, {
                start: 1,
                name: "elementShape",
                type: "shape"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "TensorListPushBack",
            category: "control",
            inputs: [{
                start: 0,
                name: "tensorListId",
                type: "tensor"
            }, {
                start: 1,
                name: "tensor",
                type: "tensor"
            }],
            attrs: [{
                tfName: "element_dtype",
                name: "elementDType",
                type: "dtype"
            }]
        }]
    })
      , MR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "AvgPool",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                notSupported: !0
            }, {
                tfName: "ksize",
                name: "kernelSize",
                type: "number[]"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "MaxPool",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                notSupported: !0
            }, {
                tfName: "ksize",
                name: "kernelSize",
                type: "number[]"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "MaxPoolWithArgmax",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "ksize",
                name: "kernelSize",
                type: "number[]"
            }, {
                tfName: "include_batch_in_index",
                name: "includeBatchInIndex",
                type: "bool"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "AvgPool3D",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                notSupported: !0
            }, {
                tfName: "ksize",
                name: "kernelSize",
                type: "number[]"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "MaxPool3D",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                notSupported: !0
            }, {
                tfName: "ksize",
                name: "kernelSize",
                type: "number[]"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Conv1D",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "filter",
                type: "tensor"
            }],
            attrs: [{
                tfName: "stride",
                name: "stride",
                type: "number"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                defaultValue: "NWC"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "dilation",
                name: "dilation",
                type: "number",
                defaultValue: 1
            }]
        }, {
            tfOpName: "Conv2D",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "filter",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "useCudnnOnGpu",
                name: "useCudnnOnGpu",
                type: "bool"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                defaultValue: "NHWC"
            }, {
                tfName: "explicit_paddings",
                name: "explicitPaddings",
                type: "number[]",
                defaultValue: []
            }, {
                tfName: "dilations",
                name: "dilations",
                type: "number[]"
            }]
        }, {
            tfOpName: "_FusedConv2D",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "filter",
                type: "tensor"
            }, {
                start: 2,
                end: 0,
                name: "args",
                type: "tensors"
            }],
            attrs: [{
                tfName: "num_args",
                name: "numArgs",
                type: "number"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "explicit_paddings",
                name: "explicitPaddings",
                type: "number[]",
                defaultValue: []
            }, {
                tfName: "use_cudnn_on_gpu",
                name: "useCudnnOnGpu",
                type: "bool",
                defaultValue: !0
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                defaultValue: "NHWC"
            }, {
                tfName: "dilations",
                name: "dilations",
                type: "number[]",
                defaultValue: [1, 1, 1, 1]
            }, {
                tfName: "fused_ops",
                name: "fusedOps",
                type: "string[]",
                defaultValue: []
            }, {
                tfName: "epsilon",
                name: "epsilon",
                type: "number",
                defaultValue: 1e-4
            }]
        }, {
            tfOpName: "Conv2DBackpropInput",
            category: "convolution",
            inputs: [{
                start: 2,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "filter",
                type: "tensor"
            }, {
                start: 0,
                name: "outputShape",
                type: "number[]"
            }],
            attrs: [{
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                notSupported: !0
            }, {
                tfName: "explicit_paddings",
                name: "explicitPaddings",
                type: "number[]",
                defaultValue: []
            }]
        }, {
            tfOpName: "DepthwiseConv2d",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "input",
                type: "tensor"
            }, {
                start: 1,
                name: "filter",
                type: "tensor"
            }],
            attrs: [{
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                defaultValue: "NHWC"
            }, {
                tfName: "explicit_paddings",
                name: "explicitPaddings",
                type: "number[]",
                defaultValue: []
            }, {
                tfName: "dilations",
                name: "dilations",
                type: "number[]"
            }]
        }, {
            tfOpName: "DepthwiseConv2dNative",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "input",
                type: "tensor"
            }, {
                start: 1,
                name: "filter",
                type: "tensor"
            }],
            attrs: [{
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                defaultValue: "NHWC"
            }, {
                tfName: "explicit_paddings",
                name: "explicitPaddings",
                type: "number[]",
                defaultValue: []
            }, {
                tfName: "dilations",
                name: "dilations",
                type: "number[]"
            }]
        }, {
            tfOpName: "FusedDepthwiseConv2dNative",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "filter",
                type: "tensor"
            }, {
                start: 2,
                end: 0,
                name: "args",
                type: "tensors"
            }],
            attrs: [{
                tfName: "num_args",
                name: "numArgs",
                type: "number"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                defaultValue: "NHWC"
            }, {
                tfName: "dilations",
                name: "dilations",
                type: "number[]",
                defaultValue: [1, 1, 1, 1]
            }, {
                tfName: "fused_ops",
                name: "fusedOps",
                type: "string[]",
                defaultValue: []
            }]
        }, {
            tfOpName: "Conv3D",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "filter",
                type: "tensor"
            }],
            attrs: [{
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                defaultValue: "NHWC"
            }, {
                tfName: "dilations",
                name: "dilations",
                type: "number[]"
            }]
        }, {
            tfOpName: "Dilation2D",
            category: "convolution",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "filter",
                type: "tensor"
            }],
            attrs: [{
                tfName: "strides",
                name: "strides",
                type: "number[]"
            }, {
                tfName: "rates",
                name: "dilations",
                type: "number[]"
            }, {
                tfName: "padding",
                name: "pad",
                type: "string"
            }]
        }]
    })
      , PR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "Fill",
            category: "creation",
            inputs: [{
                start: 0,
                name: "shape",
                type: "number[]"
            }, {
                start: 1,
                name: "value",
                type: "number"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "LinSpace",
            category: "creation",
            inputs: [{
                start: 0,
                name: "start",
                type: "number"
            }, {
                start: 1,
                name: "stop",
                type: "number"
            }, {
                start: 2,
                name: "num",
                type: "number"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "OneHot",
            category: "creation",
            inputs: [{
                start: 0,
                name: "indices",
                type: "tensor"
            }, {
                start: 1,
                name: "depth",
                type: "number"
            }, {
                start: 2,
                name: "onValue",
                type: "number",
                defaultValue: 1
            }, {
                start: 3,
                name: "offValue",
                type: "number",
                defaultValue: 0
            }],
            attrs: [{
                tfName: "axis",
                name: "axis",
                type: "number",
                notSupported: !0
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Ones",
            category: "creation",
            inputs: [{
                start: 0,
                name: "shape",
                type: "number[]"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "OnesLike",
            category: "creation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "dtype",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "RandomUniform",
            category: "creation",
            inputs: [{
                start: 0,
                name: "shape",
                type: "number[]"
            }],
            attrs: [{
                tfName: "minval",
                name: "minval",
                type: "number",
                defaultValue: 0
            }, {
                tfName: "maxval",
                name: "maxval",
                type: "number",
                defaultValue: 1
            }, {
                tfName: "dtype",
                name: "dtype",
                type: "dtype"
            }, {
                tfName: "seed",
                name: "seed",
                type: "number",
                defaultValue: 0
            }, {
                tfName: "seed2",
                name: "seed2",
                type: "number",
                defaultValue: 0,
                notSupported: !0
            }, {
                tfName: "T",
                name: "T",
                type: "number",
                notSupported: !0
            }]
        }, {
            tfOpName: "Range",
            category: "creation",
            inputs: [{
                start: 0,
                name: "start",
                type: "number"
            }, {
                start: 1,
                name: "stop",
                type: "number"
            }, {
                start: 2,
                name: "step",
                type: "number",
                defaultValue: 0
            }],
            attrs: [{
                tfName: "Tidx",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "TruncatedNormal",
            category: "creation",
            inputs: [{
                start: 0,
                name: "shape",
                type: "number[]"
            }],
            attrs: [{
                tfName: "means",
                name: "mean",
                type: "number",
                defaultValue: 0
            }, {
                tfName: "stddev",
                name: "stdDev",
                type: "number",
                defaultValue: 1
            }, {
                tfName: "seed",
                name: "seed",
                type: "number"
            }, {
                tfName: "seed2",
                name: "seed2",
                type: "number",
                defaultValue: 0,
                notSupported: !0
            }, {
                tfName: "dtype",
                name: "dtype",
                type: "dtype"
            }, {
                tfName: "T",
                name: "T",
                type: "number",
                notSupported: !0
            }]
        }, {
            tfOpName: "Zeros",
            category: "creation",
            inputs: [{
                start: 0,
                name: "shape",
                type: "number[]"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "ZerosLike",
            category: "creation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "Multinomial",
            category: "creation",
            inputs: [{
                start: 0,
                name: "logits",
                type: "tensor"
            }, {
                start: 1,
                name: "numSamples",
                type: "number"
            }],
            attrs: [{
                tfName: "seed",
                name: "seed",
                type: "number"
            }, {
                tfName: "seed2",
                name: "seed2",
                type: "number"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype"
            }, {
                tfName: "output_dtype",
                name: "output_dtype",
                type: "dtype"
            }]
        }]
    })
      , LR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "NonMaxSuppressionV2",
            category: "dynamic",
            inputs: [{
                start: 0,
                name: "boxes",
                type: "tensor"
            }, {
                start: 1,
                name: "scores",
                type: "tensor"
            }, {
                start: 2,
                name: "maxOutputSize",
                type: "number"
            }, {
                start: 3,
                name: "iouThreshold",
                type: "number"
            }]
        }, {
            tfOpName: "NonMaxSuppressionV3",
            category: "dynamic",
            inputs: [{
                start: 0,
                name: "boxes",
                type: "tensor"
            }, {
                start: 1,
                name: "scores",
                type: "tensor"
            }, {
                start: 2,
                name: "maxOutputSize",
                type: "number"
            }, {
                start: 3,
                name: "iouThreshold",
                type: "number"
            }, {
                start: 4,
                name: "scoreThreshold",
                type: "number"
            }]
        }, {
            tfOpName: "NonMaxSuppressionV4",
            category: "dynamic",
            inputs: [{
                start: 0,
                name: "boxes",
                type: "tensor"
            }, {
                start: 1,
                name: "scores",
                type: "tensor"
            }, {
                start: 2,
                name: "maxOutputSize",
                type: "number"
            }, {
                start: 3,
                name: "iouThreshold",
                type: "number"
            }, {
                start: 4,
                name: "scoreThreshold",
                type: "number"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "T_threshold",
                name: "threshold",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "pad_to_max_output_size",
                name: "padToMaxOutputSize",
                type: "bool"
            }]
        }, {
            tfOpName: "NonMaxSuppressionV5",
            category: "dynamic",
            inputs: [{
                start: 0,
                name: "boxes",
                type: "tensor"
            }, {
                start: 1,
                name: "scores",
                type: "tensor"
            }, {
                start: 2,
                name: "maxOutputSize",
                type: "number"
            }, {
                start: 3,
                name: "iouThreshold",
                type: "number"
            }, {
                start: 4,
                name: "scoreThreshold",
                type: "number"
            }, {
                start: 5,
                name: "softNmsSigma",
                type: "number"
            }]
        }, {
            tfOpName: "Where",
            category: "dynamic",
            inputs: [{
                start: 0,
                name: "condition",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "ListDiff",
            category: "dynamic",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "y",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }]
    })
      , UR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "TopKV2",
            category: "evaluation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "k",
                type: "number"
            }],
            attrs: [{
                tfName: "sorted",
                name: "sorted",
                type: "bool"
            }]
        }, {
            tfOpName: "Unique",
            category: "evaluation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "UniqueV2",
            category: "evaluation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number"
            }]
        }]
    })
      , VR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "PlaceholderWithDefault",
            category: "graph",
            inputs: [{
                start: 0,
                name: "default",
                type: "tensor"
            }],
            attrs: [{
                tfName: "shape",
                name: "shape",
                type: "shape"
            }, {
                tfName: "dtype",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "Placeholder",
            category: "graph",
            attrs: [{
                tfName: "shape",
                name: "shape",
                type: "shape"
            }, {
                tfName: "dtype",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "Const",
            category: "graph"
        }, {
            tfOpName: "Identity",
            category: "graph",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "IdentityN",
            category: "graph",
            inputs: [{
                start: 0,
                end: 0,
                name: "x",
                type: "tensors"
            }]
        }, {
            tfOpName: "Snapshot",
            category: "graph",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "Rank",
            category: "graph",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "Size",
            category: "graph",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "Shape",
            category: "graph",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "ShapeN",
            category: "graph",
            inputs: [{
                start: 0,
                end: 0,
                name: "x",
                type: "tensors"
            }]
        }, {
            tfOpName: "Print",
            category: "graph",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "data",
                type: "tensors"
            }],
            attrs: [{
                tfName: "message",
                name: "message",
                type: "string"
            }, {
                tfName: "first_n",
                name: "firstN",
                type: "number",
                notSupported: !0
            }, {
                tfName: "summarize",
                name: "summarize",
                type: "number",
                defaultValue: 3
            }]
        }, {
            tfOpName: "NoOp",
            category: "graph",
            inputs: []
        }, {
            tfOpName: "StopGradient",
            category: "graph",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "FakeQuantWithMinMaxVars",
            category: "graph",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "min",
                name: "min",
                type: "number"
            }, {
                tfName: "max",
                name: "max",
                type: "number"
            }]
        }]
    })
      , zR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "HashTable",
            category: "hash_table",
            inputs: [],
            attrs: [{
                tfName: "shared_name",
                name: "sharedName",
                type: "string"
            }, {
                tfName: "use_node_name_sharing",
                name: "useNodeNameSharing",
                type: "bool"
            }, {
                tfName: "key_dtype",
                name: "keyDType",
                type: "dtype"
            }, {
                tfName: "value_dtype",
                name: "valueDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "HashTableV2",
            category: "hash_table",
            inputs: [],
            attrs: [{
                tfName: "shared_name",
                name: "sharedName",
                type: "string"
            }, {
                tfName: "use_node_name_sharing",
                name: "useNodeNameSharing",
                type: "bool"
            }, {
                tfName: "key_dtype",
                name: "keyDType",
                type: "dtype"
            }, {
                tfName: "value_dtype",
                name: "valueDType",
                type: "dtype"
            }]
        }, {
            tfOpName: "LookupTableImport",
            category: "hash_table",
            inputs: [{
                start: 0,
                name: "tableHandle",
                type: "tensor"
            }, {
                start: 1,
                name: "keys",
                type: "tensor"
            }, {
                start: 2,
                name: "values",
                type: "tensor"
            }],
            attrs: [{
                tfName: "Tin",
                name: "tIn",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "Tout",
                name: "tOut",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "LookupTableImportV2",
            category: "hash_table",
            inputs: [{
                start: 0,
                name: "tableHandle",
                type: "tensor"
            }, {
                start: 1,
                name: "keys",
                type: "tensor"
            }, {
                start: 2,
                name: "values",
                type: "tensor"
            }],
            attrs: [{
                tfName: "Tin",
                name: "tIn",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "Tout",
                name: "tOut",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "LookupTableFind",
            category: "hash_table",
            inputs: [{
                start: 0,
                name: "tableHandle",
                type: "tensor"
            }, {
                start: 1,
                name: "keys",
                type: "tensor"
            }, {
                start: 2,
                name: "defaultValue",
                type: "tensor"
            }],
            attrs: [{
                tfName: "Tin",
                name: "tIn",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "Tout",
                name: "tOut",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "LookupTableFindV2",
            category: "hash_table",
            inputs: [{
                start: 0,
                name: "tableHandle",
                type: "tensor"
            }, {
                start: 1,
                name: "keys",
                type: "tensor"
            }, {
                start: 2,
                name: "defaultValue",
                type: "tensor"
            }],
            attrs: [{
                tfName: "Tin",
                name: "tIn",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "Tout",
                name: "tOut",
                type: "dtype",
                notSupported: !0
            }]
        }]
    })
      , WR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "ResizeBilinear",
            category: "image",
            inputs: [{
                start: 0,
                name: "images",
                type: "tensor"
            }, {
                start: 1,
                name: "size",
                type: "number[]"
            }],
            attrs: [{
                tfName: "align_corners",
                name: "alignCorners",
                type: "bool"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "ResizeNearestNeighbor",
            category: "image",
            inputs: [{
                start: 0,
                name: "images",
                type: "tensor"
            }, {
                start: 1,
                name: "size",
                type: "number[]"
            }],
            attrs: [{
                tfName: "align_corners",
                name: "alignCorners",
                type: "bool"
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "CropAndResize",
            category: "image",
            inputs: [{
                start: 0,
                name: "image",
                type: "tensor"
            }, {
                start: 1,
                name: "boxes",
                type: "tensor"
            }, {
                start: 2,
                name: "boxInd",
                type: "tensor"
            }, {
                start: 3,
                name: "cropSize",
                type: "number[]"
            }],
            attrs: [{
                tfName: "method",
                name: "method",
                type: "string"
            }, {
                tfName: "extrapolation_value",
                name: "extrapolationValue",
                type: "number"
            }]
        }]
    })
      , jR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "Equal",
            category: "logical",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "NotEqual",
            category: "logical",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Greater",
            category: "logical",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "GreaterEqual",
            category: "logical",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Less",
            category: "logical",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "LessEqual",
            category: "logical",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "LogicalAnd",
            category: "logical",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "LogicalNot",
            category: "logical",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "LogicalOr",
            category: "logical",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Select",
            category: "logical",
            inputs: [{
                start: 0,
                name: "condition",
                type: "tensor"
            }, {
                start: 1,
                name: "a",
                type: "tensor"
            }, {
                start: 2,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "SelectV2",
            category: "logical",
            inputs: [{
                start: 0,
                name: "condition",
                type: "tensor"
            }, {
                start: 1,
                name: "a",
                type: "tensor"
            }, {
                start: 2,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }]
    })
      , HR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "_FusedMatMul",
            category: "matrices",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }, {
                start: 2,
                end: 0,
                name: "args",
                type: "tensors"
            }],
            attrs: [{
                tfName: "num_args",
                name: "numArgs",
                type: "number"
            }, {
                tfName: "fused_ops",
                name: "fusedOps",
                type: "string[]",
                defaultValue: []
            }, {
                tfName: "epsilon",
                name: "epsilon",
                type: "number",
                defaultValue: 1e-4
            }, {
                tfName: "transpose_a",
                name: "transposeA",
                type: "bool",
                defaultValue: !1
            }, {
                tfName: "transpose_b",
                name: "transposeB",
                type: "bool",
                defaultValue: !1
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "MatMul",
            category: "matrices",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "transpose_a",
                name: "transposeA",
                type: "bool",
                defaultValue: !1
            }, {
                tfName: "transpose_b",
                name: "transposeB",
                type: "bool",
                defaultValue: !1
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "BatchMatMul",
            category: "matrices",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "adj_x",
                name: "transposeA",
                type: "bool",
                defaultValue: !1
            }, {
                tfName: "adj_y",
                name: "transposeB",
                type: "bool",
                defaultValue: !1
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "BatchMatMulV2",
            category: "matrices",
            inputs: [{
                start: 0,
                name: "a",
                type: "tensor"
            }, {
                start: 1,
                name: "b",
                type: "tensor"
            }],
            attrs: [{
                tfName: "adj_x",
                name: "transposeA",
                type: "bool",
                defaultValue: !1
            }, {
                tfName: "adj_y",
                name: "transposeB",
                type: "bool",
                defaultValue: !1
            }, {
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }, {
            tfOpName: "Transpose",
            category: "matrices",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "perm",
                type: "number[]"
            }],
            attrs: [{
                tfName: "T",
                name: "dtype",
                type: "dtype",
                notSupported: !0
            }]
        }]
    })
      , GR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "FusedBatchNorm",
            category: "normalization",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "scale",
                type: "tensor"
            }, {
                start: 2,
                name: "offset",
                type: "tensor"
            }, {
                start: 3,
                name: "mean",
                type: "tensor"
            }, {
                start: 4,
                name: "variance",
                type: "tensor"
            }],
            attrs: [{
                tfName: "epsilon",
                name: "epsilon",
                type: "number",
                defaultValue: .001
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                notSupported: !0
            }]
        }, {
            tfOpName: "FusedBatchNormV2",
            category: "normalization",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "scale",
                type: "tensor"
            }, {
                start: 2,
                name: "offset",
                type: "tensor"
            }, {
                start: 3,
                name: "mean",
                type: "tensor"
            }, {
                start: 4,
                name: "variance",
                type: "tensor"
            }],
            attrs: [{
                tfName: "epsilon",
                name: "epsilon",
                type: "number",
                defaultValue: .001
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                notSupported: !0
            }]
        }, {
            tfOpName: "FusedBatchNormV3",
            category: "normalization",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "scale",
                type: "tensor"
            }, {
                start: 2,
                name: "offset",
                type: "tensor"
            }, {
                start: 3,
                name: "mean",
                type: "tensor"
            }, {
                start: 4,
                name: "variance",
                type: "tensor"
            }],
            attrs: [{
                tfName: "epsilon",
                name: "epsilon",
                type: "number",
                defaultValue: .001
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string",
                notSupported: !0
            }]
        }, {
            tfOpName: "LRN",
            category: "normalization",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "depth_radius",
                name: "radius",
                type: "number",
                defaultValue: 5
            }, {
                tfName: "bias",
                name: "bias",
                type: "number",
                defaultValue: 1
            }, {
                tfName: "alpha",
                name: "alpha",
                type: "number",
                defaultValue: 1
            }, {
                tfName: "beta",
                name: "beta",
                type: "number",
                defaultValue: .5
            }]
        }, {
            tfOpName: "Softmax",
            category: "normalization",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "LogSoftmax",
            category: "normalization",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "SparseToDense",
            category: "normalization",
            inputs: [{
                start: 0,
                name: "sparseIndices",
                type: "tensor"
            }, {
                start: 1,
                name: "outputShape",
                type: "number[]"
            }, {
                start: 2,
                name: "sparseValues",
                type: "tensor"
            }, {
                start: 3,
                name: "defaultValue",
                type: "tensor"
            }],
            attrs: [{
                tfName: "validate_indices",
                name: "validateIndices",
                type: "bool",
                defaultValue: !0,
                notSupported: !0
            }]
        }]
    })
      , KR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "Max",
            category: "reduction",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number[]"
            }],
            attrs: [{
                tfName: "keep_dims",
                name: "keepDims",
                type: "bool"
            }]
        }, {
            tfOpName: "Mean",
            category: "reduction",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number[]"
            }],
            attrs: [{
                tfName: "keep_dims",
                name: "keepDims",
                type: "bool"
            }]
        }, {
            tfOpName: "Min",
            category: "reduction",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number[]"
            }],
            attrs: [{
                tfName: "keep_dims",
                name: "keepDims",
                type: "bool"
            }]
        }, {
            tfOpName: "Sum",
            category: "reduction",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number[]"
            }],
            attrs: [{
                tfName: "keep_dims",
                name: "keepDims",
                type: "bool"
            }]
        }, {
            tfOpName: "All",
            category: "reduction",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number[]"
            }],
            attrs: [{
                tfName: "keep_dims",
                name: "keepDims",
                type: "bool"
            }]
        }, {
            tfOpName: "Any",
            category: "reduction",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number[]"
            }],
            attrs: [{
                tfName: "keep_dims",
                name: "keepDims",
                type: "bool"
            }]
        }, {
            tfOpName: "ArgMax",
            category: "reduction",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number"
            }]
        }, {
            tfOpName: "ArgMin",
            category: "reduction",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number"
            }]
        }, {
            tfOpName: "Prod",
            category: "reduction",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number[]"
            }],
            attrs: [{
                tfName: "keep_dims",
                name: "keepDims",
                type: "bool"
            }]
        }, {
            tfOpName: "Cumsum",
            category: "reduction",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number"
            }],
            attrs: [{
                tfName: "exclusive",
                name: "exclusive",
                type: "bool"
            }, {
                tfName: "reverse",
                name: "reverse",
                type: "bool"
            }]
        }]
    })
      , qR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "ConcatV2",
            category: "slice_join",
            inputs: [{
                start: 0,
                end: -1,
                name: "tensors",
                type: "tensors"
            }, {
                start: -1,
                name: "axis",
                type: "number"
            }],
            attrs: [{
                tfName: "N",
                name: "n",
                type: "number",
                defaultValue: 2
            }]
        }, {
            tfOpName: "Concat",
            category: "slice_join",
            inputs: [{
                start: 1,
                end: 0,
                name: "tensors",
                type: "tensors"
            }, {
                start: 0,
                name: "axis",
                type: "number"
            }],
            attrs: [{
                tfName: "N",
                name: "n",
                type: "number",
                defaultValue: 2
            }]
        }, {
            tfOpName: "GatherV2",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "indices",
                type: "tensor"
            }, {
                start: 2,
                name: "axis",
                type: "number",
                defaultValue: 0
            }]
        }, {
            tfOpName: "Gather",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "indices",
                type: "tensor"
            }],
            attrs: [{
                tfName: "axis",
                name: "axis",
                type: "number",
                defaultValue: 0
            }, {
                tfName: "validate_indices",
                name: "validateIndices",
                type: "bool",
                notSupported: !0
            }]
        }, {
            tfOpName: "Reverse",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "dims",
                type: "bool",
                notSupported: !0
            }]
        }, {
            tfOpName: "ReverseV2",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number[]"
            }]
        }, {
            tfOpName: "Slice",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "begin",
                type: "number[]"
            }, {
                start: 2,
                name: "size",
                type: "number[]"
            }]
        }, {
            tfOpName: "StridedSlice",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "begin",
                type: "number[]"
            }, {
                start: 2,
                name: "end",
                type: "number[]"
            }, {
                start: 3,
                name: "strides",
                type: "number[]"
            }],
            attrs: [{
                tfName: "begin_mask",
                name: "beginMask",
                type: "number",
                defaultValue: 0
            }, {
                tfName: "end_mask",
                name: "endMask",
                type: "number",
                defaultValue: 0
            }, {
                tfName: "new_axis_mask",
                name: "newAxisMask",
                type: "number",
                defaultValue: 0
            }, {
                tfName: "ellipsis_mask",
                name: "ellipsisMask",
                type: "number",
                defaultValue: 0
            }, {
                tfName: "shrink_axis_mask",
                name: "shrinkAxisMask",
                type: "number",
                defaultValue: 0
            }]
        }, {
            tfOpName: "Pack",
            category: "slice_join",
            inputs: [{
                start: 0,
                end: 0,
                name: "tensors",
                type: "tensors"
            }],
            attrs: [{
                tfName: "axis",
                name: "axis",
                type: "number",
                defaultValue: 0
            }]
        }, {
            tfOpName: "Unpack",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "tensor",
                type: "tensor"
            }],
            attrs: [{
                tfName: "axis",
                name: "axis",
                type: "number",
                defaultValue: 0
            }, {
                tfName: "num",
                name: "num",
                type: "number",
                defaultValue: 0,
                notSupported: !0
            }]
        }, {
            tfOpName: "Tile",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "reps",
                type: "number[]"
            }]
        }, {
            tfOpName: "Split",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "axis",
                type: "number",
                defaultValue: 0
            }, {
                start: 1,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "num_split",
                name: "numOrSizeSplits",
                type: "number",
                defaultValue: 1
            }]
        }, {
            tfOpName: "SplitV",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "numOrSizeSplits",
                type: "number[]"
            }, {
                start: 2,
                name: "axis",
                type: "number",
                defaultValue: 0
            }]
        }, {
            tfOpName: "ScatterNd",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "indices",
                type: "tensor"
            }, {
                start: 1,
                name: "values",
                type: "tensor"
            }, {
                start: 2,
                name: "shape",
                type: "number[]"
            }]
        }, {
            tfOpName: "GatherNd",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "indices",
                type: "tensor"
            }]
        }, {
            tfOpName: "SparseToDense",
            category: "slice_join",
            inputs: [{
                start: 0,
                name: "sparseIndices",
                type: "tensor"
            }, {
                start: 1,
                name: "outputShape",
                type: "number[]"
            }, {
                start: 2,
                name: "sparseValues",
                type: "tensor"
            }, {
                start: 3,
                name: "defaultValue",
                type: "tensor"
            }],
            attrs: [{
                tfName: "validate_indices",
                name: "validateIndices",
                type: "bool",
                defaultValue: !1,
                notSupported: !0
            }]
        }]
    })
      , XR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "FFT",
            category: "spectral",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "IFFT",
            category: "spectral",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }]
        }, {
            tfOpName: "RFFT",
            category: "spectral",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "fft_length",
                type: "number",
                notSupported: !0
            }]
        }, {
            tfOpName: "IRFFT",
            category: "spectral",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "fft_length",
                type: "number",
                notSupported: !0
            }]
        }]
    })
      , QR = Object.freeze({
        __proto__: null,
        json: [{
            tfOpName: "Cast",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "SrcT",
                name: "sdtype",
                type: "dtype",
                notSupported: !0
            }, {
                tfName: "DstT",
                name: "dtype",
                type: "dtype"
            }]
        }, {
            tfOpName: "ExpandDims",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "axis",
                type: "number"
            }]
        }, {
            tfOpName: "MirrorPad",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "padding",
                type: "number[]"
            }],
            attrs: [{
                tfName: "mode",
                name: "mode",
                type: "string"
            }]
        }, {
            tfOpName: "Pad",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "padding",
                type: "number[]"
            }],
            attrs: [{
                tfName: "constant_value",
                name: "constantValue",
                type: "number",
                defaultValue: 0
            }]
        }, {
            tfOpName: "PadV2",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "padding",
                type: "number[]"
            }, {
                start: 2,
                name: "constantValue",
                type: "number",
                defaultValue: 0
            }]
        }, {
            tfOpName: "Reshape",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "shape",
                type: "number[]"
            }]
        }, {
            tfOpName: "Squeeze",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "axis",
                tfDeprecatedName: "squeeze_dims",
                name: "axis",
                type: "number[]"
            }]
        }, {
            tfOpName: "SpaceToBatchND",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "blockShape",
                type: "number[]"
            }, {
                start: 2,
                name: "paddings",
                type: "number[]"
            }]
        }, {
            tfOpName: "BatchToSpaceND",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "blockShape",
                type: "number[]"
            }, {
                start: 2,
                name: "crops",
                type: "number[]"
            }]
        }, {
            tfOpName: "DepthToSpace",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }],
            attrs: [{
                tfName: "block_size",
                name: "blockSize",
                type: "number"
            }, {
                tfName: "data_format",
                name: "dataFormat",
                type: "string"
            }]
        }, {
            tfOpName: "BroadcastTo",
            category: "transformation",
            inputs: [{
                start: 0,
                name: "x",
                type: "tensor"
            }, {
                start: 1,
                name: "shape",
                type: "number[]"
            }],
            attrs: []
        }]
    })
      , YR = function() {
        function e() {
            var t;
            Ay(this, e);
            var n = (t = []).concat.apply(t, Vy([DR, BR, FR, MR, PR, LR, UR, jR, WR, VR, HR, GR, KR, qR, XR, QR, zR].map((function(e) {
                return e.json
            }
            ))));
            this.opMappers = n.reduce((function(e, t) {
                return e[t.tfOpName] = t,
                e
            }
            ), {})
        }
        return _y(e, null, [{
            key: "Instance",
            get: function() {
                return this._instance || (this._instance = new this)
            }
        }]),
        _y(e, [{
            key: "transformGraph",
            value: function(e) {
                var t = this
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , r = e.node
                  , a = []
                  , o = []
                  , i = []
                  , s = r.reduce((function(e, n) {
                    return e[n.name] = t.mapNode(n),
                    n.op.startsWith("Placeholder") ? a.push(e[n.name]) : "Const" === n.op ? o.push(e[n.name]) : null != n.input && 0 !== n.input.length || i.push(e[n.name]),
                    e
                }
                ), {})
                  , u = []
                  , c = []
                  , l = {}
                  , f = {};
                null != n && (l = this.mapSignatureEntries(n.inputs),
                f = this.mapSignatureEntries(n.outputs));
                var p = Object.keys(s);
                p.forEach((function(e) {
                    var t = s[e];
                    t.inputNames.forEach((function(e) {
                        var n = Uy(AR(e), 1)[0];
                        t.inputs.push(s[n]),
                        s[n].children.push(t)
                    }
                    ))
                }
                )),
                0 === Object.keys(f).length ? p.forEach((function(e) {
                    var t = s[e];
                    0 === t.children.length && c.push(t)
                }
                )) : Object.keys(f).forEach((function(e) {
                    var t = Uy(AR(e), 1)[0]
                      , n = s[t];
                    null != n && (n.signatureKey = f[e],
                    c.push(n))
                }
                )),
                Object.keys(l).length > 0 ? Object.keys(l).forEach((function(e) {
                    var t = Uy(AR(e), 1)[0]
                      , n = s[t];
                    n && (n.signatureKey = l[e],
                    u.push(n))
                }
                )) : u = a;
                var d = {};
                null != e.library && null != e.library.function && (d = e.library.function.reduce((function(e, n) {
                    return e[n.signature.name] = t.mapFunction(n),
                    e
                }
                ), {}));
                var h = {
                    nodes: s,
                    inputs: u,
                    outputs: c,
                    weights: o,
                    placeholders: a,
                    signature: n,
                    functions: d
                };
                return i.length > 0 && (h.initNodes = i),
                h
            }
        }, {
            key: "mapSignatureEntries",
            value: function(e) {
                return Object.keys(e || {}).reduce((function(t, n) {
                    return t[e[n].name] = n,
                    t
                }
                ), {})
            }
        }, {
            key: "mapNode",
            value: function(e) {
                var t = SR(e.op) || this.opMappers[e.op] || {};
                null == e.attr && (e.attr = {});
                var n = {
                    name: e.name,
                    op: e.op,
                    category: t.category,
                    inputNames: (e.input || []).map((function(e) {
                        return e.startsWith("^") ? e.substr(1) : e
                    }
                    )),
                    inputs: [],
                    children: [],
                    inputParams: {},
                    attrParams: {},
                    rawAttrs: e.attr
                };
                return null != t.inputs && (n.inputParams = t.inputs.reduce((function(e, t) {
                    return e[t.name] = {
                        type: t.type,
                        inputIndexStart: t.start,
                        inputIndexEnd: t.end
                    },
                    e
                }
                ), {})),
                null != t.attrs && (n.attrParams = t.attrs.reduce((function(t, n) {
                    var r, a = n.type;
                    switch (n.type) {
                    case "string":
                        void 0 === (r = ZR(e.attr, n.tfName, n.defaultValue)) && n.tfDeprecatedName && (r = ZR(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "string[]":
                        void 0 === (r = uO(e.attr, n.tfName, n.defaultValue)) && n.tfDeprecatedName && (r = uO(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "number":
                        void 0 === (r = eO(e.attr, n.tfName, n.defaultValue || 0)) && n.tfDeprecatedName && (r = eO(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "number[]":
                        void 0 === (r = sO(e.attr, n.tfName, n.defaultValue)) && n.tfDeprecatedName && (r = sO(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "bool":
                        void 0 === (r = JR(e.attr, n.tfName, n.defaultValue)) && n.tfDeprecatedName && (r = JR(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "bool[]":
                        void 0 === (r = lO(e.attr, n.tfName, n.defaultValue)) && n.tfDeprecatedName && (r = lO(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "shape":
                        void 0 === (r = iO(e.attr, n.tfName, n.defaultValue)) && n.tfDeprecatedName && (r = iO(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "shape[]":
                        void 0 === (r = cO(e.attr, n.tfName, n.defaultValue)) && n.tfDeprecatedName && (r = cO(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "dtype":
                        void 0 === (r = rO(e.attr, n.tfName, n.defaultValue)) && n.tfDeprecatedName && (r = rO(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "dtype[]":
                        void 0 === (r = aO(e.attr, n.tfName, n.defaultValue)) && n.tfDeprecatedName && (r = aO(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "func":
                        void 0 === (r = nO(e.attr, n.tfName, n.defaultValue)) && n.tfDeprecatedName && (r = nO(e.attr, n.tfDeprecatedName, n.defaultValue));
                        break;
                    case "tensor":
                    case "tensors":
                        break;
                    default:
                        throw new Error("Unsupported param type: ".concat(n.type, " for op: ").concat(e.op))
                    }
                    return t[n.name] = {
                        value: r,
                        type: a
                    },
                    t
                }
                ), {})),
                n
            }
        }, {
            key: "mapFunction",
            value: function(e) {
                var t = this
                  , n = e.nodeDef
                  , r = []
                  , a = {};
                null != n && (a = n.reduce((function(e, n) {
                    return e[n.name] = t.mapNode(n),
                    "Const" === n.op && r.push(e[n.name]),
                    e
                }
                ), {}));
                var o = []
                  , i = [];
                e.signature.inputArg.forEach((function(e) {
                    var t = Uy(AR(e.name), 1)[0]
                      , n = {
                        name: t,
                        op: "Placeholder",
                        inputs: [],
                        inputNames: [],
                        category: "graph",
                        inputParams: {},
                        attrParams: {
                            dtype: {
                                value: tO(e.type),
                                type: "dtype"
                            }
                        },
                        children: []
                    };
                    n.signatureKey = e.name,
                    o.push(n),
                    a[t] = n
                }
                )),
                Object.keys(a).forEach((function(e) {
                    var t = a[e];
                    t.inputNames.forEach((function(e) {
                        var n = Uy(AR(e), 1)[0];
                        t.inputs.push(a[n]),
                        a[n].children.push(t)
                    }
                    ))
                }
                ));
                var s = e.ret;
                e.signature.outputArg.forEach((function(e) {
                    var t = Uy(AR(s[e.name]), 2)
                      , n = t[0]
                      , r = t[1]
                      , o = a[n];
                    null != o && (o.defaultOutput = r,
                    i.push(o))
                }
                ));
                var u = this.mapArgsToSignature(e);
                return {
                    nodes: a,
                    inputs: o,
                    outputs: i,
                    weights: r,
                    placeholders: [],
                    signature: u
                }
            }
        }, {
            key: "mapArgsToSignature",
            value: function(e) {
                var t = this;
                return {
                    methodName: e.signature.name,
                    inputs: e.signature.inputArg.reduce((function(e, n) {
                        return e[n.name] = t.mapArgToTensorInfo(n),
                        e
                    }
                    ), {}),
                    outputs: e.signature.outputArg.reduce((function(n, r) {
                        return n[r.name] = t.mapArgToTensorInfo(r, e.ret),
                        n
                    }
                    ), {})
                }
            }
        }, {
            key: "mapArgToTensorInfo",
            value: function(e, t) {
                var n = e.name;
                return null != t && (n = t[n]),
                {
                    name: n,
                    dtype: e.type
                }
            }
        }]),
        e
    }();
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function $R(e, t) {
        var n = Array.isArray(e) ? String.fromCharCode.apply(null, e) : function(e) {
            var t = oC().global;
            if (void 0 !== t.atob)
                return t.atob(e);
            if ("undefined" != typeof Buffer)
                return new Buffer(e,"base64").toString();
            throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")
        }(e);
        return t ? n : n.toLowerCase()
    }
    function ZR(e, t, n) {
        var r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]
          , a = e[t];
        return null != a ? $R(a.s, r) : n
    }
    function JR(e, t, n) {
        var r = e[t];
        return r ? r.b : n
    }
    function eO(e, t, n) {
        var r = e[t] || {}
          , a = null != r.i ? r.i : null != r.f ? r.f : n;
        return "number" == typeof a ? a : parseInt(a, 10)
    }
    function tO(e) {
        switch ("string" == typeof e && (e = pR[e]),
        e) {
        case pR.DT_FLOAT:
            return "float32";
        case pR.DT_INT32:
        case pR.DT_INT64:
        case pR.DT_INT8:
        case pR.DT_UINT8:
            return "int32";
        case pR.DT_BOOL:
            return "bool";
        case pR.DT_DOUBLE:
            return "float32";
        case pR.DT_STRING:
            return "string";
        default:
            return null
        }
    }
    function nO(e, t, n) {
        var r = e[t];
        return r && r.func ? r.func.name : n
    }
    function rO(e, t, n) {
        var r = e[t];
        return r && r.type ? tO(r.type) : n
    }
    function aO(e, t, n) {
        var r = e[t];
        return r && r.list && r.list.type ? r.list.type.map((function(e) {
            return tO(e)
        }
        )) : n
    }
    function oO(e) {
        if (!e.unknownRank)
            return null != e.dim ? e.dim.map((function(e) {
                return "number" == typeof e.size ? e.size : parseInt(e.size, 10)
            }
            )) : []
    }
    function iO(e, t, n) {
        var r = e[t];
        return r && r.shape ? oO(r.shape) : n
    }
    function sO(e, t, n) {
        var r = e[t];
        return r ? ((r.list.f && r.list.f.length ? r.list.f : r.list.i) || []).map((function(e) {
            return "number" == typeof e ? e : parseInt(e, 10)
        }
        )) : n
    }
    function uO(e, t, n) {
        var r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]
          , a = e[t];
        return a && a.list && a.list.s ? a.list.s.map((function(e) {
            return $R(e, r)
        }
        )) : n
    }
    function cO(e, t, n) {
        var r = e[t];
        return r && r.list && r.list.shape ? r.list.shape.map((function(e) {
            return oO(e)
        }
        )) : n
    }
    function lO(e, t, n) {
        var r = e[t];
        return r && r.list && r.list.b ? r.list.b : n
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var fO = function() {
        function e(t, n, r) {
            var a = this;
            Ay(this, e),
            this.node = t,
            this.tensorMap = n,
            this.context = r,
            this.inputs = [],
            this.attrs = {},
            this.inputs = t.inputNames.map((function(e) {
                return a.getInput(e)
            }
            )),
            null != t.rawAttrs && (this.attrs = Object.keys(t.rawAttrs).reduce((function(e, t) {
                return e[t] = a.getAttr(t),
                e
            }
            ), {}))
        }
        return _y(e, [{
            key: "getInput",
            value: function(e) {
                return TR(e, this.tensorMap, this.context)
            }
        }, {
            key: "getAttr",
            value: function(e, t) {
                var n = this.node.rawAttrs[e];
                if (null != n.tensor)
                    return TR(e, this.tensorMap, this.context);
                if (null != n.i || null != n.f)
                    return eO(this.node.rawAttrs, e, t);
                if (null != n.s)
                    return ZR(this.node.rawAttrs, e, t);
                if (null != n.b)
                    return JR(this.node.rawAttrs, e, t);
                if (null != n.shape)
                    return iO(this.node.rawAttrs, e, t);
                if (null != n.type)
                    return rO(this.node.rawAttrs, e, t);
                if (null != n.list) {
                    if (null != n.list.i || null != n.list.f)
                        return sO(this.node.rawAttrs, e, t);
                    if (null != n.list.s)
                        return uO(this.node.rawAttrs, e, t);
                    if (null != n.list.shape)
                        return cO(this.node.rawAttrs, e, t);
                    if (null != n.list.b)
                        return lO(this.node.rawAttrs, e, t);
                    if (null != n.list.type)
                        return aO(this.node.rawAttrs, e, t)
                }
                return t
            }
        }]),
        e
    }();
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function pO(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
        Ik(function(e, t) {
            if (e.length !== t.length)
                return !1;
            for (var n = 0; n < e.length; n++)
                if (-1 !== e[n] && -1 !== t[n] && e[n] !== t[n])
                    return !1;
            return !0
        }/**
	   * @license
	   * Copyright 2018 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        (e, t), (function() {
            return n + " Shapes ".concat(e, " and ").concat(t, " must match")
        }
        ))
    }
    var dO = function() {
        function e(t, n, r, a, o, i, s) {
            Ay(this, e),
            this.name = t,
            this.dtype = n,
            this.maxSize = r,
            this.elementShape = a,
            this.identicalElementShapes = o,
            this.dynamicSize = i,
            this.clearAfterRead = s,
            this.tensors = [],
            this.closed_ = !1,
            this.idTensor = fT(0),
            ES(this.idTensor)
        }
        return _y(e, [{
            key: "clearAndClose",
            value: function(e) {
                this.tensors.forEach((function(t) {
                    null != e && e.has(t.tensor.id) || t.tensor.dispose()
                }
                )),
                this.tensors = [],
                this.closed_ = !0,
                this.idTensor.dispose()
            }
        }, {
            key: "size",
            value: function() {
                return this.tensors.length
            }
        }, {
            key: "read",
            value: function(e) {
                if (this.closed_)
                    throw new Error("TensorArray ".concat(this.name, " has already been closed."));
                if (e < 0 || e >= this.size())
                    throw new Error("Tried to read from index ".concat(e, ", but array size is: ").concat(this.size()));
                var t = this.tensors[e];
                if (t.cleared)
                    throw new Error("TensorArray ".concat(this.name, ": Could not read index ").concat(e, " twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?)."));
                return this.clearAfterRead && (t.cleared = !0),
                t.read = !0,
                t.tensor
            }
        }, {
            key: "readMany",
            value: function(e) {
                var t = this;
                return e.map((function(e) {
                    return t.read(e)
                }
                ))
            }
        }, {
            key: "write",
            value: function(e, t) {
                if (this.closed_)
                    throw new Error("TensorArray ".concat(this.name, " has already been closed."));
                if (e < 0 || !this.dynamicSize && e >= this.maxSize)
                    throw new Error("Tried to write to index ".concat(e, ", but array is not resizeable and size is: ").concat(this.maxSize));
                var n = this.tensors[e] || {};
                if (t.dtype !== this.dtype)
                    throw new Error("TensorArray ".concat(this.name, ": Could not write to TensorArray index ").concat(e, ",\n          because the value dtype is ").concat(t.dtype, ", but TensorArray dtype is ").concat(this.dtype, "."));
                if (0 !== this.size() || null != this.elementShape && 0 !== this.elementShape.length || (this.elementShape = t.shape),
                pO(this.elementShape, t.shape, "TensorArray ".concat(this.name, ": Could not write to TensorArray index ").concat(e, ".")),
                n.read)
                    throw new Error("TensorArray ".concat(this.name, ": Could not write to TensorArray index ").concat(e, ", because it has already been read."));
                if (n.written)
                    throw new Error("TensorArray ".concat(this.name, ": Could not write to TensorArray index ").concat(e, ", because it has already been written."));
                n.tensor = t,
                ES(t),
                n.written = !0,
                this.tensors[e] = n
            }
        }, {
            key: "writeMany",
            value: function(e, t) {
                var n = this;
                if (e.length !== t.length)
                    throw new Error("TensorArray ".concat(this.name, ": could not write multiple tensors,because the index size: ").concat(e.length, " is not the same as tensors size: ").concat(t.length, "."));
                e.forEach((function(e, r) {
                    return n.write(e, t[r])
                }
                ))
            }
        }, {
            key: "gather",
            value: function(e, t) {
                if (t && t !== this.dtype)
                    throw new Error("TensorArray dtype is ".concat(this.dtype, " but gather requested dtype ").concat(t));
                if (e)
                    e = e.slice(0, this.size());
                else {
                    e = [];
                    for (var n = 0; n < this.size(); n++)
                        e.push(n)
                }
                if (0 === e.length)
                    return pE([], [0].concat(this.elementShape));
                var r = this.readMany(e);
                return pO(this.elementShape, r[0].shape, "TensorArray shape mismatch: "),
                FA(r, 0)
            }
        }, {
            key: "concat",
            value: function(e) {
                if (e && e !== this.dtype)
                    throw new Error("TensorArray dtype is ".concat(this.dtype, " but concat requested dtype ").concat(e));
                if (0 === this.size())
                    return pE([], [0].concat(this.elementShape));
                for (var t = [], n = 0; n < this.size(); n++)
                    t.push(n);
                var r = this.readMany(t);
                return pO(this.elementShape, r[0].shape, "TensorArray shape mismatch: tensor array shape (".concat(this.elementShape, ") vs first tensor shape (").concat(r[0].shape, ")")),
                mI(r, 0)
            }
        }, {
            key: "scatter",
            value: function(e, t) {
                if (t.dtype !== this.dtype)
                    throw new Error("TensorArray dtype is ".concat(this.dtype, " but tensor has dtype ").concat(t.dtype));
                if (e.length !== t.shape[0])
                    throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length, " vs. ").concat(t.shape[0]));
                var n = Math.max.apply(Math, Vy(e));
                if (!this.dynamicSize && n >= this.maxSize)
                    throw new Error("Max index must be < array size (".concat(n, "  vs. ").concat(this.maxSize, ")"));
                this.writeMany(e, GA(t, 0))
            }
        }, {
            key: "split",
            value: function(e, t) {
                var n = this;
                if (t.dtype !== this.dtype)
                    throw new Error("TensorArray dtype is ".concat(this.dtype, " but tensor has dtype ").concat(t.dtype));
                var r = 0
                  , a = e.map((function(e) {
                    return r += e
                }
                ));
                if (r !== t.shape[0])
                    throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(r, ", and tensor's shape is: ").concat(t.shape));
                if (!this.dynamicSize && e.length !== this.maxSize)
                    throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize, " vs. ").concat(e.length, "), and the TensorArray is not marked as dynamically resizeable"));
                var o = 0 === r ? 0 : t.size / r
                  , i = [];
                CS((function() {
                    t = YE(t, [1, r, o]);
                    for (var s = 0; s < e.length; ++s) {
                        var u = [0, 0 === s ? 0 : a[s - 1], 0]
                          , c = [1, e[s], o];
                        i[s] = YE(gI(t, u, c), n.elementShape)
                    }
                    return i
                }
                ));
                for (var s = [], u = 0; u < e.length; u++)
                    s[u] = u;
                this.writeMany(s, i)
            }
        }, {
            key: "id",
            get: function() {
                return this.idTensor.id
            }
        }, {
            key: "closed",
            get: function() {
                return this.closed_
            }
        }]),
        e
    }()
      , hO = function() {
        function e(t, n, r) {
            var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : -1;
            Ay(this, e),
            this.tensors = t,
            this.elementShape = n,
            this.elementDtype = r,
            null != t && t.forEach((function(e) {
                if (r !== e.dtype)
                    throw new Error("Invalid data types; op elements ".concat(r, ", but list elements ").concat(e.dtype));
                pO(n, e.shape, "TensorList shape mismatch: "),
                ES(e)
            }
            )),
            this.idTensor = fT(0),
            this.maxNumElements = a,
            ES(this.idTensor)
        }
        return _y(e, [{
            key: "copy",
            value: function() {
                return new e(Vy(this.tensors),this.elementShape,this.elementDtype)
            }
        }, {
            key: "clearAndClose",
            value: function(e) {
                this.tensors.forEach((function(t) {
                    null != e && e.has(t.id) || t.dispose()
                }
                )),
                this.tensors.length = 0,
                this.idTensor.dispose()
            }
        }, {
            key: "size",
            value: function() {
                return this.tensors.length
            }
        }, {
            key: "stack",
            value: function(e, t) {
                var n = this
                  , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -1;
                if (t !== this.elementDtype)
                    throw new Error("Invalid data types; op elements ".concat(t, ", but list elements ").concat(this.elementDtype));
                if (-1 !== r && this.tensors.length !== r)
                    throw new Error("Operation expected a list with ".concat(r, " elements but got a list with ").concat(this.tensors.length, " elements."));
                return pO(e, this.elementShape, "TensorList shape mismatch: "),
                CS((function() {
                    var t = n.tensors.map((function(t) {
                        return YE(t, e)
                    }
                    ));
                    return FA(t, 0)
                }
                ))
            }
        }, {
            key: "popBack",
            value: function(e, t) {
                if (t !== this.elementDtype)
                    throw new Error("Invalid data types; op elements ".concat(t, ", but list elements ").concat(this.elementDtype));
                if (0 === this.size())
                    throw new Error("Trying to pop from an empty list.");
                var n = this.tensors.pop();
                return pO(n.shape, e, "TensorList shape mismatch: "),
                YE(n, e)
            }
        }, {
            key: "pushBack",
            value: function(e) {
                if (e.dtype !== this.elementDtype)
                    throw new Error("Invalid data types; op elements ".concat(e.dtype, ", but list elements ").concat(this.elementDtype));
                if (pO(e.shape, this.elementShape, "TensorList shape mismatch: "),
                this.maxNumElements === this.size())
                    throw new Error("Trying to push element into a full list.");
                ES(e),
                this.tensors.push(e)
            }
        }, {
            key: "resize",
            value: function(e) {
                if (e < 0)
                    throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));
                if (-1 !== this.maxNumElements && e > this.maxNumElements)
                    throw new Error("TensorListResize input size ".concat(e, " is greater maxNumElement ").concat(this.maxNumElements, "."));
                this.tensors.length = e
            }
        }, {
            key: "getItem",
            value: function(e, t, n) {
                if (n !== this.elementDtype)
                    throw new Error("Invalid data types; op elements ".concat(n, ", but list elements ").concat(this.elementDtype));
                if (e < 0 || e > this.tensors.length)
                    throw new Error("Trying to access element ".concat(e, " in a list with ").concat(this.tensors.length, " elements."));
                if (null == this.tensors[e])
                    throw new Error("element at index ".concat(e, " is null."));
                return pO(this.tensors[e].shape, t, "TensorList shape mismatch: "),
                this.tensors[e]
            }
        }, {
            key: "setItem",
            value: function(e, t) {
                if (t.dtype !== this.elementDtype)
                    throw new Error("Invalid data types; op elements ".concat(t.dtype, ", but list elements ").concat(this.elementDtype));
                if (e < 0 || -1 !== this.maxNumElements && e >= this.maxNumElements)
                    throw new Error("Trying to set element ".concat(e, " in a list with max ").concat(this.maxNumElements, " elements."));
                pO(this.elementShape, t.shape, "TensorList shape mismatch: "),
                ES(t),
                this.tensors[e] = t
            }
        }, {
            key: "gather",
            value: function(e, t, n) {
                var r = this;
                if (t !== this.elementDtype)
                    throw new Error("Invalid data types; op elements ".concat(t, ", but list elements ").concat(this.elementDtype));
                return pO(this.elementShape, n, "TensorList shape mismatch: "),
                0 === (e = e.slice(0, this.size())).length ? pE([], [0].concat(this.elementShape)) : CS((function() {
                    var t = e.map((function(e) {
                        return YE(r.tensors[e], n)
                    }
                    ));
                    return FA(t, 0)
                }
                ))
            }
        }, {
            key: "concat",
            value: function(e, t) {
                var n = this;
                if (e && e !== this.elementDtype)
                    throw new Error("TensorList dtype is ".concat(this.elementDtype, " but concat requested dtype ").concat(e));
                return pO(this.elementShape, t, "TensorList shape mismatch: "),
                0 === this.size() ? pE([], [0].concat(this.elementShape)) : CS((function() {
                    var e = n.tensors.map((function(e) {
                        return YE(e, t)
                    }
                    ));
                    return mI(e, 0)
                }
                ))
            }
        }, {
            key: "id",
            get: function() {
                return this.idTensor.id
            }
        }]),
        e
    }()
      , mO = function() {
        var e = Ty(regeneratorRuntime.mark((function e(t, n, r) {
            var a, o, i, s, u, c, l, f, p, d, h, m, v, g, y, b, x, w, k, C, E, S, I, T, A, N, _, R, O, D, B, F, M, P, L, U, V, z, W, j, H, G, K, q, X, Q, Y, $, Z, J, ee, te, ne, re, ae, oe, ie, se, ue, ce, le, fe, pe, de, he, me, ve, ge, ye, be, xe, we, ke, Ce, Ee, Se;
            return regeneratorRuntime.wrap((function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        e.t0 = t.op,
                        e.next = "If" === e.t0 || "StatelessIf" === e.t0 ? 3 : "While" === e.t0 || "StatelessWhile" === e.t0 ? 12 : "LoopCond" === e.t0 ? 16 : "Switch" === e.t0 ? 17 : "Merge" === e.t0 ? 28 : "Enter" === e.t0 ? 32 : "Exit" === e.t0 ? 34 : "NextIteration" === e.t0 ? 36 : "TensorArrayV3" === e.t0 ? 38 : "TensorArrayWriteV3" === e.t0 ? 40 : "TensorArrayReadV3" === e.t0 ? 42 : "TensorArrayGatherV3" === e.t0 ? 44 : "TensorArrayScatterV3" === e.t0 ? 46 : "TensorArrayConcatV3" === e.t0 ? 48 : "TensorArraySplitV3" === e.t0 ? 50 : "TensorArraySizeV3" === e.t0 ? 52 : "TensorArrayCloseV3" === e.t0 ? 54 : "TensorListSetItem" === e.t0 ? 56 : "TensorListGetItem" === e.t0 ? 58 : "TensorListScatterV2" === e.t0 || "TensorListScatter" === e.t0 ? 60 : "TensorListReserve" === e.t0 ? 62 : "TensorListGather" === e.t0 ? 64 : "TensorListStack" === e.t0 ? 66 : "TensorListFromTensor" === e.t0 ? 68 : "TensorListConcat" === e.t0 ? 70 : "TensorListPushBack" === e.t0 ? 72 : "TensorListPopBack" === e.t0 ? 74 : "TensorListSplit" === e.t0 ? 76 : 78;
                        break;
                    case 3:
                        return a = IR("thenBranch", t, n, r),
                        o = IR("elseBranch", t, n, r),
                        i = IR("cond", t, n, r),
                        s = IR("args", t, n, r),
                        e.next = 6,
                        i.data();
                    case 6:
                        if (!e.sent[0]) {
                            e.next = 10;
                            break
                        }
                        e.t1 = r.functionMap[a].executeFunctionAsync(s, r.tensorArrayMap, r.tensorListMap),
                        e.next = 11;
                        break;
                    case 10:
                        e.t1 = r.functionMap[o].executeFunctionAsync(s, r.tensorArrayMap, r.tensorListMap);
                    case 11:
                        return e.abrupt("return", e.t1);
                    case 12:
                        return e.delegateYield(regeneratorRuntime.mark((function e() {
                            var a, o, i, s, u, c, l, f;
                            return regeneratorRuntime.wrap((function(e) {
                                for (; ; )
                                    switch (e.prev = e.next) {
                                    case 0:
                                        return a = IR("body", t, n, r),
                                        o = IR("cond", t, n, r),
                                        i = IR("args", t, n, r),
                                        e.next = 5,
                                        r.functionMap[o].executeFunctionAsync(i, r.tensorArrayMap, r.tensorListMap);
                                    case 5:
                                        return s = e.sent,
                                        u = i.map((function(e) {
                                            return e.id
                                        }
                                        )),
                                        e.next = 9,
                                        s[0].data();
                                    case 9:
                                        c = e.sent,
                                        s.forEach((function(e) {
                                            e.kept || -1 !== u.indexOf(e.id) || e.dispose()
                                        }
                                        )),
                                        l = i,
                                        f = regeneratorRuntime.mark((function e() {
                                            var t, n, i;
                                            return regeneratorRuntime.wrap((function(e) {
                                                for (; ; )
                                                    switch (e.prev = e.next) {
                                                    case 0:
                                                        return t = l,
                                                        e.next = 3,
                                                        r.functionMap[a].executeFunctionAsync(l, r.tensorArrayMap, r.tensorListMap);
                                                    case 3:
                                                        return l = e.sent,
                                                        n = l.map((function(e) {
                                                            return e.id
                                                        }
                                                        )),
                                                        t.forEach((function(e) {
                                                            e.kept || -1 !== u.indexOf(e.id) || -1 !== n.indexOf(e.id) || e.dispose()
                                                        }
                                                        )),
                                                        e.next = 8,
                                                        r.functionMap[o].executeFunctionAsync(l, r.tensorArrayMap, r.tensorListMap);
                                                    case 8:
                                                        return i = e.sent,
                                                        e.next = 11,
                                                        i[0].data();
                                                    case 11:
                                                        c = e.sent,
                                                        i.forEach((function(e) {
                                                            e.kept || -1 !== u.indexOf(e.id) || -1 !== n.indexOf(e.id) || e.dispose()
                                                        }
                                                        ));
                                                    case 13:
                                                    case "end":
                                                        return e.stop()
                                                    }
                                            }
                                            ), e)
                                        }
                                        ));
                                    case 13:
                                        if (!c[0]) {
                                            e.next = 17;
                                            break
                                        }
                                        return e.delegateYield(f(), "t0", 15);
                                    case 15:
                                        e.next = 13;
                                        break;
                                    case 17:
                                        return e.abrupt("return", {
                                            v: l
                                        });
                                    case 18:
                                    case "end":
                                        return e.stop()
                                    }
                            }
                            ), e)
                        }
                        ))(), "t2", 13);
                    case 13:
                        if ("object" !== Sy(u = e.t2)) {
                            e.next = 16;
                            break
                        }
                        return e.abrupt("return", u.v);
                    case 16:
                        return e.abrupt("return", [OR(IR("pred", t, n, r))]);
                    case 17:
                        return c = IR("pred", t, n, r),
                        (l = IR("data", t, n, r)).kept || (l = OR(l)),
                        e.next = 22,
                        c.data();
                    case 22:
                        if (!e.sent[0]) {
                            e.next = 26;
                            break
                        }
                        e.t3 = [void 0, l],
                        e.next = 27;
                        break;
                    case 26:
                        e.t3 = [l, void 0];
                    case 27:
                        return e.abrupt("return", e.t3);
                    case 28:
                        if (!(f = t.inputNames.find((function(e) {
                            return void 0 !== TR(e, n, r)
                        }
                        )))) {
                            e.next = 31;
                            break
                        }
                        return e.abrupt("return", [OR(TR(f, n, r))]);
                    case 31:
                        return e.abrupt("return");
                    case 32:
                        return p = IR("frameName", t, n, r),
                        d = IR("tensor", t, n, r),
                        e.abrupt("return", (r.enterFrame(p),
                        [OR(d)]));
                    case 34:
                        return h = IR("tensor", t, n, r),
                        e.abrupt("return", (r.exitFrame(),
                        [OR(h)]));
                    case 36:
                        return m = IR("tensor", t, n, r),
                        e.abrupt("return", (r.nextIteration(),
                        [OR(m)]));
                    case 38:
                        return v = IR("size", t, n, r),
                        g = IR("dtype", t, n, r),
                        y = IR("elementShape", t, n, r),
                        b = IR("dynamicSize", t, n, r),
                        x = IR("clearAfterRead", t, n, r),
                        w = IR("identicalElementShapes", t, n, r),
                        k = IR("name", t, n, r),
                        C = new dO(k,g,v,y,w,b,x),
                        e.abrupt("return", (r.addTensorArray(C),
                        [C.idTensor, fT(1)]));
                    case 40:
                        return E = IR("tensorArrayId", t, n, r),
                        S = IR("index", t, n, r),
                        I = IR("tensor", t, n, r),
                        T = r.getTensorArray(E.id),
                        e.abrupt("return", (T.write(S, I),
                        [T.idTensor]));
                    case 42:
                        return A = IR("tensorArrayId", t, n, r),
                        N = IR("index", t, n, r),
                        e.abrupt("return", [r.getTensorArray(A.id).read(N)]);
                    case 44:
                        return _ = IR("tensorArrayId", t, n, r),
                        R = IR("indices", t, n, r),
                        O = IR("dtype", t, n, r),
                        e.abrupt("return", [r.getTensorArray(_.id).gather(R, O)]);
                    case 46:
                        return D = IR("tensorArrayId", t, n, r),
                        B = IR("indices", t, n, r),
                        F = IR("tensor", t, n, r),
                        M = r.getTensorArray(D.id),
                        e.abrupt("return", (M.scatter(B, F),
                        [M.idTensor]));
                    case 48:
                        return P = IR("tensorArrayId", t, n, r),
                        L = r.getTensorArray(P.id),
                        U = IR("dtype", t, n, r),
                        e.abrupt("return", [L.concat(U)]);
                    case 50:
                        return V = IR("tensorArrayId", t, n, r),
                        z = IR("tensor", t, n, r),
                        W = IR("lengths", t, n, r),
                        j = r.getTensorArray(V.id),
                        e.abrupt("return", (j.split(W, z),
                        [j.idTensor]));
                    case 52:
                        return H = IR("tensorArrayId", t, n, r),
                        e.abrupt("return", [fT(r.getTensorArray(H.id).size(), "int32")]);
                    case 54:
                        return G = IR("tensorArrayId", t, n, r),
                        K = r.getTensorArray(G.id),
                        e.abrupt("return", (K.clearAndClose(),
                        [K.idTensor]));
                    case 56:
                        return q = IR("tensorListId", t, n, r),
                        X = IR("index", t, n, r),
                        Q = IR("tensor", t, n, r),
                        Y = r.getTensorList(q.id),
                        e.abrupt("return", (Y.setItem(X, Q),
                        [Y.idTensor]));
                    case 58:
                        return $ = IR("tensorListId", t, n, r),
                        Z = IR("index", t, n, r),
                        J = IR("elementShape", t, n, r),
                        ee = IR("elementDType", t, n, r),
                        e.abrupt("return", [r.getTensorList($.id).getItem(Z, J, ee)]);
                    case 60:
                        return te = IR("indices", t, n, r),
                        ne = function(e, t, n, r) {
                            if (t.length !== e.shape[0])
                                throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length, " vs. ").concat(e.shape[0]));
                            var a = Math.max.apply(Math, Vy(t));
                            if (null != r && -1 !== r && a >= r)
                                throw new Error("Max index must be < array size (".concat(a, "  vs. ").concat(r, ")"));
                            var o = new hO([],n,e.dtype,r)
                              , i = GA(e, 0);
                            return t.forEach((function(e, t) {
                                o.setItem(e, i[t])
                            }
                            )),
                            o
                        }(IR("tensor", t, n, r), te, IR("elementShape", t, n, r), IR("numElements", t, n, r)),
                        e.abrupt("return", (r.addTensorList(ne),
                        [ne.idTensor]));
                    case 62:
                        return re = function(e, t, n) {
                            return new hO([],e,t,n)
                        }(IR("elementShape", t, n, r), IR("elementDType", t, n, r), IR("numElements", t, n, r)),
                        e.abrupt("return", (r.addTensorList(re),
                        [re.idTensor]));
                    case 64:
                        return ae = IR("tensorListId", t, n, r),
                        oe = IR("indices", t, n, r),
                        ie = IR("elementShape", t, n, r),
                        se = IR("elementDType", t, n, r),
                        e.abrupt("return", [r.getTensorList(ae.id).gather(oe, se, ie)]);
                    case 66:
                        return ue = IR("tensorListId", t, n, r),
                        ce = IR("elementShape", t, n, r),
                        le = IR("elementDType", t, n, r),
                        fe = IR("numElements", t, n, r),
                        e.abrupt("return", [r.getTensorList(ue.id).stack(ce, le, fe)]);
                    case 68:
                        return pe = function(e, t, n) {
                            var r = e.dtype;
                            if (e.shape.length < 1)
                                throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));
                            if (e.dtype !== n)
                                throw new Error("Invalid data types; op elements ".concat(e.dtype, ", but list elements ").concat(n));
                            pO(e.shape.slice(1), t, "TensorList shape mismatch: ");
                            var a = GA(e);
                            return new hO(a,t,r)
                        }(IR("tensor", t, n, r), IR("elementShape", t, n, r), IR("elementDType", t, n, r)),
                        e.abrupt("return", (r.addTensorList(pe),
                        [pe.idTensor]));
                    case 70:
                        return de = IR("tensorListId", t, n, r),
                        he = r.getTensorList(de.id),
                        me = IR("dtype", t, n, r),
                        ve = IR("elementShape", t, n, r),
                        e.abrupt("return", [he.concat(me, ve)]);
                    case 72:
                        return ge = IR("tensorListId", t, n, r),
                        ye = IR("tensor", t, n, r),
                        be = r.getTensorList(ge.id),
                        e.abrupt("return", (be.pushBack(ye),
                        [be.idTensor]));
                    case 74:
                        return xe = IR("tensorListId", t, n, r),
                        we = IR("elementShape", t, n, r),
                        ke = IR("elementDType", t, n, r),
                        e.abrupt("return", [r.getTensorList(xe.id).popBack(we, ke)]);
                    case 76:
                        return Ce = IR("tensor", t, n, r),
                        Ee = IR("elementShape", t, n, r),
                        Se = function(e, t, n) {
                            var r = 0
                              , a = t.map((function(e) {
                                return r += e
                            }
                            ));
                            if (r !== e.shape[0])
                                throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(r, ", and tensor's shape is: ").concat(e.shape));
                            for (var o = 0 === r ? 0 : e.size / r, i = CS((function() {
                                var i = [];
                                e = YE(e, [1, r, o]);
                                for (var s = 0; s < t.length; ++s) {
                                    var u = [0, 0 === s ? 0 : a[s - 1], 0]
                                      , c = [1, t[s], o];
                                    i[s] = YE(gI(e, u, c), n)
                                }
                                return e.dispose(),
                                i
                            }
                            )), s = new hO([],n,e.dtype,t.length), u = 0; u < i.length; u++)
                                s.setItem(u, i[u]);
                            return s
                        }(Ce, IR("lengths", t, n, r), Ee),
                        e.abrupt("return", (r.addTensorList(Se),
                        [Se.idTensor]));
                    case 78:
                        throw TypeError("Node type ".concat(t.op, " is not implemented"));
                    case 79:
                    case "end":
                        return e.stop()
                    }
            }
            ), e)
        }
        )));
        return function(t, n, r) {
            return e.apply(this, arguments)
        }
    }();
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function vO(e, t, n) {
        var r = Uy(IR("fusedOps", e, t, n), 2)
          , a = r[0]
          , o = r[1]
          , i = "biasadd" === a
          , s = "prelu" === o
          , u = "fusedbatchnorm" === a
          , c = IR("numArgs", e, t, n);
        if (i) {
            if (s && 2 !== c)
                throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");
            if (!s && 1 !== c)
                throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")
        }
        if (u)
            throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");
        var l = IR("strides", e, t, n)
          , f = RR(e, t, n)
          , p = IR("dataFormat", e, t, n).toUpperCase()
          , d = IR("dilations", e, t, n)
          , h = Uy(IR("args", e, t, n), 2);
        return {
            stride: l,
            pad: f,
            dataFormat: p,
            dilations: d,
            biasArg: h[0],
            preluArg: h[1],
            activationFunc: o
        }
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function gO(e, t, n) {
        return {
            boxes: IR("boxes", e, t, n),
            scores: IR("scores", e, t, n),
            maxOutputSize: IR("maxOutputSize", e, t, n),
            iouThreshold: IR("iouThreshold", e, t, n),
            scoreThreshold: IR("scoreThreshold", e, t, n),
            softNmsSigma: IR("softNmsSigma", e, t, n)
        }
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var yO = function() {
        function e(t, n) {
            Ay(this, e),
            this.keyDType = t,
            this.valueDType = n,
            this.handle = fT(0),
            this.tensorMap = new Map,
            ES(this.handle)
        }
        var t, n;
        return _y(e, [{
            key: "clearAndClose",
            value: function() {
                this.tensorMap.forEach((function(e) {
                    return e.dispose()
                }
                )),
                this.tensorMap.clear(),
                this.handle.dispose()
            }
        }, {
            key: "size",
            value: function() {
                return this.tensorMap.size
            }
        }, {
            key: "import",
            value: (n = Ty(regeneratorRuntime.mark((function e(t, n) {
                var r, a = this;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return this.checkKeyAndValueTensor(t, n),
                            e.next = 3,
                            t.data();
                        case 3:
                            return r = e.sent,
                            e.abrupt("return", (this.tensorMap.forEach((function(e) {
                                return e.dispose()
                            }
                            )),
                            this.tensorMap.clear(),
                            CS((function() {
                                var e = GA(n)
                                  , t = r.length
                                  , o = e.length;
                                Ik(t === o, (function() {
                                    return "The number of elements doesn't match, keys has ".concat(t, " elements, the values has ").concat(o, " elements.")
                                }
                                ));
                                for (var i = 0; i < t; i++) {
                                    var s = r[i]
                                      , u = e[i];
                                    ES(u),
                                    a.tensorMap.set(s, u)
                                }
                                return a.handle
                            }
                            ))));
                        case 5:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e, t) {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "find",
            value: (t = Ty(regeneratorRuntime.mark((function e(t, n) {
                var r, a = this;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return this.checkKeyAndValueTensor(t, n),
                            e.next = 3,
                            t.data();
                        case 3:
                            return r = e.sent,
                            e.abrupt("return", CS((function() {
                                for (var e = [], t = 0; t < r.length; t++) {
                                    var o = r[t]
                                      , i = a.findWithDefault(o, n);
                                    e.push(i)
                                }
                                return FA(e)
                            }
                            )));
                        case 5:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e, n) {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "findWithDefault",
            value: function(e, t) {
                var n = this.tensorMap.get(e);
                return null != n ? n : t
            }
        }, {
            key: "checkKeyAndValueTensor",
            value: function(e, t) {
                if (e.dtype !== this.keyDType)
                    throw new Error("Expect key dtype ".concat(this.keyDType, ", but got ").concat(e.dtype));
                if (t.dtype !== this.valueDType)
                    throw new Error("Expect value dtype ".concat(this.valueDType, ", but got ").concat(t.dtype))
            }
        }, {
            key: "id",
            get: function() {
                return this.handle.id
            }
        }]),
        e
    }();
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function bO(e, t, n, r) {
        var a = function(e, t, n) {
            switch (e.category) {
            case "arithmetic":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "BiasAdd":
                        case "AddV2":
                        case "Add":
                            return [TS(IR("a", e, t, n), IR("b", e, t, n))];
                        case "AddN":
                            return [BS(IR("tensors", e, t, n))];
                        case "FloorMod":
                        case "Mod":
                            return [zT(IR("a", e, t, n), IR("b", e, t, n))];
                        case "Mul":
                            return [_S(IR("a", e, t, n), IR("b", e, t, n))];
                        case "RealDiv":
                        case "Div":
                            return [NS(IR("a", e, t, n), IR("b", e, t, n))];
                        case "DivNoNan":
                            return [HI(IR("a", e, t, n), IR("b", e, t, n))];
                        case "FloorDiv":
                            return [AS(IR("a", e, t, n), IR("b", e, t, n))];
                        case "Sub":
                            return [ET(IR("a", e, t, n), IR("b", e, t, n))];
                        case "Minimum":
                            return [UT(IR("a", e, t, n), IR("b", e, t, n))];
                        case "Maximum":
                            return [lT(IR("a", e, t, n), IR("b", e, t, n))];
                        case "Pow":
                            return [YT(IR("a", e, t, n), IR("b", e, t, n))];
                        case "SquaredDifference":
                            return [DA(IR("a", e, t, n), IR("b", e, t, n))];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "basic_math":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "Abs":
                        case "ComplexAbs":
                            return [RS(IR("x", e, t, n))];
                        case "Acos":
                            return [OS(IR("x", e, t, n))];
                        case "Acosh":
                            return [DS(IR("x", e, t, n))];
                        case "Asin":
                            return [qS(IR("x", e, t, n))];
                        case "Asinh":
                            return [XS(IR("x", e, t, n))];
                        case "Atan":
                            return [QS(IR("x", e, t, n))];
                        case "Atan2":
                            return [YS(IR("x", e, t, n), IR("y", e, t, n))];
                        case "Atanh":
                            return [$S(IR("x", e, t, n))];
                        case "Ceil":
                            return [CI(IR("x", e, t, n))];
                        case "Complex":
                            return [lE(IR("real", e, t, n), IR("imag", e, t, n))];
                        case "Cos":
                            return [OI(IR("x", e, t, n))];
                        case "Cosh":
                            return [DI(IR("x", e, t, n))];
                        case "Elu":
                            return [KI(IR("x", e, t, n))];
                        case "Erf":
                            return [qI(IR("x", e, t, n))];
                        case "Exp":
                            return [XI(IR("x", e, t, n))];
                        case "Expm1":
                            return [YI(IR("x", e, t, n))];
                        case "Floor":
                            return [JI(IR("x", e, t, n))];
                        case "Log":
                            return [gT(IR("x", e, t, n))];
                        case "Log1p":
                            return [yT(IR("x", e, t, n))];
                        case "Imag":
                            return [iT(IR("x", e, t, n))];
                        case "Neg":
                            return [xT(IR("x", e, t, n))];
                        case "Reciprocal":
                            return [dA(IR("x", e, t, n))];
                        case "Real":
                            return [GT(IR("x", e, t, n))];
                        case "Relu":
                            return [hA(IR("x", e, t, n))];
                        case "Round":
                            return [gA(IR("x", e, t, n))];
                        case "Selu":
                            return [bA(IR("x", e, t, n))];
                        case "Sigmoid":
                            return [vI(IR("x", e, t, n))];
                        case "Sin":
                            return [CA(IR("x", e, t, n))];
                        case "Sign":
                            return [kA(IR("x", e, t, n))];
                        case "Sinh":
                            return [EA(IR("x", e, t, n))];
                        case "Softplus":
                            return [wT(IR("x", e, t, n))];
                        case "Sqrt":
                            return [OA(IR("x", e, t, n))];
                        case "Square":
                            return [WT(IR("x", e, t, n))];
                        case "Tanh":
                            return [yI(IR("x", e, t, n))];
                        case "Tan":
                            return [LA(IR("x", e, t, n))];
                        case "Relu6":
                        case "ClipByValue":
                            return [EI(IR("x", e, t, n), IR("clipValueMin", e, t, n), IR("clipValueMax", e, t, n))];
                        case "Rsqrt":
                            return [yA(TR(e.inputNames[0], t, n))];
                        case "Prod":
                            return [ZT(IR("x", e, t, n), IR("axes", e, t, n))];
                        case "LeakyRelu":
                            return [pT(IR("x", e, t, n), IR("alpha", e, t, n))];
                        case "Prelu":
                            return [$T(IR("x", e, t, n), IR("alpha", e, t, n))];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "control":
                return mO(e, t, n);
            case "convolution":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "Conv1D":
                            var r = IR("stride", e, t, n)
                              , a = IR("pad", e, t, n)
                              , o = IR("dataFormat", e, t, n).toUpperCase()
                              , i = IR("dilation", e, t, n);
                            return [TI(IR("x", e, t, n), IR("filter", e, t, n), r, a, o, i)];
                        case "Conv2D":
                            var s = IR("strides", e, t, n)
                              , u = RR(e, t, n)
                              , c = IR("dataFormat", e, t, n).toUpperCase()
                              , l = IR("dilations", e, t, n);
                            return [II(IR("x", e, t, n), IR("filter", e, t, n), [s[1], s[2]], u, c, [l[1], l[2]])];
                        case "_FusedConv2D":
                            var f = vO(e, t, n)
                              , p = f.stride
                              , d = f.pad
                              , h = f.dataFormat
                              , m = f.dilations
                              , v = f.biasArg
                              , g = f.preluArg
                              , y = f.activationFunc;
                            return [bN({
                                x: IR("x", e, t, n),
                                filter: IR("filter", e, t, n),
                                strides: [p[1], p[2]],
                                pad: d,
                                dataFormat: h,
                                dilations: [m[1], m[2]],
                                bias: v,
                                activation: y,
                                preluActivationWeights: g
                            })];
                        case "FusedDepthwiseConv2dNative":
                            var b = vO(e, t, n)
                              , x = b.stride
                              , w = b.pad
                              , k = b.dataFormat
                              , C = b.dilations
                              , E = b.biasArg
                              , S = b.preluArg
                              , I = b.activationFunc;
                            return [kN({
                                x: IR("x", e, t, n),
                                filter: IR("filter", e, t, n),
                                strides: [x[1], x[2]],
                                pad: w,
                                dataFormat: k,
                                dilations: [C[1], C[2]],
                                bias: E,
                                activation: I,
                                preluActivationWeights: S
                            })];
                        case "Conv2DBackpropInput":
                        case "Conv2dTranspose":
                            var T = IR("outputShape", e, t, n)
                              , A = IR("strides", e, t, n)
                              , N = RR(e, t, n);
                            return [NI(IR("x", e, t, n), IR("filter", e, t, n), T, [A[1], A[2]], N)];
                        case "DepthwiseConv2dNative":
                        case "DepthwiseConv2d":
                            var _ = IR("strides", e, t, n)
                              , R = RR(e, t, n)
                              , O = IR("dilations", e, t, n)
                              , D = IR("dataFormat", e, t, n).toUpperCase();
                            return [MI(IR("input", e, t, n), IR("filter", e, t, n), [_[1], _[2]], R, D, [O[1], O[2]])];
                        case "Conv3D":
                            var B = IR("strides", e, t, n)
                              , F = IR("pad", e, t, n)
                              , M = IR("dataFormat", e, t, n).toUpperCase()
                              , P = IR("dilations", e, t, n);
                            return [_I(IR("x", e, t, n), IR("filter", e, t, n), [B[1], B[2], B[3]], F, M, [P[1], P[2], P[3]])];
                        case "AvgPool":
                            var L = IR("strides", e, t, n)
                              , U = IR("pad", e, t, n)
                              , V = IR("kernelSize", e, t, n);
                            return [fI(IR("x", e, t, n), [V[1], V[2]], [L[1], L[2]], U)];
                        case "MaxPool":
                            var z = IR("strides", e, t, n)
                              , W = IR("pad", e, t, n)
                              , j = IR("kernelSize", e, t, n);
                            return [OT(IR("x", e, t, n), [j[1], j[2]], [z[1], z[2]], W)];
                        case "MaxPoolWithArgmax":
                            var H = IR("strides", e, t, n)
                              , G = IR("pad", e, t, n)
                              , K = IR("kernelSize", e, t, n)
                              , q = IR("includeBatchInIndex", e, t, n)
                              , X = BT(IR("x", e, t, n), [K[1], K[2]], [H[1], H[2]], G, q);
                            return [X.result, X.indexes];
                        case "AvgPool3D":
                            var Q = IR("strides", e, t, n)
                              , Y = IR("pad", e, t, n)
                              , $ = IR("kernelSize", e, t, n);
                            return [pI(IR("x", e, t, n), [$[1], $[2], $[3]], [Q[1], Q[2], Q[3]], Y)];
                        case "MaxPool3D":
                            var Z = IR("strides", e, t, n)
                              , J = IR("pad", e, t, n)
                              , ee = IR("kernelSize", e, t, n);
                            return [DT(IR("x", e, t, n), [ee[1], ee[2], ee[3]], [Z[1], Z[2], Z[3]], J)];
                        case "Dilation2D":
                            var te = IR("strides", e, t, n)
                              , ne = IR("pad", e, t, n)
                              , re = IR("dilations", e, t, n)
                              , ae = te[1]
                              , oe = te[2]
                              , ie = re[1]
                              , se = re[2];
                            return [PI(IR("x", e, t, n), IR("filter", e, t, n), [ae, oe], ne, [ie, se], "NHWC")];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "creation":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "Fill":
                            var r = IR("shape", e, t, n)
                              , a = IR("dtype", e, t, n);
                            return [ZI(r, IR("value", e, t, n), a)];
                        case "LinSpace":
                            return [mT(IR("start", e, t, n), IR("stop", e, t, n), IR("num", e, t, n))];
                        case "Multinomial":
                            var o = IR("logits", e, t, n)
                              , i = IR("numSamples", e, t, n)
                              , s = IR("seed", e, t, n);
                            return [jT(o, i, s)];
                        case "OneHot":
                            var u = IR("indices", e, t, n)
                              , c = IR("depth", e, t, n)
                              , l = IR("onValue", e, t, n)
                              , f = IR("offValue", e, t, n);
                            return [ZE(u, c, l, f)];
                        case "Ones":
                            return [MT(IR("shape", e, t, n), IR("dtype", e, t, n))];
                        case "OnesLike":
                            return [KT(IR("x", e, t, n))];
                        case "RandomUniform":
                            return [lA(IR("shape", e, t, n), IR("minval", e, t, n), IR("maxval", e, t, n), IR("dtype", e, t, n))];
                        case "Range":
                            return [pA(IR("start", e, t, n), IR("stop", e, t, n), IR("step", e, t, n), IR("dtype", e, t, n))];
                        case "TruncatedNormal":
                            var p = IR("shape", e, t, n)
                              , d = IR("mean", e, t, n)
                              , h = IR("stdDev", e, t, n)
                              , m = IR("seed", e, t, n);
                            return [WA(p, d, h, IR("dtype", e, t, n), m)];
                        case "Zeros":
                            return [FT(IR("shape", e, t, n), IR("dtype", e, t, n))];
                        case "ZerosLike":
                            return [jI(IR("x", e, t, n))];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "dynamic":
                return (i = Ty(regeneratorRuntime.mark((function e(t, n, r) {
                    var a, o, i, s, u, c, l, f, p, d, h, m, v, g, y, b, x, w, k, C, E, S, I, T;
                    return regeneratorRuntime.wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                e.t0 = t.op,
                                e.next = "NonMaxSuppressionV5" === e.t0 ? 3 : "NonMaxSuppressionV4" === e.t0 ? 14 : "NonMaxSuppressionV3" === e.t0 || "NonMaxSuppressionV2" === e.t0 ? 25 : "Where" === e.t0 ? 30 : "ListDiff" === e.t0 ? 36 : 37;
                                break;
                            case 3:
                                return a = gO(t, n, r),
                                o = a.boxes,
                                i = a.scores,
                                s = a.maxOutputSize,
                                u = a.iouThreshold,
                                c = a.scoreThreshold,
                                l = a.softNmsSigma,
                                e.next = 12,
                                GN.nonMaxSuppressionWithScoreAsync(o, i, s, u, c, l);
                            case 12:
                                return f = e.sent,
                                e.abrupt("return", [f.selectedIndices, f.selectedScores]);
                            case 14:
                                return p = gO(t, n, r),
                                d = p.boxes,
                                h = p.scores,
                                m = p.maxOutputSize,
                                v = p.iouThreshold,
                                g = p.scoreThreshold,
                                y = IR("padToMaxOutputSize", t, n, r),
                                e.next = 23,
                                GN.nonMaxSuppressionPaddedAsync(d, h, m, v, g, y);
                            case 23:
                                return b = e.sent,
                                e.abrupt("return", [b.selectedIndices, b.validOutputs]);
                            case 25:
                                return x = gO(t, n, r),
                                w = x.boxes,
                                k = x.scores,
                                C = x.maxOutputSize,
                                E = x.iouThreshold,
                                S = x.scoreThreshold,
                                e.next = 28,
                                GN.nonMaxSuppressionAsync(w, k, C, E, S);
                            case 28:
                                return e.t1 = e.sent,
                                e.abrupt("return", [e.t1]);
                            case 30:
                                return I = zE(IR("condition", t, n, r), "bool"),
                                e.next = 33,
                                qA(I);
                            case 33:
                                return e.t2 = e.sent,
                                T = [e.t2],
                                e.abrupt("return", (I.dispose(),
                                T));
                            case 36:
                                return e.abrupt("return", wA(IR("x", t, n, r), IR("y", t, n, r)));
                            case 37:
                                throw TypeError("Node type ".concat(t.op, " is not implemented"));
                            case 38:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                function(e, t, n) {
                    return i.apply(this, arguments)
                }
                )(e, t, n);
            case "evaluation":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "TopKV2":
                            var r = IR("x", e, t, n)
                              , a = IR("k", e, t, n)
                              , o = IR("sorted", e, t, n)
                              , i = zA(r, a, o);
                            return [i.values, i.indices];
                        case "Unique":
                            var s = IR("x", e, t, n)
                              , u = jA(s);
                            return [u.values, u.indices];
                        case "UniqueV2":
                            var c = IR("x", e, t, n)
                              , l = IR("axis", e, t, n)
                              , f = jA(c, l);
                            return [f.values, f.indices];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "image":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "ResizeBilinear":
                            var r = IR("images", e, t, n)
                              , a = IR("size", e, t, n)
                              , o = IR("alignCorners", e, t, n);
                            return [GN.resizeBilinear(r, [a[0], a[1]], o)];
                        case "ResizeNearestNeighbor":
                            var i = IR("images", e, t, n)
                              , s = IR("size", e, t, n)
                              , u = IR("alignCorners", e, t, n);
                            return [GN.resizeNearestNeighbor(i, [s[0], s[1]], u)];
                        case "CropAndResize":
                            var c = IR("image", e, t, n)
                              , l = IR("boxes", e, t, n)
                              , f = IR("boxInd", e, t, n)
                              , p = IR("cropSize", e, t, n)
                              , d = IR("method", e, t, n)
                              , h = IR("extrapolationValue", e, t, n);
                            return [GN.cropAndResize(c, l, f, p, d, h)];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "graph":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "Const":
                            return t[e.name];
                        case "PlaceholderWithDefault":
                            var r = IR("default", e, t, n);
                            return [TR(e.name, t, n) || r];
                        case "Placeholder":
                            return [TR(e.name, t, n)];
                        case "Identity":
                        case "StopGradient":
                        case "FakeQuantWithMinMaxVars":
                            return [OR(IR("x", e, t, n))];
                        case "IdentityN":
                            return IR("x", e, t, n).map((function(e) {
                                return OR(e)
                            }
                            ));
                        case "Snapshot":
                            return [OR(IR("x", e, t, n))];
                        case "Shape":
                            return [fA(IR("x", e, t, n).shape, "int32")];
                        case "ShapeN":
                            return IR("x", e, t, n).map((function(e) {
                                return fA(e.shape)
                            }
                            ));
                        case "Size":
                            return [fT(IR("x", e, t, n).size, "int32")];
                        case "Rank":
                            return [fT(IR("x", e, t, n).rank, "int32")];
                        case "NoOp":
                            return [fT(1)];
                        case "Print":
                            var a = IR("x", e, t, n)
                              , o = IR("data", e, t, n)
                              , i = IR("message", e, t, n)
                              , s = IR("summarize", e, t, n);
                            console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),
                            console.log(i);
                            for (var u = 0; u < o.length; u++)
                                console.log(Array.prototype.slice.call(o[u].dataSync()).slice(0, s));
                            return [a];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "logical":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "Equal":
                            return [zI(IR("a", e, t, n), IR("b", e, t, n))];
                        case "NotEqual":
                            return [HT(IR("a", e, t, n), IR("b", e, t, n))];
                        case "Greater":
                            return [aT(IR("a", e, t, n), IR("b", e, t, n))];
                        case "GreaterEqual":
                            return [oT(IR("a", e, t, n), IR("b", e, t, n))];
                        case "Less":
                            return [dT(IR("a", e, t, n), IR("b", e, t, n))];
                        case "LessEqual":
                            return [hT(IR("a", e, t, n), IR("b", e, t, n))];
                        case "LogicalAnd":
                            return [AT(IR("a", e, t, n), IR("b", e, t, n))];
                        case "LogicalNot":
                            return [NT(IR("a", e, t, n))];
                        case "LogicalOr":
                            return [_T(IR("a", e, t, n), IR("b", e, t, n))];
                        case "Select":
                        case "SelectV2":
                            return [WI(IR("condition", e, t, n), IR("a", e, t, n), IR("b", e, t, n))];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "matrices":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "BatchMatMul":
                        case "BatchMatMulV2":
                        case "MatMul":
                            return [$E(IR("a", e, t, n), IR("b", e, t, n), IR("transposeA", e, t, n), IR("transposeB", e, t, n))];
                        case "Transpose":
                            return [JE(IR("x", e, t, n), IR("perm", e, t, n))];
                        case "_FusedMatMul":
                            var r = Uy(IR("fusedOps", e, t, n), 2)
                              , a = r[0]
                              , o = r[1]
                              , i = "biasadd" === a
                              , s = "prelu" === o
                              , u = IR("numArgs", e, t, n);
                            if (i) {
                                if (s && 2 !== u)
                                    throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");
                                if (!s && 1 !== u)
                                    throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")
                            }
                            var c = Uy(IR("args", e, t, n), 2)
                              , l = c[0]
                              , f = c[1];
                            return [CN({
                                a: IR("a", e, t, n),
                                b: IR("b", e, t, n),
                                transposeA: IR("transposeA", e, t, n),
                                transposeB: IR("transposeB", e, t, n),
                                bias: l,
                                activation: o,
                                preluActivationWeights: f
                            })];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "normalization":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "FusedBatchNorm":
                        case "FusedBatchNormV2":
                        case "FusedBatchNormV3":
                            return [wI(IR("x", e, t, n), IR("mean", e, t, n), IR("variance", e, t, n), IR("offset", e, t, n), IR("scale", e, t, n), IR("epsilon", e, t, n))];
                        case "LRN":
                            return [vT(IR("x", e, t, n), IR("radius", e, t, n), IR("bias", e, t, n), IR("alpha", e, t, n), IR("beta", e, t, n))];
                        case "Softmax":
                            return [SA(IR("x", e, t, n))];
                        case "LogSoftmax":
                            return [IT(IR("x", e, t, n))];
                        case "SparseToDense":
                            return [pN(IR("sparseIndices", e, t, n), IR("outputShape", e, t, n), IR("sparseValues", e, t, n), IR("defaultValue", e, t, n))];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "reduction":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "Max":
                            var r = IR("axis", e, t, n)
                              , a = IR("keepDims", e, t, n);
                            return [CT(IR("x", e, t, n), r, a)];
                        case "Mean":
                            var o = IR("axis", e, t, n)
                              , i = IR("keepDims", e, t, n);
                            return [PT(IR("x", e, t, n), o, i)];
                        case "Min":
                            var s = IR("axis", e, t, n)
                              , u = IR("keepDims", e, t, n);
                            return [LT(IR("x", e, t, n), s, u)];
                        case "Sum":
                            var c = IR("axis", e, t, n)
                              , l = IR("keepDims", e, t, n);
                            return [ST(IR("x", e, t, n), c, l)];
                        case "All":
                            var f = IR("axis", e, t, n)
                              , p = IR("keepDims", e, t, n);
                            return [jS(IR("x", e, t, n), f, p)];
                        case "Any":
                            var d = IR("axis", e, t, n)
                              , h = IR("keepDims", e, t, n);
                            return [HS(IR("x", e, t, n), d, h)];
                        case "ArgMax":
                            var m = IR("axis", e, t, n);
                            return [GS(IR("x", e, t, n), m)];
                        case "ArgMin":
                            var v = IR("axis", e, t, n);
                            return [KS(IR("x", e, t, n), v)];
                        case "Prod":
                            var g = IR("axis", e, t, n)
                              , y = IR("keepDims", e, t, n);
                            return [ZT(IR("x", e, t, n), g, y)];
                        case "Cumsum":
                            var b = IR("axis", e, t, n)
                              , x = IR("exclusive", e, t, n)
                              , w = IR("reverse", e, t, n);
                            return [BI(IR("x", e, t, n), b, x, w)];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "slice_join":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "ConcatV2":
                        case "Concat":
                            var r = IR("n", e, t, n)
                              , a = IR("axis", e, t, n)
                              , o = IR("tensors", e, t, n);
                            return o = o.slice(0, r),
                            [mI(o, a)];
                        case "GatherV2":
                        case "Gather":
                            var i = IR("axis", e, t, n)
                              , s = IR("x", e, t, n)
                              , u = IR("indices", e, t, n);
                            return [rT(s, zE(u, "int32"), i)];
                        case "ReverseV2":
                        case "Reverse":
                            var c = IR("axis", e, t, n)
                              , l = IR("x", e, t, n);
                            return [vA(l, c)];
                        case "Slice":
                            var f = IR("begin", e, t, n)
                              , p = IR("size", e, t, n);
                            return [gI(IR("x", e, t, n), f, p)];
                        case "StridedSlice":
                            var d = IR("begin", e, t, n)
                              , h = IR("end", e, t, n)
                              , m = IR("strides", e, t, n)
                              , v = IR("beginMask", e, t, n)
                              , g = IR("endMask", e, t, n)
                              , y = IR("ellipsisMask", e, t, n)
                              , b = IR("newAxisMask", e, t, n)
                              , x = IR("shrinkAxisMask", e, t, n)
                              , w = IR("x", e, t, n);
                            return [PA(w, d, h, m, v, g, y, b, x)];
                        case "Pack":
                            return CS((function() {
                                var r = IR("axis", e, t, n)
                                  , a = IR("tensors", e, t, n)
                                  , o = a[0].shape
                                  , i = BA(a[0]).shape
                                  , s = a.map((function(e) {
                                    var t = Rk(e.shape, o);
                                    if (!t && !Rk(BA(e).shape, i))
                                        throw new Error("the input tensors shape does not match");
                                    return t ? e : YE(e, o)
                                }
                                ));
                                return [FA(s, r)]
                            }
                            ));
                        case "Unpack":
                            var k = IR("axis", e, t, n)
                              , C = IR("tensor", e, t, n);
                            return GA(C, k);
                        case "Tile":
                            var E = IR("reps", e, t, n);
                            return [$I(IR("x", e, t, n), E)];
                        case "Split":
                        case "SplitV":
                            var S = IR("axis", e, t, n)
                              , I = IR("numOrSizeSplits", e, t, n)
                              , T = IR("x", e, t, n);
                            return _A(T, I, S);
                        case "ScatterNd":
                            var A = IR("indices", e, t, n)
                              , N = IR("values", e, t, n)
                              , _ = IR("shape", e, t, n);
                            return [fN(A, N, _)];
                        case "GatherNd":
                            var R = IR("x", e, t, n)
                              , O = IR("indices", e, t, n);
                            return [dN(R, O)];
                        case "SparseToDense":
                            var D = IR("sparseIndices", e, t, n)
                              , B = IR("outputShape", e, t, n)
                              , F = IR("sparseValues", e, t, n)
                              , M = IR("defaultValue", e, t, n);
                            return [pN(D, F, B, F.dtype === M.dtype ? M : zE(M, F.dtype))];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "spectral":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "FFT":
                            return [IA(IR("x", e, t, n))];
                        case "IFFT":
                            return [TA(IR("x", e, t, n))];
                        case "RFFT":
                            return [RA(IR("x", e, t, n))];
                        case "IRFFT":
                            return [AA(IR("x", e, t, n))];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "transformation":
                return CS((function() {
                    return function(e, t, n) {
                        switch (e.op) {
                        case "Cast":
                            return [zE(IR("x", e, t, n), IR("dtype", e, t, n))];
                        case "ExpandDims":
                            var r = IR("axis", e, t, n);
                            return [QI(IR("x", e, t, n), r)];
                        case "Squeeze":
                            var a = IR("axis", e, t, n);
                            return [BA(IR("x", e, t, n), a)];
                        case "Reshape":
                            return [YE(IR("x", e, t, n), IR("shape", e, t, n))];
                        case "MirrorPad":
                            return [VT(IR("x", e, t, n), IR("padding", e, t, n), IR("mode", e, t, n))];
                        case "PadV2":
                        case "Pad":
                            return [qT(IR("x", e, t, n), IR("padding", e, t, n), IR("constantValue", e, t, n))];
                        case "SpaceToBatchND":
                            var o = IR("blockShape", e, t, n)
                              , i = IR("paddings", e, t, n);
                            return [XT(IR("x", e, t, n), o, i)];
                        case "BatchToSpaceND":
                            var s = IR("blockShape", e, t, n)
                              , u = IR("crops", e, t, n);
                            return [bI(IR("x", e, t, n), s, u)];
                        case "DepthToSpace":
                            var c = IR("blockSize", e, t, n)
                              , l = IR("dataFormat", e, t, n).toUpperCase();
                            return [FI(IR("x", e, t, n), c, l)];
                        case "BroadcastTo":
                            return [kI(IR("x", e, t, n), IR("shape", e, t, n))];
                        default:
                            throw TypeError("Node type ".concat(e.op, " is not implemented"))
                        }
                    }(e, t, n)
                }
                ));
            case "hash_table":
                return (o = Ty(regeneratorRuntime.mark((function e(t, n, r, a) {
                    var o, i, s, u, c, l, f, p, d, h, m;
                    return regeneratorRuntime.wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                e.t0 = t.op,
                                e.next = "HashTable" === e.t0 || "HashTableV2" === e.t0 ? 3 : "LookupTableImport" === e.t0 || "LookupTableImportV2" === e.t0 ? 5 : "LookupTableFind" === e.t0 || "LookupTableFindV2" === e.t0 ? 10 : 15;
                                break;
                            case 3:
                                return o = IR("keyDType", t, n, r),
                                i = IR("valueDType", t, n, r),
                                s = new yO(o,i),
                                e.abrupt("return", (a.addHashTable(t.name, s),
                                [s.handle]));
                            case 5:
                                return u = IR("tableHandle", t, n, r, a),
                                c = IR("keys", t, n, r),
                                l = IR("values", t, n, r),
                                f = a.getHashTableById(u.id),
                                e.next = 8,
                                f.import(c, l);
                            case 8:
                                return e.t1 = e.sent,
                                e.abrupt("return", [e.t1]);
                            case 10:
                                return p = IR("tableHandle", t, n, r, a),
                                d = IR("keys", t, n, r),
                                h = IR("defaultValue", t, n, r),
                                m = a.getHashTableById(p.id),
                                e.next = 13,
                                m.find(d, h);
                            case 13:
                                return e.t2 = e.sent,
                                e.abrupt("return", [e.t2]);
                            case 15:
                                throw TypeError("Node type ".concat(t.op, " is not implemented"));
                            case 16:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                ))),
                function(e, t, n, r) {
                    return o.apply(this, arguments)
                }
                )(e, t, n, r);
            case "custom":
                var a = SR(e.op);
                if (a && a.customExecutor)
                    return a.customExecutor(new fO(e,t,n));
                throw TypeError("Custom op ".concat(e.op, " is not registered."));
            default:
                throw TypeError("Unknown op '".concat(e.op, "'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()"))
            }
            var o, i
        }(e, t, n);
        return rC(a) ? a.then((function(e) {
            return [].concat(e)
        }
        )) : [].concat(a)
    }
    var xO = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
              , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}
              , a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
            Ay(this, e),
            this.weightMap = t,
            this.tensorArrayMap = n,
            this.tensorListMap = r,
            this.functionMap = a,
            this.rootContext = {
                id: 0,
                frameName: "",
                iterationId: 0
            },
            this.contexts = [this.rootContext],
            this.lastId = 0,
            this.generateCurrentContextIds()
        }
        return _y(e, [{
            key: "newFrame",
            value: function(e, t) {
                return {
                    id: e,
                    frameName: t,
                    iterationId: 0
                }
            }
        }, {
            key: "generateCurrentContextIds",
            value: function() {
                for (var e = [], t = 0; t < this.contexts.length - 1; t++) {
                    var n = this.contexts.slice(0, this.contexts.length - t);
                    e.push(this.contextIdforContexts(n))
                }
                e.push(""),
                this._currentContextIds = e
            }
        }, {
            key: "contextIdforContexts",
            value: function(e) {
                return e ? e.map((function(e) {
                    return 0 === e.id && 0 === e.iterationId ? "" : "".concat(e.frameName, "-").concat(e.iterationId)
                }
                )).join("/") : ""
            }
        }, {
            key: "enterFrame",
            value: function(e) {
                this.contexts && (this.lastId++,
                this.contexts = this.contexts.slice(),
                this.contexts.push(this.newFrame(this.lastId, e)),
                this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))
            }
        }, {
            key: "exitFrame",
            value: function() {
                if (!(this.contexts && this.contexts.length > 1))
                    throw new Error("Cannot exit frame, the context is empty");
                this.contexts = this.contexts.slice(),
                this.contexts.splice(-1),
                this.currentContextIds.shift()
            }
        }, {
            key: "nextIteration",
            value: function() {
                if (!(this.contexts && this.contexts.length > 0))
                    throw new Error("Cannot increase frame iteration, the context is empty");
                this.contexts = this.contexts.slice(),
                this.lastId++;
                var e = Object.assign({}, this.contexts[this.contexts.length - 1]);
                e.iterationId += 1,
                e.id = this.lastId,
                this.contexts.splice(-1, 1, e),
                this._currentContextIds.splice(0, 1, this.contextIdforContexts(this.contexts))
            }
        }, {
            key: "getWeight",
            value: function(e) {
                return this.weightMap[e]
            }
        }, {
            key: "addTensorArray",
            value: function(e) {
                this.tensorArrayMap[e.id] = e
            }
        }, {
            key: "getTensorArray",
            value: function(e) {
                return this.tensorArrayMap[e]
            }
        }, {
            key: "addTensorList",
            value: function(e) {
                this.tensorListMap[e.id] = e
            }
        }, {
            key: "getTensorList",
            value: function(e) {
                return this.tensorListMap[e]
            }
        }, {
            key: "dispose",
            value: function(e) {
                for (var t in this.tensorArrayMap)
                    this.tensorArrayMap[t].clearAndClose(e);
                for (var n in this.tensorListMap)
                    this.tensorListMap[n].clearAndClose(e)
            }
        }, {
            key: "currentContext",
            set: function(e) {
                this.contexts !== e && (this.contexts = e,
                this.generateCurrentContextIds())
            },
            get: function() {
                return this.contexts
            }
        }, {
            key: "currentContextId",
            get: function() {
                return this._currentContextIds[0]
            }
        }, {
            key: "currentContextIds",
            get: function() {
                return this._currentContextIds
            }
        }]),
        e
    }();
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function wO(e, t, n, r) {
        var a = new Set
          , o = []
          , i = null
          , s = null
          , u = new Set
          , c = Object.keys(e).map((function(e) {
            return _R(e)[0]
        }
        ))
          , l = [];
        null != r && (l = r.map((function(e) {
            return _R(e.name)[0]
        }
        )));
        for (var f = Vy(t); f.length > 0; ) {
            var p = f.pop();
            (SO(p) || IO(p) || TO(p)) && null == i && (s = (i = p).children.map((function(e) {
                return e.name
            }
            )).filter((function(e) {
                return a.has(e)
            }
            ))),
            a.add(p.name),
            null == n[p.name] && -1 === c.indexOf(p.name) && -1 === l.indexOf(p.name) && (0 !== p.inputs.length ? p.inputs.forEach((function(e) {
                u.has(e.name) || (u.add(e.name),
                f.push(e))
            }
            )) : o.push(p.name))
        }
        return {
            inputs: e,
            outputs: t,
            usedNodes: a,
            missingInputs: o,
            dynamicNode: i,
            syncInputs: s
        }
    }
    var kO = ["Switch", "Merge", "Enter", "Exit", "NextIteration", "StatelessIf", "StatelessWhile", "if", "While"]
      , CO = ["NonMaxSuppressionV2", "NonMaxSuppressionV3", "NonMaxSuppressionV5", "Where"]
      , EO = ["HashTable", "HashTableV2", "LookupTableImport", "LookupTableImportV2", "LookupTableFind", "LookupTableFindV2"];
    function SO(e) {
        return kO.indexOf(e.op) >= 0
    }
    function IO(e) {
        return CO.indexOf(e.op) >= 0
    }
    function TO(e) {
        return EO.indexOf(e.op) >= 0
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var AO = function() {
        function e(t, n) {
            var r = this;
            Ay(this, e),
            this.graph = t,
            this.parent = n,
            this.compiledMap = new Map,
            this._weightMap = {},
            this.SEPERATOR = ",",
            this._functions = {},
            this._functionExecutorMap = {},
            this._outputs = t.outputs,
            this._inputs = t.inputs,
            this._initNodes = t.initNodes,
            this._signature = t.signature,
            this._functions = t.functions,
            null != t.functions && Object.keys(t.functions).forEach((function(n) {
                r._functionExecutorMap[n] = new e(t.functions[n],r)
            }
            ))
        }
        var t, n, r, a;
        return _y(e, [{
            key: "getCompilationKey",
            value: function(e, t) {
                var n = e.map((function(e) {
                    return e.name
                }
                )).sort()
                  , r = t.map((function(e) {
                    return e.name
                }
                )).sort();
                return n.join(this.SEPERATOR) + "--" + r.join(this.SEPERATOR)
            }
        }, {
            key: "compile",
            value: function(e, t) {
                var n = wO(e, t, this.weightMap, this._initNodes)
                  , r = n.missingInputs
                  , a = n.dynamicNode
                  , o = n.syncInputs;
                if (null != a)
                    throw new Error("This execution contains the node '".concat(a.name, "', which has the dynamic op '").concat(a.op, "'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [").concat(o, "]"));
                if (r.length > 0) {
                    var i = t.map((function(e) {
                        return e.name
                    }
                    ))
                      , s = Object.keys(e);
                    throw new Error("Cannot compute the outputs [".concat(i, "] from the provided inputs [").concat(s, "]. Missing the following inputs: [").concat(r, "]"))
                }
                return function(e, t, n) {
                    var r = n.usedNodes
                      , a = n.inputs
                      , o = []
                      , i = Object.keys(a).map((function(e) {
                        return _R(e)[0]
                    }
                    )).map((function(t) {
                        return e.nodes[t]
                    }
                    ))
                      , s = e.initNodes;
                    i.forEach((function(e) {
                        r.has(e.name) && o.push(e)
                    }
                    )),
                    e.weights.forEach((function(e) {
                        r.has(e.name) && o.push(e)
                    }
                    )),
                    null != s && s.forEach((function(e) {
                        r.has(e.name) && o.push(e)
                    }
                    ));
                    for (var u = new Set, c = []; o.length > 0; ) {
                        var l = o.pop();
                        u.add(l.name),
                        t[l.name] || c.push(l),
                        l.children.forEach((function(e) {
                            !u.has(e.name) && r.has(e.name) && e.inputs.every((function(e) {
                                return u.has(e.name)
                            }
                            )) && o.push(e)
                        }
                        ))
                    }
                    return c
                }(this.graph, this.weightMap, n)
            }
        }, {
            key: "execute",
            value: function(e, t) {
                var n = this;
                e = this.mapInputs(e);
                var r = Object.keys(e).sort();
                this.checkInputs(e),
                this.checkInputShapeAndType(e),
                t = this.mapOutputs(t),
                this.checkOutputs(t);
                var a = r.map((function(e) {
                    return n.graph.nodes[_R(e)[0]]
                }
                ))
                  , o = t.map((function(e) {
                    return _R(e)[0]
                }
                ))
                  , i = o.map((function(e) {
                    return n.graph.nodes[e]
                }
                ));
                0 === i.length && (i = this._outputs);
                var s = this.getCompilationKey(a, i)
                  , u = this.compiledMap.get(s);
                null == u && (u = this.compile(e, i),
                this.compiledMap.set(s, u));
                var c = {}
                  , l = {};
                return CS((function() {
                    var r = new xO(n.weightMap,c,l,n.functionExecutorMap)
                      , a = Object.assign({}, n.weightMap);
                    Object.keys(e).forEach((function(t) {
                        var n = Uy(_R(t), 2)
                          , r = n[0]
                          , o = [];
                        o[n[1]] = e[t],
                        a[r] = o
                    }
                    ));
                    for (var i = n.getFrozenTensorIds(a), s = {}, f = 0; f < u.length; f++) {
                        var p = u[f];
                        if (!a[p.name]) {
                            var d = bO(p, a, r, n._resourceManager);
                            if (rC(d))
                                throw new Error("The execution of the op '".concat(p.op, "' returned a promise. Please use model.executeAsync() instead."));
                            a[p.name] = d,
                            n.checkTensorForDisposal(p.name, p, a, r, i, o, s)
                        }
                    }
                    return null == n.parent && r.dispose(i),
                    t.map((function(e) {
                        return TR(e, a, r)
                    }
                    ))
                }
                ))
            }
        }, {
            key: "getFrozenTensorIds",
            value: function(e) {
                var t = [].concat.apply([], Object.keys(e).map((function(t) {
                    return e[t]
                }
                )).map((function(e) {
                    return e.map((function(e) {
                        return e.id
                    }
                    ))
                }
                )));
                return new Set(t)
            }
        }, {
            key: "checkTensorForDisposal",
            value: function(e, t, n, r, a, o, i) {
                "control" !== t.category && -1 === o.indexOf(e) && (n[e].forEach((function(e) {
                    null != e && (i[e.id] = (i[e.id] || 0) + t.children.length)
                }
                )),
                t.inputs.forEach((function(e) {
                    if ("control" !== e.category) {
                        var t = function(e, t, n) {
                            return t[NR(e, n.currentContextId)]
                        }(e.name, n, r);
                        null != t && t.forEach((function(e) {
                            if (e && !a.has(e.id)) {
                                var t = i[e.id];
                                1 === t ? (e.dispose(),
                                delete i[e.id]) : null != t && i[e.id]--
                            }
                        }
                        ))
                    }
                }
                )))
            }
        }, {
            key: "executeAsync",
            value: (a = Ty(regeneratorRuntime.mark((function e(t, n) {
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.abrupt("return", this._executeAsync(t, n));
                        case 1:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e, t) {
                return a.apply(this, arguments)
            }
            )
        }, {
            key: "_executeAsync",
            value: (r = Ty(regeneratorRuntime.mark((function e(t, n) {
                var r, a, o, i, s, u, c, l, f, p = arguments;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return r = p.length > 2 && void 0 !== p[2] && p[2],
                            a = p.length > 3 && void 0 !== p[3] ? p[3] : {},
                            o = p.length > 4 && void 0 !== p[4] ? p[4] : {},
                            r || (t = this.mapInputs(t),
                            this.checkInputs(t),
                            this.checkInputShapeAndType(t),
                            n = this.mapOutputs(n),
                            this.checkOutputs(n)),
                            i = new xO(this.weightMap,a,o,this.functionExecutorMap),
                            e.next = 7,
                            this.executeWithControlFlow(t, i, n, r);
                        case 7:
                            return s = e.sent,
                            u = n.map((function(e) {
                                return TR(e, s, i)
                            }
                            )),
                            c = u.map((function(e) {
                                return e.id
                            }
                            )),
                            l = Object.keys(t).map((function(e) {
                                return t[e].id
                            }
                            )),
                            f = new Set([].concat(Vy(c), Vy(l), Vy(this.weightIds))),
                            e.abrupt("return", (Object.keys(s).forEach((function(e) {
                                s[e].forEach((function(e) {
                                    !e || e.isDisposed || f.has(e.id) || e.dispose()
                                }
                                ))
                            }
                            )),
                            null == this.parent && i.dispose(f),
                            u));
                        case 13:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e, t) {
                return r.apply(this, arguments)
            }
            )
        }, {
            key: "executeFunctionAsync",
            value: (n = Ty(regeneratorRuntime.mark((function e(t, n, r) {
                var a, o = this;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return a = t.reduce((function(e, t, n) {
                                return e[o.inputs[n].name] = t,
                                e
                            }
                            ), {}),
                            e.abrupt("return", this._executeAsync(a, this.outputNodes, !0, n, r));
                        case 2:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e, t, r) {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "executeWithControlFlow",
            value: (t = Ty(regeneratorRuntime.mark((function e(t, n, r, a) {
                var o, i, s, u, c, l, f, p, d, h, m, v, g, y, b, x, w, k = this;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            o = Object.keys(t),
                            i = o.map((function(e) {
                                return k.graph.nodes[_R(e)[0]]
                            }
                            )),
                            s = r.map((function(e) {
                                return _R(e)[0]
                            }
                            )),
                            0 === (u = s.map((function(e) {
                                return k.graph.nodes[e]
                            }
                            ))).length && (u = this._outputs),
                            c = wO(t, u, this.weightMap, this._initNodes),
                            l = c.usedNodes,
                            f = c.missingInputs,
                            p = c.dynamicNode,
                            d = c.syncInputs,
                            h = [].concat(Vy(i), Vy(this.graph.weights), Vy(this._initNodes || [])).map((function(e) {
                                return {
                                    node: e,
                                    contexts: n.currentContext
                                }
                            }
                            )),
                            m = Object.assign({}, this.weightMap),
                            Object.keys(t).forEach((function(e) {
                                var n = Uy(_R(e), 2)
                                  , r = n[0]
                                  , a = [];
                                a[n[1]] = t[e],
                                m[r] = a
                            }
                            )),
                            v = {},
                            g = this.getFrozenTensorIds(m),
                            y = {};
                        case 6:
                            if (!(h.length > 0)) {
                                e.next = 12;
                                break
                            }
                            return b = this.processStack(i, h, n, m, y, g, s, v, l),
                            e.next = 10,
                            Promise.all(b);
                        case 10:
                            e.next = 6;
                            break;
                        case 12:
                            if (null != p || a || console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead."),
                            !((x = u.filter((function(e) {
                                return !SO(e) && !TR(e.name, m, n)
                            }
                            )).map((function(e) {
                                return e.name
                            }
                            ))).length > 0)) {
                                e.next = 17;
                                break
                            }
                            throw w = "",
                            null != p && (w = "Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [".concat(d, "]")),
                            new Error("Cannot compute the outputs [".concat(x, "] from the provided inputs [").concat(o, "]. Consider providing the following inputs: [").concat(f, "]. ").concat(w));
                        case 17:
                            return e.abrupt("return", m);
                        case 18:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e, n, r, a) {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "processStack",
            value: function(e, t, n, r, a, o, i, s, u) {
                for (var c = this, l = [], f = function() {
                    var e, f = t.pop();
                    n.currentContext = f.contexts;
                    var p = "";
                    if ("Enter" === f.node.op && IR("isConstant", f.node, r, n) && (e = Uy(AR(f.node.name, n), 1),
                    p = e[0]),
                    null == r[f.node.name]) {
                        var d, h = bO(f.node, r, n, c._resourceManager);
                        p || (d = Uy(AR(f.node.name, n), 1),
                        p = d[0]);
                        var m = n.currentContext;
                        rC(h) ? l.push(h.then((function(e) {
                            return r[p] = e,
                            n.currentContext = m,
                            c.checkTensorForDisposal(p, f.node, r, n, o, i, s),
                            c.processChildNodes(f.node, t, n, r, a, u),
                            e
                        }
                        ))) : (r[p] = h,
                        c.checkTensorForDisposal(p, f.node, r, n, o, i, s),
                        c.processChildNodes(f.node, t, n, r, a, u))
                    } else
                        c.processChildNodes(f.node, t, n, r, a, u)
                }; t.length > 0; )
                    f();
                return l
            }
        }, {
            key: "processChildNodes",
            value: function(e, t, n, r, a, o) {
                e.children.forEach((function(e) {
                    var i = Uy(AR(e.name, n), 1)[0];
                    !a[i] && o.has(e.name) && ("Merge" === e.op ? e.inputNames.some((function(e) {
                        return !!TR(e, r, n)
                    }
                    )) && (a[i] = !0,
                    t.push({
                        contexts: n.currentContext,
                        node: e
                    })) : e.inputNames.every((function(e) {
                        return !!TR(e, r, n)
                    }
                    )) && (a[i] = !0,
                    t.push({
                        contexts: n.currentContext,
                        node: e
                    })))
                }
                ))
            }
        }, {
            key: "dispose",
            value: function() {
                var e = this;
                Object.keys(this.weightMap).forEach((function(t) {
                    return e.weightMap[t].forEach((function(e) {
                        return e.dispose()
                    }
                    ))
                }
                ))
            }
        }, {
            key: "checkInputShapeAndType",
            value: function(e) {
                var t = this;
                Object.keys(e).forEach((function(n) {
                    var r = e[n]
                      , a = Uy(_R(n), 1)[0]
                      , o = t.graph.nodes[a];
                    if (o.attrParams.shape && o.attrParams.shape.value) {
                        var i = o.attrParams.shape.value;
                        Ik(i.length === r.shape.length && r.shape.every((function(e, t) {
                            return -1 === i[t] || i[t] === e
                        }
                        )), (function() {
                            return "The shape of dict['".concat(o.name, "'] provided in model.execute(dict) must be [").concat(i, "], but was [").concat(r.shape, "]")
                        }
                        ))
                    }
                    o.attrParams.dtype && o.attrParams.dtype.value && Ik(r.dtype === o.attrParams.dtype.value, (function() {
                        return "The dtype of dict['".concat(o.name, "'] provided in model.execute(dict) must be ").concat(o.attrParams.dtype.value, ", but was ").concat(r.dtype)
                    }
                    ))
                }
                ))
            }
        }, {
            key: "mapInputs",
            value: function(e) {
                var t = {};
                for (var n in e)
                    null != this._signature && null != this._signature.inputs && null != this._signature.inputs[n] ? t[this._signature.inputs[n].name] = e[n] : t[n] = e[n];
                return t
            }
        }, {
            key: "checkInputs",
            value: function(e) {
                var t = this
                  , n = Object.keys(e).filter((function(e) {
                    var n = Uy(_R(e), 1)[0];
                    return null == t.graph.nodes[n]
                }
                ));
                if (n.length > 0)
                    throw new Error("The dict provided in model.execute(dict) has keys: [".concat(n, "] that are not part of graph"))
            }
        }, {
            key: "mapOutputs",
            value: function(e) {
                var t = this;
                return e.map((function(e) {
                    return null != t._signature && null != t._signature.outputs && null != t._signature.outputs[e] ? t._signature.outputs[e].name : e
                }
                ), {})
            }
        }, {
            key: "checkOutputs",
            value: function(e) {
                var t = this;
                e.forEach((function(e) {
                    var n = Uy(_R(e), 1)[0];
                    if (!t.graph.nodes[n])
                        throw new Error("The output '".concat(e, "' is not found in the graph"))
                }
                ))
            }
        }, {
            key: "weightIds",
            get: function() {
                return this.parent ? this.parent.weightIds : this._weightIds
            }
        }, {
            key: "functionExecutorMap",
            get: function() {
                return this.parent ? this.parent.functionExecutorMap : this._functionExecutorMap
            }
        }, {
            key: "weightMap",
            get: function() {
                return this.parent ? this.parent.weightMap : this._weightMap
            },
            set: function(e) {
                var t, n = Object.keys(e).map((function(t) {
                    return e[t].map((function(e) {
                        return e.id
                    }
                    ))
                }
                ));
                this._weightIds = (t = []).concat.apply(t, Vy(n)),
                this._weightMap = e
            }
        }, {
            key: "resourceManager",
            set: function(e) {
                this._resourceManager = e
            }
        }, {
            key: "inputs",
            get: function() {
                return this._inputs.map((function(e) {
                    return {
                        name: e.name,
                        shape: e.attrParams.shape ? e.attrParams.shape.value : void 0,
                        dtype: e.attrParams.dtype ? e.attrParams.dtype.value : void 0
                    }
                }
                ))
            }
        }, {
            key: "outputs",
            get: function() {
                return this._outputs.map((function(e) {
                    return {
                        name: e.name,
                        shape: e.attrParams.shape ? e.attrParams.shape.value : void 0,
                        dtype: e.attrParams.dtype ? e.attrParams.dtype.value : void 0
                    }
                }
                ))
            }
        }, {
            key: "inputNodes",
            get: function() {
                return this._inputs.map((function(e) {
                    return e.signatureKey || e.name
                }
                ))
            }
        }, {
            key: "outputNodes",
            get: function() {
                return this._outputs.map((function(e) {
                    var t = e.signatureKey || e.name;
                    return e.defaultOutput ? "".concat(t, ":").concat(e.defaultOutput) : t
                }
                ))
            }
        }, {
            key: "functions",
            get: function() {
                var e = this;
                return Object.keys(this._functions).reduce((function(t, n) {
                    return t[n] = e._functions[n].signature,
                    t
                }
                ), {})
            }
        }]),
        e
    }()
      , NO = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            Ay(this, e),
            this.hashTableNameToHandle = t,
            this.hashTableMap = n
        }
        return _y(e, [{
            key: "addHashTable",
            value: function(e, t) {
                this.hashTableNameToHandle[e] = t.handle,
                this.hashTableMap[t.id] = t
            }
        }, {
            key: "getHashTableHandleByName",
            value: function(e) {
                return this.hashTableNameToHandle[e]
            }
        }, {
            key: "getHashTableById",
            value: function(e) {
                return this.hashTableMap[e]
            }
        }, {
            key: "dispose",
            value: function() {
                for (var e in this.hashTableMap)
                    this.hashTableMap[e].clearAndClose(),
                    delete this.hashTableMap[e];
                for (var t in this.hashTableNameToHandle)
                    this.hashTableNameToHandle[t].dispose(),
                    delete this.hashTableNameToHandle[t]
            }
        }]),
        e
    }()
      , _O = function() {
        function e(t) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            Ay(this, e),
            this.modelUrl = t,
            this.loadOptions = n,
            this.version = "n/a",
            null == n && (this.loadOptions = {}),
            this.resourceManager = new NO
        }
        var t, n, r;
        return _y(e, [{
            key: "findIOHandler",
            value: function() {
                var e, t, n = this.modelUrl;
                if (null != n.load)
                    this.handler = n;
                else if (null != this.loadOptions.requestInit)
                    this.handler = XE(n, this.loadOptions);
                else {
                    var r = (e = n,
                    t = this.loadOptions,
                    bE.getLoadHandlers(e, t));
                    if (0 === r.length)
                        r.push(XE(n, this.loadOptions));
                    else if (r.length > 1)
                        throw new Error("Found more than one (".concat(r.length, ") load handlers for URL '").concat([n], "'"));
                    this.handler = r[0]
                }
            }
        }, {
            key: "load",
            value: (r = Ty(regeneratorRuntime.mark((function e() {
                var t;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (this.findIOHandler(),
                            null != this.handler.load) {
                                e.next = 2;
                                break
                            }
                            throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");
                        case 2:
                            return e.next = 4,
                            this.handler.load();
                        case 4:
                            return t = e.sent,
                            e.abrupt("return", this.loadSync(t));
                        case 6:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function() {
                return r.apply(this, arguments)
            }
            )
        }, {
            key: "loadSync",
            value: function(e) {
                this.artifacts = e;
                var t = this.artifacts.modelTopology
                  , n = {};
                null != this.artifacts.userDefinedMetadata && (n = this.artifacts.userDefinedMetadata.signature),
                this.version = "".concat(t.versions.producer, ".").concat(t.versions.minConsumer);
                var r = function(e, t) {
                    var n, r, a = {}, o = 0, i = jy(t);
                    try {
                        for (i.s(); !(r = i.n()).done; ) {
                            var s = r.value
                              , u = s.name
                              , c = s.dtype
                              , l = s.shape
                              , f = _k(l)
                              , p = void 0;
                            if ("quantization"in s) {
                                var d = s.quantization;
                                if ("uint8" === d.dtype || "uint16" === d.dtype) {
                                    if (!("min"in d) || !("scale"in d))
                                        throw new Error("Weight ".concat(s.name, " with quantization ").concat(d.dtype, " doesn't have corresponding metadata min and scale."))
                                } else {
                                    if ("float16" !== d.dtype)
                                        throw new Error("Weight ".concat(s.name, " has unknown quantization dtype ").concat(d.dtype, ". Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'."));
                                    if ("float32" !== c)
                                        throw new Error("Weight ".concat(s.name, " is quantized with ").concat(d.dtype, " which only supports weights of type float32 not ").concat(c, "."))
                                }
                                var h = dE[d.dtype]
                                  , m = e.slice(o, o + f * h)
                                  , v = "uint8" === d.dtype ? new Uint8Array(m) : new Uint16Array(m);
                                if ("float32" === c)
                                    if ("uint8" === d.dtype || "uint16" === d.dtype) {
                                        p = new Float32Array(v.length);
                                        for (var g = 0; g < v.length; g++) {
                                            var y = v[g];
                                            p[g] = y * d.scale + d.min
                                        }
                                    } else {
                                        if ("float16" !== d.dtype)
                                            throw new Error("Unsupported quantization type ".concat(d.dtype, " for weight type float32."));
                                        void 0 === n && (n = yE()),
                                        p = n(v)
                                    }
                                else {
                                    if ("int32" !== c)
                                        throw new Error("Unsupported dtype in weight '".concat(u, "': ").concat(c));
                                    if ("uint8" !== d.dtype && "uint16" !== d.dtype)
                                        throw new Error("Unsupported quantization type ".concat(d.dtype, " for weight type int32."));
                                    p = new Int32Array(v.length);
                                    for (var b = 0; b < v.length; b++) {
                                        var x = v[b];
                                        p[b] = Math.round(x * d.scale + d.min)
                                    }
                                }
                                o += f * h
                            } else if ("string" === c) {
                                var w = _k(s.shape);
                                p = [];
                                for (var k = 0; k < w; k++) {
                                    var C = new Uint32Array(e.slice(o, o + 4))[0];
                                    o += 4;
                                    var E = new Uint8Array(e.slice(o, o + C));
                                    p.push(E),
                                    o += C
                                }
                            } else {
                                var S = dE[c]
                                  , I = e.slice(o, o + f * S);
                                if ("float32" === c)
                                    p = new Float32Array(I);
                                else if ("int32" === c)
                                    p = new Int32Array(I);
                                else if ("bool" === c)
                                    p = new Uint8Array(I);
                                else {
                                    if ("complex64" !== c)
                                        throw new Error("Unsupported dtype in weight '".concat(u, "': ").concat(c));
                                    p = new Float32Array(I);
                                    for (var T = new Float32Array(p.length / 2), A = new Float32Array(p.length / 2), N = 0; N < T.length; N++)
                                        T[N] = p[2 * N],
                                        A[N] = p[2 * N + 1];
                                    var _ = pE(T, l, "float32")
                                      , R = pE(A, l, "float32");
                                    a[u] = lE(_, R),
                                    _.dispose(),
                                    R.dispose()
                                }
                                o += f * S
                            }
                            "complex64" !== c && (a[u] = pE(p, l, c))
                        }
                    } catch (e) {
                        i.e(e)
                    } finally {
                        i.f()
                    }
                    return a
                }(this.artifacts.weightData, this.artifacts.weightSpecs);
                if (this.executor = new AO(YR.Instance.transformGraph(t, n)),
                this.executor.weightMap = this.convertTensorMapToTensorsMap(r),
                this.executor.resourceManager = this.resourceManager,
                null != e.modelInitializer) {
                    var a = YR.Instance.transformGraph(e.modelInitializer);
                    this.initializer = new AO(a),
                    this.initializer.weightMap = this.executor.weightMap,
                    this.initializer.resourceManager = this.resourceManager,
                    this.initializer.executeAsync({}, [])
                }
                return !0
            }
        }, {
            key: "save",
            value: (n = Ty(regeneratorRuntime.mark((function e(t, n) {
                var r, a;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if ("string" != typeof t) {
                                e.next = 7;
                                break
                            }
                            if (a = t,
                            0 !== (r = bE.getSaveHandlers(a)).length) {
                                e.next = 4;
                                break
                            }
                            throw new Error("Cannot find any save handlers for URL '".concat(t, "'"));
                        case 4:
                            if (!(r.length > 1)) {
                                e.next = 6;
                                break
                            }
                            throw new Error("Found more than one (".concat(r.length, ") save handlers for URL '").concat(t, "'"));
                        case 6:
                            t = r[0];
                        case 7:
                            if (null != t.save) {
                                e.next = 9;
                                break
                            }
                            throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");
                        case 9:
                            return e.abrupt("return", t.save(this.artifacts));
                        case 10:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e, t) {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "predict",
            value: function(e, t) {
                return this.execute(e, this.outputNodes)
            }
        }, {
            key: "normalizeInputs",
            value: function(e) {
                if (!(e instanceof LC || Array.isArray(e)))
                    return e;
                if ((e = Array.isArray(e) ? e : [e]).length !== this.inputNodes.length)
                    throw new Error("Input tensor count mismatch,the graph model has ".concat(this.inputNodes.length, " placeholders, while there are ").concat(e.length, " input tensors."));
                return this.inputNodes.reduce((function(t, n, r) {
                    return t[n] = e[r],
                    t
                }
                ), {})
            }
        }, {
            key: "normalizeOutputs",
            value: function(e) {
                return e = e || this.outputNodes,
                Array.isArray(e) ? e : [e]
            }
        }, {
            key: "execute",
            value: function(e, t) {
                e = this.normalizeInputs(e),
                t = this.normalizeOutputs(t);
                var n = this.executor.execute(e, t);
                return n.length > 1 ? n : n[0]
            }
        }, {
            key: "executeAsync",
            value: (t = Ty(regeneratorRuntime.mark((function e(t, n) {
                var r;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return t = this.normalizeInputs(t),
                            n = this.normalizeOutputs(n),
                            e.next = 3,
                            this.executor.executeAsync(t, n);
                        case 3:
                            return r = e.sent,
                            e.abrupt("return", r.length > 1 ? r : r[0]);
                        case 5:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e, n) {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "convertTensorMapToTensorsMap",
            value: function(e) {
                return Object.keys(e).reduce((function(t, n) {
                    return t[n] = [e[n]],
                    t
                }
                ), {})
            }
        }, {
            key: "dispose",
            value: function() {
                this.executor.dispose(),
                this.initializer && this.initializer.dispose(),
                this.resourceManager.dispose()
            }
        }, {
            key: "modelVersion",
            get: function() {
                return this.version
            }
        }, {
            key: "inputNodes",
            get: function() {
                return this.executor.inputNodes
            }
        }, {
            key: "outputNodes",
            get: function() {
                return this.executor.outputNodes
            }
        }, {
            key: "inputs",
            get: function() {
                return this.executor.inputs
            }
        }, {
            key: "outputs",
            get: function() {
                return this.executor.outputs
            }
        }, {
            key: "weights",
            get: function() {
                return this.executor.weightMap
            }
        }]),
        e
    }()
      , RO = function(e) {
        return {
            startEndTensor: e,
            startPoint: gI(e, [0, 0], [-1, 2]),
            endPoint: gI(e, [0, 2], [-1, 2])
        }
    }
      , OO = {
        strides: [8, 16],
        anchors: [2, 6]
    };
    function DO(e, t) {
        var n, r, a;
        if (e.topLeft instanceof LC && e.bottomRight instanceof LC) {
            var o = Uy(CS((function() {
                return [mI([ET(t - 1, e.topLeft.slice(0, 1)), e.topLeft.slice(1, 1)]), mI([ET(t - 1, e.bottomRight.slice(0, 1)), e.bottomRight.slice(1, 1)])]
            }
            )), 2);
            n = o[0],
            r = o[1],
            null != e.landmarks && (a = CS((function() {
                var n = ET(fA([t - 1, 0]), e.landmarks)
                  , r = fA([1, -1]);
                return _S(n, r)
            }
            )))
        } else {
            var i = Uy(e.topLeft, 2)
              , s = i[0]
              , u = i[1]
              , c = Uy(e.bottomRight, 2)
              , l = c[0]
              , f = c[1];
            n = [t - 1 - s, u],
            r = [t - 1 - l, f],
            null != e.landmarks && (a = e.landmarks.map((function(e) {
                return [t - 1 - e[0], e[1]]
            }
            )))
        }
        var p = {
            topLeft: n,
            bottomRight: r
        };
        return null != a && (p.landmarks = a),
        null != e.probability && (p.probability = e.probability instanceof LC ? e.probability.clone() : e.probability),
        p
    }
    function BO(e, t) {
        return CS((function() {
            return function(e, t) {
                var n = _S(e.startPoint, t)
                  , r = _S(e.endPoint, t)
                  , a = SI([n, r], 1);
                return RO(a)
            }(e.hasOwnProperty("box") ? e.box : e, t).startEndTensor.squeeze()
        }
        ))
    }
    var FO, MO, PO, LO = function() {
        function e(t, n, r, a, o, i) {
            Ay(this, e),
            this.blazeFaceModel = t,
            this.width = n,
            this.height = r,
            this.maxFaces = a,
            this.anchorsData = function(e, t, n) {
                for (var r = [], a = 0; a < n.strides.length; a++)
                    for (var o = n.strides[a], i = Math.floor((t + o - 1) / o), s = Math.floor((e + o - 1) / o), u = n.anchors[a], c = 0; c < i; c++)
                        for (var l = o * (c + .5), f = 0; f < s; f++)
                            for (var p = o * (f + .5), d = 0; d < u; d++)
                                r.push([p, l]);
                return r
            }(n, r, OO),
            this.anchors = UA(this.anchorsData),
            this.inputSizeData = [n, r],
            this.inputSize = fA([n, r]),
            this.iouThreshold = o,
            this.scoreThreshold = i
        }
        var t, n;
        return _y(e, [{
            key: "getBoundingBoxes",
            value: (n = Ty(regeneratorRuntime.mark((function e(t, n) {
                var r, a, o, i, s, u, c, l, f, p, d, h, m, v, g, y, b = this, x = arguments;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return r = !(x.length > 2 && void 0 !== x[2]) || x[2],
                            a = CS((function() {
                                var e = t.resizeBilinear([b.width, b.height])
                                  , n = _S(ET(e.div(255), .5), 2)
                                  , r = b.blazeFaceModel.predict(n).squeeze()
                                  , a = function(e, t, n) {
                                    var r = gI(e, [0, 1], [-1, 2])
                                      , a = TS(r, t)
                                      , o = gI(e, [0, 3], [-1, 2])
                                      , i = NS(o, n)
                                      , s = NS(a, n)
                                      , u = NS(i, 2)
                                      , c = ET(s, u)
                                      , l = TS(s, u)
                                      , f = _S(c, n)
                                      , p = _S(l, n);
                                    return SI([f, p], 1)
                                }(r, b.anchors, b.inputSize)
                                  , o = gI(r, [0, 0], [-1, 1]);
                                return [r, a, vI(o).squeeze()]
                            }
                            )),
                            o = Uy(a, 3),
                            i = o[0],
                            s = o[1],
                            u = o[2],
                            c = console.warn,
                            console.warn = function() {}
                            ,
                            l = GN.nonMaxSuppression(s, u, this.maxFaces, this.iouThreshold, this.scoreThreshold),
                            console.warn = c,
                            e.next = 7,
                            l.array();
                        case 7:
                            if (f = e.sent,
                            l.dispose(),
                            p = f.map((function(e) {
                                return gI(s, [e, 0], [1, -1])
                            }
                            )),
                            e.t0 = n,
                            e.t0) {
                                e.next = 15;
                                break
                            }
                            return e.next = 14,
                            Promise.all(p.map(function() {
                                var e = Ty(regeneratorRuntime.mark((function e(t) {
                                    var n;
                                    return regeneratorRuntime.wrap((function(e) {
                                        for (; ; )
                                            switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2,
                                                t.array();
                                            case 2:
                                                return n = e.sent,
                                                e.abrupt("return", (t.dispose(),
                                                n));
                                            case 4:
                                            case "end":
                                                return e.stop()
                                            }
                                    }
                                    ), e)
                                }
                                )));
                                return function(t) {
                                    return e.apply(this, arguments)
                                }
                            }()));
                        case 14:
                            p = e.sent;
                        case 15:
                            for (d = t.shape[1],
                            h = t.shape[2],
                            m = n ? NS([h, d], this.inputSize) : [h / this.inputSizeData[0], d / this.inputSizeData[1]],
                            v = [],
                            g = function(e) {
                                var t = p[e]
                                  , a = CS((function() {
                                    var a = RO(t instanceof LC ? t : UA(t));
                                    if (!r)
                                        return a;
                                    var o, s = f[e];
                                    return o = n ? b.anchors.slice([s, 0], [1, 2]) : b.anchorsData[s],
                                    {
                                        box: a,
                                        landmarks: gI(i, [s, 5], [1, -1]).squeeze().reshape([6, -1]),
                                        probability: gI(u, [s], [1]),
                                        anchor: o
                                    }
                                }
                                ));
                                v.push(a)
                            }
                            ,
                            y = 0; y < p.length; y++)
                                g(y);
                            return e.abrupt("return", (s.dispose(),
                            u.dispose(),
                            i.dispose(),
                            {
                                boxes: v,
                                scaleFactor: m
                            }));
                        case 21:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e, t) {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "estimateFaces",
            value: (t = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r, a, o, i, s, u, c, l, f, p = arguments;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return n = p.length > 1 && void 0 !== p[1] && p[1],
                            r = p.length > 2 && void 0 !== p[2] && p[2],
                            a = !(p.length > 3 && void 0 !== p[3]) || p[3],
                            o = function(e) {
                                return e instanceof LC ? [e.shape[0], e.shape[1]] : [e.height, e.width]
                            }(t),
                            i = Uy(o, 2),
                            s = i[1],
                            u = CS((function() {
                                return t instanceof LC || (t = eS(t)),
                                t.toFloat().expandDims(0)
                            }
                            )),
                            e.next = 9,
                            this.getBoundingBoxes(u, n, a);
                        case 9:
                            return c = e.sent,
                            l = c.boxes,
                            f = c.scaleFactor,
                            e.abrupt("return", (u.dispose(),
                            n ? l.map((function(e) {
                                var t = BO(e, f)
                                  , n = {
                                    topLeft: t.slice([0], [2]),
                                    bottomRight: t.slice([2], [2])
                                };
                                if (a) {
                                    var o = e.landmarks
                                      , i = e.probability
                                      , u = e.anchor
                                      , c = o.add(u).mul(f);
                                    n.landmarks = c,
                                    n.probability = i
                                }
                                return r && (n = DO(n, s)),
                                n
                            }
                            )) : Promise.all(l.map(function() {
                                var e = Ty(regeneratorRuntime.mark((function e(t) {
                                    var n, o, i, u, c, l, p, d, h, m, v, g, y;
                                    return regeneratorRuntime.wrap((function(e) {
                                        for (; ; )
                                            switch (e.prev = e.next) {
                                            case 0:
                                                if (n = BO(t, f),
                                                !a) {
                                                    e.next = 17;
                                                    break
                                                }
                                                return e.next = 4,
                                                Promise.all([t.landmarks, n, t.probability].map(function() {
                                                    var e = Ty(regeneratorRuntime.mark((function e(t) {
                                                        return regeneratorRuntime.wrap((function(e) {
                                                            for (; ; )
                                                                switch (e.prev = e.next) {
                                                                case 0:
                                                                    return e.abrupt("return", t.array());
                                                                case 1:
                                                                case "end":
                                                                    return e.stop()
                                                                }
                                                        }
                                                        ), e)
                                                    }
                                                    )));
                                                    return function(t) {
                                                        return e.apply(this, arguments)
                                                    }
                                                }()));
                                            case 4:
                                                i = e.sent,
                                                u = Uy(i, 3),
                                                c = u[0],
                                                l = u[1],
                                                p = u[2],
                                                d = t.anchor,
                                                h = Uy(f, 2),
                                                m = h[0],
                                                v = h[1],
                                                g = c.map((function(e) {
                                                    return [(e[0] + d[0]) * m, (e[1] + d[1]) * v]
                                                }
                                                )),
                                                o = {
                                                    topLeft: l.slice(0, 2),
                                                    bottomRight: l.slice(2),
                                                    landmarks: g,
                                                    probability: p
                                                },
                                                function(e) {
                                                    e.startEndTensor.dispose(),
                                                    e.startPoint.dispose(),
                                                    e.endPoint.dispose()
                                                }(t.box),
                                                t.landmarks.dispose(),
                                                t.probability.dispose(),
                                                e.next = 21;
                                                break;
                                            case 17:
                                                return e.next = 19,
                                                n.array();
                                            case 19:
                                                y = e.sent,
                                                o = {
                                                    topLeft: y.slice(0, 2),
                                                    bottomRight: y.slice(2)
                                                };
                                            case 21:
                                                return e.abrupt("return", (n.dispose(),
                                                r && (o = DO(o, s)),
                                                o));
                                            case 22:
                                            case "end":
                                                return e.stop()
                                            }
                                    }
                                    ), e)
                                }
                                )));
                                return function(t) {
                                    return e.apply(this, arguments)
                                }
                            }()))));
                        case 13:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return t.apply(this, arguments)
            }
            )
        }]),
        e
    }();
    function UO() {
        return VO.apply(this, arguments)
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function VO() {
        return (VO = Ty(regeneratorRuntime.mark((function e() {
            var t, n, r, a, o, i, s, u, c, l, f, p, d = arguments;
            return regeneratorRuntime.wrap((function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return t = d.length > 0 && void 0 !== d[0] ? d[0] : {},
                        n = t.maxFaces,
                        r = void 0 === n ? 10 : n,
                        a = t.inputWidth,
                        o = void 0 === a ? 128 : a,
                        i = t.inputHeight,
                        s = void 0 === i ? 128 : i,
                        u = t.iouThreshold,
                        c = void 0 === u ? .3 : u,
                        l = t.scoreThreshold,
                        f = void 0 === l ? .75 : l,
                        e.next = 3,
                        function() {
                            var e = Ty(regeneratorRuntime.mark((function e(t) {
                                var n, r, a = arguments;
                                return regeneratorRuntime.wrap((function(e) {
                                    for (; ; )
                                        switch (e.prev = e.next) {
                                        case 0:
                                            if (n = a.length > 1 && void 0 !== a[1] ? a[1] : {},
                                            null != t) {
                                                e.next = 3;
                                                break
                                            }
                                            throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");
                                        case 3:
                                            return null == n && (n = {}),
                                            n.fromTFHub && null == t.load && (t.endsWith("/") || (t += "/"),
                                            t = "".concat(t, "model.json?tfjs-format=file")),
                                            r = new _O(t,n),
                                            e.next = 7,
                                            r.load();
                                        case 7:
                                            return e.abrupt("return", r);
                                        case 8:
                                        case "end":
                                            return e.stop()
                                        }
                                }
                                ), e)
                            }
                            )));
                            return function(t) {
                                return e.apply(this, arguments)
                            }
                        }()("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1", {
                            fromTFHub: !0
                        });
                    case 3:
                        return p = e.sent,
                        e.abrupt("return", new LO(p,o,s,r,c,f));
                    case 5:
                    case "end":
                        return e.stop()
                    }
            }
            ), e)
        }
        )))).apply(this, arguments)
    }
    !function(e) {
        e[e.float32 = 0] = "float32",
        e[e.int32 = 1] = "int32",
        e[e.bool = 2] = "bool",
        e[e.string = 3] = "string",
        e[e.complex64 = 4] = "complex64"
    }(FO || (FO = {})),
    function(e) {
        e[e.linear = 0] = "linear",
        e[e.relu = 1] = "relu",
        e[e.relu6 = 2] = "relu6",
        e[e.prelu = 3] = "prelu"
    }(MO || (MO = {}));
    var zO = {
        kernelName: "_FusedMatMul",
        backendName: "wasm",
        setupFunc: function(e) {
            PO = e.wasm.cwrap("_FusedMatMul", null, ["number", "array", "number", "number", "array", "number", "number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.a
              , o = t.b
              , i = t.bias
              , s = t.preluActivationWeights;
            if ("float32" !== a.dtype || "float32" !== o.dtype)
                throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");
            var u = r.transposeA
              , c = r.transposeB
              , l = r.activation
              , f = n.dataIdMap.get(a.dataId).id
              , p = n.dataIdMap.get(o.dataId).id
              , d = 0;
            if (null != i) {
                var h = n.dataIdMap.get(i.dataId);
                if (1 !== h.shape.length)
                    throw new Error("_FusedMatMul only supports rank-1 bias but got rank ".concat(h.shape.length, "."));
                d = h.id
            }
            var m = null == s ? 0 : n.dataIdMap.get(s.dataId).id
              , v = MO[l];
            if (null == v)
                throw new Error("".concat(l, " activation not yet supported for FusedConv2D in the wasm backend."));
            var g = u ? a.shape[2] : a.shape[1]
              , y = c ? o.shape[1] : o.shape[2]
              , b = a.shape[0]
              , x = n.makeOutput([b, g, y], a.dtype)
              , w = n.dataIdMap.get(x.dataId).id
              , k = new Uint8Array(new Int32Array(a.shape).buffer)
              , C = new Uint8Array(new Int32Array(o.shape).buffer);
            return PO(f, k, a.shape.length, p, C, o.shape.length, u, c, v, d, m, w),
            x
        }
    };
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function WO(e) {
        var t;
        return {
            kernelName: e,
            backendName: "wasm",
            setupFunc: function(n) {
                t = n.wasm.cwrap(e, null, ["number", "number"])
            },
            kernelFunc: function(e) {
                var n = e.backend
                  , r = e.inputs.x
                  , a = n.dataIdMap.get(r.dataId).id
                  , o = n.makeOutput(r.shape, r.dtype)
                  , i = n.dataIdMap.get(o.dataId).id;
                return 0 === _k(o.shape) || t(a, i),
                o
            }
        }
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var jO = WO("Abs");
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function HO(e, t, n) {
        var r;
        return {
            kernelName: e,
            backendName: "wasm",
            setupFunc: function(t) {
                r = t.wasm.cwrap(e, null, ["number", "array", "number", "number", "array", "number", "number", "number"])
            },
            kernelFunc: function(a) {
                var o = a.backend
                  , i = a.inputs
                  , s = i.a
                  , u = i.b
                  , c = o.dataIdMap.get(s.dataId).id
                  , l = o.dataIdMap.get(u.dataId).id
                  , f = null != n ? n : s.dtype
                  , p = VI(s.shape, u.shape)
                  , d = o.makeOutput(p, f);
                if (0 === _k(p))
                    return d;
                var h = new Uint8Array(new Int32Array(s.shape).buffer)
                  , m = new Uint8Array(new Int32Array(u.shape).buffer)
                  , v = o.dataIdMap.get(d.dataId).id
                  , g = function() {
                    return r(c, h, s.shape.length, l, m, u.shape.length, FO[s.dtype], v)
                };
                if (t && "float32" === s.dtype)
                    return g(),
                    d;
                var y = LI(s.shape, p)
                  , b = LI(u.shape, p)
                  , x = y.every((function(e, t) {
                    return e === t
                }
                ))
                  , w = b.every((function(e, t) {
                    return e === t
                }
                ));
                if (x && w)
                    return g(),
                    d;
                throw new Error("Broadcasting along outer dims is not yet supported for ".concat(s.dtype, " ").concat(e, "."))
            }
        }
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var GO, KO = HO(lC, !0), qO = {
        kernelName: "AddN",
        backendName: "wasm",
        setupFunc: function(e) {
            GO = e.wasm.cwrap("AddN", null, ["array", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = n.makeOutput(t[0].shape, t[0].dtype);
            if (0 === _k(r.shape))
                return r;
            var a = t.map((function(e) {
                return n.dataIdMap.get(e.dataId).id
            }
            ))
              , o = new Uint8Array(new Int32Array(a).buffer)
              , i = n.dataIdMap.get(r.dataId).id;
            return GO(o, a.length, FO[r.dtype], i),
            r
        }
    };
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function XO(e) {
        var t = e.inputs.x
          , n = e.backend
          , r = n.makeOutput(t.shape, t.dtype)
          , a = n.typedArrayFromHeap(t);
        return n.typedArrayFromHeap(r).set(a),
        r
    }
    var QO, YO = {
        kernelName: "Identity",
        backendName: "wasm",
        kernelFunc: XO
    };
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function $O(e) {
        for (var t = e.inputs, n = e.backend, r = e.attrs, a = Uy(function(e, t) {
            for (var n = [], r = [], a = 0; a < e.length; ++a)
                1 !== e[a] && n.push(e[a]),
                1 !== e[t[a]] && r.push(t[a]);
            for (var o = 0; o < r.length; ++o) {
                for (var i = -1, s = 0; s < r.length; ++s)
                    r[s] >= o && (-1 === i || r[i] > r[s]) && (i = s);
                r[i] = o
            }
            return [n, r]
        }(t.x.shape, r.perm), 2), o = a[0], i = a[1], s = !0, u = 0; u < i.length; u++)
            i[u] !== u && (s = !1);
        var c = function(e, t) {
            for (var n = new Array(e.length), r = 0; r < n.length; r++)
                n[r] = e[t[r]];
            return n
        }(t.x.shape, r.perm)
          , l = {
            dataId: t.x.dataId,
            shape: o,
            dtype: t.x.dtype
        };
        if (s) {
            var f = XO({
                inputs: t,
                backend: n
            });
            return f.shape = c,
            f
        }
        var p = n.makeOutput(c, l.dtype)
          , d = n.dataIdMap.get(l.dataId).id
          , h = n.dataIdMap.get(p.dataId).id
          , m = new Uint8Array(new Int32Array(i).buffer)
          , v = new Uint8Array(new Int32Array(l.shape).buffer);
        return QO(d, v, l.shape.length, FO[l.dtype], h, m, i.length),
        p
    }
    var ZO, JO = {
        kernelName: "Transpose",
        backendName: "wasm",
        kernelFunc: $O,
        setupFunc: function(e) {
            QO = e.wasm.cwrap("Transpose", null, ["number", "array", "number", "number", "number", "array", "number"])
        }
    };
    /**
	 * @license
	 * Copyright 2020 Google Inc. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function eD(e, t, n) {
        var r = e.shape
          , a = e.shape.length
          , o = Pk(t, r)
          , i = o
          , s = VS(i, a)
          , u = null
          , c = !1;
        if (null != s) {
            for (var l = new Array(a), f = 0; f < l.length; f++)
                l[f] = r[s[f]];
            i = WS(i.length, a),
            u = $O({
                inputs: {
                    x: e
                },
                attrs: {
                    perm: s
                },
                backend: n
            });
            var p = n.dataIdMap.get(e.dataId).id;
            n.dataIdMap.get(u.dataId).id !== p && (c = !0)
        }
        return {
            transposed: u,
            originalAxes: o,
            axes: i,
            inputWasTransposed: c
        }
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var tD, nD = {
        kernelName: "ArgMax",
        backendName: "wasm",
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs.axis
              , a = n.x
              , o = t.dataIdMap.get(a.dataId).id
              , i = o
              , s = a
              , u = eD(a, r, t)
              , c = u.transposed
              , l = u.axes
              , f = u.inputWasTransposed;
            if (f) {
                var p = t.dataIdMap.get(c.dataId).id;
                p !== o && (s = c,
                i = p)
            }
            var d = s.shape.slice(0, -1)
              , h = t.makeOutput(d, "int32")
              , m = t.dataIdMap.get(h.dataId).id
              , v = _k(h.shape)
              , g = s.shape[l[0]];
            return ZO(i, FO[s.dtype], v, g, m),
            f && t.disposeData(c.dataId),
            h
        },
        setupFunc: function(e) {
            ZO = e.wasm.cwrap("ArgMax", null, ["number", "number", "number", "number", "number"])
        }
    }, rD = {
        kernelName: "AvgPool",
        backendName: "wasm",
        setupFunc: function(e) {
            tD = e.wasm.cwrap("AvgPool", null, ["number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = r.dataIdMap.get(a.dataId).id
              , i = n.filterSize
              , s = n.strides
              , u = n.pad
              , c = n.dimRoundingMode
              , l = JS(a.shape, i, s, 1, u, c)
              , f = l.filterHeight
              , p = l.filterWidth
              , d = l.padInfo.top
              , h = l.padInfo.right
              , m = l.padInfo.bottom
              , v = l.padInfo.left
              , g = l.strideHeight
              , y = l.strideWidth
              , b = l.inChannels;
            if ("channelsLast" !== l.dataFormat)
                throw new Error("wasm backend does not support dataFormat:'".concat(l.dataFormat, "'. Please use 'channelsLast'."));
            if (1 !== l.dilationWidth || 1 !== l.dilationHeight)
                throw new Error("was backend only supports average pooling with dilation = [1, 1], got [".concat(l.dilationHeight, ", ").concat(l.dilationWidth, "]."));
            var x = r.makeOutput(l.outShape, "float32")
              , w = r.dataIdMap.get(x.dataId).id;
            return tD(o, a.shape[0], a.shape[1], a.shape[2], f, p, d, h, m, v, g, y, b, w),
            x
        }
    };
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function aD(e) {
        var t = e.inputs
          , n = e.attrs
          , r = t.x
          , a = n.shape
          , o = _k(r.shape)
          , i = Mk(a, o);
        return Ik(o === _k(i), (function() {
            return "new shape: ".concat(i, ", old shape: ").concat(r.shape, ". New shape and old shape must have the same number of elements.")
        }
        )),
        {
            dataId: r.dataId,
            shape: i,
            dtype: r.dtype
        }
    }
    var oD, iD = {
        kernelName: "Reshape",
        backendName: "wasm",
        kernelFunc: aD
    }, sD = {
        kernelName: "BatchMatMul",
        backendName: "wasm",
        setupFunc: function(e) {
            oD = e.wasm.cwrap("BatchMatMul", null, ["number", "array", "number", "number", "array", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.a
              , o = t.b
              , i = r.transposeA
              , s = r.transposeB;
            if ("float32" !== a.dtype || "float32" !== o.dtype)
                throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");
            var u = a.shape.length
              , c = o.shape.length
              , l = i ? a.shape[u - 2] : a.shape[u - 1]
              , f = s ? o.shape[c - 1] : o.shape[c - 2]
              , p = i ? a.shape[u - 1] : a.shape[u - 2]
              , d = s ? o.shape[c - 2] : o.shape[c - 1]
              , h = a.shape.slice(0, -2)
              , m = o.shape.slice(0, -2)
              , v = _k(h)
              , g = _k(m);
            Ik(u >= 2 && c >= 2 && (v === g || 1 === v || 1 === g), (function() {
                return "Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (".concat(h, ") and (").concat(m, ").")
            }
            ));
            var y = (v > g ? a.shape.slice(0, -2) : o.shape.slice(0, -2)).concat([p, d]);
            Ik(l === f, (function() {
                return "Error in matMul: inner shapes (".concat(l, ") and (").concat(f, ") of Tensors with shapes ").concat(a.shape, " and ").concat(o.shape, " and transposeA=").concat(i, " and transposeB=").concat(s, " must match.")
            }
            ));
            var b = s ? [g, d, f] : [g, f, d]
              , x = aD({
                inputs: {
                    x: a
                },
                backend: n,
                attrs: {
                    shape: i ? [v, l, p] : [v, p, l]
                }
            })
              , w = aD({
                inputs: {
                    x: o
                },
                backend: n,
                attrs: {
                    shape: b
                }
            })
              , k = n.dataIdMap.get(x.dataId).id
              , C = n.dataIdMap.get(w.dataId).id
              , E = i ? x.shape[2] : x.shape[1]
              , S = s ? w.shape[1] : w.shape[2]
              , I = Math.max(v, g)
              , T = n.makeOutput([I, E, S], x.dtype)
              , A = n.dataIdMap.get(T.dataId).id
              , N = new Uint8Array(new Int32Array(x.shape).buffer)
              , _ = new Uint8Array(new Int32Array(w.shape).buffer);
            return oD(k, N, x.shape.length, C, _, w.shape.length, i, s, A),
            T.shape = y,
            T
        }
    };
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function uD(e) {
        var t = e.inputs.x
          , n = e.attrs.dtype
          , r = e.backend
          , a = r.makeOutput(t.shape, n)
          , o = r.typedArrayFromHeap(t);
        return r.typedArrayFromHeap(a).set(o),
        a
    }
    var cD, lD, fD, pD, dD, hD, mD, vD, gD, yD, bD, xD, wD, kD, CD, ED, SD, ID, TD, AD, ND, _D, RD, OD, DD, BD, FD, MD, PD, LD, UD, VD, zD, WD = {
        kernelName: "Cast",
        backendName: "wasm",
        kernelFunc: uD
    }, jD = {
        kernelName: "ClipByValue",
        backendName: "wasm",
        setupFunc: function(e) {
            cD = e.wasm.cwrap("ClipByValue", null, ["number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = r.clipValueMin
              , i = r.clipValueMax
              , s = n.dataIdMap.get(a.dataId).id
              , u = n.makeOutput(a.shape, a.dtype)
              , c = n.dataIdMap.get(u.dataId).id;
            return cD(s, o, i, c),
            u
        }
    }, HD = {
        kernelName: "Concat",
        backendName: "wasm",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = Pk(e.attrs.axis, t[0].shape)[0]
              , a = hI(t.map((function(e) {
                return e.shape
            }
            )), r)
              , o = n.makeOutput(a, t[0].dtype);
            if (0 === _k(a))
                return o;
            var i = t.filter((function(e) {
                return _k(e.shape) > 0
            }
            ));
            if (1 === i.length)
                return i[0];
            dI(i.map((function(e) {
                return e.shape
            }
            )), r);
            for (var s = _k(i[0].shape.slice(0, r)), u = 0, c = i.map((function(e) {
                var t = _k(e.shape.slice(r));
                return u += t,
                t
            }
            )), l = i.map((function(e) {
                return n.typedArrayFromHeap(e)
            }
            )), f = n.typedArrayFromHeap(o), p = 0; p < s; p++)
                for (var d = p * u, h = 0; h < l.length; h++) {
                    var m = c[h]
                      , v = p * m
                      , g = l[h].subarray(v, v + m);
                    f.set(g, d),
                    d += m
                }
            return o
        }
    }, GD = {
        kernelName: "Conv2D",
        backendName: "wasm",
        setupFunc: function(e) {
            lD = e.wasm.cwrap("Conv2D", null, ["number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = t.filter
              , i = r.dataIdMap.get(a.dataId).id
              , s = r.dataIdMap.get(o.dataId).id
              , u = n.strides
              , c = n.dilations
              , l = n.pad
              , f = n.dimRoundingMode
              , p = lI(n.dataFormat)
              , d = tI(a.shape, o.shape, u, c, l, f, !1, p)
              , h = d.filterHeight
              , m = d.filterWidth
              , v = d.padInfo.top
              , g = d.padInfo.right
              , y = d.padInfo.bottom
              , b = d.padInfo.left
              , x = d.dilationHeight
              , w = d.dilationWidth
              , k = d.strideHeight
              , C = d.strideWidth
              , E = d.inChannels
              , S = d.outChannels
              , I = "SAME" === d.padInfo.type ? 1 : 0;
            if ("channelsLast" !== d.dataFormat)
                throw new Error("wasm backend Conv2D does not support dataFormat:'".concat(d.dataFormat, "'. Please use 'channelsLast'."));
            var T = r.makeOutput(d.outShape, "float32")
              , A = r.dataIdMap.get(T.dataId).id;
            return lD(i, a.shape[0], a.shape[1], a.shape[2], s, h, m, v, g, y, b, I, x, w, k, C, E, S, A),
            T
        }
    }, KD = {
        kernelName: "Conv2DBackpropInput",
        backendName: "wasm",
        setupFunc: function(e) {
            fD = e.wasm.cwrap("Conv2DBackpropInput", null, ["number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = n.dy
              , o = n.filter
              , i = r.strides
              , s = r.pad
              , u = r.dataFormat
              , c = r.dimRoundingMode
              , l = r.inputShape
              , f = lI(u)
              , p = tI(l, o.shape, i, 1, s, c, !1, f)
              , d = p.batchSize
              , h = p.filterHeight
              , m = p.filterWidth
              , v = p.inChannels
              , g = p.inHeight
              , y = p.inWidth
              , b = p.outChannels
              , x = p.outHeight
              , w = p.outWidth
              , k = p.strideHeight
              , C = p.strideWidth
              , E = h - 1 - p.padInfo.top
              , S = m - 1 - p.padInfo.left
              , I = "channelsLast" === p.dataFormat
              , T = Xk(p.inShape)
              , A = Xk(a.shape)
              , N = Uy(Xk(o.shape), 3)
              , _ = N[0]
              , R = N[1]
              , O = N[2]
              , D = T[0]
              , B = I ? T[1] : T[2]
              , F = I ? T[2] : 1
              , M = I ? 1 : T[1]
              , P = A[0]
              , L = I ? A[1] : A[2]
              , U = I ? A[2] : 1
              , V = I ? 1 : A[1]
              , z = t.makeOutput(p.inShape, "float32")
              , W = t.dataIdMap.get(z.dataId).id
              , j = t.dataIdMap.get(a.dataId).id
              , H = t.dataIdMap.get(o.dataId).id;
            return fD(j, H, d, h, m, g, y, v, x, w, b, k, C, E, S, _, R, O, D, B, F, M, P, L, U, V, W),
            z
        }
    }, qD = WO(fC);
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function XD(e, t) {
        var n = new Int32Array(e.wasm.HEAPU8.buffer,t,4)
          , r = n[0]
          , a = n[1]
          , o = n[2]
          , i = n[3];
        return e.wasm._free(t),
        {
            pSelectedIndices: r,
            selectedSize: a,
            pSelectedScores: o,
            pValidOutputs: i
        }
        /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function QD(e) {
        var t = e.inputs.x
          , n = e.attrs
          , r = n.begin
          , a = n.size
          , o = e.backend
          , i = Uy(bS(t, r, a), 2)
          , s = i[0]
          , u = i[1]
          , c = gS(t.shape, s, u)
          , l = o.typedArrayFromHeap(t)
          , f = o.makeOutput(u, t.dtype)
          , p = o.typedArrayFromHeap(f)
          , d = Xk(t.shape);
        if (c) {
            var h = yS(s, d);
            return p.set(l.subarray(h, h + _k(u))),
            f
        }
        var m = t.shape.length;
        return 2 === m ? function(e, t, n, r, a) {
            for (var o = 0, i = r[0], s = r[1], u = i + a[0], c = i; c < u; c++) {
                var l = c * t + s;
                n.set(e.subarray(l, l + a[1]), o),
                o += a[1]
            }
        }(l, d[0], p, s, u) : 3 === m ? function(e, t, n, r, a, o) {
            for (var i = 0, s = a[0], u = a[1], c = a[2], l = s + o[0], f = u + o[1], p = s; p < l; p++)
                for (var d = u; d < f; d++) {
                    var h = p * t + d * n + c;
                    r.set(e.subarray(h, h + o[2]), i),
                    i += o[2]
                }
        }(l, d[0], d[1], p, s, u) : 4 === m ? function(e, t, n, r, a, o, i) {
            for (var s = 0, u = o[0], c = o[1], l = o[2], f = u + i[0], p = c + i[1], d = l + i[2], h = o[3], m = u; m < f; m++)
                for (var v = c; v < p; v++)
                    for (var g = l; g < d; g++) {
                        var y = m * t + v * n + g * r + h;
                        a.set(e.subarray(y, y + i[3]), s),
                        s += i[3]
                    }
        }(l, d[0], d[1], d[2], p, s, u) : function(e, t, n, r, a) {
            for (var o = VE(a, t.dtype, n), i = VE(t.shape, t.dtype, e), s = 0; s < o.size; ++s) {
                var u = o.indexToLoc(s).map((function(e, t) {
                    return e + r[t]
                }
                ));
                n[s] = i.get.apply(i, Vy(u))
            }
        }(l, t, p, s, u),
        f
        /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    !function(e) {
        e[e.bilinear = 0] = "bilinear",
        e[e.nearest = 1] = "nearest"
    }(pD || (pD = {}));
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    for (var YD = 0, $D = [jO, KO, qO, nD, rD, sD, WD, jD, HD, GD, KD, qD, {
        kernelName: "CropAndResize",
        backendName: "wasm",
        setupFunc: function(e) {
            dD = e.wasm.cwrap("CropAndResize", null, ["number", "number", "number", "number", "array", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t, n = e.backend, r = e.inputs, a = e.attrs, o = a.method, i = a.extrapolationValue, s = a.cropSize, u = r.image, c = r.boxes, l = r.boxInd, f = c.shape[0], p = Uy(s, 2), d = p[0], h = p[1], m = [f, d, h, u.shape[3]], v = n.dataIdMap.get(u.dataId);
            "float32" !== u.dtype && (t = uD({
                backend: n,
                inputs: {
                    x: u
                },
                attrs: {
                    dtype: "float32"
                }
            }),
            v = n.dataIdMap.get(t.dataId));
            var g = v.id
              , y = n.dataIdMap.get(c.dataId).id
              , b = n.dataIdMap.get(l.dataId).id
              , x = n.makeOutput(m, "float32")
              , w = n.dataIdMap.get(x.dataId).id
              , k = new Uint8Array(new Int32Array(u.shape).buffer);
            return dD(g, y, b, f, k, d, h, pD[o], i, w),
            null != t && n.disposeData(t.dataId),
            x
        }
    }, {
        kernelName: "Cumsum",
        backendName: "wasm",
        setupFunc: function(e) {
            hD = e.wasm.cwrap("Cumsum", null, ["number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = r.axis
              , i = r.exclusive
              , s = r.reverse
              , u = a.shape.length;
            Ik("float32" === a.dtype || "int32" === a.dtype, (function() {
                return "cumsum does not support ".concat(a.dtype, " tensors in the WASM backend")
            }
            ));
            var c = VS([o], u)
              , l = a;
            null !== c && (l = $O({
                inputs: {
                    x: a
                },
                attrs: {
                    perm: c
                },
                backend: n
            }));
            var f = WS(1, u)[0];
            US("cumsum", [f], u);
            var p = n.makeOutput(l.shape, l.dtype)
              , d = l.shape[f]
              , h = n.dataIdMap.get(l.dataId).id
              , m = n.dataIdMap.get(p.dataId).id;
            hD(h, i ? 1 : 0, s ? 1 : 0, d, m, FO[a.dtype]);
            var v = p;
            return null !== c && (v = $O({
                inputs: {
                    x: p
                },
                attrs: {
                    perm: zS(c)
                },
                backend: n
            }),
            n.disposeData(l.dataId),
            n.disposeData(p.dataId)),
            v
        }
    }, {
        kernelName: "DepthToSpace",
        backendName: "wasm",
        setupFunc: function(e) {
            mD = e.wasm.cwrap("DepthToSpace", null, ["number", "number", "number", "array", "number", "array", "array", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = n.x
              , o = r.blockSize
              , i = r.dataFormat;
            Ik(o > 1, (function() {
                return "blockSize should be > 1 for depthToSpace, but was: ".concat(o)
            }
            ));
            var s = a.shape[0]
              , u = "NHWC" === i ? a.shape[1] : a.shape[2]
              , c = "NHWC" === i ? a.shape[2] : a.shape[3]
              , l = "NHWC" === i ? a.shape[3] : a.shape[1]
              , f = u * o
              , p = c * o
              , d = l / (o * o)
              , h = "NHWC" === i ? [s, f, p, d] : [s, d, f, p]
              , m = t.makeOutput(h, "float32")
              , v = t.dataIdMap.get(a.dataId).id
              , g = new Uint8Array(new Int32Array(Xk(a.shape)).buffer)
              , y = new Uint8Array(new Int32Array(h).buffer)
              , b = new Uint8Array(new Int32Array(Xk(h)).buffer)
              , x = t.dataIdMap.get(m.dataId).id;
            return mD(v, o, "NHWC" === i ? 1 : 0, g, a.shape.length - 1, y, b, h.length, x),
            m
        }
    }, {
        kernelName: "DepthwiseConv2dNative",
        backendName: "wasm",
        setupFunc: function(e) {
            vD = e.wasm.cwrap("DepthwiseConv2dNative", null, ["number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = t.filter
              , i = r.dataIdMap.get(a.dataId).id
              , s = r.dataIdMap.get(o.dataId).id
              , u = n.strides
              , c = n.dilations
              , l = n.pad
              , f = n.dimRoundingMode
              , p = null == c ? [1, 1] : c
              , d = tI(a.shape, o.shape, u, p, l, f, !0)
              , h = d.filterHeight
              , m = d.filterWidth
              , v = d.padInfo.top
              , g = d.padInfo.right
              , y = d.padInfo.bottom
              , b = d.padInfo.left
              , x = d.dilationHeight
              , w = d.dilationWidth
              , k = d.strideHeight
              , C = d.strideWidth
              , E = d.inChannels
              , S = d.outChannels
              , I = "SAME" === d.padInfo.type ? 1 : 0;
            if ("channelsLast" !== d.dataFormat)
                throw new Error("wasm backend DepthwiseConv2dNative does not support dataFormat:'".concat(d.dataFormat, "'. Please use 'channelsLast'."));
            var T = r.makeOutput(d.outShape, "float32")
              , A = r.dataIdMap.get(T.dataId).id;
            return vD(i, a.shape[0], a.shape[1], a.shape[2], s, h, m, v, g, y, b, I, x, w, k, C, E, S, A),
            T
        }
    }, HO(pC, !0), HO("Equal", !1, "bool"), WO("Exp"), {
        kernelName: "Fill",
        backendName: "wasm",
        kernelFunc: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            var t = e.attrs
              , n = t.shape
              , r = t.value
              , a = t.dtype
              , o = e.backend
              , i = o.makeOutput(n, a);
            return o.typedArrayFromHeap(i).fill(r),
            i
        }
    }, {
        kernelName: "FlipLeftRight",
        backendName: "wasm",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = t.image
              , a = n.makeOutput(r.shape, r.dtype)
              , o = n.dataIdMap.get(r.dataId).id
              , i = n.dataIdMap.get(a.dataId).id
              , s = Uy(r.shape, 4)
              , u = s[0]
              , c = s[1]
              , l = s[2]
              , f = s[3];
            return gD(o, u, c, l, f, i),
            a
        },
        setupFunc: function(e) {
            gD = e.wasm.cwrap("FlipLeftRight", null, ["number", "number", "number", "number", "number", "number"])
        }
    }, HO("FloorDiv", !1), zO, {
        kernelName: "FusedBatchNorm",
        backendName: "wasm",
        setupFunc: function(e) {
            yD = e.wasm.cwrap("FusedBatchNorm", null, ["number", "number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs.varianceEpsilon
              , a = n.x
              , o = n.mean
              , i = n.variance
              , s = n.offset
              , u = n.scale
              , c = t.dataIdMap.get(a.dataId).id
              , l = t.dataIdMap.get(o.dataId).id
              , f = t.dataIdMap.get(i.dataId).id
              , p = null != s ? t.dataIdMap.get(s.dataId).id : 0
              , d = null != u ? t.dataIdMap.get(u.dataId).id : 0
              , h = t.makeOutput(a.shape, a.dtype);
            if (0 === _k(a.shape))
                return h;
            var m = t.dataIdMap.get(h.dataId).id;
            return yD(c, l, f, p, d, r, m),
            h
        }
    }, {
        kernelName: "FusedConv2D",
        backendName: "wasm",
        setupFunc: function(e) {
            bD = e.wasm.cwrap("FusedConv2D", null, ["number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = t.filter
              , i = t.bias
              , s = t.preluActivationWeights
              , u = n.strides
              , c = n.pad
              , l = n.dilations
              , f = n.dataFormat
              , p = n.dimRoundingMode
              , d = n.activation
              , h = tI(a.shape, o.shape, u, l, c, p)
              , m = MO[d];
            if (null == m)
                throw new Error("".concat(d, " activation not yet supported for FusedConv2D in the wasm backend."));
            var v = r.dataIdMap.get(a.dataId).id
              , g = r.dataIdMap.get(o.dataId).id
              , y = h.outChannels
              , b = 0;
            if (null != i) {
                var x = r.dataIdMap.get(i.dataId);
                if (1 !== x.shape.length)
                    throw new Error("FusedConv2D only supports rank-1 bias but got rank ".concat(x.shape.length, "."));
                if (x.shape[0] !== y)
                    throw new Error("FusedConv2D bias shape (".concat(x.shape, ") does not match the number of output channels (").concat(y, ")"));
                b = x.id
            }
            var w = h.filterHeight
              , k = h.filterWidth
              , C = h.padInfo.top
              , E = h.padInfo.right
              , S = h.padInfo.bottom
              , I = h.padInfo.left
              , T = h.dilationHeight
              , A = h.dilationWidth
              , N = h.strideHeight
              , _ = h.strideWidth
              , R = h.inChannels
              , O = "SAME" === h.padInfo.type ? 1 : 0
              , D = h.batchSize
              , B = h.inHeight
              , F = h.inWidth;
            if ("NHWC" !== f)
                throw new Error("wasm backend FusedConv2D does not support dataFormat:'".concat(f, "'. Please use 'NHWC'."));
            var M = r.makeOutput(h.outShape, "float32")
              , P = r.dataIdMap.get(M.dataId).id
              , L = null == s ? 0 : r.dataIdMap.get(s.dataId).id;
            return bD(v, D, B, F, g, w, k, b, C, E, S, I, O, T, A, N, _, R, y, m, L, P),
            M
        }
    }, {
        kernelName: "FusedDepthwiseConv2D",
        backendName: "wasm",
        setupFunc: function(e) {
            xD = e.wasm.cwrap("FusedDepthwiseConv2D", null, ["number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = t.filter
              , i = t.bias
              , s = t.preluActivationWeights
              , u = n.strides
              , c = n.pad
              , l = n.dilations
              , f = n.dataFormat
              , p = n.dimRoundingMode
              , d = n.activation
              , h = tI(a.shape, o.shape, u, l, c, p, !0)
              , m = MO[d];
            if (null == m)
                throw new Error("".concat(d, " activation not yet supported for FusedDepthwiseConv2D in the wasm backend."));
            var v = r.dataIdMap.get(a.dataId).id
              , g = r.dataIdMap.get(o.dataId).id
              , y = h.outChannels
              , b = 0;
            if (null != i) {
                var x = r.dataIdMap.get(i.dataId);
                if (1 !== x.shape.length)
                    throw new Error("FusedDepthwiseConv2D only supports rank-1 bias but got rank ".concat(x.shape.length, "."));
                if (x.shape[0] !== y)
                    throw new Error("FusedDepthwiseConv2D bias shape (".concat(x.shape, ") does not match the number of output channels (").concat(y, ")"));
                b = x.id
            }
            var w = h.filterHeight
              , k = h.filterWidth
              , C = h.padInfo.top
              , E = h.padInfo.right
              , S = h.padInfo.bottom
              , I = h.padInfo.left
              , T = h.dilationHeight
              , A = h.dilationWidth
              , N = h.strideHeight
              , _ = h.strideWidth
              , R = h.inChannels
              , O = "SAME" === h.padInfo.type ? 1 : 0
              , D = h.batchSize
              , B = h.inHeight
              , F = h.inWidth;
            if ("NHWC" !== f)
                throw new Error("wasm backend FusedDepthwiseConv2D does not support dataFormat:'".concat(f, "'. Please use 'NHWC'."));
            var M = r.makeOutput(h.outShape, "float32")
              , P = r.dataIdMap.get(M.dataId).id
              , L = null == s ? 0 : r.dataIdMap.get(s.dataId).id;
            return xD(v, D, B, F, g, w, k, b, C, E, S, I, O, T, A, N, _, R, y, m, L, P),
            M
        }
    }, {
        kernelName: "GatherNd",
        backendName: "wasm",
        setupFunc: function(e) {
            wD = e.wasm.cwrap("GatherNd", null, ["number", "number", "number", "number", "number", "number", "array", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = n.params
              , a = n.indices
              , o = Uy(tS(r, a), 4)
              , i = o[0]
              , s = o[1]
              , u = o[2]
              , c = o[3]
              , l = t.makeOutput(i, r.dtype);
            if (0 === s)
                return l;
            var f = a.shape
              , p = f[f.length - 1]
              , d = t.dataIdMap.get(r.dataId).id
              , h = t.dataIdMap.get(a.dataId).id
              , m = new Uint8Array(new Int32Array(c).buffer)
              , v = t.dataIdMap.get(l.dataId).id;
            return wD(d, FO[r.dtype], h, s, p, u, m, v),
            l
        }
    }, {
        kernelName: "GatherV2",
        backendName: "wasm",
        setupFunc: function(e) {
            kD = e.wasm.cwrap("Gather", null, ["number", "number", "array", "number", "number", "number", "array", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = n.x
              , o = n.indices
              , i = r.axis
              , s = a.shape.slice();
            s[i] = _k(o.shape);
            var u = a.shape.length - 1
              , c = t.makeOutput(s, a.dtype);
            if (0 === _k(a.shape))
                return c;
            var l = t.dataIdMap.get(a.dataId).id
              , f = t.dataIdMap.get(o.dataId).id
              , p = t.dataIdMap.get(c.dataId).id
              , d = new Uint8Array(new Int32Array(Xk(a.shape)).buffer)
              , h = new Uint8Array(new Int32Array(Xk(s)).buffer);
            kD(l, FO[a.dtype], d, u, f, i, h, p);
            var m = tT(a, o, Pk(i, a.shape)[0]);
            return c.shape = m.outputShape,
            c
        }
    }, HO("Greater", !1, "bool"), HO("GreaterEqual", !1, "bool"), YO, HO("Less", !1, "bool"), HO("LessEqual", !1, "bool"), WO("Log"), HO("LogicalAnd", !1, "bool"), {
        kernelName: dC,
        backendName: "wasm",
        setupFunc: function(e) {
            CD = e.wasm.cwrap(dC, null, ["number, number, number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = r.reductionIndices
              , o = r.keepDims
              , i = n.x
              , s = t.dataIdMap.get(i.dataId).id
              , u = i
              , c = eD(i, a, t)
              , l = c.transposed
              , f = c.axes
              , p = c.originalAxes
              , d = c.inputWasTransposed;
            d && (u = l,
            s = t.dataIdMap.get(l.dataId).id),
            US("max", f, u.shape.length);
            var h = Uy(PS(u.shape, f), 2)
              , m = h[0]
              , v = _k(h[1])
              , g = t.makeOutput(m, i.dtype);
            if (0 !== _k(u.shape)) {
                var y = t.dataIdMap.get(g.dataId).id;
                CD(s, v, y)
            }
            if (d && t.disposeData(l.dataId),
            o) {
                var b = LS(g.shape, p);
                g.shape = b
            }
            return g
        }
    }, HO("Maximum", !1), {
        kernelName: "MaxPool",
        backendName: "wasm",
        setupFunc: function(e) {
            ED = e.wasm.cwrap("MaxPool", null, ["number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = r.dataIdMap.get(a.dataId).id
              , i = n.filterSize
              , s = n.strides
              , u = n.pad
              , c = n.dimRoundingMode
              , l = JS(a.shape, i, s, 1, u, c)
              , f = l.filterHeight
              , p = l.filterWidth
              , d = l.padInfo.top
              , h = l.padInfo.right
              , m = l.padInfo.bottom
              , v = l.padInfo.left
              , g = l.dilationHeight
              , y = l.dilationWidth
              , b = l.strideHeight
              , x = l.strideWidth
              , w = l.inChannels
              , k = l.outChannels;
            if ("channelsLast" !== l.dataFormat)
                throw new Error("wasm backend does not support dataFormat:'".concat(l.dataFormat, "'. Please use 'channelsLast'."));
            var C = r.makeOutput(l.outShape, "float32")
              , E = r.dataIdMap.get(C.dataId).id;
            return ED(o, a.shape[0], a.shape[1], a.shape[2], f, p, d, h, m, v, g, y, b, x, w, k, E),
            C
        }
    }, {
        kernelName: "Min",
        backendName: "wasm",
        setupFunc: function(e) {
            SD = e.wasm.cwrap("Min", null, ["number, number, number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = r.axis
              , o = r.keepDims
              , i = n.x
              , s = t.dataIdMap.get(i.dataId).id
              , u = s
              , c = i
              , l = eD(i, a, t)
              , f = l.transposed
              , p = l.axes
              , d = l.originalAxes
              , h = l.inputWasTransposed;
            if (h) {
                var m = t.dataIdMap.get(f.dataId).id;
                m !== s && (c = f,
                u = m)
            }
            US("min", p, c.shape.length);
            var v = Uy(PS(c.shape, p), 2)
              , g = v[0]
              , y = _k(v[1])
              , b = t.makeOutput(g, c.dtype);
            if (0 !== _k(c.shape)) {
                var x = t.dataIdMap.get(b.dataId).id;
                SD(u, y, x)
            }
            if (h && t.disposeData(f.dataId),
            o) {
                var w = LS(b.shape, d);
                b.shape = w
            }
            return b
        }
    }, HO("Minimum", !1), HO("Multiply", !0), WO("Negate"), {
        kernelName: "NonMaxSuppressionV3",
        backendName: "wasm",
        setupFunc: function(e) {
            ID = e.wasm.cwrap("NonMaxSuppressionV3", "number", ["number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = r.iouThreshold
              , o = r.maxOutputSize
              , i = r.scoreThreshold
              , s = n.boxes
              , u = n.scores
              , c = t.dataIdMap.get(s.dataId).id
              , l = t.dataIdMap.get(u.dataId).id
              , f = XD(t, ID(c, l, o, a, i))
              , p = f.pSelectedIndices
              , d = f.selectedSize
              , h = f.pSelectedScores
              , m = f.pValidOutputs;
            return t.wasm._free(h),
            t.wasm._free(m),
            t.makeOutput([d], "int32", p)
        }
    }, {
        kernelName: "NonMaxSuppressionV4",
        backendName: "wasm",
        setupFunc: function(e) {
            TD = e.wasm.cwrap("NonMaxSuppressionV4", "number", ["number", "number", "number", "number", "number", "bool"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = r.iouThreshold
              , o = r.maxOutputSize
              , i = r.scoreThreshold
              , s = r.padToMaxOutputSize
              , u = n.boxes
              , c = n.scores
              , l = t.dataIdMap.get(u.dataId).id
              , f = t.dataIdMap.get(c.dataId).id
              , p = XD(t, TD(l, f, o, a, i, s))
              , d = p.pSelectedIndices
              , h = p.selectedSize
              , m = p.pSelectedScores
              , v = p.pValidOutputs;
            return t.wasm._free(m),
            [t.makeOutput([h], "int32", d), t.makeOutput([], "int32", v)]
        }
    }, {
        kernelName: "NonMaxSuppressionV5",
        backendName: "wasm",
        setupFunc: function(e) {
            AD = e.wasm.cwrap("NonMaxSuppressionV5", "number", ["number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = r.iouThreshold
              , o = r.maxOutputSize
              , i = r.scoreThreshold
              , s = r.softNmsSigma
              , u = n.boxes
              , c = n.scores
              , l = t.dataIdMap.get(u.dataId).id
              , f = t.dataIdMap.get(c.dataId).id
              , p = XD(t, AD(l, f, o, a, i, s))
              , d = p.pSelectedIndices
              , h = p.selectedSize
              , m = p.pSelectedScores
              , v = p.pValidOutputs;
            return t.wasm._free(v),
            [t.makeOutput([h], "int32", d), t.makeOutput([h], "float32", m)]
        }
    }, HO("NotEqual", !1, "bool"), {
        kernelName: "OneHot",
        backendName: "wasm",
        setupFunc: function(e) {
            ND = e.wasm.cwrap("OneHot", null, ["number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.indices
              , o = r.depth
              , i = r.onValue
              , s = r.offValue
              , u = n.makeOutput([].concat(Vy(a.shape), [o]), "int32")
              , c = n.dataIdMap.get(u.dataId).id
              , l = n.dataIdMap.get(a.dataId).id;
            return ND(l, o, i, s, c),
            u
        }
    }, {
        kernelName: "OnesLike",
        backendName: "wasm",
        kernelFunc: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            var t = e.inputs.x
              , n = e.backend
              , r = n.makeOutput(t.shape, t.dtype);
            return n.typedArrayFromHeap(r).fill(1),
            r
        }
    }, {
        kernelName: "PadV2",
        backendName: "wasm",
        kernelFunc: function(e) {
            var t = e.inputs.x
              , n = e.backend
              , r = e.attrs
              , a = r.paddings
              , o = r.constantValue
              , i = a.map((function(e, n) {
                return e[0] + t.shape[n] + e[1]
            }
            ))
              , s = n.dataIdMap.get(t.dataId).id
              , u = n.makeOutput(i, t.dtype)
              , c = n.dataIdMap.get(u.dataId).id
              , l = new Uint8Array(new Int32Array(t.shape).buffer)
              , f = a.map((function(e) {
                return e[0]
            }
            ))
              , p = a.map((function(e) {
                return e[1]
            }
            ))
              , d = new Uint8Array(new Int32Array(f).buffer)
              , h = new Uint8Array(new Int32Array(p).buffer);
            return _D(s, l, t.shape.length, FO[t.dtype], d, h, o, c),
            u
        },
        setupFunc: function(e) {
            _D = e.wasm.cwrap("PadV2", null, ["number", "array", "number", "number", "array", "array", "number", "number"])
        }
    }, HO("Pow", !1), {
        kernelName: "Prelu",
        backendName: "wasm",
        setupFunc: function(e) {
            RD = e.wasm.cwrap("Prelu", null, ["number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = t.x
              , a = t.alpha
              , o = n.dataIdMap.get(r.dataId).id
              , i = n.dataIdMap.get(a.dataId).id
              , s = n.makeOutput(r.shape, "float32")
              , u = n.dataIdMap.get(s.dataId).id;
            return RD(o, i, u),
            s
        }
    }, WO("Relu"), WO("Relu6"), iD, {
        kernelName: "ResizeBilinear",
        backendName: "wasm",
        setupFunc: function(e) {
            OD = e.wasm.cwrap("ResizeBilinear", null, ["number", "number", "number", "number", "number", "number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t, n = e.backend, r = e.inputs, a = e.attrs, o = r.images, i = a.alignCorners, s = Uy(a.size, 2), u = s[0], c = s[1], l = Uy(o.shape, 4), f = l[0], p = l[1], d = l[2], h = l[3], m = [f, u, c, h], v = n.dataIdMap.get(o.dataId);
            "float32" !== v.dtype && (t = uD({
                backend: n,
                inputs: {
                    x: o
                },
                attrs: {
                    dtype: "float32"
                }
            }),
            v = n.dataIdMap.get(t.dataId));
            var g = v.id
              , y = n.makeOutput(m, "float32");
            if (0 === _k(o.shape))
                return y;
            var b = n.dataIdMap.get(y.dataId).id;
            return OD(g, f, p, d, h, u, c, i ? 1 : 0, b),
            null != t && n.disposeData(t.dataId),
            y
        }
    }, {
        kernelName: "Reverse",
        backendName: "wasm",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = Pk(r.dims, a.shape);
            if (0 === a.shape.length)
                return XO({
                    inputs: {
                        x: a
                    },
                    backend: n
                });
            var i = n.makeOutput(a.shape, a.dtype)
              , s = n.dataIdMap.get(a.dataId).id
              , u = n.dataIdMap.get(i.dataId).id
              , c = new Uint8Array(new Int32Array(o).buffer)
              , l = new Uint8Array(new Int32Array(a.shape).buffer);
            return DD(s, c, o.length, l, a.shape.length, u),
            aD({
                inputs: {
                    x: i
                },
                attrs: {
                    shape: a.shape
                },
                backend: n
            })
        },
        setupFunc: function(e) {
            DD = e.wasm.cwrap("Reverse", null, ["number", "array", "number", "array", "number", "number"])
        }
    }, {
        kernelName: "RotateWithOffset",
        backendName: "wasm",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.image
              , o = r.radians
              , i = r.fillValue
              , s = r.center
              , u = n.makeOutput(a.shape, a.dtype)
              , c = n.dataIdMap.get(a.dataId).id
              , l = n.dataIdMap.get(u.dataId).id
              , f = Uy(a.shape, 4)
              , p = f[0]
              , d = f[1]
              , h = f[2]
              , m = f[3]
              , v = Uy(KN(s, d, h), 2)
              , g = v[0]
              , y = v[1]
              , b = "number" == typeof i ? [i, i, i, 0 === i ? 0 : 255] : [].concat(Vy(i), [255])
              , x = new Uint8Array(new Int32Array(b).buffer);
            return BD(c, p, d, h, m, o, g, y, x, b.length, l),
            u
        },
        setupFunc: function(e) {
            BD = e.wasm.cwrap("RotateWithOffset", null, ["number", "number", "number", "number", "number", "number", "number", "number", "array", "number", "number"])
        }
    }, WO("Rsqrt"), {
        kernelName: "ScatterNd",
        backendName: "wasm",
        setupFunc: function(e) {
            FD = e.wasm.cwrap("ScatterNd", null, ["number", "number", "number", "number", "number", "number", "array", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = n.indices
              , o = n.updates
              , i = r.shape
              , s = t.makeOutput(i, o.dtype);
            if (0 === _k(i))
                return s;
            var u = aS(0, a, i)
              , c = u.sliceRank
              , l = u.numUpdates
              , f = u.sliceSize
              , p = u.strides
              , d = u.outputSize
              , h = t.dataIdMap.get(a.dataId).id
              , m = t.dataIdMap.get(o.dataId).id
              , v = new Uint8Array(new Int32Array(p).buffer)
              , g = t.dataIdMap.get(s.dataId).id;
            return FD(h, m, FO[o.dtype], c, l, f, v, d, g),
            s
        }
    }, {
        kernelName: "SelectV2",
        backendName: "wasm",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = t.condition
              , a = t.t
              , o = t.e
              , i = n.dataIdMap.get(r.dataId).id
              , s = n.dataIdMap.get(a.dataId).id
              , u = n.dataIdMap.get(o.dataId).id
              , c = n.makeOutput(a.shape, a.dtype)
              , l = n.dataIdMap.get(c.dataId).id
              , f = r.shape.length
              , p = a.shape.length
              , d = 0 === f || f > 1 || 1 === p ? 1 : _k(a.shape.slice(1));
            return MD(i, s, u, d, l),
            c
        },
        setupFunc: function(e) {
            MD = e.wasm.cwrap("SelectV2", null, ["number", "number", "number", "number", "number"])
        }
    }, {
        kernelName: "Sigmoid",
        backendName: "wasm",
        setupFunc: function(e) {
            PD = e.wasm.cwrap("Sigmoid", null, ["number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs.x
              , r = t.dataIdMap.get(n.dataId).id
              , a = t.makeOutput(n.shape, n.dtype)
              , o = t.dataIdMap.get(a.dataId).id;
            return 0 === _k(a.shape) || PD(r, o),
            a
        }
    }, WO(hC), {
        kernelName: "Slice",
        backendName: "wasm",
        kernelFunc: QD
    }, {
        kernelName: "Softmax",
        backendName: "wasm",
        setupFunc: function(e) {
            LD = e.wasm.cwrap("Softmax", null, ["number", "number", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs.logits
              , r = e.attrs.dim
              , a = t.dataIdMap.get(n.dataId).id
              , o = t.makeOutput(n.shape, n.dtype)
              , i = t.dataIdMap.get(o.dataId).id
              , s = n.shape[r]
              , u = _k(n.shape) / s;
            return 0 === _k(o.shape) || LD(a, i, s, u),
            o
        }
    }, {
        kernelName: "SplitV",
        backendName: "wasm",
        kernelFunc: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = n.numOrSizeSplits
              , i = n.axis
              , s = Pk(i, a.shape)[0]
              , u = NA(a, o, i)
              , c = new Array(a.shape.length).fill(0)
              , l = a.shape.slice();
            return u.map((function(e) {
                var t = Vy(l);
                t[s] = e;
                var n = QD({
                    inputs: {
                        x: a
                    },
                    attrs: {
                        begin: c,
                        size: t
                    },
                    backend: r
                });
                return c[s] += e,
                n
            }
            ))
        }
    }, WO("Sqrt"), WO("Square"), HO("SquaredDifference", !0), {
        kernelName: "StridedSlice",
        backendName: "wasm",
        setupFunc: function(e) {
            UD = e.wasm.cwrap("StridedSlice", null, ["number", "array", "number", "array", "array", "array", "array", "array", "number", "number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = n.x
              , o = r.begin
              , i = r.end
              , s = r.strides;
            null == s && (s = new Array(o.length));
            var u = r.beginMask
              , c = r.endMask
              , l = r.ellipsisMask
              , f = r.newAxisMask
              , p = r.shrinkAxisMask
              , d = iS(l);
            if (d.length > 1)
                throw new Error("Multiple ellipses in slice is not allowed.");
            if (0 !== l && 0 !== f)
                throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");
            if (0 !== l && 0 !== p)
                throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");
            var h = a.shape.length - o.length
              , m = iS(f)
              , v = a.shape.slice();
            m.forEach((function(e) {
                o[e] = 0,
                i[e] = 1,
                v.splice(e, 0, 1)
            }
            ));
            var g = aD({
                inputs: {
                    x: a
                },
                attrs: {
                    shape: v
                },
                backend: t
            })
              , y = fS(g.shape, d, h, o, i, s, u, c, l)
              , b = y.begin
              , x = y.end
              , w = y.strides;
            o = b,
            i = x,
            s = w;
            var k = iS(p);
            k.forEach((function(e) {
                i[e] = o[e] + 1,
                s[e] = 1
            }
            ));
            var C = sS(o, i, s)
              , E = C.filter((function(e, t) {
                return -1 === k.indexOf(t)
            }
            ));
            if (s.every((function(e) {
                return 1 === e
            }
            )))
                return aD({
                    inputs: {
                        x: QD({
                            inputs: {
                                x: a
                            },
                            attrs: {
                                begin: o,
                                size: C
                            },
                            backend: t
                        })
                    },
                    attrs: {
                        shape: E
                    },
                    backend: t
                });
            var S = t.makeOutput(E, "float32");
            if (!E.some((function(e) {
                return 0 === e
            }
            ))) {
                var I = t.dataIdMap.get(g.dataId).id
                  , T = new Uint8Array(new Int32Array(Xk(g.shape)).buffer)
                  , A = new Uint8Array(new Int32Array(o).buffer)
                  , N = new Uint8Array(new Int32Array(i).buffer)
                  , _ = new Uint8Array(new Int32Array(s).buffer)
                  , R = new Uint8Array(new Int32Array(E).buffer)
                  , O = new Uint8Array(new Int32Array(Xk(E)).buffer)
                  , D = t.dataIdMap.get(S.dataId).id;
                UD(I, T, g.shape.length, A, N, _, R, O, E.length, D)
            }
            return aD({
                inputs: {
                    x: S
                },
                attrs: {
                    shape: E
                },
                backend: t
            })
        }
    }, HO(mC, !0), {
        kernelName: "Sum",
        backendName: "wasm",
        setupFunc: function(e) {
            VD = e.wasm.cwrap("Sum", null, ["number, number, number"])
        },
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.inputs
              , r = e.attrs
              , a = r.axis
              , o = r.keepDims
              , i = n.x
              , s = t.dataIdMap.get(i.dataId).id
              , u = s
              , c = i
              , l = eD(i, a, t)
              , f = l.transposed
              , p = l.axes
              , d = l.originalAxes
              , h = l.inputWasTransposed
              , m = p;
            if (h) {
                var v = t.dataIdMap.get(f.dataId).id;
                v !== s && (c = f,
                u = v,
                m = WS(m.length, c.shape.length))
            }
            US("sum", m, c.shape.length);
            var g = Uy(PS(c.shape, m), 2)
              , y = g[0]
              , b = _k(g[1])
              , x = t.makeOutput(y, c.dtype);
            if (0 !== _k(c.shape)) {
                var w = t.dataIdMap.get(x.dataId).id;
                VD(u, b, w)
            }
            if (h && t.disposeData(f.dataId),
            o) {
                var k = LS(x.shape, d);
                x.shape = k
            }
            return x
        }
    }, WO("Tanh"), {
        kernelName: "Tile",
        backendName: "wasm",
        setupFunc: function(e) {
            zD = e.wasm.cwrap("Tile", null, ["number", "array", "number", "array", "number", "number"])
        },
        kernelFunc: function(e) {
            for (var t = e.inputs, n = e.backend, r = e.attrs, a = t.x, o = n.dataIdMap.get(a.dataId).id, i = r.reps, s = new Array(a.shape.length), u = 0; u < s.length; u++)
                s[u] = a.shape[u] * i[u];
            var c = new Uint8Array(new Int32Array(a.shape).buffer)
              , l = new Uint8Array(new Int32Array(s).buffer)
              , f = n.makeOutput(s, a.dtype)
              , p = n.dataIdMap.get(f.dataId).id;
            return zD(o, c, a.shape.length, l, s.length, FO[f.dtype], p),
            f
        }
    }, JO, {
        kernelName: "Unpack",
        backendName: "wasm",
        kernelFunc: /**
	   * @license
	   * Copyright 2019 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            for (var t = e.inputs, n = e.backend, r = e.attrs, a = t.value, o = r.axis, i = a.shape[o], s = a.shape.length, u = new Array(s - 1), c = 0, l = 0; l < s; l++)
                l !== o && (u[c++] = a.shape[l]);
            var f = new Array(i)
              , p = new Array(s).fill(0)
              , d = a.shape.slice();
            d[o] = 1;
            for (var h = 0; h < f.length; h++)
                p[o] = h,
                f[h] = QD({
                    inputs: {
                        x: a
                    },
                    attrs: {
                        begin: p,
                        size: d
                    },
                    backend: n
                });
            return f.map((function(e) {
                return {
                    dataId: e.dataId,
                    dtype: e.dtype,
                    shape: u
                }
            }
            ))
        }
    }, {
        kernelName: "ZerosLike",
        backendName: "wasm",
        kernelFunc: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            var t = e.inputs.x
              , n = e.backend
              , r = n.makeOutput(t.shape, t.dtype);
            return n.typedArrayFromHeap(r).fill(0),
            r
        }
    }]; YD < $D.length; YD++) {
        wC($D[YD])
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var ZD = oC();
    function JD(e, t) {
        for (var n = 0, r = e.length - 1; r >= 0; r--) {
            var a = e[r];
            "." === a ? e.splice(r, 1) : ".." === a ? (e.splice(r, 1),
            n++) : n && (e.splice(r, 1),
            n--)
        }
        if (t)
            for (; n--; n)
                e.unshift("..");
        return e
    }
    ZD.registerFlag("WASM_HAS_SIMD_SUPPORT", Ty(regeneratorRuntime.mark((function e() {
        return regeneratorRuntime.wrap((function(e) {
            for (; ; )
                switch (e.prev = e.next) {
                case 0:
                    return e.abrupt("return", WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11])));
                case 1:
                case "end":
                    return e.stop()
                }
        }
        ), e)
    }
    )))),
    ZD.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT", Ty(regeneratorRuntime.mark((function e() {
        return regeneratorRuntime.wrap((function(e) {
            for (; ; )
                switch (e.prev = e.next) {
                case 0:
                    if (!ZD.get("IS_NODE")) {
                        e.next = 2;
                        break
                    }
                    return e.abrupt("return", !1);
                case 2:
                    return e.prev = 2,
                    e.abrupt("return", ((new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),
                    WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11]))));
                case 6:
                    return e.prev = 6,
                    e.t0 = e.catch(2),
                    e.abrupt("return", !1);
                case 9:
                case "end":
                    return e.stop()
                }
        }
        ), e, null, [[2, 6]])
    }
    ))));
    var eB = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/
      , tB = function(e) {
        return eB.exec(e).slice(1)
    };
    function nB() {
        for (var e = "", t = !1, n = arguments.length - 1; n >= -1 && !t; n--) {
            var r = n >= 0 ? arguments[n] : "/";
            if ("string" != typeof r)
                throw new TypeError("Arguments to path.resolve must be strings");
            r && (e = r + "/" + e,
            t = "/" === r.charAt(0))
        }
        return (t ? "/" : "") + (e = JD(fB(e.split("/"), (function(e) {
            return !!e
        }
        )), !t).join("/")) || "."
    }
    function rB(e) {
        var t = aB(e)
          , n = "/" === pB(e, -1);
        return (e = JD(fB(e.split("/"), (function(e) {
            return !!e
        }
        )), !t).join("/")) || t || (e = "."),
        e && n && (e += "/"),
        (t ? "/" : "") + e
    }
    function aB(e) {
        return "/" === e.charAt(0)
    }
    function oB() {
        var e = Array.prototype.slice.call(arguments, 0);
        return rB(fB(e, (function(e, t) {
            if ("string" != typeof e)
                throw new TypeError("Arguments to path.join must be strings");
            return e
        }
        )).join("/"))
    }
    function iB(e, t) {
        function n(e) {
            for (var t = 0; t < e.length && "" === e[t]; t++)
                ;
            for (var n = e.length - 1; n >= 0 && "" === e[n]; n--)
                ;
            return t > n ? [] : e.slice(t, n - t + 1)
        }
        e = nB(e).substr(1),
        t = nB(t).substr(1);
        for (var r = n(e.split("/")), a = n(t.split("/")), o = Math.min(r.length, a.length), i = o, s = 0; s < o; s++)
            if (r[s] !== a[s]) {
                i = s;
                break
            }
        var u = [];
        for (s = i; s < r.length; s++)
            u.push("..");
        return (u = u.concat(a.slice(i))).join("/")
    }
    function sB(e) {
        var t = tB(e)
          , n = t[0]
          , r = t[1];
        return n || r ? (r && (r = r.substr(0, r.length - 1)),
        n + r) : "."
    }
    function uB(e, t) {
        var n = tB(e)[2];
        return t && n.substr(-1 * t.length) === t && (n = n.substr(0, n.length - t.length)),
        n
    }
    function cB(e) {
        return tB(e)[3]
    }
    var lB = {
        extname: cB,
        basename: uB,
        dirname: sB,
        sep: "/",
        delimiter: ":",
        relative: iB,
        join: oB,
        isAbsolute: aB,
        normalize: rB,
        resolve: nB
    };
    function fB(e, t) {
        if (e.filter)
            return e.filter(t);
        for (var n = [], r = 0; r < e.length; r++)
            t(e[r], r, e) && n.push(e[r]);
        return n
    }
    var pB = "b" === "ab".substr(-1) ? function(e, t, n) {
        return e.substr(t, n)
    }
    : function(e, t, n) {
        return t < 0 && (t = e.length + t),
        e.substr(t, n)
    }
      , dB = Object.freeze({
        __proto__: null,
        resolve: nB,
        normalize: rB,
        isAbsolute: aB,
        join: oB,
        relative: iB,
        sep: "/",
        delimiter: ":",
        dirname: sB,
        basename: uB,
        extname: cB,
        default: lB
    })
      , hB = Object.freeze({
        __proto__: null,
        default: {}
    })
      , mB = xw(dB)
      , vB = xw(hB)
      , gB = bw((function(e, t) {
        var n, r = (n = "undefined" != typeof document && document.currentScript ? document.currentScript.src : void 0,
        "undefined" != typeof __filename && (n = n || __filename),
        function(e) {
            function t() {
                return E.buffer != L && G(E.buffer),
                U
            }
            function r() {
                return E.buffer != L && G(E.buffer),
                V
            }
            function a() {
                return E.buffer != L && G(E.buffer),
                z
            }
            function o() {
                return E.buffer != L && G(E.buffer),
                W
            }
            function i() {
                return E.buffer != L && G(E.buffer),
                j
            }
            var s, u = void 0 !== (e = e || {}) ? e : {}, c = {};
            for (s in u)
                u.hasOwnProperty(s) && (c[s] = u[s]);
            var l, f, p, d;
            l = "object" == ("undefined" == typeof window ? "undefined" : Sy(window)),
            f = "function" == typeof importScripts,
            p = "object" == ("undefined" == typeof process ? "undefined" : Sy(process)) && "object" == Sy(process.versions) && "string" == typeof process.versions.node,
            d = !l && !p && !f;
            var h = u.ENVIRONMENT_IS_PTHREAD || !1;
            h && (L = u.buffer,
            K = u.DYNAMIC_BASE,
            q = u.DYNAMICTOP_PTR);
            var m, v, g, y, b = "";
            function x(e) {
                return u.locateFile ? u.locateFile(e, b) : b + e
            }
            if (p) {
                var w;
                b = f ? mB.dirname(b) + "/" : __dirname + "/",
                m = function(e, t) {
                    return g || (g = oA),
                    y || (y = mB),
                    e = y.normalize(e),
                    g.readFileSync(e, t ? null : "utf8")
                }
                ,
                v = function(e) {
                    var t = m(e, !0);
                    return t.buffer || (t = new Uint8Array(t)),
                    R(t.buffer),
                    t
                }
                ,
                process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"),
                process.argv.slice(2),
                process.on("uncaughtException", (function(e) {
                    if (!(e instanceof pt))
                        throw e
                }
                )),
                process.on("unhandledRejection", ie),
                u.inspect = function() {
                    return "[Emscripten Module object]"
                }
                ;
                try {
                    w = vB
                } catch (e) {
                    throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),
                    e
                }
                Worker = w.Worker
            } else
                d ? ("undefined" != typeof read && (m = function(e) {
                    return read(e)
                }
                ),
                v = function(e) {
                    var t;
                    return "function" == typeof readbuffer ? new Uint8Array(readbuffer(e)) : (R("object" == Sy(t = read(e, "binary"))),
                    t)
                }
                ,
                "undefined" != typeof scriptArgs && scriptArgs,
                "undefined" != typeof print && ("undefined" == typeof console && (console = {}),
                console.log = print,
                console.warn = console.error = "undefined" != typeof printErr ? printErr : print)) : (l || f) && (f ? b = self.location.href : document.currentScript && (b = document.currentScript.src),
                n && (b = n),
                b = 0 !== b.indexOf("blob:") ? b.substr(0, b.lastIndexOf("/") + 1) : "",
                p ? (m = function(e, t) {
                    return g || (g = oA),
                    y || (y = mB),
                    e = y.normalize(e),
                    g.readFileSync(e, t ? null : "utf8")
                }
                ,
                v = function(e) {
                    var t = m(e, !0);
                    return t.buffer || (t = new Uint8Array(t)),
                    R(t.buffer),
                    t
                }
                ) : (m = function(e) {
                    var t = new XMLHttpRequest;
                    return t.open("GET", e, !1),
                    t.send(null),
                    t.responseText
                }
                ,
                f && (v = function(e) {
                    var t = new XMLHttpRequest;
                    return t.open("GET", e, !1),
                    t.responseType = "arraybuffer",
                    t.send(null),
                    new Uint8Array(t.response)
                }
                )));
            p && "undefined" == typeof performance && (performance = vB.performance);
            var k, C, E, S = u.print || console.log.bind(console), I = u.printErr || console.warn.bind(console);
            for (s in c)
                c.hasOwnProperty(s) && (u[s] = c[s]);
            c = null,
            u.arguments && u.arguments,
            u.thisProgram && u.thisProgram,
            u.quit && u.quit,
            u.wasmBinary && (k = u.wasmBinary),
            u.noExitRuntime && (C = u.noExitRuntime),
            "object" != ("undefined" == typeof WebAssembly ? "undefined" : Sy(WebAssembly)) && I("no native wasm support detected");
            var T, A = new WebAssembly.Table({
                initial: 165,
                maximum: 165,
                element: "anyfunc"
            }), N = 0, _ = !1;
            function R(e, t) {
                e || ie("Assertion failed: " + t)
            }
            function O(e) {
                var t = u["_" + e];
                return R(t, "Cannot call unknown function " + e + ", make sure it is exported"),
                t
            }
            function D(e, t, n, r, a) {
                var o = {
                    string: function(e) {
                        var t = 0;
                        if (null != e && 0 !== e) {
                            var n = 1 + (e.length << 2);
                            M(e, t = ct(n), n)
                        }
                        return t
                    },
                    array: function(e) {
                        var t = ct(e.length);
                        return P(e, t),
                        t
                    }
                }
                  , i = O(e)
                  , s = []
                  , u = 0;
                if (r)
                    for (var c = 0; c < r.length; c++) {
                        var l = o[n[c]];
                        l ? (0 === u && (u = ut()),
                        s[c] = l(r[c])) : s[c] = r[c]
                    }
                var f = i.apply(null, s);
                return f = function(e) {
                    return "string" === t ? F(e) : "boolean" === t ? Boolean(e) : e
                }(f),
                0 !== u && lt(u),
                f
            }
            function B(e, t, n) {
                for (var r = t + n, a = ""; !(t >= r); ) {
                    var o = e[t++];
                    if (!o)
                        return a;
                    if (128 & o) {
                        var i = 63 & e[t++];
                        if (192 != (224 & o)) {
                            var s = 63 & e[t++];
                            if ((o = 224 == (240 & o) ? (15 & o) << 12 | i << 6 | s : (7 & o) << 18 | i << 12 | s << 6 | 63 & e[t++]) < 65536)
                                a += String.fromCharCode(o);
                            else {
                                var u = o - 65536;
                                a += String.fromCharCode(55296 | u >> 10, 56320 | 1023 & u)
                            }
                        } else
                            a += String.fromCharCode((31 & o) << 6 | i)
                    } else
                        a += String.fromCharCode(o)
                }
                return a
            }
            function F(e, t) {
                return e ? B(r(), e, t) : ""
            }
            function M(e, t, n) {
                return function(e, t, n, r) {
                    if (!(r > 0))
                        return 0;
                    for (var a = n, o = n + r - 1, i = 0; i < e.length; ++i) {
                        var s = e.charCodeAt(i);
                        if (s >= 55296 && s <= 57343 && (s = 65536 + ((1023 & s) << 10) | 1023 & e.charCodeAt(++i)),
                        s <= 127) {
                            if (n >= o)
                                break;
                            t[n++] = s
                        } else if (s <= 2047) {
                            if (n + 1 >= o)
                                break;
                            t[n++] = 192 | s >> 6,
                            t[n++] = 128 | 63 & s
                        } else if (s <= 65535) {
                            if (n + 2 >= o)
                                break;
                            t[n++] = 224 | s >> 12,
                            t[n++] = 128 | s >> 6 & 63,
                            t[n++] = 128 | 63 & s
                        } else {
                            if (n + 3 >= o)
                                break;
                            t[n++] = 240 | s >> 18,
                            t[n++] = 128 | s >> 12 & 63,
                            t[n++] = 128 | s >> 6 & 63,
                            t[n++] = 128 | 63 & s
                        }
                    }
                    return t[n] = 0,
                    n - a
                }(e, r(), t, n)
            }
            function P(e, n) {
                t().set(e, n)
            }
            var L, U, V, z, W, j;
            function H(e, t) {
                return e % t > 0 && (e += t - e % t),
                e
            }
            function G(e) {
                L = e,
                u.HEAP8 = U = new Int8Array(e),
                u.HEAP16 = new Int16Array(e),
                u.HEAP32 = z = new Int32Array(e),
                u.HEAPU8 = V = new Uint8Array(e),
                u.HEAPU16 = new Uint16Array(e),
                u.HEAPU32 = W = new Uint32Array(e),
                u.HEAPF32 = new Float32Array(e),
                u.HEAPF64 = j = new Float64Array(e)
            }
            var K = 5256384
              , q = 12576
              , X = u.INITIAL_MEMORY || 16777216;
            if (h)
                E = u.wasmMemory,
                L = u.buffer;
            else if (u.wasmMemory)
                E = u.wasmMemory;
            else if (!((E = new WebAssembly.Memory({
                initial: X / 65536,
                maximum: 32768,
                shared: !0
            })).buffer instanceof SharedArrayBuffer))
                throw I("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),
                p && console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),
                Error("bad memory");
            function Q(e) {
                for (; e.length > 0; ) {
                    var t = e.shift();
                    if ("function" != typeof t) {
                        var n = t.func;
                        "number" == typeof n ? void 0 === t.arg ? u.dynCall_v(n) : u.dynCall_vi(n, t.arg) : n(void 0 === t.arg ? null : t.arg)
                    } else
                        t(u)
                }
            }
            E && (L = E.buffer),
            X = L.byteLength,
            G(L),
            h || (a()[q >> 2] = K);
            var Y = []
              , $ = []
              , Z = []
              , J = [];
            function ee(e) {
                Y.unshift(e)
            }
            function te(e) {
                J.unshift(e)
            }
            var ne = Math.ceil
              , re = Math.floor
              , ae = 0
              , oe = null;
            function ie(e) {
                throw u.onAbort && u.onAbort(e),
                h && console.error("Pthread aborting at " + (new Error).stack),
                S(e += ""),
                I(e),
                _ = !0,
                e = "abort(" + e + "). Build with -s ASSERTIONS=1 for more info.",
                new WebAssembly.RuntimeError(e)
            }
            function se(e, t) {
                return String.prototype.startsWith ? e.startsWith(t) : 0 === e.indexOf(t)
            }
            u.preloadedImages = {},
            u.preloadedAudios = {};
            function ue(e) {
                return se(e, "data:application/octet-stream;base64,")
            }
            function ce(e) {
                return se(e, "file://")
            }
            var le = "tfjs-backend-wasm-threaded-simd.wasm";
            function fe() {
                try {
                    if (k)
                        return new Uint8Array(k);
                    if (v)
                        return v(le);
                    throw "both async and sync fetching of the wasm failed"
                } catch (e) {
                    ie(e)
                }
            }
            ue(le) || (le = x(le));
            var pe = {};
            h || $.push({
                func: function() {
                    Ye()
                }
            });
            var de = 0
              , he = 0
              , me = 0;
            function ve(e, t, n) {
                de = e |= 0,
                me = t |= 0,
                he = n |= 0
            }
            u.__register_pthread_ptr = ve;
            var ge = 71
              , ye = 28;
            function be(e, n) {
                if (e <= 0 || e > t().length || !0 & e || n < 0)
                    return -28;
                if (0 == n)
                    return 0;
                n >= 2147483647 && (n = 1 / 0);
                var r = Atomics.load(a(), 3372)
                  , o = 0;
                if (r == e && Atomics.compareExchange(a(), 3372, r, 0) == r && (o = 1,
                --n <= 0))
                    return 1;
                var i = Atomics.notify(a(), e >> 2, n);
                if (i >= 0)
                    return i + o;
                throw "Atomics.notify returned an unexpected value " + i
            }
            function xe(e) {
                if (h)
                    throw "Internal Error! _kill_thread() can only ever be called from main application thread!";
                if (!e)
                    throw "Internal Error! Null pthread_ptr in _kill_thread!";
                a()[e + 12 >> 2] = 0;
                var t = Ce.pthreads[e];
                t.worker.terminate(),
                Ce.freeThreadData(t),
                Ce.runningWorkers.splice(Ce.runningWorkers.indexOf(t.worker), 1),
                t.worker.pthread = void 0
            }
            function we(e) {
                if (h)
                    throw "Internal Error! _cleanup_thread() can only ever be called from main application thread!";
                if (!e)
                    throw "Internal Error! Null pthread_ptr in _cleanup_thread!";
                a()[e + 12 >> 2] = 0;
                var t = Ce.pthreads[e];
                if (t) {
                    var n = t.worker;
                    Ce.returnWorkerToPool(n)
                }
            }
            u._emscripten_futex_wake = be;
            var ke, Ce = {
                MAIN_THREAD_ID: 1,
                mainThreadInfo: {
                    schedPolicy: 0,
                    schedPrio: 0
                },
                unusedWorkers: [],
                runningWorkers: [],
                initRuntime: function() {
                    ve(Ce.mainThreadBlock, !f, 1),
                    at(Ce.mainThreadBlock)
                },
                initMainThreadBlock: function() {
                    for (var e = 0; e < 8; ++e)
                        Ce.allocateUnusedWorker();
                    for (Ce.mainThreadBlock = 12736,
                    e = 0; e < 58; ++e)
                        o()[Ce.mainThreadBlock / 4 + e] = 0;
                    a()[Ce.mainThreadBlock + 12 >> 2] = Ce.mainThreadBlock;
                    var t = Ce.mainThreadBlock + 156;
                    for (a()[t >> 2] = t,
                    e = 0; e < 128; ++e)
                        o()[3244 + e] = 0;
                    Atomics.store(o(), Ce.mainThreadBlock + 104 >> 2, 12976),
                    Atomics.store(o(), Ce.mainThreadBlock + 40 >> 2, Ce.mainThreadBlock),
                    Atomics.store(o(), Ce.mainThreadBlock + 44 >> 2, 42)
                },
                initWorker: function() {},
                pthreads: {},
                exitHandlers: null,
                setThreadStatus: function() {},
                runExitHandlers: function() {
                    if (null !== Ce.exitHandlers) {
                        for (; Ce.exitHandlers.length > 0; )
                            Ce.exitHandlers.pop()();
                        Ce.exitHandlers = null
                    }
                    h && N && nt()
                },
                threadExit: function(e) {
                    var t = He();
                    t && (Atomics.store(o(), t + 4 >> 2, e),
                    Atomics.store(o(), t + 0 >> 2, 1),
                    Atomics.store(o(), t + 60 >> 2, 1),
                    Atomics.store(o(), t + 64 >> 2, 0),
                    Ce.runExitHandlers(),
                    be(t + 0, 2147483647),
                    ve(0, 0, 0),
                    N = 0,
                    h && postMessage({
                        cmd: "exit"
                    }))
                },
                threadCancel: function() {
                    Ce.runExitHandlers(),
                    Atomics.store(o(), N + 4 >> 2, -1),
                    Atomics.store(o(), N + 0 >> 2, 1),
                    be(N + 0, 2147483647),
                    N = 0,
                    ve(0, 0, 0),
                    postMessage({
                        cmd: "cancelDone"
                    })
                },
                terminateAllThreads: function() {
                    for (var e in Ce.pthreads)
                        (r = Ce.pthreads[e]) && r.worker && Ce.returnWorkerToPool(r.worker);
                    Ce.pthreads = {};
                    for (var t = 0; t < Ce.unusedWorkers.length; ++t)
                        (n = Ce.unusedWorkers[t]).terminate();
                    for (Ce.unusedWorkers = [],
                    t = 0; t < Ce.runningWorkers.length; ++t) {
                        var n, r = (n = Ce.runningWorkers[t]).pthread;
                        Ce.freeThreadData(r),
                        n.terminate()
                    }
                    Ce.runningWorkers = []
                },
                freeThreadData: function(e) {
                    if (e) {
                        if (e.threadInfoStruct) {
                            var t = a()[e.threadInfoStruct + 104 >> 2];
                            a()[e.threadInfoStruct + 104 >> 2] = 0,
                            Ze(t),
                            Ze(e.threadInfoStruct)
                        }
                        e.threadInfoStruct = 0,
                        e.allocatedOwnStack && e.stackBase && Ze(e.stackBase),
                        e.stackBase = 0,
                        e.worker && (e.worker.pthread = null)
                    }
                },
                returnWorkerToPool: function(e) {
                    delete Ce.pthreads[e.pthread.thread],
                    Ce.unusedWorkers.push(e),
                    Ce.runningWorkers.splice(Ce.runningWorkers.indexOf(e), 1),
                    Ce.freeThreadData(e.pthread),
                    e.pthread = void 0
                },
                receiveObjectTransfer: function(e) {},
                loadWasmModuleToWorker: function(e, t) {
                    e.onmessage = function(n) {
                        var r = n.data
                          , a = r.cmd;
                        if (e.pthread && (Ce.currentProxiedOperationCallerThread = e.pthread.threadInfoStruct),
                        r.targetThread && r.targetThread != He()) {
                            var i = Ce.pthreads[r.targetThread];
                            return i ? i.worker.postMessage(n.data, r.transferList) : console.error('Internal error! Worker sent a message "' + a + '" to target pthread ' + r.targetThread + ", but that thread no longer exists!"),
                            void (Ce.currentProxiedOperationCallerThread = void 0)
                        }
                        "processQueuedMainThreadWork" === a ? rt() : "spawnThread" === a ? je(n.data) : "cleanupThread" === a ? we(r.thread) : "killThread" === a ? xe(r.thread) : "cancelThread" === a ? function(e) {
                            if (h)
                                throw "Internal Error! _cancel_thread() can only ever be called from main application thread!";
                            if (!e)
                                throw "Internal Error! Null pthread_ptr in _cancel_thread!";
                            Ce.pthreads[e].worker.postMessage({
                                cmd: "cancel"
                            })
                        }(r.thread) : "loaded" === a ? (e.loaded = !0,
                        t && t(e),
                        e.runPthread && (e.runPthread(),
                        delete e.runPthread)) : "print" === a ? S("Thread " + r.threadId + ": " + r.text) : "printErr" === a ? I("Thread " + r.threadId + ": " + r.text) : "alert" === a ? alert("Thread " + r.threadId + ": " + r.text) : "exit" === a ? e.pthread && Atomics.load(o(), e.pthread.thread + 68 >> 2) && Ce.returnWorkerToPool(e) : "cancelDone" === a ? Ce.returnWorkerToPool(e) : "objectTransfer" === a ? Ce.receiveObjectTransfer(n.data) : "setimmediate" === n.data.target ? e.postMessage(n.data) : I("worker sent an unknown command " + a),
                        Ce.currentProxiedOperationCallerThread = void 0
                    }
                    ,
                    e.onerror = function(e) {
                        I("pthread sent an error! " + e.filename + ":" + e.lineno + ": " + e.message)
                    }
                    ,
                    p && (e.on("message", (function(t) {
                        e.onmessage({
                            data: t
                        })
                    }
                    )),
                    e.on("error", (function(t) {
                        e.onerror(t)
                    }
                    )),
                    e.on("exit", (function(e) {
                        console.log("worker exited - TODO: update the worker queue?")
                    }
                    ))),
                    e.postMessage({
                        cmd: "load",
                        urlOrBlob: u.mainScriptUrlOrBlob || n,
                        wasmMemory: E,
                        wasmModule: T,
                        DYNAMIC_BASE: K,
                        DYNAMICTOP_PTR: q
                    })
                },
                allocateUnusedWorker: function() {
                    var e = x("tfjs-backend-wasm-threaded-simd.worker.js");
                    Ce.unusedWorkers.push(new Worker(e))
                },
                getNewWorker: function() {
                    return 0 == Ce.unusedWorkers.length && (Ce.allocateUnusedWorker(),
                    Ce.loadWasmModuleToWorker(Ce.unusedWorkers[0])),
                    Ce.unusedWorkers.length > 0 ? Ce.unusedWorkers.pop() : null
                },
                busySpinWait: function(e) {
                    for (var t = performance.now() + e; performance.now() < t; )
                        ;
                }
            };
            function Ee(e, t) {
                for (var n = arguments.length - 2, r = ut(), a = ct(8 * n), o = a >> 3, s = 0; s < n; s++)
                    i()[o + s] = arguments[2 + s];
                var u = it(e, n, a, t);
                return lt(r),
                u
            }
            u.establishStackSpace = function(e, t) {
                lt(e)
            }
            ,
            u.getNoExitRuntime = function() {
                return C
            }
            ,
            ke = p ? function() {
                var e = process.hrtime();
                return 1e3 * e[0] + e[1] / 1e6
            }
            : h ? function() {
                return performance.now() - u.__performance_now_clock_drift
            }
            : "undefined" != typeof dateNow ? dateNow : function() {
                return performance.now()
            }
            ;
            var Se = [];
            function Ie(e, t) {
                Ie.array || (Ie.array = []);
                var n, o = Ie.array;
                for (o.length = 0; n = r()[e++]; )
                    100 === n || 102 === n ? (t = t + 7 & -8,
                    o.push(i()[t >> 3]),
                    t += 8) : (t = t + 3 & -4,
                    o.push(a()[t >> 2]),
                    t += 4);
                return o
            }
            function Te() {
                return r().length
            }
            function Ae(e) {
                try {
                    return E.grow(e - L.byteLength + 65535 >>> 16),
                    G(E.buffer),
                    1
                } catch (e) {}
            }
            var Ne = {
                keyEvent: 0,
                mouseEvent: 0,
                wheelEvent: 0,
                uiEvent: 0,
                focusEvent: 0,
                deviceOrientationEvent: 0,
                deviceMotionEvent: 0,
                fullscreenChangeEvent: 0,
                pointerlockChangeEvent: 0,
                visibilityChangeEvent: 0,
                touchEvent: 0,
                previousFullscreenElement: null,
                previousScreenX: null,
                previousScreenY: null,
                removeEventListenersRegistered: !1,
                removeAllEventListeners: function() {
                    for (var e = Ne.eventHandlers.length - 1; e >= 0; --e)
                        Ne._removeHandler(e);
                    Ne.eventHandlers = [],
                    Ne.deferredCalls = []
                },
                registerRemoveEventListeners: function() {
                    Ne.removeEventListenersRegistered || (Ne.removeEventListenersRegistered = !0)
                },
                deferredCalls: [],
                deferCall: function(e, t, n) {
                    function r(e, t) {
                        if (e.length != t.length)
                            return !1;
                        for (var n in e)
                            if (e[n] != t[n])
                                return !1;
                        return !0
                    }
                    for (var a in Ne.deferredCalls) {
                        var o = Ne.deferredCalls[a];
                        if (o.targetFunction == e && r(o.argsList, n))
                            return
                    }
                    Ne.deferredCalls.push({
                        targetFunction: e,
                        precedence: t,
                        argsList: n
                    }),
                    Ne.deferredCalls.sort((function(e, t) {
                        return e.precedence < t.precedence
                    }
                    ))
                },
                removeDeferredCalls: function(e) {
                    for (var t = 0; t < Ne.deferredCalls.length; ++t)
                        Ne.deferredCalls[t].targetFunction == e && (Ne.deferredCalls.splice(t, 1),
                        --t)
                },
                canPerformEventHandlerRequests: function() {
                    return Ne.inEventHandler && Ne.currentEventHandler.allowsDeferredCalls
                },
                runDeferredCalls: function() {
                    if (Ne.canPerformEventHandlerRequests())
                        for (var e = 0; e < Ne.deferredCalls.length; ++e) {
                            var t = Ne.deferredCalls[e];
                            Ne.deferredCalls.splice(e, 1),
                            --e,
                            t.targetFunction.apply(null, t.argsList)
                        }
                },
                inEventHandler: 0,
                currentEventHandler: null,
                eventHandlers: [],
                removeAllHandlersOnTarget: function(e, t) {
                    for (var n = 0; n < Ne.eventHandlers.length; ++n)
                        Ne.eventHandlers[n].target != e || t && t != Ne.eventHandlers[n].eventTypeString || Ne._removeHandler(n--)
                },
                _removeHandler: function(e) {
                    var t = Ne.eventHandlers[e];
                    t.target.removeEventListener(t.eventTypeString, t.eventListenerFunc, t.useCapture),
                    Ne.eventHandlers.splice(e, 1)
                },
                registerOrRemoveHandler: function(e) {
                    var t = function(t) {
                        ++Ne.inEventHandler,
                        Ne.currentEventHandler = e,
                        Ne.runDeferredCalls(),
                        e.handlerFunc(t),
                        Ne.runDeferredCalls(),
                        --Ne.inEventHandler
                    };
                    if (e.callbackfunc)
                        e.eventListenerFunc = t,
                        e.target.addEventListener(e.eventTypeString, t, e.useCapture),
                        Ne.eventHandlers.push(e),
                        Ne.registerRemoveEventListeners();
                    else
                        for (var n = 0; n < Ne.eventHandlers.length; ++n)
                            Ne.eventHandlers[n].target == e.target && Ne.eventHandlers[n].eventTypeString == e.eventTypeString && Ne._removeHandler(n--)
                },
                queueEventHandlerOnThread_iiii: function(e, t, n, r, o) {
                    var i = ut()
                      , s = ct(12);
                    a()[s >> 2] = n,
                    a()[s + 4 >> 2] = r,
                    a()[s + 8 >> 2] = o,
                    st(e, 637534208, t, r, s),
                    lt(i)
                },
                getTargetThreadForEventCallback: function(e) {
                    switch (e) {
                    case 1:
                        return 0;
                    case 2:
                        return Ce.currentProxiedOperationCallerThread;
                    default:
                        return e
                    }
                },
                getNodeNameForTarget: function(e) {
                    return e ? e == window ? "#window" : e == screen ? "#screen" : e && e.nodeName ? e.nodeName : "" : ""
                },
                fullscreenEnabled: function() {
                    return document.fullscreenEnabled || document.webkitFullscreenEnabled
                }
            };
            function _e(e, t, n, r) {
                var o = ut()
                  , i = ct(12)
                  , s = 0;
                t && (s = function(e) {
                    var t = function(e) {
                        for (var t = 0, n = 0; n < e.length; ++n) {
                            var r = e.charCodeAt(n);
                            r >= 55296 && r <= 57343 && (r = 65536 + ((1023 & r) << 10) | 1023 & e.charCodeAt(++n)),
                            r <= 127 ? ++t : t += r <= 2047 ? 2 : r <= 65535 ? 3 : 4
                        }
                        return t
                    }(e) + 1
                      , n = $e(t);
                    return M(e, n, t),
                    n
                }(t)),
                a()[i >> 2] = s,
                a()[i + 4 >> 2] = n,
                a()[i + 8 >> 2] = r,
                st(e, 657457152, 0, s, i),
                lt(o)
            }
            var Re = [0, "undefined" != typeof document ? document : 0, "undefined" != typeof window ? window : 0];
            function Oe(e) {
                return e = function(e) {
                    return e > 2 ? F(e) : e
                }(e),
                Re[e] || ("undefined" != typeof document ? document.querySelector(e) : void 0)
            }
            function De(e) {
                return Oe(e)
            }
            function Be(e, t, n) {
                var r = De(e);
                if (!r)
                    return -4;
                if (r.canvasSharedPtr && (a()[r.canvasSharedPtr >> 2] = t,
                a()[r.canvasSharedPtr + 4 >> 2] = n),
                !r.offscreenCanvas && r.controlTransferredOffscreen)
                    return r.canvasSharedPtr ? (function(e, t, n, r) {
                        _e(e, t = t ? F(t) : "", n, r)
                    }(a()[r.canvasSharedPtr + 8 >> 2], e, t, n),
                    1) : -4;
                r.offscreenCanvas && (r = r.offscreenCanvas);
                var o = !1;
                if (r.GLctxObject && r.GLctxObject.GLctx) {
                    var i = r.GLctxObject.GLctx.getParameter(2978);
                    o = 0 === i[0] && 0 === i[1] && i[2] === r.width && i[3] === r.height
                }
                return r.width = t,
                r.height = n,
                o && r.GLctxObject.GLctx.viewport(0, 0, t, n),
                0
            }
            function Fe(e, t, n) {
                return h ? Ee(2, 1, e, t, n) : Be(e, t, n)
            }
            var Me = {
                counter: 1,
                lastError: 0,
                buffers: [],
                mappedBuffers: {},
                programs: [],
                framebuffers: [],
                renderbuffers: [],
                textures: [],
                uniforms: [],
                shaders: [],
                vaos: [],
                contexts: {},
                currentContext: null,
                offscreenCanvases: {},
                timerQueriesEXT: [],
                programInfos: {},
                stringCache: {},
                unpackAlignment: 4,
                init: function() {
                    for (var e = new Float32Array(Me.MINI_TEMP_BUFFER_SIZE), t = 0; t < Me.MINI_TEMP_BUFFER_SIZE; t++)
                        Me.miniTempBufferFloatViews[t] = e.subarray(0, t + 1);
                    var n = new Int32Array(Me.MINI_TEMP_BUFFER_SIZE);
                    for (t = 0; t < Me.MINI_TEMP_BUFFER_SIZE; t++)
                        Me.miniTempBufferIntViews[t] = n.subarray(0, t + 1)
                },
                recordError: function(e) {
                    Me.lastError || (Me.lastError = e)
                },
                getNewId: function(e) {
                    for (var t = Me.counter++, n = e.length; n < t; n++)
                        e[n] = null;
                    return t
                },
                MINI_TEMP_BUFFER_SIZE: 256,
                miniTempBufferFloatViews: [0],
                miniTempBufferIntViews: [0],
                getSource: function(e, t, n, r) {
                    for (var o = "", i = 0; i < t; ++i) {
                        var s = r ? a()[r + 4 * i >> 2] : -1;
                        o += F(a()[n + 4 * i >> 2], s < 0 ? void 0 : s)
                    }
                    return o
                },
                createContext: function(e, t) {
                    var n = e.getContext("webgl", t);
                    return n ? Me.registerContext(n, t) : 0
                },
                registerContext: function(e, t) {
                    var n = $e(8);
                    a()[n + 4 >> 2] = He();
                    var r = {
                        handle: n,
                        attributes: t,
                        version: t.majorVersion,
                        GLctx: e
                    };
                    return e.canvas && (e.canvas.GLctxObject = r),
                    Me.contexts[n] = r,
                    (void 0 === t.enableExtensionsByDefault || t.enableExtensionsByDefault) && Me.initExtensions(r),
                    n
                },
                makeContextCurrent: function(e) {
                    return Me.currentContext = Me.contexts[e],
                    u.ctx = Le = Me.currentContext && Me.currentContext.GLctx,
                    !(e && !Le)
                },
                getContext: function(e) {
                    return Me.contexts[e]
                },
                deleteContext: function(e) {
                    Me.currentContext === Me.contexts[e] && (Me.currentContext = null),
                    "object" == Sy(Ne) && Ne.removeAllHandlersOnTarget(Me.contexts[e].GLctx.canvas),
                    Me.contexts[e] && Me.contexts[e].GLctx.canvas && (Me.contexts[e].GLctx.canvas.GLctxObject = void 0),
                    Ze(Me.contexts[e].handle),
                    Me.contexts[e] = null
                },
                initExtensions: function(e) {
                    if (e || (e = Me.currentContext),
                    !e.initExtensionsDone) {
                        e.initExtensionsDone = !0;
                        var t = e.GLctx;
                        (function(e) {
                            var t = e.getExtension("ANGLE_instanced_arrays");
                            if (t)
                                e.vertexAttribDivisor = function(e, n) {
                                    t.vertexAttribDivisorANGLE(e, n)
                                }
                                ,
                                e.drawArraysInstanced = function(e, n, r, a) {
                                    t.drawArraysInstancedANGLE(e, n, r, a)
                                }
                                ,
                                e.drawElementsInstanced = function(e, n, r, a, o) {
                                    t.drawElementsInstancedANGLE(e, n, r, a, o)
                                }
                        }
                        )(t),
                        function(e) {
                            var t = e.getExtension("OES_vertex_array_object");
                            if (t)
                                e.createVertexArray = function() {
                                    return t.createVertexArrayOES()
                                }
                                ,
                                e.deleteVertexArray = function(e) {
                                    t.deleteVertexArrayOES(e)
                                }
                                ,
                                e.bindVertexArray = function(e) {
                                    t.bindVertexArrayOES(e)
                                }
                                ,
                                e.isVertexArray = function(e) {
                                    return t.isVertexArrayOES(e)
                                }
                        }(t),
                        function(e) {
                            var t = e.getExtension("WEBGL_draw_buffers");
                            if (t)
                                e.drawBuffers = function(e, n) {
                                    t.drawBuffersWEBGL(e, n)
                                }
                        }(t),
                        t.disjointTimerQueryExt = t.getExtension("EXT_disjoint_timer_query");
                        var n = ["OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives", "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture", "OES_element_index_uint", "EXT_texture_filter_anisotropic", "EXT_frag_depth", "WEBGL_draw_buffers", "ANGLE_instanced_arrays", "OES_texture_float_linear", "OES_texture_half_float_linear", "EXT_blend_minmax", "EXT_shader_texture_lod", "EXT_texture_norm16", "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float", "EXT_sRGB", "WEBGL_compressed_texture_etc1", "EXT_disjoint_timer_query", "WEBGL_compressed_texture_etc", "WEBGL_compressed_texture_astc", "EXT_color_buffer_float", "WEBGL_compressed_texture_s3tc_srgb", "EXT_disjoint_timer_query_webgl2", "WEBKIT_WEBGL_compressed_texture_pvrtc"];
                        (t.getSupportedExtensions() || []).forEach((function(e) {
                            -1 != n.indexOf(e) && t.getExtension(e)
                        }
                        ))
                    }
                },
                populateUniformTable: function(e) {
                    for (var t = Me.programs[e], n = Me.programInfos[e] = {
                        uniforms: {},
                        maxUniformLength: 0,
                        maxAttributeLength: -1,
                        maxUniformBlockNameLength: -1
                    }, r = n.uniforms, a = Le.getProgramParameter(t, 35718), o = 0; o < a; ++o) {
                        var i = Le.getActiveUniform(t, o)
                          , s = i.name;
                        n.maxUniformLength = Math.max(n.maxUniformLength, s.length + 1),
                        "]" == s.slice(-1) && (s = s.slice(0, s.lastIndexOf("[")));
                        var u = Le.getUniformLocation(t, s);
                        if (u) {
                            var c = Me.getNewId(Me.uniforms);
                            r[s] = [i.size, c],
                            Me.uniforms[c] = u;
                            for (var l = 1; l < i.size; ++l) {
                                var f = s + "[" + l + "]";
                                u = Le.getUniformLocation(t, f),
                                c = Me.getNewId(Me.uniforms),
                                Me.uniforms[c] = u
                            }
                        }
                    }
                }
            }
              , Pe = ["default", "low-power", "high-performance"];
            var Le, Ue = {
                mappings: {},
                buffers: [null, [], []],
                printChar: function(e, t) {
                    var n = Ue.buffers[e];
                    0 === t || 10 === t ? ((1 === e ? S : I)(B(n, 0)),
                    n.length = 0) : n.push(t)
                },
                varargs: void 0,
                get: function() {
                    return Ue.varargs += 4,
                    a()[Ue.varargs - 4 >> 2]
                },
                getStr: function(e) {
                    return F(e)
                },
                get64: function(e, t) {
                    return e
                }
            };
            function Ve(e) {
                return h ? Ee(3, 1, e) : 0
            }
            function ze(e, t, n, r, a) {
                if (h)
                    return Ee(4, 1, e, t, n, r, a)
            }
            function We(e, t, n, o) {
                if (h)
                    return Ee(5, 1, e, t, n, o);
                for (var i = 0, s = 0; s < n; s++) {
                    for (var u = a()[t + 8 * s >> 2], c = a()[t + (8 * s + 4) >> 2], l = 0; l < c; l++)
                        Ue.printChar(e, r()[u + l]);
                    i += c
                }
                return a()[o >> 2] = i,
                0
            }
            function je(e) {
                if (h)
                    throw "Internal Error! _spawn_thread() can only ever be called from main application thread!";
                var t = Ce.getNewWorker();
                if (void 0 !== t.pthread)
                    throw "Internal error!";
                if (!e.pthread_ptr)
                    throw "Internal error, no pthread ptr!";
                Ce.runningWorkers.push(t);
                for (var n = $e(512), r = 0; r < 128; ++r)
                    a()[n + 4 * r >> 2] = 0;
                var i = e.stackBase + e.stackSize
                  , s = Ce.pthreads[e.pthread_ptr] = {
                    worker: t,
                    stackBase: e.stackBase,
                    stackSize: e.stackSize,
                    allocatedOwnStack: e.allocatedOwnStack,
                    thread: e.pthread_ptr,
                    threadInfoStruct: e.pthread_ptr
                }
                  , u = s.threadInfoStruct >> 2;
                Atomics.store(o(), u + 0, 0),
                Atomics.store(o(), u + 1, 0),
                Atomics.store(o(), u + 2, 0),
                Atomics.store(o(), u + 17, e.detached),
                Atomics.store(o(), u + 26, n),
                Atomics.store(o(), u + 12, 0),
                Atomics.store(o(), u + 10, s.threadInfoStruct),
                Atomics.store(o(), u + 11, 42),
                Atomics.store(o(), u + 27, e.stackSize),
                Atomics.store(o(), u + 21, e.stackSize),
                Atomics.store(o(), u + 20, i),
                Atomics.store(o(), u + 29, i),
                Atomics.store(o(), u + 30, e.detached),
                Atomics.store(o(), u + 32, e.schedPolicy),
                Atomics.store(o(), u + 33, e.schedPrio);
                var c = Je() + 40;
                Atomics.store(o(), u + 44, c),
                t.pthread = s;
                var l = {
                    cmd: "run",
                    start_routine: e.startRoutine,
                    arg: e.arg,
                    threadInfoStruct: e.pthread_ptr,
                    selfThreadId: e.pthread_ptr,
                    parentThreadId: e.parent_pthread_ptr,
                    stackBase: e.stackBase,
                    stackSize: e.stackSize
                };
                t.runPthread = function() {
                    l.time = performance.now(),
                    t.postMessage(l, e.transferList)
                }
                ,
                t.loaded && (t.runPthread(),
                delete t.runPthread)
            }
            function He() {
                return 0 | de
            }
            function Ge(e) {
                if (h)
                    return Ee(6, 1, e);
                switch (e) {
                case 30:
                    return 16384;
                case 85:
                    return 131072;
                case 132:
                case 133:
                case 12:
                case 137:
                case 138:
                case 15:
                case 235:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 149:
                case 13:
                case 10:
                case 236:
                case 153:
                case 9:
                case 21:
                case 22:
                case 159:
                case 154:
                case 14:
                case 77:
                case 78:
                case 139:
                case 80:
                case 81:
                case 82:
                case 68:
                case 67:
                case 164:
                case 11:
                case 29:
                case 47:
                case 48:
                case 95:
                case 52:
                case 51:
                case 46:
                case 79:
                    return 200809;
                case 27:
                case 246:
                case 127:
                case 128:
                case 23:
                case 24:
                case 160:
                case 161:
                case 181:
                case 182:
                case 242:
                case 183:
                case 184:
                case 243:
                case 244:
                case 245:
                case 165:
                case 178:
                case 179:
                case 49:
                case 50:
                case 168:
                case 169:
                case 175:
                case 170:
                case 171:
                case 172:
                case 97:
                case 76:
                case 32:
                case 173:
                case 35:
                    return -1;
                case 176:
                case 177:
                case 7:
                case 155:
                case 8:
                case 157:
                case 125:
                case 126:
                case 92:
                case 93:
                case 129:
                case 130:
                case 131:
                case 94:
                case 91:
                    return 1;
                case 74:
                case 60:
                case 69:
                case 70:
                case 4:
                    return 1024;
                case 31:
                case 42:
                case 72:
                    return 32;
                case 87:
                case 26:
                case 33:
                    return 2147483647;
                case 34:
                case 1:
                    return 47839;
                case 38:
                case 36:
                    return 99;
                case 43:
                case 37:
                    return 2048;
                case 0:
                    return 2097152;
                case 3:
                    return 65536;
                case 28:
                    return 32768;
                case 44:
                    return 32767;
                case 75:
                    return 16384;
                case 39:
                    return 1e3;
                case 89:
                    return 700;
                case 71:
                    return 256;
                case 40:
                    return 255;
                case 2:
                    return 100;
                case 180:
                    return 64;
                case 25:
                    return 20;
                case 5:
                    return 16;
                case 6:
                    return 6;
                case 73:
                    return 4;
                case 84:
                    return "object" == ("undefined" == typeof navigator ? "undefined" : Sy(navigator)) && navigator.hardwareConcurrency || 1
                }
                return function(e) {
                    a()[et() >> 2] = e
                }(28),
                -1
            }
            u._pthread_self = He,
            h ? Ce.initWorker() : Ce.initMainThreadBlock(),
            Me.init();
            var Ke = [null, function(e, t) {
                if (h)
                    return Ee(1, 1, e, t)
            }
            , Fe, Ve, ze, We, Ge]
              , qe = {
                e: function(e, t, n, r) {
                    ie("Assertion failed: " + F(e) + ", at: " + [t ? F(t) : "unknown filename", n, r ? F(r) : "unknown function"])
                },
                r: function(e, t) {
                    _main(e, t)
                },
                w: function(e, t) {
                    if (e == t)
                        postMessage({
                            cmd: "processQueuedMainThreadWork"
                        });
                    else if (h)
                        postMessage({
                            targetThread: e,
                            cmd: "processThreadQueue"
                        });
                    else {
                        var n = Ce.pthreads[e]
                          , r = n && n.worker;
                        if (!r)
                            return;
                        r.postMessage({
                            cmd: "processThreadQueue"
                        })
                    }
                    return 1
                },
                a: function() {
                    ie()
                },
                l: function(e, t) {},
                d: function(e, n, r) {
                    if (e <= 0 || e > t().length || !0 & e)
                        return -28;
                    if (f) {
                        var o = Atomics.wait(a(), e >> 2, n, r);
                        if ("timed-out" === o)
                            return -73;
                        if ("not-equal" === o)
                            return -6;
                        if ("ok" === o)
                            return 0;
                        throw "Atomics.wait returned an unexpected value " + o
                    }
                    if (n != Atomics.load(a(), e >> 2))
                        return -6;
                    var i = performance.now()
                      , s = i + r;
                    Atomics.store(a(), 3372, e);
                    for (var u = e; e == u; ) {
                        if ((i = performance.now()) > s)
                            return -73;
                        rt(),
                        e = Atomics.load(a(), 3372)
                    }
                    return 0
                },
                c: be,
                h: ke,
                g: function() {
                    return 0 | me
                },
                x: function() {
                    return 0 | he
                },
                q: function(e, t, n) {
                    r().copyWithin(e, t, t + n)
                },
                B: function() {
                    return navigator.hardwareConcurrency
                },
                t: function(e, t, n) {
                    Se.length = t;
                    for (var r = n >> 3, a = 0; a < t; a++)
                        Se[a] = i()[r + a];
                    var o = e < 0
                      , s = o ? pe[-e - 1] : Ke[e];
                    if (o) {
                        var u = Ie(Se[1], Se[2]);
                        return s.apply(null, u)
                    }
                    return s.apply(null, Se)
                },
                A: function(e) {
                    e >>>= 0;
                    var t = Te();
                    if (e <= t)
                        return !1;
                    var n = 2147483648;
                    if (e > n)
                        return !1;
                    for (var r = 1; r <= 4; r *= 2) {
                        var a = t * (1 + .2 / r);
                        if (a = Math.min(a, e + 100663296),
                        Ae(Math.min(n, H(Math.max(16777216, e, a), 65536))))
                            return !0
                    }
                    return !1
                },
                u: function(e, t, n) {
                    return De(e) ? Be(e, t, n) : Fe(e, t, n)
                },
                k: function(e) {},
                s: function(e, t) {},
                v: function(e, t) {
                    return function(e, t) {
                        var n = {}
                          , r = t >> 2;
                        n.alpha = !!a()[r + 0],
                        n.depth = !!a()[r + 1],
                        n.stencil = !!a()[r + 2],
                        n.antialias = !!a()[r + 3],
                        n.premultipliedAlpha = !!a()[r + 4],
                        n.preserveDrawingBuffer = !!a()[r + 5];
                        var o = a()[r + 6];
                        n.powerPreference = Pe[o],
                        n.failIfMajorPerformanceCaveat = !!a()[r + 7],
                        n.majorVersion = a()[r + 8],
                        n.minorVersion = a()[r + 9],
                        n.enableExtensionsByDefault = a()[r + 10],
                        n.explicitSwapControl = a()[r + 11],
                        n.proxyContextToMainThread = a()[r + 12],
                        n.renderViaOffscreenBackBuffer = a()[r + 13];
                        var i = De(e);
                        return i ? n.explicitSwapControl ? -1 : Me.createContext(i, n) : -4
                    }(e, t)
                },
                m: Ve,
                o: ze,
                i: We,
                p: function() {
                    Ce.initRuntime()
                },
                memory: E || u.wasmMemory,
                y: function(e) {
                    var t = Ce.exitHandlers.pop();
                    e && t()
                },
                z: function(e, t) {
                    null === Ce.exitHandlers && (Ce.exitHandlers = []),
                    Ce.exitHandlers.push((function() {
                        ft(e, t)
                    }
                    ))
                },
                j: function(e, t, n, r) {
                    if ("undefined" == typeof SharedArrayBuffer)
                        return I("Current environment does not support SharedArrayBuffer, pthreads are not available!"),
                        6;
                    if (!e)
                        return I("pthread_create called with a null thread pointer!"),
                        28;
                    var i = [];
                    if (h && 0 === i.length)
                        return ot(687865856, e, t, n, r);
                    var s = 0
                      , u = 0
                      , c = 0
                      , l = 0
                      , f = 0;
                    if (t)
                        if (s = a()[t >> 2],
                        s += 81920,
                        u = a()[t + 8 >> 2],
                        c = 0 !== a()[t + 12 >> 2],
                        0 === a()[t + 16 >> 2]) {
                            var p = a()[t + 20 >> 2]
                              , d = a()[t + 24 >> 2];
                            (function(e, t, n) {
                                if (!t && !n)
                                    return ye;
                                if (!e)
                                    return I("pthread_getschedparam called with a null thread pointer!"),
                                    ge;
                                if (a()[e + 12 >> 2] !== e)
                                    return I("pthread_getschedparam attempted on thread " + e + ", which does not point to a valid thread, or does not exist anymore!"),
                                    ge;
                                var r = Atomics.load(o(), e + 108 + 20 >> 2)
                                  , i = Atomics.load(o(), e + 108 + 24 >> 2);
                                t && (a()[t >> 2] = r),
                                n && (a()[n >> 2] = i)
                            }
                            )(Ce.currentProxiedOperationCallerThread ? Ce.currentProxiedOperationCallerThread : He(), t + 20, t + 24),
                            l = a()[t + 20 >> 2],
                            f = a()[t + 24 >> 2],
                            a()[t + 20 >> 2] = p,
                            a()[t + 24 >> 2] = d
                        } else
                            l = a()[t + 20 >> 2],
                            f = a()[t + 24 >> 2];
                    else
                        s = 2097152;
                    var m = 0 == u;
                    m ? u = tt(16, s) : R((u -= s) > 0);
                    for (var v = $e(232), g = 0; g < 58; ++g)
                        o()[(v >> 2) + g] = 0;
                    a()[e >> 2] = v,
                    a()[v + 12 >> 2] = v;
                    var y = v + 156;
                    a()[y >> 2] = y;
                    var b = {
                        stackBase: u,
                        stackSize: s,
                        allocatedOwnStack: m,
                        schedPolicy: l,
                        schedPrio: f,
                        detached: c,
                        startRoutine: n,
                        pthread_ptr: v,
                        parent_pthread_ptr: He(),
                        arg: r,
                        transferList: i
                    };
                    return h ? (b.cmd = "spawnThread",
                    postMessage(b, i)) : je(b),
                    0
                },
                b: He,
                f: function(e) {
                    return (e = +e) >= 0 ? +re(e + .5) : +ne(e - .5)
                },
                n: Ge,
                table: A
            }
              , Xe = function() {
                var e = {
                    a: qe
                };
                function t(e, t) {
                    var n = e.exports;
                    if (u.asm = n,
                    T = t,
                    !h) {
                        var r = Ce.unusedWorkers.length;
                        Ce.unusedWorkers.forEach((function(e) {
                            Ce.loadWasmModuleToWorker(e, (function() {
                                --r || function(e) {
                                    if (ae--,
                                    u.monitorRunDependencies && u.monitorRunDependencies(ae),
                                    0 == ae && oe) {
                                        var t = oe;
                                        oe = null,
                                        t()
                                    }
                                }()
                            }
                            ))
                        }
                        ))
                    }
                }
                function n(e) {
                    t(e.instance, e.module)
                }
                function r(t) {
                    return (k || !l && !f || "function" != typeof fetch || ce(le) ? new Promise((function(e, t) {
                        e(fe())
                    }
                    )) : fetch(le, {
                        credentials: "same-origin"
                    }).then((function(e) {
                        if (!e.ok)
                            throw "failed to load wasm binary file at '" + le + "'";
                        return e.arrayBuffer()
                    }
                    )).catch((function() {
                        return fe()
                    }
                    ))).then((function(t) {
                        return WebAssembly.instantiate(t, e)
                    }
                    )).then(t, (function(e) {
                        I("failed to asynchronously prepare wasm: " + e),
                        ie(e)
                    }
                    ))
                }
                if (h || (R(!h, "addRunDependency cannot be used in a pthread worker"),
                ae++,
                u.monitorRunDependencies && u.monitorRunDependencies(ae)),
                u.instantiateWasm)
                    try {
                        return u.instantiateWasm(e, t)
                    } catch (e) {
                        return I("Module.instantiateWasm callback failed with error: " + e),
                        !1
                    }
                return function() {
                    if (k || "function" != typeof WebAssembly.instantiateStreaming || ue(le) || ce(le) || "function" != typeof fetch)
                        return r(n);
                    fetch(le, {
                        credentials: "same-origin"
                    }).then((function(t) {
                        return WebAssembly.instantiateStreaming(t, e).then(n, (function(e) {
                            I("wasm streaming compile failed: " + e),
                            I("falling back to ArrayBuffer instantiation"),
                            r(n)
                        }
                        ))
                    }
                    ))
                }(),
                {}
            }();
            u.asm = Xe;
            var Qe, Ye = u.___wasm_call_ctors = function() {
                return (Ye = u.___wasm_call_ctors = u.asm.C).apply(null, arguments)
            }
            , $e = (u._init = function() {
                return (u._init = u.asm.D).apply(null, arguments)
            }
            ,
            u._register_tensor = function() {
                return (u._register_tensor = u.asm.E).apply(null, arguments)
            }
            ,
            u._dispose_data = function() {
                return (u._dispose_data = u.asm.F).apply(null, arguments)
            }
            ,
            u._dispose = function() {
                return (u._dispose = u.asm.G).apply(null, arguments)
            }
            ,
            u._Abs = function() {
                return (u._Abs = u.asm.H).apply(null, arguments)
            }
            ,
            u._Add = function() {
                return (u._Add = u.asm.I).apply(null, arguments)
            }
            ,
            u._AddN = function() {
                return (u._AddN = u.asm.J).apply(null, arguments)
            }
            ,
            u._ArgMax = function() {
                return (u._ArgMax = u.asm.K).apply(null, arguments)
            }
            ,
            u._AvgPool = function() {
                return (u._AvgPool = u.asm.L).apply(null, arguments)
            }
            ,
            u._BatchMatMul = function() {
                return (u._BatchMatMul = u.asm.M).apply(null, arguments)
            }
            ,
            u._ClipByValue = function() {
                return (u._ClipByValue = u.asm.N).apply(null, arguments)
            }
            ,
            u._Conv2D = function() {
                return (u._Conv2D = u.asm.O).apply(null, arguments)
            }
            ,
            u._Conv2DBackpropInput = function() {
                return (u._Conv2DBackpropInput = u.asm.P).apply(null, arguments)
            }
            ,
            u._Cos = function() {
                return (u._Cos = u.asm.Q).apply(null, arguments)
            }
            ,
            u._CropAndResize = function() {
                return (u._CropAndResize = u.asm.R).apply(null, arguments)
            }
            ,
            u._Cumsum = function() {
                return (u._Cumsum = u.asm.S).apply(null, arguments)
            }
            ,
            u._DepthToSpace = function() {
                return (u._DepthToSpace = u.asm.T).apply(null, arguments)
            }
            ,
            u._DepthwiseConv2dNative = function() {
                return (u._DepthwiseConv2dNative = u.asm.U).apply(null, arguments)
            }
            ,
            u._Div = function() {
                return (u._Div = u.asm.V).apply(null, arguments)
            }
            ,
            u._Equal = function() {
                return (u._Equal = u.asm.W).apply(null, arguments)
            }
            ,
            u._Exp = function() {
                return (u._Exp = u.asm.X).apply(null, arguments)
            }
            ,
            u._FlipLeftRight = function() {
                return (u._FlipLeftRight = u.asm.Y).apply(null, arguments)
            }
            ,
            u._FloorDiv = function() {
                return (u._FloorDiv = u.asm.Z).apply(null, arguments)
            }
            ,
            u._FusedBatchNorm = function() {
                return (u._FusedBatchNorm = u.asm._).apply(null, arguments)
            }
            ,
            u._FusedConv2D = function() {
                return (u._FusedConv2D = u.asm.$).apply(null, arguments)
            }
            ,
            u._FusedDepthwiseConv2D = function() {
                return (u._FusedDepthwiseConv2D = u.asm.aa).apply(null, arguments)
            }
            ,
            u._Gather = function() {
                return (u._Gather = u.asm.ba).apply(null, arguments)
            }
            ,
            u._GatherNd = function() {
                return (u._GatherNd = u.asm.ca).apply(null, arguments)
            }
            ,
            u._Greater = function() {
                return (u._Greater = u.asm.da).apply(null, arguments)
            }
            ,
            u._GreaterEqual = function() {
                return (u._GreaterEqual = u.asm.ea).apply(null, arguments)
            }
            ,
            u._Less = function() {
                return (u._Less = u.asm.fa).apply(null, arguments)
            }
            ,
            u._LessEqual = function() {
                return (u._LessEqual = u.asm.ga).apply(null, arguments)
            }
            ,
            u._Log = function() {
                return (u._Log = u.asm.ha).apply(null, arguments)
            }
            ,
            u._LogicalAnd = function() {
                return (u._LogicalAnd = u.asm.ia).apply(null, arguments)
            }
            ,
            u._Max = function() {
                return (u._Max = u.asm.ja).apply(null, arguments)
            }
            ,
            u._MaxPool = function() {
                return (u._MaxPool = u.asm.ka).apply(null, arguments)
            }
            ,
            u._Maximum = function() {
                return (u._Maximum = u.asm.la).apply(null, arguments)
            }
            ,
            u._Min = function() {
                return (u._Min = u.asm.ma).apply(null, arguments)
            }
            ,
            u._Minimum = function() {
                return (u._Minimum = u.asm.na).apply(null, arguments)
            }
            ,
            u._Multiply = function() {
                return (u._Multiply = u.asm.oa).apply(null, arguments)
            }
            ,
            u._Negate = function() {
                return (u._Negate = u.asm.pa).apply(null, arguments)
            }
            ,
            u._NonMaxSuppressionV3 = function() {
                return (u._NonMaxSuppressionV3 = u.asm.qa).apply(null, arguments)
            }
            ,
            u._NonMaxSuppressionV4 = function() {
                return (u._NonMaxSuppressionV4 = u.asm.ra).apply(null, arguments)
            }
            ,
            u._NonMaxSuppressionV5 = function() {
                return (u._NonMaxSuppressionV5 = u.asm.sa).apply(null, arguments)
            }
            ,
            u._NotEqual = function() {
                return (u._NotEqual = u.asm.ta).apply(null, arguments)
            }
            ,
            u._OneHot = function() {
                return (u._OneHot = u.asm.ua).apply(null, arguments)
            }
            ,
            u._PadV2 = function() {
                return (u._PadV2 = u.asm.va).apply(null, arguments)
            }
            ,
            u._Pow = function() {
                return (u._Pow = u.asm.wa).apply(null, arguments)
            }
            ,
            u._Prelu = function() {
                return (u._Prelu = u.asm.xa).apply(null, arguments)
            }
            ,
            u._Relu = function() {
                return (u._Relu = u.asm.ya).apply(null, arguments)
            }
            ,
            u._Relu6 = function() {
                return (u._Relu6 = u.asm.za).apply(null, arguments)
            }
            ,
            u._ResizeBilinear = function() {
                return (u._ResizeBilinear = u.asm.Aa).apply(null, arguments)
            }
            ,
            u._Reverse = function() {
                return (u._Reverse = u.asm.Ba).apply(null, arguments)
            }
            ,
            u._RotateWithOffset = function() {
                return (u._RotateWithOffset = u.asm.Ca).apply(null, arguments)
            }
            ,
            u._Rsqrt = function() {
                return (u._Rsqrt = u.asm.Da).apply(null, arguments)
            }
            ,
            u._ScatterNd = function() {
                return (u._ScatterNd = u.asm.Ea).apply(null, arguments)
            }
            ,
            u._SelectV2 = function() {
                return (u._SelectV2 = u.asm.Fa).apply(null, arguments)
            }
            ,
            u._Sigmoid = function() {
                return (u._Sigmoid = u.asm.Ga).apply(null, arguments)
            }
            ,
            u._Sin = function() {
                return (u._Sin = u.asm.Ha).apply(null, arguments)
            }
            ,
            u._Softmax = function() {
                return (u._Softmax = u.asm.Ia).apply(null, arguments)
            }
            ,
            u._Sqrt = function() {
                return (u._Sqrt = u.asm.Ja).apply(null, arguments)
            }
            ,
            u._Square = function() {
                return (u._Square = u.asm.Ka).apply(null, arguments)
            }
            ,
            u._SquaredDifference = function() {
                return (u._SquaredDifference = u.asm.La).apply(null, arguments)
            }
            ,
            u._StridedSlice = function() {
                return (u._StridedSlice = u.asm.Ma).apply(null, arguments)
            }
            ,
            u._Sub = function() {
                return (u._Sub = u.asm.Na).apply(null, arguments)
            }
            ,
            u._Sum = function() {
                return (u._Sum = u.asm.Oa).apply(null, arguments)
            }
            ,
            u._Tanh = function() {
                return (u._Tanh = u.asm.Pa).apply(null, arguments)
            }
            ,
            u._Tile = function() {
                return (u._Tile = u.asm.Qa).apply(null, arguments)
            }
            ,
            u._Transpose = function() {
                return (u._Transpose = u.asm.Ra).apply(null, arguments)
            }
            ,
            u.__FusedMatMul = function() {
                return (u.__FusedMatMul = u.asm.Sa).apply(null, arguments)
            }
            ,
            u._malloc = function() {
                return ($e = u._malloc = u.asm.Ta).apply(null, arguments)
            }
            ), Ze = u._free = function() {
                return (Ze = u._free = u.asm.Ua).apply(null, arguments)
            }
            , Je = u._emscripten_get_global_libc = function() {
                return (Je = u._emscripten_get_global_libc = u.asm.Va).apply(null, arguments)
            }
            , et = u.___errno_location = function() {
                return (et = u.___errno_location = u.asm.Wa).apply(null, arguments)
            }
            , tt = (u.___em_js__initPthreadsJS = function() {
                return (u.___em_js__initPthreadsJS = u.asm.Xa).apply(null, arguments)
            }
            ,
            u._memalign = function() {
                return (tt = u._memalign = u.asm.Ya).apply(null, arguments)
            }
            ), nt = u.___pthread_tsd_run_dtors = function() {
                return (nt = u.___pthread_tsd_run_dtors = u.asm.Za).apply(null, arguments)
            }
            , rt = u._emscripten_main_thread_process_queued_calls = function() {
                return (rt = u._emscripten_main_thread_process_queued_calls = u.asm._a).apply(null, arguments)
            }
            , at = (u._emscripten_current_thread_process_queued_calls = function() {
                return (u._emscripten_current_thread_process_queued_calls = u.asm.$a).apply(null, arguments)
            }
            ,
            u._emscripten_register_main_browser_thread_id = function() {
                return (at = u._emscripten_register_main_browser_thread_id = u.asm.ab).apply(null, arguments)
            }
            ), ot = (u._emscripten_main_browser_thread_id = function() {
                return (u._emscripten_main_browser_thread_id = u.asm.bb).apply(null, arguments)
            }
            ,
            u._emscripten_async_run_in_main_thread = function() {
                return (u._emscripten_async_run_in_main_thread = u.asm.cb).apply(null, arguments)
            }
            ,
            u._emscripten_sync_run_in_main_thread = function() {
                return (u._emscripten_sync_run_in_main_thread = u.asm.db).apply(null, arguments)
            }
            ,
            u._emscripten_sync_run_in_main_thread_0 = function() {
                return (u._emscripten_sync_run_in_main_thread_0 = u.asm.eb).apply(null, arguments)
            }
            ,
            u._emscripten_sync_run_in_main_thread_1 = function() {
                return (u._emscripten_sync_run_in_main_thread_1 = u.asm.fb).apply(null, arguments)
            }
            ,
            u._emscripten_sync_run_in_main_thread_2 = function() {
                return (u._emscripten_sync_run_in_main_thread_2 = u.asm.gb).apply(null, arguments)
            }
            ,
            u._emscripten_sync_run_in_main_thread_xprintf_varargs = function() {
                return (u._emscripten_sync_run_in_main_thread_xprintf_varargs = u.asm.hb).apply(null, arguments)
            }
            ,
            u._emscripten_sync_run_in_main_thread_3 = function() {
                return (u._emscripten_sync_run_in_main_thread_3 = u.asm.ib).apply(null, arguments)
            }
            ,
            u._emscripten_sync_run_in_main_thread_4 = function() {
                return (ot = u._emscripten_sync_run_in_main_thread_4 = u.asm.jb).apply(null, arguments)
            }
            ), it = (u._emscripten_sync_run_in_main_thread_5 = function() {
                return (u._emscripten_sync_run_in_main_thread_5 = u.asm.kb).apply(null, arguments)
            }
            ,
            u._emscripten_sync_run_in_main_thread_6 = function() {
                return (u._emscripten_sync_run_in_main_thread_6 = u.asm.lb).apply(null, arguments)
            }
            ,
            u._emscripten_sync_run_in_main_thread_7 = function() {
                return (u._emscripten_sync_run_in_main_thread_7 = u.asm.mb).apply(null, arguments)
            }
            ,
            u._emscripten_run_in_main_runtime_thread_js = function() {
                return (it = u._emscripten_run_in_main_runtime_thread_js = u.asm.nb).apply(null, arguments)
            }
            ), st = u._emscripten_async_queue_on_thread_ = function() {
                return (st = u._emscripten_async_queue_on_thread_ = u.asm.ob).apply(null, arguments)
            }
            , ut = (u._emscripten_tls_init = function() {
                return (u._emscripten_tls_init = u.asm.pb).apply(null, arguments)
            }
            ,
            u.stackSave = function() {
                return (ut = u.stackSave = u.asm.qb).apply(null, arguments)
            }
            ), ct = u.stackAlloc = function() {
                return (ct = u.stackAlloc = u.asm.rb).apply(null, arguments)
            }
            , lt = u.stackRestore = function() {
                return (lt = u.stackRestore = u.asm.sb).apply(null, arguments)
            }
            , ft = u.dynCall_vi = function() {
                return (ft = u.dynCall_vi = u.asm.tb).apply(null, arguments)
            }
            ;
            function pt(e) {
                this.name = "ExitStatus",
                this.message = "Program terminated with exit(" + e + ")",
                this.status = e
            }
            function dt(e) {
                function t() {
                    Qe || (Qe = !0,
                    u.calledRun = !0,
                    _ || (Q($),
                    h || Q(Z),
                    u.onRuntimeInitialized && u.onRuntimeInitialized(),
                    function() {
                        if (!h) {
                            if (u.postRun)
                                for ("function" == typeof u.postRun && (u.postRun = [u.postRun]); u.postRun.length; )
                                    te(u.postRun.shift());
                            Q(J)
                        }
                    }()))
                }
                ae > 0 || (function() {
                    if (!h) {
                        if (u.preRun)
                            for ("function" == typeof u.preRun && (u.preRun = [u.preRun]); u.preRun.length; )
                                ee(u.preRun.shift());
                        Q(Y)
                    }
                }(),
                ae > 0 || (u.setStatus ? (u.setStatus("Running..."),
                setTimeout((function() {
                    setTimeout((function() {
                        u.setStatus("")
                    }
                    ), 1),
                    t()
                }
                ), 1)) : t()))
            }
            if (u.dynCall_v = function() {
                return (u.dynCall_v = u.asm.ub).apply(null, arguments)
            }
            ,
            u.dynCall_ii = function() {
                return (u.dynCall_ii = u.asm.vb).apply(null, arguments)
            }
            ,
            u.asm = Xe,
            u.cwrap = function(e, t, n, r) {
                var a = (n = n || []).every((function(e) {
                    return "number" === e
                }
                ));
                return "string" !== t && a && !r ? O(e) : function() {
                    return D(e, t, n, arguments)
                }
            }
            ,
            u.PThread = Ce,
            u.PThread = Ce,
            u._pthread_self = He,
            u.wasmMemory = E,
            u.ExitStatus = pt,
            u.then = function(e) {
                if (Qe)
                    e(u);
                else {
                    var t = u.onRuntimeInitialized;
                    u.onRuntimeInitialized = function() {
                        t && t(),
                        e(u)
                    }
                }
                return u
            }
            ,
            oe = function e() {
                Qe || dt(),
                Qe || (oe = e)
            }
            ,
            u.run = dt,
            u.preInit)
                for ("function" == typeof u.preInit && (u.preInit = [u.preInit]); u.preInit.length > 0; )
                    u.preInit.pop()();
            return h || (C = !0),
            h || dt(),
            e
        }
        );
        e.exports = r
    }
    ))
      , yB = bw((function(e, t) {
        var n, r = (n = "undefined" != typeof document && document.currentScript ? document.currentScript.src : void 0,
        "undefined" != typeof __filename && (n = n || __filename),
        function(e) {
            var t, r = void 0 !== (e = e || {}) ? e : {}, a = {};
            for (t in r)
                r.hasOwnProperty(t) && (a[t] = r[t]);
            var o, i, s, u, c = function(e, t) {
                throw t
            };
            o = "object" == ("undefined" == typeof window ? "undefined" : Sy(window)),
            i = "function" == typeof importScripts,
            s = "object" == ("undefined" == typeof process ? "undefined" : Sy(process)) && "object" == Sy(process.versions) && "string" == typeof process.versions.node,
            u = !o && !s && !i;
            var l, f, p, d, h = "";
            s ? (h = i ? mB.dirname(h) + "/" : __dirname + "/",
            l = function(e, t) {
                return p || (p = oA),
                d || (d = mB),
                e = d.normalize(e),
                p.readFileSync(e, t ? null : "utf8")
            }
            ,
            f = function(e) {
                var t = l(e, !0);
                return t.buffer || (t = new Uint8Array(t)),
                w(t.buffer),
                t
            }
            ,
            process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"),
            process.argv.slice(2),
            process.on("uncaughtException", (function(e) {
                if (!(e instanceof te))
                    throw e
            }
            )),
            process.on("unhandledRejection", W),
            c = function(e) {
                process.exit(e)
            }
            ,
            r.inspect = function() {
                return "[Emscripten Module object]"
            }
            ) : u ? ("undefined" != typeof read && (l = function(e) {
                return read(e)
            }
            ),
            f = function(e) {
                var t;
                return "function" == typeof readbuffer ? new Uint8Array(readbuffer(e)) : (w("object" == Sy(t = read(e, "binary"))),
                t)
            }
            ,
            "undefined" != typeof scriptArgs && scriptArgs,
            "function" == typeof quit && (c = function(e) {
                quit(e)
            }
            ),
            "undefined" != typeof print && ("undefined" == typeof console && (console = {}),
            console.log = print,
            console.warn = console.error = "undefined" != typeof printErr ? printErr : print)) : (o || i) && (i ? h = self.location.href : document.currentScript && (h = document.currentScript.src),
            n && (h = n),
            h = 0 !== h.indexOf("blob:") ? h.substr(0, h.lastIndexOf("/") + 1) : "",
            l = function(e) {
                var t = new XMLHttpRequest;
                return t.open("GET", e, !1),
                t.send(null),
                t.responseText
            }
            ,
            i && (f = function(e) {
                var t = new XMLHttpRequest;
                return t.open("GET", e, !1),
                t.responseType = "arraybuffer",
                t.send(null),
                new Uint8Array(t.response)
            }
            ));
            var m, v, g, y = r.print || console.log.bind(console), b = r.printErr || console.warn.bind(console);
            for (t in a)
                a.hasOwnProperty(t) && (r[t] = a[t]);
            a = null,
            r.arguments && r.arguments,
            r.thisProgram && r.thisProgram,
            r.quit && (c = r.quit),
            r.wasmBinary && (m = r.wasmBinary),
            r.noExitRuntime && (v = r.noExitRuntime),
            "object" != ("undefined" == typeof WebAssembly ? "undefined" : Sy(WebAssembly)) && b("no native wasm support detected"),
            new WebAssembly.Table({
                initial: 147,
                maximum: 147,
                element: "anyfunc"
            });
            var x = !1;
            function w(e, t) {
                e || W("Assertion failed: " + t)
            }
            function k(e) {
                var t = r["_" + e];
                return w(t, "Cannot call unknown function " + e + ", make sure it is exported"),
                t
            }
            function C(e, t, n, r, a) {
                var o = {
                    string: function(e) {
                        var t = 0;
                        if (null != e && 0 !== e) {
                            var n = 1 + (e.length << 2);
                            !function(e, t, n) {
                                (function(e, t, n, r) {
                                    if (!(r > 0))
                                        return 0;
                                    for (var a = n, o = n + r - 1, i = 0; i < e.length; ++i) {
                                        var s = e.charCodeAt(i);
                                        if (s >= 55296 && s <= 57343 && (s = 65536 + ((1023 & s) << 10) | 1023 & e.charCodeAt(++i)),
                                        s <= 127) {
                                            if (n >= o)
                                                break;
                                            t[n++] = s
                                        } else if (s <= 2047) {
                                            if (n + 1 >= o)
                                                break;
                                            t[n++] = 192 | s >> 6,
                                            t[n++] = 128 | 63 & s
                                        } else if (s <= 65535) {
                                            if (n + 2 >= o)
                                                break;
                                            t[n++] = 224 | s >> 12,
                                            t[n++] = 128 | s >> 6 & 63,
                                            t[n++] = 128 | 63 & s
                                        } else {
                                            if (n + 3 >= o)
                                                break;
                                            t[n++] = 240 | s >> 18,
                                            t[n++] = 128 | s >> 12 & 63,
                                            t[n++] = 128 | s >> 6 & 63,
                                            t[n++] = 128 | 63 & s
                                        }
                                    }
                                    t[n] = 0
                                }
                                )(e, S, t, n)
                            }(e, t = J(n), n)
                        }
                        return t
                    },
                    array: function(e) {
                        var t = J(e.length);
                        return function(e, t) {
                            E.set(e, t)
                        }(e, t),
                        t
                    }
                }
                  , i = k(e)
                  , s = []
                  , u = 0;
                if (r)
                    for (var c = 0; c < r.length; c++) {
                        var l = o[n[c]];
                        l ? (0 === u && (u = Z()),
                        s[c] = l(r[c])) : s[c] = r[c]
                    }
                var f = i.apply(null, s);
                return f = function(e) {
                    return "string" === t ? N(e) : "boolean" === t ? Boolean(e) : e
                }(f),
                0 !== u && ee(u),
                f
            }
            var E, S, I, T = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0;
            function A(e, t, n) {
                for (var r = t + n, a = t; e[a] && !(a >= r); )
                    ++a;
                if (a - t > 16 && e.subarray && T)
                    return T.decode(e.subarray(t, a));
                for (var o = ""; t < a; ) {
                    var i = e[t++];
                    if (128 & i) {
                        var s = 63 & e[t++];
                        if (192 != (224 & i)) {
                            var u = 63 & e[t++];
                            if ((i = 224 == (240 & i) ? (15 & i) << 12 | s << 6 | u : (7 & i) << 18 | s << 12 | u << 6 | 63 & e[t++]) < 65536)
                                o += String.fromCharCode(i);
                            else {
                                var c = i - 65536;
                                o += String.fromCharCode(55296 | c >> 10, 56320 | 1023 & c)
                            }
                        } else
                            o += String.fromCharCode((31 & i) << 6 | s)
                    } else
                        o += String.fromCharCode(i)
                }
                return o
            }
            function N(e, t) {
                return e ? A(S, e, t) : ""
            }
            function _(e) {
                r.HEAP8 = E = new Int8Array(e),
                r.HEAP16 = new Int16Array(e),
                r.HEAP32 = I = new Int32Array(e),
                r.HEAPU8 = S = new Uint8Array(e),
                r.HEAPU16 = new Uint16Array(e),
                r.HEAPU32 = new Uint32Array(e),
                r.HEAPF32 = new Float32Array(e),
                r.HEAPF64 = new Float64Array(e)
            }
            function R(e) {
                for (; e.length > 0; ) {
                    var t = e.shift();
                    if ("function" != typeof t) {
                        var n = t.func;
                        "number" == typeof n ? void 0 === t.arg ? r.dynCall_v(n) : r.dynCall_vi(n, t.arg) : n(void 0 === t.arg ? null : t.arg)
                    } else
                        t(r)
                }
            }
            r.INITIAL_MEMORY;
            var O = []
              , D = []
              , B = []
              , F = [];
            function M(e) {
                O.unshift(e)
            }
            function P(e) {
                F.unshift(e)
            }
            var L = Math.ceil
              , U = Math.floor
              , V = 0
              , z = null;
            function W(e) {
                throw r.onAbort && r.onAbort(e),
                y(e += ""),
                b(e),
                x = !0,
                e = "abort(" + e + "). Build with -s ASSERTIONS=1 for more info.",
                new WebAssembly.RuntimeError(e)
            }
            function j(e, t) {
                return String.prototype.startsWith ? e.startsWith(t) : 0 === e.indexOf(t)
            }
            r.preloadedImages = {},
            r.preloadedAudios = {};
            function H(e) {
                return j(e, "data:application/octet-stream;base64,")
            }
            function G(e) {
                return j(e, "file://")
            }
            var K = "tfjs-backend-wasm.wasm";
            function q() {
                try {
                    if (m)
                        return new Uint8Array(m);
                    if (f)
                        return f(K);
                    throw "both async and sync fetching of the wasm failed"
                } catch (e) {
                    W(e)
                }
            }
            H(K) || (K = function(e) {
                return r.locateFile ? r.locateFile(e, h) : h + e
            }(K)),
            D.push();
            var X = {
                mappings: {},
                buffers: [null, [], []],
                printChar: function(e, t) {
                    var n = X.buffers[e];
                    0 === t || 10 === t ? ((1 === e ? y : b)(A(n, 0)),
                    n.length = 0) : n.push(t)
                },
                varargs: void 0,
                get: function() {
                    return X.varargs += 4,
                    I[X.varargs - 4 >> 2]
                },
                getStr: function(e) {
                    return N(e)
                },
                get64: function(e, t) {
                    return e
                }
            };
            var Q = {
                emscripten_notify_memory_growth: function(e) {
                    _(g.buffer)
                },
                fd_close: function(e) {
                    return 0
                },
                fd_seek: function(e, t, n, r, a) {},
                fd_write: function(e, t, n, r) {
                    for (var a = 0, o = 0; o < n; o++) {
                        for (var i = I[t + 8 * o >> 2], s = I[t + (8 * o + 4) >> 2], u = 0; u < s; u++)
                            X.printChar(e, S[i + u]);
                        a += s
                    }
                    return I[r >> 2] = a,
                    0
                },
                proc_exit: function(e) {
                    !function(e) {
                        re(e)
                    }(e)
                },
                roundf: function(e) {
                    return (e = +e) >= 0 ? +U(e + .5) : +L(e - .5)
                }
            }
              , Y = function() {
                var e = {
                    env: Q,
                    wasi_snapshot_preview1: Q
                };
                function t(e, t) {
                    var n = e.exports;
                    r.asm = n,
                    _((g = n.memory).buffer),
                    function(e) {
                        if (V--,
                        r.monitorRunDependencies && r.monitorRunDependencies(V),
                        0 == V && z) {
                            var t = z;
                            z = null,
                            t()
                        }
                    }()
                }
                function n(e) {
                    t(e.instance)
                }
                function a(t) {
                    return (m || !o && !i || "function" != typeof fetch || G(K) ? new Promise((function(e, t) {
                        e(q())
                    }
                    )) : fetch(K, {
                        credentials: "same-origin"
                    }).then((function(e) {
                        if (!e.ok)
                            throw "failed to load wasm binary file at '" + K + "'";
                        return e.arrayBuffer()
                    }
                    )).catch((function() {
                        return q()
                    }
                    ))).then((function(t) {
                        return WebAssembly.instantiate(t, e)
                    }
                    )).then(t, (function(e) {
                        b("failed to asynchronously prepare wasm: " + e),
                        W(e)
                    }
                    ))
                }
                if (V++,
                r.monitorRunDependencies && r.monitorRunDependencies(V),
                r.instantiateWasm)
                    try {
                        return r.instantiateWasm(e, t)
                    } catch (e) {
                        return b("Module.instantiateWasm callback failed with error: " + e),
                        !1
                    }
                return function() {
                    if (m || "function" != typeof WebAssembly.instantiateStreaming || H(K) || G(K) || "function" != typeof fetch)
                        return a(n);
                    fetch(K, {
                        credentials: "same-origin"
                    }).then((function(t) {
                        return WebAssembly.instantiateStreaming(t, e).then(n, (function(e) {
                            b("wasm streaming compile failed: " + e),
                            b("falling back to ArrayBuffer instantiation"),
                            a(n)
                        }
                        ))
                    }
                    ))
                }(),
                {}
            }();
            r.asm = Y,
            r._init = function() {
                return (r._init = r.asm.init).apply(null, arguments)
            }
            ,
            r._register_tensor = function() {
                return (r._register_tensor = r.asm.register_tensor).apply(null, arguments)
            }
            ,
            r._dispose_data = function() {
                return (r._dispose_data = r.asm.dispose_data).apply(null, arguments)
            }
            ,
            r._dispose = function() {
                return (r._dispose = r.asm.dispose).apply(null, arguments)
            }
            ,
            r._Abs = function() {
                return (r._Abs = r.asm.Abs).apply(null, arguments)
            }
            ,
            r._Add = function() {
                return (r._Add = r.asm.Add).apply(null, arguments)
            }
            ,
            r._AddN = function() {
                return (r._AddN = r.asm.AddN).apply(null, arguments)
            }
            ,
            r._ArgMax = function() {
                return (r._ArgMax = r.asm.ArgMax).apply(null, arguments)
            }
            ,
            r._AvgPool = function() {
                return (r._AvgPool = r.asm.AvgPool).apply(null, arguments)
            }
            ,
            r._BatchMatMul = function() {
                return (r._BatchMatMul = r.asm.BatchMatMul).apply(null, arguments)
            }
            ,
            r._ClipByValue = function() {
                return (r._ClipByValue = r.asm.ClipByValue).apply(null, arguments)
            }
            ,
            r._Conv2D = function() {
                return (r._Conv2D = r.asm.Conv2D).apply(null, arguments)
            }
            ,
            r._Conv2DBackpropInput = function() {
                return (r._Conv2DBackpropInput = r.asm.Conv2DBackpropInput).apply(null, arguments)
            }
            ,
            r._Cos = function() {
                return (r._Cos = r.asm.Cos).apply(null, arguments)
            }
            ,
            r._CropAndResize = function() {
                return (r._CropAndResize = r.asm.CropAndResize).apply(null, arguments)
            }
            ,
            r._Cumsum = function() {
                return (r._Cumsum = r.asm.Cumsum).apply(null, arguments)
            }
            ,
            r._DepthToSpace = function() {
                return (r._DepthToSpace = r.asm.DepthToSpace).apply(null, arguments)
            }
            ,
            r._DepthwiseConv2dNative = function() {
                return (r._DepthwiseConv2dNative = r.asm.DepthwiseConv2dNative).apply(null, arguments)
            }
            ,
            r._Div = function() {
                return (r._Div = r.asm.Div).apply(null, arguments)
            }
            ,
            r._Equal = function() {
                return (r._Equal = r.asm.Equal).apply(null, arguments)
            }
            ,
            r._Exp = function() {
                return (r._Exp = r.asm.Exp).apply(null, arguments)
            }
            ,
            r._FlipLeftRight = function() {
                return (r._FlipLeftRight = r.asm.FlipLeftRight).apply(null, arguments)
            }
            ,
            r._FloorDiv = function() {
                return (r._FloorDiv = r.asm.FloorDiv).apply(null, arguments)
            }
            ,
            r._FusedBatchNorm = function() {
                return (r._FusedBatchNorm = r.asm.FusedBatchNorm).apply(null, arguments)
            }
            ,
            r._FusedConv2D = function() {
                return (r._FusedConv2D = r.asm.FusedConv2D).apply(null, arguments)
            }
            ,
            r._FusedDepthwiseConv2D = function() {
                return (r._FusedDepthwiseConv2D = r.asm.FusedDepthwiseConv2D).apply(null, arguments)
            }
            ,
            r._Gather = function() {
                return (r._Gather = r.asm.Gather).apply(null, arguments)
            }
            ,
            r._GatherNd = function() {
                return (r._GatherNd = r.asm.GatherNd).apply(null, arguments)
            }
            ,
            r._Greater = function() {
                return (r._Greater = r.asm.Greater).apply(null, arguments)
            }
            ,
            r._GreaterEqual = function() {
                return (r._GreaterEqual = r.asm.GreaterEqual).apply(null, arguments)
            }
            ,
            r._Less = function() {
                return (r._Less = r.asm.Less).apply(null, arguments)
            }
            ,
            r._LessEqual = function() {
                return (r._LessEqual = r.asm.LessEqual).apply(null, arguments)
            }
            ,
            r._Log = function() {
                return (r._Log = r.asm.Log).apply(null, arguments)
            }
            ,
            r._LogicalAnd = function() {
                return (r._LogicalAnd = r.asm.LogicalAnd).apply(null, arguments)
            }
            ,
            r._Max = function() {
                return (r._Max = r.asm.Max).apply(null, arguments)
            }
            ,
            r._MaxPool = function() {
                return (r._MaxPool = r.asm.MaxPool).apply(null, arguments)
            }
            ,
            r._Maximum = function() {
                return (r._Maximum = r.asm.Maximum).apply(null, arguments)
            }
            ,
            r._Min = function() {
                return (r._Min = r.asm.Min).apply(null, arguments)
            }
            ,
            r._Minimum = function() {
                return (r._Minimum = r.asm.Minimum).apply(null, arguments)
            }
            ,
            r._Multiply = function() {
                return (r._Multiply = r.asm.Multiply).apply(null, arguments)
            }
            ,
            r._Negate = function() {
                return (r._Negate = r.asm.Negate).apply(null, arguments)
            }
            ,
            r._NonMaxSuppressionV3 = function() {
                return (r._NonMaxSuppressionV3 = r.asm.NonMaxSuppressionV3).apply(null, arguments)
            }
            ,
            r._NonMaxSuppressionV4 = function() {
                return (r._NonMaxSuppressionV4 = r.asm.NonMaxSuppressionV4).apply(null, arguments)
            }
            ,
            r._NonMaxSuppressionV5 = function() {
                return (r._NonMaxSuppressionV5 = r.asm.NonMaxSuppressionV5).apply(null, arguments)
            }
            ,
            r._NotEqual = function() {
                return (r._NotEqual = r.asm.NotEqual).apply(null, arguments)
            }
            ,
            r._OneHot = function() {
                return (r._OneHot = r.asm.OneHot).apply(null, arguments)
            }
            ,
            r._PadV2 = function() {
                return (r._PadV2 = r.asm.PadV2).apply(null, arguments)
            }
            ,
            r._Pow = function() {
                return (r._Pow = r.asm.Pow).apply(null, arguments)
            }
            ,
            r._Prelu = function() {
                return (r._Prelu = r.asm.Prelu).apply(null, arguments)
            }
            ,
            r._Relu = function() {
                return (r._Relu = r.asm.Relu).apply(null, arguments)
            }
            ,
            r._Relu6 = function() {
                return (r._Relu6 = r.asm.Relu6).apply(null, arguments)
            }
            ,
            r._ResizeBilinear = function() {
                return (r._ResizeBilinear = r.asm.ResizeBilinear).apply(null, arguments)
            }
            ,
            r._Reverse = function() {
                return (r._Reverse = r.asm.Reverse).apply(null, arguments)
            }
            ,
            r._RotateWithOffset = function() {
                return (r._RotateWithOffset = r.asm.RotateWithOffset).apply(null, arguments)
            }
            ,
            r._Rsqrt = function() {
                return (r._Rsqrt = r.asm.Rsqrt).apply(null, arguments)
            }
            ,
            r._ScatterNd = function() {
                return (r._ScatterNd = r.asm.ScatterNd).apply(null, arguments)
            }
            ,
            r._SelectV2 = function() {
                return (r._SelectV2 = r.asm.SelectV2).apply(null, arguments)
            }
            ,
            r._Sigmoid = function() {
                return (r._Sigmoid = r.asm.Sigmoid).apply(null, arguments)
            }
            ,
            r._Sin = function() {
                return (r._Sin = r.asm.Sin).apply(null, arguments)
            }
            ,
            r._Softmax = function() {
                return (r._Softmax = r.asm.Softmax).apply(null, arguments)
            }
            ,
            r._Sqrt = function() {
                return (r._Sqrt = r.asm.Sqrt).apply(null, arguments)
            }
            ,
            r._Square = function() {
                return (r._Square = r.asm.Square).apply(null, arguments)
            }
            ,
            r._SquaredDifference = function() {
                return (r._SquaredDifference = r.asm.SquaredDifference).apply(null, arguments)
            }
            ,
            r._StridedSlice = function() {
                return (r._StridedSlice = r.asm.StridedSlice).apply(null, arguments)
            }
            ,
            r._Sub = function() {
                return (r._Sub = r.asm.Sub).apply(null, arguments)
            }
            ,
            r._Sum = function() {
                return (r._Sum = r.asm.Sum).apply(null, arguments)
            }
            ,
            r._Tanh = function() {
                return (r._Tanh = r.asm.Tanh).apply(null, arguments)
            }
            ,
            r._Tile = function() {
                return (r._Tile = r.asm.Tile).apply(null, arguments)
            }
            ,
            r._Transpose = function() {
                return (r._Transpose = r.asm.Transpose).apply(null, arguments)
            }
            ,
            r.__FusedMatMul = function() {
                return (r.__FusedMatMul = r.asm._FusedMatMul).apply(null, arguments)
            }
            ,
            r._malloc = function() {
                return (r._malloc = r.asm.malloc).apply(null, arguments)
            }
            ,
            r._free = function() {
                return (r._free = r.asm.free).apply(null, arguments)
            }
            ,
            r.__start = function() {
                return (r.__start = r.asm._start).apply(null, arguments)
            }
            ;
            var $, Z = r.stackSave = function() {
                return (Z = r.stackSave = r.asm.stackSave).apply(null, arguments)
            }
            , J = r.stackAlloc = function() {
                return (J = r.stackAlloc = r.asm.stackAlloc).apply(null, arguments)
            }
            , ee = r.stackRestore = function() {
                return (ee = r.stackRestore = r.asm.stackRestore).apply(null, arguments)
            }
            ;
            function te(e) {
                this.name = "ExitStatus",
                this.message = "Program terminated with exit(" + e + ")",
                this.status = e
            }
            function ne(e) {
                function t() {
                    $ || ($ = !0,
                    r.calledRun = !0,
                    x || (R(D),
                    R(B),
                    r.onRuntimeInitialized && r.onRuntimeInitialized(),
                    ae && function(e) {
                        var t = r.__start;
                        try {
                            t(),
                            re(0, !0)
                        } catch (e) {
                            if (e instanceof te)
                                return;
                            if ("unwind" == e)
                                return void (v = !0);
                            var n = e;
                            e && "object" == Sy(e) && e.stack && (n = [e, e.stack]),
                            b("exception thrown: " + n),
                            c(1, e)
                        }
                    }(),
                    function() {
                        if (r.postRun)
                            for ("function" == typeof r.postRun && (r.postRun = [r.postRun]); r.postRun.length; )
                                P(r.postRun.shift());
                        R(F)
                    }()))
                }
                V > 0 || (function() {
                    if (r.preRun)
                        for ("function" == typeof r.preRun && (r.preRun = [r.preRun]); r.preRun.length; )
                            M(r.preRun.shift());
                    R(O)
                }(),
                V > 0 || (r.setStatus ? (r.setStatus("Running..."),
                setTimeout((function() {
                    setTimeout((function() {
                        r.setStatus("")
                    }
                    ), 1),
                    t()
                }
                ), 1)) : t()))
            }
            function re(e, t) {
                t && v && 0 === e || (v || (x = !0,
                r.onExit && r.onExit(e)),
                c(e, new te(e)))
            }
            if (r.asm = Y,
            r.cwrap = function(e, t, n, r) {
                var a = (n = n || []).every((function(e) {
                    return "number" === e
                }
                ));
                return "string" !== t && a && !r ? k(e) : function() {
                    return C(e, t, n, arguments)
                }
            }
            ,
            r.then = function(e) {
                if ($)
                    e(r);
                else {
                    var t = r.onRuntimeInitialized;
                    r.onRuntimeInitialized = function() {
                        t && t(),
                        e(r)
                    }
                }
                return r
            }
            ,
            z = function e() {
                $ || ne(),
                $ || (z = e)
            }
            ,
            r.run = ne,
            r.preInit)
                for ("function" == typeof r.preInit && (r.preInit = [r.preInit]); r.preInit.length > 0; )
                    r.preInit.pop()();
            var ae = !0;
            return r.noInitialRun && (ae = !1),
            v = !0,
            ne(),
            e
        }
        );
        e.exports = r
    }
    ))
      , bB = function(e) {
        Oy(a, e);
        var t, n, r = Py(a);
        function a(e) {
            var t;
            return Ay(this, a),
            (t = r.call(this)).wasm = e,
            t.dataIdNextNumber = 1,
            t.wasm.tfjs.init(),
            t.dataIdMap = new wk(Fy(t),kS()),
            t
        }
        return _y(a, [{
            key: "write",
            value: function(e, t, n) {
                var r = {};
                return this.move(r, e, t, n),
                r
            }
        }, {
            key: "numDataIds",
            value: function() {
                return this.dataIdMap.numDataIds()
            }
        }, {
            key: "time",
            value: (n = Ty(regeneratorRuntime.mark((function e(t) {
                var n;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return n = SC(),
                            t(),
                            e.abrupt("return", {
                                kernelMs: SC() - n
                            });
                        case 3:
                        case "end":
                            return e.stop()
                        }
                }
                ), e)
            }
            ))),
            function(e) {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "move",
            value: function(e, t, n, r) {
                var a = this.dataIdNextNumber++;
                if ("string" !== r) {
                    var o = _k(n)
                      , i = o * jk(r)
                      , s = this.wasm._malloc(i);
                    this.dataIdMap.set(e, {
                        id: a,
                        memoryOffset: s,
                        shape: n,
                        dtype: r
                    }),
                    this.wasm.tfjs.registerTensor(a, o, s),
                    null != t && this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i), s)
                } else {
                    var u = t;
                    this.dataIdMap.set(e, {
                        id: a,
                        stringBytes: u,
                        shape: n,
                        dtype: r,
                        memoryOffset: null
                    })
                }
            }
        }, {
            key: "read",
            value: (t = Ty(regeneratorRuntime.mark((function e(t) {
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.abrupt("return", this.readSync(t));
                        case 1:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "readSync",
            value: function(e) {
                var t = this.dataIdMap.get(e)
                  , n = t.memoryOffset
                  , r = t.dtype
                  , a = t.shape
                  , o = t.stringBytes;
                return "string" === r ? o : function(e, t) {
                    switch (t) {
                    case "float32":
                        return new Float32Array(e);
                    case "int32":
                        return new Int32Array(e);
                    case "bool":
                        return new Uint8Array(e);
                    default:
                        throw new Error("Unknown dtype ".concat(t))
                    }
                }(this.wasm.HEAPU8.slice(n, n + _k(a) * jk(r)).buffer, r)
            }
        }, {
            key: "disposeData",
            value: function(e) {
                var t = this.dataIdMap.get(e);
                this.wasm._free(t.memoryOffset),
                this.wasm.tfjs.disposeData(t.id),
                this.dataIdMap.delete(e)
            }
        }, {
            key: "floatPrecision",
            value: function() {
                return 32
            }
        }, {
            key: "getMemoryOffset",
            value: function(e) {
                return this.dataIdMap.get(e).memoryOffset
            }
        }, {
            key: "dispose",
            value: function() {
                this.wasm.tfjs.dispose(),
                this.wasm = null
            }
        }, {
            key: "memory",
            value: function() {
                return {
                    unreliable: !1
                }
            }
        }, {
            key: "makeOutput",
            value: function(e, t, n) {
                var r;
                if (null == n)
                    r = this.write(null, e, t);
                else {
                    r = {};
                    var a = this.dataIdNextNumber++;
                    this.dataIdMap.set(r, {
                        id: a,
                        memoryOffset: n,
                        shape: e,
                        dtype: t
                    });
                    var o = _k(e);
                    this.wasm.tfjs.registerTensor(a, o, n)
                }
                return {
                    dataId: r,
                    shape: e,
                    dtype: t
                }
            }
        }, {
            key: "typedArrayFromHeap",
            value: function(e) {
                var t = e.shape
                  , n = e.dtype
                  , r = e.dataId
                  , a = this.wasm.HEAPU8.buffer
                  , o = this.dataIdMap.get(r).memoryOffset
                  , i = _k(t);
                switch (n) {
                case "float32":
                    return new Float32Array(a,o,i);
                case "int32":
                    return new Int32Array(a,o,i);
                case "bool":
                    return new Uint8Array(a,o,i);
                default:
                    throw new Error("Unknown dtype ".concat(n))
                }
            }
        }]),
        a
    }(kk);
    function xB(e, t, n) {
        if (null != EB)
            return EB;
        var r = "tfjs-backend-wasm.wasm";
        return e && t ? r = "tfjs-backend-wasm-threaded-simd.wasm" : e && (r = "tfjs-backend-wasm-simd.wasm"),
        null != SB && null != SB[r] ? SB[r] : n + r
    }
    IS("wasm", Ty(regeneratorRuntime.mark((function e() {
        var t, n;
        return regeneratorRuntime.wrap((function(e) {
            for (; ; )
                switch (e.prev = e.next) {
                case 0:
                    return e.next = 2,
                    Ty(regeneratorRuntime.mark((function e() {
                        var t, n, r, a;
                        return regeneratorRuntime.wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2,
                                    Promise.all([oC().getAsync("WASM_HAS_SIMD_SUPPORT"), oC().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);
                                case 2:
                                    return t = e.sent,
                                    n = Uy(t, 2),
                                    r = n[0],
                                    a = n[1],
                                    e.abrupt("return", new Promise((function(e, t) {
                                        var n, o = {};
                                        o.locateFile = function(e, t) {
                                            if (e.endsWith(".worker.js")) {
                                                var n = new Blob(['var threadInfoStruct=0;var selfThreadId=0;var parentThreadId=0;var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:selfThreadId})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["DYNAMIC_BASE"]=e.data.DYNAMIC_BASE;Module["DYNAMICTOP_PTR"]=e.data.DYNAMICTOP_PTR;Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}Module=WasmBackendModuleThreadedSimd(Module);postMessage({"cmd":"loaded"})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;threadInfoStruct=e.data.threadInfoStruct;Module["__register_pthread_ptr"](threadInfoStruct,0,0);selfThreadId=e.data.selfThreadId;parentThreadId=e.data.parentThreadId;var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["dynCall_ii"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){Atomics.store(Module["HEAPU32"],threadInfoStruct+4>>2,ex instanceof Module["ExitStatus"]?ex.status:-2);Atomics.store(Module["HEAPU32"],threadInfoStruct+0>>2,1);Module["_emscripten_futex_wake"](threadInfoStruct+0,2147483647);if(!(ex instanceof Module["ExitStatus"]))throw ex}}}else if(e.data.cmd==="cancel"){if(threadInfoStruct){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(threadInfoStruct){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{
                                                    type: "application/javascript"
                                                });
                                                return URL.createObjectURL(n)
                                            }
                                            return e.endsWith(".wasm") ? xB(r, a, t) : t + e
                                        }
                                        ,
                                        TB && (o.instantiateWasm = function(e) {
                                            return function(t, n) {
                                                return function(e, t) {
                                                    return oC().platform.fetch(e, {
                                                        credentials: "same-origin"
                                                    })
                                                }(e).then((function(r) {
                                                    r.ok || t.env.a("failed to load wasm binary file at '".concat(e, "'")),
                                                    r.arrayBuffer().then((function(e) {
                                                        WebAssembly.instantiate(e, t).then((function(e) {
                                                            n(e.instance)
                                                        }
                                                        ))
                                                    }
                                                    ))
                                                }
                                                )),
                                                {}
                                            }
                                        }(xB(r, a, ""))),
                                        a && r && null == EB ? (n = gB(o)).mainScriptUrlOrBlob = new Blob(["var _scriptDir = undefined; var WasmBackendModuleThreadedSimd = " + gB.toString()],{
                                            type: "text/javascript"
                                        }) : n = yB(o);
                                        n.tfjs = {
                                            init: n.cwrap("init", null, []),
                                            registerTensor: n.cwrap("register_tensor", null, ["number", "number", "number"]),
                                            disposeData: n.cwrap("dispose_data", null, ["number"]),
                                            dispose: n.cwrap("dispose", null, [])
                                        };
                                        var i = !1;
                                        n.onRuntimeInitialized = function() {
                                            i = !0,
                                            IB = !1,
                                            e({
                                                wasm: n
                                            })
                                        }
                                        ,
                                        n.onAbort = function() {
                                            i || IB || (IB = !0,
                                            t({
                                                message: "Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"
                                            }))
                                        }
                                    }
                                    )));
                                case 7:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )))();
                case 2:
                    return t = e.sent,
                    n = t.wasm,
                    e.abrupt("return", new bB(n));
                case 5:
                case "end":
                    return e.stop()
                }
        }
        ), e)
    }
    ))), 2);
    var wB, kB, CB, EB = null, SB = {}, IB = !1, TB = !1, AB = {}, NB = {
        alpha: !1,
        antialias: !1,
        premultipliedAlpha: !1,
        preserveDrawingBuffer: !1,
        depth: !1,
        stencil: !1,
        failIfMajorPerformanceCaveat: !0
    };
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function _B(e) {
        if (!(e in AB)) {
            var t = function(e) {
                if (1 !== e && 2 !== e)
                    throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");
                var t = function(e) {
                    if ("undefined" != typeof OffscreenCanvas && 2 === e)
                        return new OffscreenCanvas(300,150);
                    if ("undefined" != typeof document)
                        return document.createElement("canvas");
                    throw new Error("Cannot create a canvas in this context")
                }(e);
                return t.addEventListener("webglcontextlost", (function(t) {
                    t.preventDefault(),
                    delete AB[e]
                }
                ), !1),
                1 === e ? t.getContext("webgl", NB) || t.getContext("experimental-webgl", NB) : t.getContext("webgl2", NB)
            }/**
	     * @license
	     * Copyright 2017 Google LLC. All Rights Reserved.
	     * Licensed under the Apache License, Version 2.0 (the "License");
	     * you may not use this file except in compliance with the License.
	     * You may obtain a copy of the License at
	     *
	     * http://www.apache.org/licenses/LICENSE-2.0
	     *
	     * Unless required by applicable law or agreed to in writing, software
	     * distributed under the License is distributed on an "AS IS" BASIS,
	     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	     * See the License for the specific language governing permissions and
	     * limitations under the License.
	     * =============================================================================
	     */
            (e);
            if (null === t)
                return console.log("Could not get context for WebGL version", e),
                null;
            AB[e] = t
        }
        var n = AB[e];
        return n.isContextLost() ? (delete AB[e],
        _B(e)) : (n.disable(n.DEPTH_TEST),
        n.disable(n.STENCIL_TEST),
        n.disable(n.BLEND),
        n.disable(n.DITHER),
        n.disable(n.POLYGON_OFFSET_FILL),
        n.disable(n.SAMPLE_COVERAGE),
        n.enable(n.SCISSOR_TEST),
        n.enable(n.CULL_FACE),
        n.cullFace(n.BACK),
        AB[e])
    }
    function RB(e, t) {
        return [t, e]
    }
    function OB(e) {
        var t = _k(e);
        return Dk(Math.ceil(t / 4))
    }
    function DB(e, t) {
        return [Math.max(1, Math.ceil(t / 2)), Math.max(1, Math.ceil(e / 2))]
    }
    function BB(e, t) {
        var n, r, a, o, i, s, u, c, l, f = e;
        return 2 === oC().getNumber("WEBGL_VERSION") ? (n = f.R32F,
        r = f.R16F,
        a = f.RGBA16F,
        o = f.RGBA32F,
        i = f.RED,
        s = 4,
        u = 1,
        c = f.HALF_FLOAT,
        l = f.FLOAT) : (n = e.RGBA,
        r = e.RGBA,
        a = e.RGBA,
        o = f.RGBA,
        i = e.RGBA,
        s = 4,
        u = 4,
        c = null != t ? t.HALF_FLOAT_OES : null,
        l = e.FLOAT),
        {
            internalFormatFloat: n,
            internalFormatHalfFloat: r,
            internalFormatPackedHalfFloat: a,
            internalFormatPackedFloat: o,
            textureFormatFloat: i,
            downloadTextureFormat: e.RGBA,
            downloadUnpackNumChannels: s,
            defaultNumChannels: u,
            textureTypeHalfFloat: c,
            textureTypeFloat: l
        }
        /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    function FB(e, t) {
        var n = t();
        return oC().getBool("DEBUG") && function(e) {
            var t = e.getError();
            if (t !== e.NO_ERROR)
                throw new Error("WebGL Error: " + function(e, t) {
                    switch (t) {
                    case e.NO_ERROR:
                        return "NO_ERROR";
                    case e.INVALID_ENUM:
                        return "INVALID_ENUM";
                    case e.INVALID_VALUE:
                        return "INVALID_VALUE";
                    case e.INVALID_OPERATION:
                        return "INVALID_OPERATION";
                    case e.INVALID_FRAMEBUFFER_OPERATION:
                        return "INVALID_FRAMEBUFFER_OPERATION";
                    case e.OUT_OF_MEMORY:
                        return "OUT_OF_MEMORY";
                    case e.CONTEXT_LOST_WEBGL:
                        return "CONTEXT_LOST_WEBGL";
                    default:
                        return "Unknown error code ".concat(t)
                    }
                }(e, t))
        }(e),
        n
    }
    function MB(e) {
        return !!(oC().getBool("WEBGL_RENDER_FLOAT32_ENABLED") || 0 === e || 5.96e-8 < Math.abs(e) && Math.abs(e) < 65504)
    }
    function PB(e, t) {
        return KB(e, (function() {
            return e.getExtension(t)
        }
        ), 'Extension "' + t + '" not supported on this browser.')
    }
    !function(e) {
        e[e.DENSE = 0] = "DENSE",
        e[e.SHARED_BATCH = 1] = "SHARED_BATCH"
    }(wB || (wB = {})),
    function(e) {
        e[e.RENDER = 0] = "RENDER",
        e[e.UPLOAD = 1] = "UPLOAD",
        e[e.PIXELS = 2] = "PIXELS",
        e[e.DOWNLOAD = 3] = "DOWNLOAD"
    }(kB || (kB = {})),
    function(e) {
        e[e.UNPACKED_FLOAT16 = 0] = "UNPACKED_FLOAT16",
        e[e.UNPACKED_FLOAT32 = 1] = "UNPACKED_FLOAT32",
        e[e.PACKED_4X1_UNSIGNED_BYTE = 2] = "PACKED_4X1_UNSIGNED_BYTE",
        e[e.PACKED_2X2_FLOAT32 = 3] = "PACKED_2X2_FLOAT32",
        e[e.PACKED_2X2_FLOAT16 = 4] = "PACKED_2X2_FLOAT16"
    }(CB || (CB = {}));
    var LB, UB, VB = /ERROR: [0-9]+:([0-9]+):/g;
    function zB(e, t) {
        if (FB(e, (function() {
            return e.validateProgram(t)
        }
        )),
        !1 === e.getProgramParameter(t, e.VALIDATE_STATUS))
            throw console.log(e.getProgramInfoLog(t)),
            new Error("Shader program validation failed.")
    }
    function WB(e, t, n, r, a, o, i) {
        var s = e.getAttribLocation(t, n);
        return -1 !== s && (FB(e, (function() {
            return e.bindBuffer(e.ARRAY_BUFFER, r)
        }
        )),
        FB(e, (function() {
            return e.vertexAttribPointer(s, a, e.FLOAT, !1, o, i)
        }
        )),
        FB(e, (function() {
            return e.enableVertexAttribArray(s)
        }
        )),
        !0)
    }
    function jB(e, t, n) {
        FB(e, (function() {
            return e.bindFramebuffer(e.FRAMEBUFFER, n)
        }
        )),
        FB(e, (function() {
            return e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, t, 0)
        }
        ))
    }
    function HB(e, t) {
        FB(e, (function() {
            return e.bindFramebuffer(e.FRAMEBUFFER, t)
        }
        )),
        FB(e, (function() {
            return e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, null, 0)
        }
        ))
    }
    function GB(e) {
        var t = e.checkFramebufferStatus(e.FRAMEBUFFER);
        if (t !== e.FRAMEBUFFER_COMPLETE)
            throw new Error("Error binding framebuffer: " + function(e, t) {
                switch (t) {
                case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:
                    return "FRAMEBUFFER_INCOMPLETE_ATTACHMENT";
                case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:
                    return "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";
                case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:
                    return "FRAMEBUFFER_INCOMPLETE_DIMENSIONS";
                case e.FRAMEBUFFER_UNSUPPORTED:
                    return "FRAMEBUFFER_UNSUPPORTED";
                default:
                    return "unknown error ".concat(t)
                }
            }(e, t))
    }
    function KB(e, t, n) {
        var r = FB(e, (function() {
            return t()
        }
        ));
        if (null == r)
            throw new Error(n);
        return r
    }
    function qB(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
        return _k(e.slice(0, e.length - t))
    }
    function XB(e) {
        if (0 === e.length)
            throw Error("Cannot get rows and columns of an empty shape array.");
        return [e.length > 1 ? e[e.length - 2] : 1, e[e.length - 1]]
    }
    function QB(e) {
        var t = [1, 1, 1];
        return 0 === e.length || 1 === e.length && 1 === e[0] || (t = [qB(e)].concat(Vy(XB(e)))),
        t
    }
    function YB(e) {
        return e % 2 == 0
    }
    function $B(e, t) {
        if (Rk(e = e.slice(-2), t = t.slice(-2)))
            return !0;
        if (!e.length || !t.length)
            return !0;
        if (0 === e[0] || 0 === e[1] || 0 === t[0] || 0 === t[1])
            return !0;
        if (e.length !== t.length) {
            var n = e.slice(-1)[0]
              , r = t.slice(-1)[0];
            if (n === r)
                return !0;
            if (YB(n) && YB(r) && (1 === e[0] || 1 === t[0]))
                return !0
        }
        return e[1] === t[1] && YB(e[0]) && YB(t[0])
    }
    function ZB(e, t) {
        return null != e.getExtension(t)
    }
    function JB(e) {
        try {
            if (null != _B(e))
                return !0
        } catch (e) {
            return console.log("Error when getting WebGL context: ", e),
            !1
        }
        return !1
    }
    function eF(e) {
        var t = BB(e)
          , n = e.createTexture();
        e.bindTexture(e.TEXTURE_2D, n),
        e.texImage2D(e.TEXTURE_2D, 0, t.internalFormatFloat, 1, 1, 0, t.textureFormatFloat, t.textureTypeFloat, null);
        var r = e.createFramebuffer();
        e.bindFramebuffer(e.FRAMEBUFFER, r),
        e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, n, 0);
        var a = e.checkFramebufferStatus(e.FRAMEBUFFER) === e.FRAMEBUFFER_COMPLETE;
        return e.bindTexture(e.TEXTURE_2D, null),
        e.bindFramebuffer(e.FRAMEBUFFER, null),
        e.deleteTexture(n),
        e.deleteFramebuffer(r),
        a
    }
    function tF(e, t) {
        Array.isArray(e) || (e = [e]),
        e.forEach((function(e) {
            null != e && Ik("complex64" !== e.dtype, (function() {
                return "".concat(t, " does not support complex64 tensors in the WebGL backend.")
            }
            ))
        }
        ))
        /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    var nF = oC();
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the License);
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an AS IS BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function rF(e) {
        for (var t = new Float32Array(e.length), n = 0; n < e.length; ++n)
            t[n] = Math.abs(e[n]);
        return t
    }
    nF.registerFlag("HAS_WEBGL", (function() {
        return nF.getNumber("WEBGL_VERSION") > 0
    }
    )),
    nF.registerFlag("WEBGL_VERSION", (function() {
        return JB(2) ? 2 : JB(1) ? 1 : 0
    }
    )),
    nF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS", (function() {
        return !1
    }
    )),
    nF.registerFlag("WEBGL_BUFFER_SUPPORTED", (function() {
        return 2 === nF.get("WEBGL_VERSION")
    }
    )),
    nF.registerFlag("WEBGL_CPU_FORWARD", (function() {
        return !0
    }
    )),
    nF.registerFlag("WEBGL_FORCE_F16_TEXTURES", (function() {
        return !1
    }
    )),
    nF.registerFlag("WEBGL_PACK", (function() {
        return nF.getBool("HAS_WEBGL")
    }
    )),
    nF.registerFlag("WEBGL_PACK_NORMALIZATION", (function() {
        return nF.getBool("WEBGL_PACK")
    }
    )),
    nF.registerFlag("WEBGL_PACK_CLIP", (function() {
        return nF.getBool("WEBGL_PACK")
    }
    )),
    nF.registerFlag("WEBGL_PACK_DEPTHWISECONV", (function() {
        return !1
    }
    )),
    nF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS", (function() {
        return nF.getBool("WEBGL_PACK")
    }
    )),
    nF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS", (function() {
        return nF.getBool("WEBGL_PACK")
    }
    )),
    nF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS", (function() {
        return nF.getBool("WEBGL_PACK")
    }
    )),
    nF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS", (function() {
        return nF.getBool("WEBGL_PACK")
    }
    )),
    nF.registerFlag("WEBGL_PACK_REDUCE", (function() {
        return nF.getBool("WEBGL_PACK")
    }
    )),
    nF.registerFlag("WEBGL_LAZILY_UNPACK", (function() {
        return nF.getBool("WEBGL_PACK")
    }
    )),
    nF.registerFlag("WEBGL_CONV_IM2COL", (function() {
        return nF.getBool("WEBGL_PACK")
    }
    )),
    nF.registerFlag("WEBGL_MAX_TEXTURE_SIZE", (function() {
        return function(e) {
            if (null == LB) {
                var t = _B(e);
                LB = t.getParameter(t.MAX_TEXTURE_SIZE)
            }
            return LB
        }(nF.getNumber("WEBGL_VERSION"))
    }
    )),
    nF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER", (function() {
        return function(e) {
            if (null == UB) {
                var t = _B(e);
                UB = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
            }
            return Math.min(16, UB)
        }(nF.getNumber("WEBGL_VERSION"))
    }
    )),
    nF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION", (function() {
        var e = nF.getNumber("WEBGL_VERSION");
        return 0 === e ? 0 : function(e) {
            if (0 === e)
                return 0;
            var t = _B(e);
            return ZB(t, "EXT_disjoint_timer_query_webgl2") && 2 === e ? 2 : ZB(t, "EXT_disjoint_timer_query") ? 1 : 0
        }(e)
    }
    )),
    nF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE", (function() {
        return nF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") > 0 && !function() {
            if ("undefined" != typeof navigator && null != navigator) {
                var e = navigator.userAgent || navigator.vendor || window.opera;
                return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0, 4))
            }
            return !1
        }()
    }
    )),
    nF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE", (function() {
        return function(e) {
            if (0 === e)
                return !1;
            var t = _B(e);
            if (1 === e) {
                if (!ZB(t, "OES_texture_float"))
                    return !1
            } else if (!ZB(t, "EXT_color_buffer_float"))
                return !1;
            return eF(t)
        }(nF.getNumber("WEBGL_VERSION"))
    }
    )),
    nF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED", (function() {
        return !nF.getBool("WEBGL_FORCE_F16_TEXTURES") && nF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")
    }
    )),
    nF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED", (function() {
        return function(e) {
            if (0 === e)
                return !1;
            var t = _B(e);
            if (1 !== e) {
                if (ZB(t, "EXT_color_buffer_float"))
                    return eF(t);
                var n = "EXT_color_buffer_half_float";
                if (ZB(t, n)) {
                    var r = t.getExtension(n);
                    return function(e, t) {
                        var n = BB(e, t)
                          , r = e.createTexture();
                        e.bindTexture(e.TEXTURE_2D, r),
                        e.texImage2D(e.TEXTURE_2D, 0, n.internalFormatHalfFloat, 1, 1, 0, n.textureFormatFloat, n.textureTypeHalfFloat, null);
                        var a = e.createFramebuffer();
                        e.bindFramebuffer(e.FRAMEBUFFER, a),
                        e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, r, 0);
                        var o = e.checkFramebufferStatus(e.FRAMEBUFFER) === e.FRAMEBUFFER_COMPLETE;
                        return e.bindTexture(e.TEXTURE_2D, null),
                        e.bindFramebuffer(e.FRAMEBUFFER, null),
                        e.deleteTexture(r),
                        e.deleteFramebuffer(a),
                        o
                    }(t, r)
                }
                return !1
            }
            return !!ZB(t, "OES_texture_float") && !!ZB(t, "WEBGL_color_buffer_float") && eF(t)
        }(nF.getNumber("WEBGL_VERSION"))
    }
    )),
    nF.registerFlag("WEBGL_FENCE_API_ENABLED", (function() {
        return 2 === (e = nF.getNumber("WEBGL_VERSION")) && null != _B(e).fenceSync;
        var e
    }
    )),
    nF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM", (function() {
        return nF.getBool("WEBGL_RENDER_FLOAT32_ENABLED") ? 4 : 0
    }
    )),
    nF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD", (function() {
        return -1
    }
    ), (function(e) {
        if (e < 0 && -1 !== e)
            throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ".concat(e, "."))
    }
    ));
    var aF = {
        kernelName: "Abs",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs.x
              , n = e.backend
              , r = new Float32Array(_k(t.shape));
            if ("complex64" !== t.dtype)
                r = rF(n.data.get(t.dataId).values);
            else
                for (var a = n.data.get(t.dataId), o = a.complexTensorInfos.real, i = a.complexTensorInfos.imag, s = n.data.get(o.dataId).values, u = n.data.get(i.dataId).values, c = 0; c < s.length; c++) {
                    var l = s[c]
                      , f = u[c];
                    r[c] = Math.hypot(l, f)
                }
            return n.makeOutput(r, t.shape, "float32")
        }
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function oF(e) {
        return function(t, n, r, a, o) {
            var i = VI(t, n)
              , s = i.length
              , u = Xk(i)
              , c = Uk(o, _k(i))
              , l = t.length
              , f = n.length
              , p = Xk(t)
              , d = Xk(n)
              , h = LI(t, i)
              , m = LI(n, i);
            if (h.length + m.length === 0)
                for (var v = 0; v < c.length; ++v)
                    c[v] = e(r[v % r.length], a[v % a.length]);
            else
                for (var g = function(t) {
                    var n = nC(t, s, u)
                      , o = n.slice(-l);
                    h.forEach((function(e) {
                        return o[e] = 0
                    }
                    ));
                    var i = tC(o, l, p)
                      , v = n.slice(-f);
                    m.forEach((function(e) {
                        return v[e] = 0
                    }
                    ));
                    var g = tC(v, f, d);
                    c[t] = e(r[i], a[g])
                }, y = 0; y < c.length; ++y)
                    g(y);
            return [c, i]
        }
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function iF(e, t) {
        Array.isArray(e) || (e = [e]),
        e.forEach((function(e) {
            null != e && Ik("complex64" !== e.dtype, (function() {
                return "".concat(t, " does not support complex64 tensors in the CPU backend.")
            }
            ))
        }
        ))
        /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    function sF(e) {
        var t = e.inputs
          , n = e.backend
          , r = t.real
          , a = t.imag
          , o = n.data.get(r.dataId).values
          , i = n.data.get(a.dataId).values
          , s = n.makeTensorInfo(r.shape, "complex64");
        return n.data.get(s.dataId).complexTensorInfos = {
            real: n.makeTensorInfo(r.shape, "float32", o),
            imag: n.makeTensorInfo(a.shape, "float32", i)
        },
        s
    }
    var uF = {
        kernelName: "Complex",
        backendName: "cpu",
        kernelFunc: sF
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function cF(e) {
        var t = e.inputs
          , n = e.backend
          , r = t.x;
        return n.incRef(r.dataId),
        {
            dataId: r.dataId,
            shape: r.shape,
            dtype: r.dtype
        }
    }
    var lF = {
        kernelName: "Identity",
        backendName: "cpu",
        kernelFunc: cF
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function fF(e) {
        var t = e.inputs
          , n = e.backend
          , r = t.input
          , a = n.data.get(r.dataId).complexTensorInfos.real
          , o = n.data.get(a.dataId).values;
        return n.makeTensorInfo(a.shape, a.dtype, o)
    }
    var pF = {
        kernelName: "Real",
        backendName: "cpu",
        kernelFunc: fF
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function dF(e) {
        var t = e.inputs
          , n = e.backend
          , r = e.attrs
          , a = t.x
          , o = r.dtype;
        if ("complex64" === o) {
            if ("complex64" === a.dtype)
                return cF({
                    inputs: {
                        x: a
                    },
                    backend: n
                });
            var i = FT(a.shape)
              , s = dF({
                inputs: {
                    x: a
                },
                backend: n,
                attrs: {
                    dtype: "float32"
                }
            })
              , u = sF({
                inputs: {
                    real: s,
                    imag: i
                },
                backend: n
            });
            return i.dispose(),
            n.disposeIntermediateTensorInfo(s),
            u
        }
        if ("complex64" === a.dtype) {
            var c = fF({
                inputs: {
                    input: a
                },
                backend: n
            })
              , l = dF({
                inputs: {
                    x: c
                },
                backend: n,
                attrs: {
                    dtype: o
                }
            });
            return n.disposeIntermediateTensorInfo(c),
            l
        }
        if (!zk(a.dtype, o)) {
            var f = cF({
                inputs: {
                    x: a
                },
                backend: n
            });
            return {
                dataId: f.dataId,
                shape: f.shape,
                dtype: o
            }
        }
        if ("int32" === o) {
            var p = n.data.get(a.dataId).values
              , d = Int32Array.from(p);
            return n.makeTensorInfo(a.shape, "int32", d)
        }
        if ("bool" === o) {
            var h = n.data.get(a.dataId).values
              , m = EC([0], a.dtype)
              , v = Uy(oF((function(e, t) {
                return e !== t ? 1 : 0
            }
            ))(a.shape, [], h, m, "bool"), 2)
              , g = v[0]
              , y = v[1];
            return n.makeTensorInfo(y, "bool", g)
        }
        throw new Error("Error in Cast: failed to cast ".concat(a.dtype, " to ").concat(o))
    }
    var hF = {
        kernelName: "Cast",
        backendName: "cpu",
        kernelFunc: dF
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function mF(e, t, n, r) {
        return null == n ? function(n) {
            var a = n.inputs
              , o = n.backend
              , i = a.a
              , s = a.b
              , u = o;
            iF([i, s], e);
            var c = u.data.get(i.dataId).values
              , l = u.data.get(s.dataId).values
              , f = r || i.dtype
              , p = Uy(t(i.shape, s.shape, c, l, f), 2)
              , d = p[0]
              , h = p[1];
            return u.makeTensorInfo(h, f, d)
        }
        : function(e) {
            var a = e.inputs
              , o = e.backend
              , i = a.a
              , s = a.b
              , u = o;
            if ("complex64" === i.dtype || "complex64" === s.dtype) {
                var c = dF({
                    inputs: {
                        x: i
                    },
                    backend: u,
                    attrs: {
                        dtype: "complex64"
                    }
                })
                  , l = u.data.get(c.dataId)
                  , f = l.complexTensorInfos.real
                  , p = l.complexTensorInfos.imag
                  , d = u.data.get(f.dataId).values
                  , h = u.data.get(p.dataId).values
                  , m = dF({
                    inputs: {
                        x: s
                    },
                    backend: u,
                    attrs: {
                        dtype: "complex64"
                    }
                })
                  , v = u.data.get(m.dataId)
                  , g = v.complexTensorInfos.real
                  , y = v.complexTensorInfos.imag
                  , b = u.data.get(g.dataId).values
                  , x = u.data.get(y.dataId).values
                  , w = Uy(n(i.shape, s.shape, d, h, b, x), 3)
                  , k = w[0]
                  , C = w[1]
                  , E = w[2]
                  , S = u.makeTensorInfo(E, "float32", k)
                  , I = u.makeTensorInfo(E, "float32", C)
                  , T = sF({
                    inputs: {
                        real: S,
                        imag: I
                    },
                    backend: u
                });
                return u.disposeIntermediateTensorInfo(c),
                u.disposeIntermediateTensorInfo(m),
                u.disposeIntermediateTensorInfo(S),
                u.disposeIntermediateTensorInfo(I),
                T
            }
            var A = u.data.get(i.dataId).values
              , N = u.data.get(s.dataId).values
              , _ = r || i.dtype
              , R = Uy(t(i.shape, s.shape, A, N, _), 2)
              , O = R[0]
              , D = R[1];
            return u.makeTensorInfo(D, _, O)
        }
    }
    function vF(e) {
        return function(t, n, r, a, o, i) {
            var s = VI(t, n)
              , u = _k(s)
              , c = s.length
              , l = Xk(s)
              , f = Uk("float32", u)
              , p = Uk("float32", u)
              , d = LI(t, s)
              , h = LI(n, s)
              , m = e_(r, a)
              , v = e_(o, i)
              , g = t.length
              , y = Xk(t)
              , b = n.length
              , x = Xk(n);
            if (d.length + h.length === 0)
                for (var w = 0; w < f.length; w++) {
                    var k = w % m.length
                      , C = w % v.length
                      , E = e(m[2 * k], m[2 * k + 1], v[2 * C], v[2 * C + 1]);
                    f[w] = E.real,
                    p[w] = E.imag
                }
            else
                for (var S = function(t) {
                    var n = nC(t, c, l)
                      , r = n.slice(-g);
                    d.forEach((function(e) {
                        return r[e] = 0
                    }
                    ));
                    var a = tC(r, g, y)
                      , o = n.slice(-b);
                    h.forEach((function(e) {
                        return o[e] = 0
                    }
                    ));
                    var i = tC(o, b, x)
                      , s = e(m[2 * a], m[2 * a + 1], v[2 * i], v[2 * i + 1]);
                    f[t] = s.real,
                    p[t] = s.imag
                }, I = 0; I < f.length; I++)
                    S(I);
            return [f, p, s]
        }
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var gF = oF((function(e, t) {
        return e + t
    }
    ))
      , yF = vF((function(e, t, n, r) {
        return {
            real: e + n,
            imag: t + r
        }
    }
    ))
      , bF = mF(lC, gF, yF)
      , xF = {
        kernelName: lC,
        backendName: "cpu",
        kernelFunc: bF
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function wF(e) {
        return function(t, n, r) {
            for (var a = Uk(n, t.length), o = 0; o < t.length; ++o)
                a[o] = e(t[o], r);
            return a
        }
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function kF(e, t, n) {
        return function(r) {
            var a = r.inputs
              , o = r.attrs
              , i = r.backend
              , s = a.x;
            if (iF(s, e),
            "string" === s.dtype || "string" === n)
                throw new Error("unaryKernelFunc does not support string input/output");
            for (var u = i, c = u.data.get(s.dataId).values, l = _k(s.shape), f = n || s.dtype, p = Vk(f, l), d = 0; d < l; ++d)
                p[d] = t(c[d], o);
            return u.makeTensorInfo(s.shape, f, p)
        }
    }
    function CF(e, t, n) {
        return function(r) {
            var a = r.inputs
              , o = r.attrs
              , i = r.backend
              , s = a.x;
            if (iF(s, e),
            "string" === s.dtype || "string" === n)
                throw new Error("unaryKernelFunc does not support string input/output");
            var u = i
              , c = u.data.get(s.dataId).values
              , l = n || s.dtype
              , f = t(c, l, o);
            return u.makeTensorInfo(s.shape, l, f)
        }
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the License);
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an AS IS BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var EF = wF((function(e) {
        return Math.ceil(e)
    }
    ))
      , SF = {
        kernelName: "Ceil",
        backendName: "cpu",
        kernelFunc: CF("Ceil", EF)
    }
      , IF = wF((function(e) {
        return Math.exp(e)
    }
    ))
      , TF = {
        kernelName: "Exp",
        backendName: "cpu",
        kernelFunc: CF("Exp", IF)
    }
      , AF = wF((function(e) {
        return Math.expm1(e)
    }
    ))
      , NF = {
        kernelName: "Expm1",
        backendName: "cpu",
        kernelFunc: CF("Expm1", AF)
    }
      , _F = wF((function(e) {
        return Math.floor(e)
    }
    ))
      , RF = {
        kernelName: "Floor",
        backendName: "cpu",
        kernelFunc: CF("Floor", _F)
    }
      , OF = wF((function(e) {
        return Math.log(e)
    }
    ))
      , DF = {
        kernelName: "Log",
        backendName: "cpu",
        kernelFunc: CF("Log", OF)
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function BF(e, t, n, r) {
        for (var a = Uk(r, _k(n)), o = 0; o < a.length; ++o) {
            for (var i = o * t, s = e[i], u = 0; u < t; ++u) {
                var c = e[i + u];
                c > s && (s = c)
            }
            a[o] = s
        }
        return a
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var FF = oF((function(e, t) {
        return e * t
    }
    ))
      , MF = mF("Multiply", FF, vF((function(e, t, n, r) {
        return {
            real: e * n - t * r,
            imag: e * r + t * n
        }
    }
    )))
      , PF = {
        kernelName: "Multiply",
        backendName: "cpu",
        kernelFunc: MF
    }
      , LF = oF((function(e, t) {
        return e !== t ? 1 : 0
    }
    ))
      , UF = {
        kernelName: "NotEqual",
        backendName: "cpu",
        kernelFunc: mF("NotEqual", LF, null, "bool")
    }
      , VF = wF((function(e) {
        return 1 / Math.sqrt(e)
    }
    ))
      , zF = {
        kernelName: "Rsqrt",
        backendName: "cpu",
        kernelFunc: CF("Rsqrt", VF)
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function WF(e, t, n, r, a) {
        var o = gS(r, t, n)
          , i = _k(n)
          , s = Xk(r);
        if (o) {
            var u = yS(t, s);
            return e.subarray(u, u + i)
        }
        for (var c = Uk(a, i), l = 0; l < i; ++l) {
            var f = tC(nC(l, n.length, Xk(n)).map((function(e, n) {
                return e + t[n]
            }
            )), r.length, s);
            c[l] = e[f]
        }
        return c
    }
    function jF(e) {
        var t = e.inputs
          , n = e.backend
          , r = e.attrs
          , a = t.x
          , o = r.begin
          , i = r.size;
        iF(a, "slice");
        var s = Uy(bS(a, o, i), 2)
          , u = s[0]
          , c = s[1];
        oS(a, u, c);
        var l = WF(n.data.get(a.dataId).values, u, c, a.shape, a.dtype);
        return n.makeTensorInfo(c, a.dtype, l)
    }
    var HF = {
        kernelName: "Slice",
        backendName: "cpu",
        kernelFunc: jF
    }
      , GF = oF((function(e, t) {
        var n = e - t;
        return n * n
    }
    ))
      , KF = {
        kernelName: "SquaredDifference",
        backendName: "cpu",
        kernelFunc: mF("SquaredDifference", GF)
    }
      , qF = oF((function(e, t) {
        return e - t
    }
    ))
      , XF = vF((function(e, t, n, r) {
        return {
            real: e - n,
            imag: t - r
        }
    }
    ))
      , QF = mF(mC, qF, XF)
      , YF = {
        kernelName: mC,
        backendName: "cpu",
        kernelFunc: QF
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function $F(e, t, n, r, a) {
        for (var o = t.length, i = _k(t), s = Xk(t), u = Xk(a), c = Uk(n, _k(a)), l = 0; l < i; ++l) {
            for (var f = nC(l, o, s), p = new Array(f.length), d = 0; d < p.length; d++)
                p[d] = f[r[d]];
            c[tC(p, o, u)] = e[l]
        }
        return c
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function ZF(e, t, n, r) {
        for (var a = Pk(t, n)[0], o = [1, n[0], 1], i = 0; i < a; i++)
            o[0] *= n[i];
        o[1] = n[a];
        for (var s = a + 1; s < n.length; s++)
            o[2] *= n[s];
        for (var u = {}, c = new Int32Array(n[a]), l = new FC(o,r,e), f = [], p = 1 === o[0] && 1 === o[2], d = 0; d < n[a]; d++) {
            var h = void 0;
            if (p)
                h = e[d].toString();
            else {
                for (var m = [], v = 0; v < o[0]; v++)
                    for (var g = 0; g < o[2]; g++)
                        m.push(l.get(v, d, g));
                h = m.join(",")
            }
            if (void 0 !== u[h])
                c[d] = u[h];
            else {
                var y = Object.keys(u).length;
                u[h] = y,
                c[d] = y,
                f.push(d)
            }
        }
        var b = o.slice();
        b[1] = Object.keys(u).length;
        var x = new FC(b,r);
        f.forEach((function(e, t) {
            for (var n = 0; n < o[0]; n++)
                for (var r = 0; r < o[2]; r++)
                    x.set(l.get(n, e, r), n, t, r)
        }
        ));
        var w = n.slice();
        return w[a] = b[1],
        {
            outputValues: x.values,
            outputShape: w,
            indices: c
        }
        /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    var JF = Object.freeze({
        __proto__: null,
        simpleAbsImpl: rF,
        addImpl: gF,
        ceilImpl: EF,
        expImpl: IF,
        expm1Impl: AF,
        floorImpl: _F,
        logImpl: OF,
        maxImpl: BF,
        multiplyImpl: FF,
        notEqualImpl: LF,
        rsqrtImpl: VF,
        sliceImpl: WF,
        squaredDifferenceImpl: GF,
        subImpl: qF,
        transposeImpl: $F,
        uniqueImpl: ZF
    })
      , eM = JF.simpleAbsImpl
      , tM = JF.addImpl
      , nM = JF.ceilImpl
      , rM = JF.expImpl
      , aM = JF.expm1Impl
      , oM = JF.floorImpl
      , iM = JF.logImpl
      , sM = JF.maxImpl
      , uM = JF.multiplyImpl
      , cM = JF.rsqrtImpl
      , lM = JF.sliceImpl
      , fM = JF.subImpl
      , pM = JF.transposeImpl
      , dM = JF.uniqueImpl
      , hM = function e(t, n) {
        Ay(this, e),
        this.outputShape = [],
        this.outputShape = t,
        this.variableNames = n.map((function(e, t) {
            return "T".concat(t)
        }
        ));
        var r = [];
        this.variableNames.forEach((function(e) {
            r.push("float v".concat(e, " = get").concat(e, "AtOutCoords();"))
        }
        ));
        var a = this.variableNames.map((function(e) {
            return "v".concat(e)
        }
        )).join(" + ");
        this.userCode = "\n      void main() {\n        ".concat(r.join("\n        "), "\n\n        float result = ").concat(a, ";\n        setOutput(result);\n      }\n    ")
    }
      , mM = function e(t, n) {
        Ay(this, e),
        this.outputShape = [],
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = t,
        this.variableNames = n.map((function(e, t) {
            return "T".concat(t)
        }
        ));
        var r = [];
        this.variableNames.forEach((function(e) {
            r.push("vec4 v".concat(e, " = get").concat(e, "AtOutCoords();"))
        }
        ));
        var a = this.variableNames.map((function(e) {
            return "v".concat(e)
        }
        )).join(" + ");
        this.userCode = "\n      void main() {\n        ".concat(r.join("\n        "), "\n\n        vec4 result = ").concat(a, ";\n        setOutput(result);\n      }\n    ")
    }
      , vM = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["A"];
        var a = t.windowSize
          , o = t.batchSize
          , i = t.outSize;
        r || this.variableNames.push("bestIndicesA"),
        this.outputShape = [o, i];
        var s = "max" === n ? ">" : "<"
          , u = r ? "inOffset + i;" : "round(getBestIndicesA(batch, inOffset + i));";
        this.userCode = "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a, ";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a, "; i++) {\n          int inIdx = ").concat(u, ";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(s, " bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function gM(e, t) {
        return ["x", "y", "z", "w", "u", "v"].slice(0, t).map((function(t) {
            return "".concat(e, ".").concat(t)
        }
        ))
    }
    function yM(e, t) {
        return 1 === t ? [e] : gM(e, t)
    }
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function bM() {
        var e, t, n, r, a, o, i, s, u, c;
        return 2 === oC().getNumber("WEBGL_VERSION") ? (e = "#version 300 es",
        t = "in",
        n = "out",
        r = "in",
        a = "texture",
        o = "outputColor",
        i = "out vec4 outputColor;",
        s = "\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",
        u = "",
        c = "\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    ") : (e = "",
        t = "attribute",
        n = "varying",
        r = "varying",
        a = "texture2D",
        o = "gl_FragColor",
        i = "",
        s = "\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",
        u = "\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",
        c = "\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),
        {
            version: e,
            attribute: t,
            varyingVs: n,
            varyingFs: r,
            texture2D: a,
            output: o,
            defineOutput: i,
            defineSpecialNaN: s,
            defineSpecialInf: u,
            defineRound: c
        }
        /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    function xM(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "index"
          , r = Xk(t);
        return r.map((function(t, a) {
            return "".concat("int ".concat(e[a], " = ").concat(n, " / ").concat(t), "; ", a === r.length - 1 ? "int ".concat(e[a + 1], " = ").concat(n, " - ").concat(e[a], " * ").concat(t) : "index -= ".concat(e[a], " * ").concat(t), ";")
        }
        )).join("")
    }
    function wM(e) {
        var t = Xk(e).map((function(e) {
            return e.toString()
        }
        ));
        return "\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0], " + coords.y * ").concat(t[1], " + coords.z;\n  }\n")
    }
    var kM = "\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n"
      , CM = l_.getBroadcastDims;
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function EM(e, t, n, r) {
        var a = [];
        e.forEach((function(e) {
            var t = _k(e.shapeInfo.logicalShape);
            e.shapeInfo.isUniform ? a.push("uniform float ".concat(e.name).concat(t > 1 ? "[".concat(t, "]") : "", ";")) : (a.push("uniform sampler2D ".concat(e.name, ";")),
            a.push("uniform int offset".concat(e.name, ";")))
        }
        ));
        var o, i, s = a.join("\n"), u = e.map((function(e) {
            return function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
                  , r = "";
                r += n ? IM(e) : SM(e);
                var a = e.shapeInfo.logicalShape
                  , o = t.logicalShape;
                return a.length <= o.length && (r += n ? function(e, t) {
                    var n, r = e.name, a = r.charAt(0).toUpperCase() + r.slice(1), o = "get" + a + "AtOutCoords", i = e.shapeInfo.logicalShape.length, s = t.logicalShape.length, u = CM(e.shapeInfo.logicalShape, t.logicalShape), c = DM(s), l = s - i, f = ["x", "y", "z", "w", "u", "v"];
                    n = 0 === i ? "" : s < 2 && u.length >= 1 ? "coords = 0;" : u.map((function(e) {
                        return "coords.".concat(f[e + l], " = 0;")
                    }
                    )).join("\n");
                    var p;
                    p = s < 2 && i > 0 ? "coords" : e.shapeInfo.logicalShape.map((function(e, t) {
                        return "coords.".concat(f[t + l])
                    }
                    )).join(", ");
                    var d = "return outputValue;"
                      , h = 1 === _k(e.shapeInfo.logicalShape)
                      , m = 1 === _k(t.logicalShape);
                    if (1 !== i || h || m) {
                        if (h && !m)
                            d = 1 === s ? "\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      " : "\n        return vec4(outputValue.x);\n      ";
                        else if (u.length) {
                            var v = i - 2
                              , g = i - 1;
                            u.indexOf(v) > -1 && u.indexOf(g) > -1 ? d = "return vec4(outputValue.x);" : u.indexOf(v) > -1 ? d = "return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);" : u.indexOf(g) > -1 && (d = "return vec4(outputValue.xx, outputValue.zz);")
                        }
                    } else
                        d = "\n      return vec4(outputValue.xy, outputValue.xy);\n    ";
                    return "\n    vec4 ".concat(o, "() {\n      ").concat(c, " coords = getOutputCoords();\n      ").concat(n, "\n      vec4 outputValue = get").concat(a, "(").concat(p, ");\n      ").concat(d, "\n    }\n  ")
                }(e, t) : function(e, t) {
                    var n = e.name
                      , r = n.charAt(0).toUpperCase() + n.slice(1)
                      , a = "get" + r + "AtOutCoords"
                      , o = t.texShape
                      , i = e.shapeInfo.texShape
                      , s = e.shapeInfo.logicalShape.length
                      , u = t.logicalShape.length;
                    if (!e.shapeInfo.isUniform && s === u && null == e.shapeInfo.flatOffset && Rk(i, o))
                        return "\n      float ".concat(a, "() {\n        return sampleTexture(").concat(n, ", resultUV);\n      }\n    ");
                    var c, l = DM(u), f = CM(e.shapeInfo.logicalShape, t.logicalShape), p = u - s, d = ["x", "y", "z", "w", "u", "v"];
                    c = 0 === s ? "" : u < 2 && f.length >= 1 ? "coords = 0;" : f.map((function(e) {
                        return "coords.".concat(d[e + p], " = 0;")
                    }
                    )).join("\n");
                    var h;
                    return h = u < 2 && s > 0 ? "coords" : e.shapeInfo.logicalShape.map((function(e, t) {
                        return "coords.".concat(d[t + p])
                    }
                    )).join(", "),
                    "\n    float ".concat(a, "() {\n      ").concat(l, " coords = getOutputCoords();\n      ").concat(c, "\n      return get").concat(r, "(").concat(h, ");\n    }\n  ")
                }(e, t)),
                r
            }(e, t, r)
        }
        )).join("\n"), c = t.texShape, l = bM(), f = function(e) {
            return "\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D, "(textureSampler, uv).r;\n    }\n  ")
        }(l), p = function(e) {
            return "".concat(e.version, "\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs, " vec2 resultUV;\n    ").concat(e.defineOutput, "\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN, "\n    ").concat(e.defineSpecialInf, "\n    ").concat(e.defineRound, "\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(TM, "\n    ").concat(AM, "\n    ").concat(NM, "\n  ")
        }(l);
        return t.isPacked ? (o = function(e, t) {
            switch (e.length) {
            case 0:
                return "\n    int getOutputCoords() {\n      return 0;\n    }\n  ";
            case 1:
                return function(e, t) {
                    var n = [Math.ceil(t[0] / 2), Math.ceil(t[1] / 2)];
                    return 1 === n[0] ? "\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(n[1], ".0);\n      }\n    ") : 1 === n[1] ? "\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(n[0], ".0);\n      }\n    ") : "\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0], ", ").concat(n[1], "));\n      return 2 * (resTexRC.x * ").concat(n[1], " + resTexRC.y);\n    }\n  ")
                }(0, t);
            case 2:
                return function(e, t) {
                    var n = [Math.ceil(t[0] / 2), Math.ceil(t[1] / 2)];
                    if (Rk(e, t))
                        return "\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(n[0], ", ").concat(n[1], "));\n      }\n    ");
                    var r = Math.ceil(e[1] / 2);
                    return "\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0], ", ").concat(n[1], "));\n\n      int index = resTexRC.x * ").concat(n[1], " + resTexRC.y;\n      int r = 2 * (index / ").concat(r, ");\n      int c = imod(index, ").concat(r, ") * 2;\n\n      return ivec2(r, c);\n    }\n  ")
                }(e, t);
            case 3:
                return function(e, t) {
                    var n = [Math.ceil(t[0] / 2), Math.ceil(t[1] / 2)]
                      , r = Math.ceil(e[2] / 2)
                      , a = r * Math.ceil(e[1] / 2);
                    return "\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0], ", ").concat(n[1], "));\n      int index = resTexRC.x * ").concat(n[1], " + resTexRC.y;\n\n      int b = index / ").concat(a, ";\n      index -= b * ").concat(a, ";\n\n      int r = 2 * (index / ").concat(r, ");\n      int c = imod(index, ").concat(r, ") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")
                }(e, t);
            default:
                return function(e, t) {
                    for (var n = [Math.ceil(t[0] / 2), Math.ceil(t[1] / 2)], r = Math.ceil(e[e.length - 1] / 2), a = r * Math.ceil(e[e.length - 2] / 2), o = a, i = "", s = "b, r, c", u = 2; u < e.length - 1; u++)
                        o *= e[e.length - u - 1],
                        i = "\n      int b".concat(u, " = index / ").concat(o, ";\n      index -= b").concat(u, " * ").concat(o, ";\n    ") + i,
                        s = "b".concat(u, ", ") + s;
                    return "\n    ivec".concat(e.length, " getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(n[0], ", ").concat(n[1], "));\n      int index = resTexRC.x * ").concat(n[1], " + resTexRC.y;\n\n      ").concat(i, "\n\n      int b = index / ").concat(a, ";\n      index -= b * ").concat(a, ";\n\n      int r = 2 * (index / ").concat(r, ");\n      int c = imod(index, ").concat(r, ") * 2;\n\n      return ivec").concat(e.length, "(").concat(s, ");\n    }\n  ")
                }(e, t)
            }
        }(t.logicalShape, c),
        i = function(e) {
            return "\n    void setOutput(vec4 val) {\n      ".concat(e.output, " = val;\n    }\n  ")
        }(l)) : (o = function(e, t) {
            switch (e.length) {
            case 0:
                return "\n    int getOutputCoords() {\n      return 0;\n    }\n  ";
            case 1:
                return function(e, t) {
                    return 1 === t[0] ? "\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1], ".0);\n      }\n    ") : 1 === t[1] ? "\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0], ".0);\n      }\n    ") : "\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0], ", ").concat(t[1], "));\n      return resTexRC.x * ").concat(t[1], " + resTexRC.y;\n    }\n  ")
                }(0, t);
            case 2:
                return function(e, t) {
                    return Rk(e, t) ? "\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0], ", ").concat(t[1], "));\n      }\n    ") : 1 === e[1] ? "\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0], ", ").concat(t[1], "));\n        int index = resTexRC.x * ").concat(t[1], " + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ") : 1 === e[0] ? "\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0], ", ").concat(t[1], "));\n        int index = resTexRC.x * ").concat(t[1], " + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ") : "\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0], ", ").concat(t[1], "));\n      int index = resTexRC.x * ").concat(t[1], " + resTexRC.y;\n      int r = index / ").concat(e[1], ";\n      int c = index - r * ").concat(e[1], ";\n      return ivec2(r, c);\n    }\n  ")
                }(e, t);
            case 3:
                return function(e, t) {
                    var n = xM(["r", "c", "d"], e);
                    return "\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0], ", ").concat(t[1], "));\n      int index = resTexRC.x * ").concat(t[1], " + resTexRC.y;\n      ").concat(n, "\n      return ivec3(r, c, d);\n    }\n  ")
                }(e, t);
            case 4:
                return function(e, t) {
                    var n = xM(["r", "c", "d", "d2"], e);
                    return "\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0], ", ").concat(t[1], "));\n      int index = resTexRC.x * ").concat(t[1], " + resTexRC.y;\n      ").concat(n, "\n      return ivec4(r, c, d, d2);\n    }\n  ")
                }(e, t);
            case 5:
                return function(e, t) {
                    var n = xM(["r", "c", "d", "d2", "d3"], e);
                    return "\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0], ",\n                             ").concat(t[1], "));\n\n      int index = resTexRC.x * ").concat(t[1], " + resTexRC.y;\n\n      ").concat(n, "\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")
                }(e, t);
            case 6:
                return function(e, t) {
                    var n = xM(["r", "c", "d", "d2", "d3", "d4"], e);
                    return "\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0], ", ").concat(t[1], "));\n      int index = resTexRC.x * ").concat(t[1], " + resTexRC.y;\n\n      ").concat(n, "\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")
                }(e, t);
            default:
                throw new Error("".concat(e.length, "-D output sampling is not yet supported"))
            }
        }(t.logicalShape, c),
        i = function(e) {
            return "\n    void setOutput(float val) {\n      ".concat(e.output, " = vec4(val, 0, 0, 0);\n    }\n  ")
        }(l)),
        r && (p += _M),
        [p, f, i, s, o, u, n].join("\n")
    }
    function SM(e) {
        var t = e.shapeInfo.logicalShape;
        switch (t.length) {
        case 0:
            return function(e) {
                var t = e.name
                  , n = "get" + t.charAt(0).toUpperCase() + t.slice(1);
                if (e.shapeInfo.isUniform)
                    return "float ".concat(n, "() {return ").concat(t, ";}");
                var r = Uy(e.shapeInfo.texShape, 2)
                  , a = r[0]
                  , o = r[1];
                if (1 === a && 1 === o)
                    return "\n      float ".concat(n, "() {\n        return sampleTexture(").concat(t, ", halfCR);\n      }\n    ");
                var i = Uy(e.shapeInfo.texShape, 2)
                  , s = i[0]
                  , u = i[1]
                  , c = RM(t);
                return "\n    float ".concat(n, "() {\n      vec2 uv = uvFromFlat(").concat(s, ", ").concat(u, ", ").concat(c, ");\n      return sampleTexture(").concat(t, ", uv);\n    }\n  ")
            }(e);
        case 1:
            return function(e) {
                var t = e.name
                  , n = "get" + t.charAt(0).toUpperCase() + t.slice(1);
                if (e.shapeInfo.isUniform)
                    return "\n      float ".concat(n, "(int index) {\n        ").concat(OM(e), "\n      }\n    ");
                var r = e.shapeInfo.texShape
                  , a = r[0]
                  , o = r[1];
                if (1 === o && 1 === a)
                    return "\n      float ".concat(n, "(int index) {\n        return sampleTexture(").concat(t, ", halfCR);\n      }\n    ");
                var i = RM(t);
                return 1 === o ? "\n      float ".concat(n, "(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i, ") + 0.5) / ").concat(a, ".0);\n        return sampleTexture(").concat(t, ", uv);\n      }\n    ") : 1 === a ? "\n      float ".concat(n, "(int index) {\n        vec2 uv = vec2((float(index + ").concat(i, ") + 0.5) / ").concat(o, ".0, 0.5);\n        return sampleTexture(").concat(t, ", uv);\n      }\n    ") : "\n    float ".concat(n, "(int index) {\n      vec2 uv = uvFromFlat(").concat(a, ", ").concat(o, ", index + ").concat(i, ");\n      return sampleTexture(").concat(t, ", uv);\n    }\n  ")
            }(e);
        case 2:
            return function(e) {
                var t = e.shapeInfo.logicalShape
                  , n = e.name
                  , r = "get" + n.charAt(0).toUpperCase() + n.slice(1)
                  , a = e.shapeInfo.texShape;
                if (null != a && Rk(t, a)) {
                    var o = a[0];
                    return "\n    float ".concat(r, "(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a[1], ".0, ").concat(o, ".0);\n      return sampleTexture(").concat(n, ", uv);\n    }\n  ")
                }
                var i = Lk(t)
                  , s = i.newShape
                  , u = i.keptDims
                  , c = s;
                if (c.length < t.length) {
                    return "\n      ".concat(SM(BM(e, c)), "\n      float ").concat(r, "(int row, int col) {\n        return ").concat(r, "(").concat(FM(["row", "col"], u), ");\n      }\n    ")
                }
                if (e.shapeInfo.isUniform)
                    return "\n      float ".concat(r, "(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(t[1], ", 1)));\n        ").concat(OM(e), "\n      }\n    ");
                var l = a[0]
                  , f = a[1]
                  , p = RM(n);
                return 1 === f ? "\n    float ".concat(r, "(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(p, "), vec3(").concat(t[1], ", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l, ".0);\n      return sampleTexture(").concat(n, ", uv);\n    }\n  ") : 1 === l ? "\n    float ".concat(r, "(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(p, "), vec3(").concat(t[1], ", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(f, ".0, 0.5);\n      return sampleTexture(").concat(n, ", uv);\n    }\n  ") : "\n  float ".concat(r, "(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(t[1], " + col + ").concat(p, ";\n    vec2 uv = uvFromFlat(").concat(l, ", ").concat(f, ", index);\n    return sampleTexture(").concat(n, ", uv);\n  }\n")
            }(e);
        case 3:
            return function(e) {
                var t = e.shapeInfo.logicalShape
                  , n = e.name
                  , r = "get" + n.charAt(0).toUpperCase() + n.slice(1)
                  , a = t[1] * t[2]
                  , o = t[2]
                  , i = Lk(t)
                  , s = i.newShape
                  , u = i.keptDims
                  , c = s;
                if (c.length < t.length) {
                    return "\n        ".concat(SM(BM(e, c)), "\n        float ").concat(r, "(int row, int col, int depth) {\n          return ").concat(r, "(").concat(FM(["row", "col", "depth"], u), ");\n        }\n      ")
                }
                if (e.shapeInfo.isUniform)
                    return "\n      float ".concat(r, "(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(a, ", ").concat(o, ", 1)));\n        ").concat(OM(e), "\n      }\n    ");
                var l = e.shapeInfo.texShape
                  , f = l[0]
                  , p = l[1]
                  , d = e.shapeInfo.flatOffset;
                if (p === a && null == d)
                    return "\n        float ".concat(r, "(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o, ", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p, ".0, ").concat(f, ".0);\n          return sampleTexture(").concat(n, ", uv);\n        }\n      ");
                if (p === o && null == d)
                    return "\n    float ".concat(r, "(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(t[1], ", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p, ".0, ").concat(f, ".0);\n      return sampleTexture(").concat(n, ", uv);\n    }\n  ");
                var h = RM(n);
                return "\n      float ".concat(r, "(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a, " + col * ").concat(o, " + depth + ").concat(h, ";\n        vec2 uv = uvFromFlat(").concat(f, ", ").concat(p, ", index);\n        return sampleTexture(").concat(n, ", uv);\n      }\n  ")
            }(e);
        case 4:
            return function(e) {
                var t = e.shapeInfo.logicalShape
                  , n = e.name
                  , r = "get" + n.charAt(0).toUpperCase() + n.slice(1)
                  , a = t[3]
                  , o = t[2] * a
                  , i = t[1] * o
                  , s = Lk(t)
                  , u = s.newShape
                  , c = s.keptDims;
                if (u.length < t.length) {
                    return "\n      ".concat(SM(BM(e, u)), "\n      float ").concat(r, "(int row, int col, int depth, int depth2) {\n        return ").concat(r, "(").concat(FM(["row", "col", "depth", "depth2"], c), ");\n      }\n    ")
                }
                if (e.shapeInfo.isUniform)
                    return "\n      float ".concat(r, "(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i, ", ").concat(o, ", ").concat(a, ", 1)));\n        ").concat(OM(e), "\n      }\n    ");
                var l = e.shapeInfo.flatOffset
                  , f = e.shapeInfo.texShape
                  , p = f[0]
                  , d = f[1];
                if (d === i && null == l)
                    return "\n      float ".concat(r, "(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o, ", ").concat(a, ", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(d, ".0, ").concat(p, ".0);\n        return sampleTexture(").concat(n, ", uv);\n      }\n    ");
                if (d === a && null == l)
                    return "\n      float ".concat(r, "(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(t[1] * t[2], ", ").concat(t[2], ", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(d, ".0, ").concat(p, ".0);\n        return sampleTexture(").concat(n, ", uv);\n      }\n    ");
                var h = RM(n);
                return "\n    float ".concat(r, "(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i, " + col * ").concat(o, " +\n          depth * ").concat(a, " + depth2;\n      vec2 uv = uvFromFlat(").concat(p, ", ").concat(d, ", index + ").concat(h, ");\n      return sampleTexture(").concat(n, ", uv);\n    }\n  ")
            }(e);
        case 5:
            return function(e) {
                var t = e.shapeInfo.logicalShape
                  , n = e.name
                  , r = "get" + n.charAt(0).toUpperCase() + n.slice(1)
                  , a = t[4]
                  , o = t[3] * a
                  , i = t[2] * o
                  , s = t[1] * i
                  , u = Lk(t)
                  , c = u.newShape
                  , l = u.keptDims;
                if (c.length < t.length) {
                    return "\n      ".concat(SM(BM(e, c)), "\n      float ").concat(r, "(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(r, "(").concat(FM(["row", "col", "depth", "depth2", "depth3"], l), ");\n      }\n    ")
                }
                if (e.shapeInfo.isUniform)
                    return "\n      float ".concat(r, "(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(s, ", ").concat(i, ", ").concat(o, ", ").concat(a, ")) +\n          depth3;\n        ").concat(OM(e), "\n      }\n    ");
                var f = e.shapeInfo.flatOffset
                  , p = e.shapeInfo.texShape
                  , d = p[0]
                  , h = p[1];
                if (h === s && null == f)
                    return "\n      float ".concat(r, "(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i, ", ").concat(o, ", ").concat(a, ", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(h, ".0, ").concat(d, ".0);\n        return sampleTexture(").concat(n, ", uv);\n      }\n    ");
                if (h === a && null == f)
                    return "\n      float ".concat(r, "(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1] * t[2] * t[3], ",\n               ").concat(t[2] * t[3], ", ").concat(t[3], ", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(h, ".0, ").concat(d, ".0);\n        return sampleTexture(").concat(n, ", uv);\n      }\n    ");
                var m = RM(n);
                return "\n    float ".concat(r, "(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(s, " + col * ").concat(i, " + depth * ").concat(o, " +\n          depth2 * ").concat(a, " + depth3 + ").concat(m, ";\n      vec2 uv = uvFromFlat(").concat(d, ", ").concat(h, ", index);\n      return sampleTexture(").concat(n, ", uv);\n    }\n  ")
            }(e);
        case 6:
            return function(e) {
                var t = e.shapeInfo.logicalShape
                  , n = e.name
                  , r = "get" + n.charAt(0).toUpperCase() + n.slice(1)
                  , a = Lk(t)
                  , o = a.newShape
                  , i = a.keptDims;
                if (o.length < t.length) {
                    return "\n      ".concat(SM(BM(e, o)), "\n      float ").concat(r, "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(r, "(").concat(FM(["row", "col", "depth", "depth2", "depth3", "depth4"], i), ");\n      }\n    ")
                }
                var s = t[5]
                  , u = t[4] * s
                  , c = t[3] * u
                  , l = t[2] * c
                  , f = t[1] * l;
                if (e.shapeInfo.isUniform)
                    return "\n      float ".concat(r, "(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(f, ", ").concat(l, ", ").concat(c, ", ").concat(u, ")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(s, ", 1)));\n        ").concat(OM(e), "\n      }\n    ");
                var p = e.shapeInfo.flatOffset
                  , d = e.shapeInfo.texShape
                  , h = d[0]
                  , m = d[1];
                if (m === f && null == p)
                    return "\n      float ".concat(r, "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l, ", ").concat(c, ", ").concat(u, ", ").concat(s, ")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(m, ".0, ").concat(h, ".0);\n        return sampleTexture(").concat(n, ", uv);\n      }\n    ");
                if (m === s && null == p)
                    return "\n      float ".concat(r, "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1] * t[2] * t[3] * t[4], ",\n               ").concat(t[2] * t[3] * t[4], ",\n               ").concat(t[3] * t[4], ",\n               ").concat(t[4], ")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(m, ".0, ").concat(h, ".0);\n        return sampleTexture(").concat(n, ", uv);\n      }\n    ");
                var v = RM(n);
                return "\n    float ".concat(r, "(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(f, " + col * ").concat(l, " + depth * ").concat(c, " +\n          depth2 * ").concat(u, " + depth3 * ").concat(s, " + depth4 + ").concat(v, ";\n      vec2 uv = uvFromFlat(").concat(h, ", ").concat(m, ", index);\n      return sampleTexture(").concat(n, ", uv);\n    }\n  ")
            }(e);
        default:
            throw new Error("".concat(t.length, "-D input sampling is not yet supported"))
        }
    }
    function IM(e) {
        switch (e.shapeInfo.logicalShape.length) {
        case 0:
            return function(e) {
                var t = e.name
                  , n = "get" + t.charAt(0).toUpperCase() + t.slice(1)
                  , r = bM();
                return "\n    vec4 ".concat(n, "() {\n      return ").concat(r.texture2D, "(").concat(t, ", halfCR);\n    }\n  ")
            }(e);
        case 1:
            return function(e) {
                var t = e.name
                  , n = "get" + t.charAt(0).toUpperCase() + t.slice(1)
                  , r = e.shapeInfo.texShape
                  , a = [Math.ceil(r[0] / 2), Math.ceil(r[1] / 2)]
                  , o = bM();
                return "\n    vec4 ".concat(n, "(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(a[0], ", ").concat(a[1], ", index);\n      return ").concat(o.texture2D, "(").concat(t, ", uv);\n    }\n  ")
            }(e);
        case 2:
            return function(e) {
                var t = e.shapeInfo.logicalShape
                  , n = e.name
                  , r = "get" + n.charAt(0).toUpperCase() + n.slice(1)
                  , a = e.shapeInfo.texShape
                  , o = a[0]
                  , i = a[1]
                  , s = bM();
                if (null != a && Rk(t, a))
                    return "\n      vec4 ".concat(r, "(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i, ".0, ").concat(o, ".0);\n\n        return ").concat(s.texture2D, "(").concat(n, ", uv);\n      }\n    ");
                var u = [Math.ceil(a[0] / 2), Math.ceil(a[1] / 2)]
                  , c = Math.ceil(t[1] / 2);
                return "\n    vec4 ".concat(r, "(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(c, ", ").concat(u[0], ", ").concat(u[1], ", row, col);\n      return ").concat(s.texture2D, "(").concat(n, ", uv);\n    }\n  ")
            }(e);
        case 3:
            return function(e) {
                var t = e.shapeInfo.logicalShape
                  , n = e.name
                  , r = "get" + n.charAt(0).toUpperCase() + n.slice(1)
                  , a = e.shapeInfo.texShape
                  , o = [Math.ceil(a[0] / 2), Math.ceil(a[1] / 2)];
                if (1 === t[0]) {
                    return "\n        ".concat(IM(BM(e, t.slice(1))), "\n        vec4 ").concat(r, "(int b, int row, int col) {\n          return ").concat(r, "(").concat(FM(["b", "row", "col"], [1, 2]), ");\n        }\n      ")
                }
                var i = o[0]
                  , s = o[1]
                  , u = Math.ceil(t[2] / 2)
                  , c = u * Math.ceil(t[1] / 2)
                  , l = bM();
                return "\n    vec4 ".concat(r, "(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(i, ", ").concat(s, ", ").concat(c, ", ").concat(u, ", b, row, col);\n      return ").concat(l.texture2D, "(").concat(n, ", uv);\n    }\n  ")
            }(e);
        default:
            return function(e) {
                for (var t = e.shapeInfo.logicalShape, n = t.length, r = e.name, a = "get" + r.charAt(0).toUpperCase() + r.slice(1), o = e.shapeInfo.texShape, i = [Math.ceil(o[0] / 2), Math.ceil(o[1] / 2)], s = i[0], u = i[1], c = Math.ceil(t[n - 1] / 2), l = c * Math.ceil(t[n - 2] / 2), f = "int b, int row, int col", p = "b * ".concat(l, " + (row / 2) * ").concat(c, " + (col / 2)"), d = 2; d < n - 1; d++)
                    f = "int b".concat(d, ", ") + f,
                    l *= t[n - d - 1],
                    p = "b".concat(d, " * ").concat(l, " + ") + p;
                var h = bM();
                return "\n    vec4 ".concat(a, "(").concat(f, ") {\n      int index = ").concat(p, ";\n      int texR = index / ").concat(u, ";\n      int texC = index - texR * ").concat(u, ";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u, ", ").concat(s, ");\n      return ").concat(h.texture2D, "(").concat(r, ", uv);\n    }\n  ")
            }(e)
        }
    }
    var TM = "\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n"
      , AM = "\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n"
      , NM = "\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n"
      , _M = "\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";
    function RM(e) {
        return "offset".concat(e)
    }
    function OM(e) {
        var t = e.name
          , n = _k(e.shapeInfo.logicalShape);
        return n < 2 ? "return ".concat(t, ";") : "\n    for (int i = 0; i < ".concat(n, "; i++) {\n      if (i == index) {\n        return ").concat(t, "[i];\n      }\n    }\n  ")
    }
    function DM(e) {
        if (e <= 1)
            return "int";
        if (2 === e)
            return "ivec2";
        if (3 === e)
            return "ivec3";
        if (4 === e)
            return "ivec4";
        if (5 === e)
            return "ivec5";
        if (6 === e)
            return "ivec6";
        throw Error("GPU for rank ".concat(e, " is not yet supported"))
    }
    function BM(e, t) {
        var n = JSON.parse(JSON.stringify(e));
        return n.shapeInfo.logicalShape = t,
        n
    }
    function FM(e, t) {
        return t.map((function(t) {
            return e[t]
        }
        )).join(", ")
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var MM = function e(t, n, r, a) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !0,
        this.packedOutput = !0,
        Ik(t.length > 2, (function() {
            return "Packed arg".concat(r.charAt(0).toUpperCase() + r.slice(1), " supports only inputs with rank above 2.")
        }
        ));
        var o = t[t.length - 1]
          , i = Math.ceil(o / n);
        this.outputShape = t.slice(0, -1),
        i > 1 && this.outputShape.push(i),
        a || this.variableNames.push("bestIndicesA");
        var s, u, c = this.outputShape, l = c.length, f = DM(l), p = yM("coords", l);
        if (1 === i) {
            var d = DM(u = l + 1);
            s = "\n        ".concat(d, " sourceLocR = ").concat(d, "(").concat(p.join(), ", 0);\n        ++").concat(p[l - 1], ";\n        ").concat(d, " sourceLocG = ").concat(d, "(").concat(p.join(), ", 0);\n        ++").concat(p[l - 2], ";\n        ").concat(d, " sourceLocA = ").concat(d, "(").concat(p.join(), ", 0);\n        --").concat(p[l - 1], ";\n        ").concat(d, " sourceLocB = ").concat(d, "(").concat(p.join(), ", 0);\n        --").concat(p[l - 2], ";")
        } else
            u = l,
            s = "\n        ".concat(f, " sourceLocR = coords;\n        ++").concat(p[l - 1], ";\n        ").concat(f, " sourceLocG = coords;\n        ++").concat(p[l - 2], ";\n        ").concat(f, " sourceLocA = coords;\n        --").concat(p[l - 1], ";\n        ").concat(f, " sourceLocB = coords;\n        --").concat(p[l - 2], ";");
        var h = ["x", "y", "z", "w", "u", "v"].slice(0, u)
          , m = "." + h[u - 1]
          , v = h.map((function(e) {
            return "int " + e
        }
        ))
          , g = yM("sourceLocR", u - 1).concat("inIdx.r")
          , y = yM("sourceLocG", u - 1).concat("inIdx.g")
          , b = yM("sourceLocB", u - 1).concat("inIdx.b")
          , x = yM("sourceLocA", u - 1).concat("inIdx.a")
          , w = "max" === r ? "greaterThan" : "lessThan"
          , k = a ? "" : "\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(g.join(), "),\n                             getBestIndicesAChannel(").concat(y.join(), "),\n                             getBestIndicesAChannel(").concat(b.join(), "),\n                             getBestIndicesAChannel(").concat(x.join(), ")));")
          , C = "vec4(\n            getAChannel(".concat(g.join(), "),\n            hasNextCol ? getAChannel(").concat(y.join(), ") : 0.,\n            hasNextRow ? getAChannel(").concat(b.join(), ") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(x.join(), ") : 0.)")
          , E = a ? "" : "\n      float getBestIndicesAChannel(".concat(v.join(), ") {\n        return getChannel(getBestIndicesA(").concat(h.join(), "),\n                                          vec2(").concat(h.slice(-2).join(), "));\n      }");
        this.userCode = "\n      float getAChannel(".concat(v.join(), ") {\n        return getChannel(getA(").concat(h.join(), "),\n                               vec2(").concat(h.slice(-2).join(), "));\n      }\n      ").concat(E, "\n      void main() {\n        ").concat(f, " coords = getOutputCoords();\n        bool hasNextCol = ").concat(p[l - 1], " < ").concat(c[l - 1] - 1, ";\n        bool hasNextRow = ").concat(p[l - 2], " < ").concat(c[l - 2] - 1, ";\n        ").concat(s, "\n        ivec4 srcIdx = ivec4(sourceLocR").concat(m, ", sourceLocG").concat(m, ",\n          sourceLocB").concat(m, ", sourceLocA").concat(m, ") * ").concat(n, ";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(C, ";\n\n        for (int i = 0; i < ").concat(n, "; i++) {\n          inIdx = srcIdx;\n          ").concat(k, "\n          vec4 candidate = ").concat(C, ";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(w, "(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")
    }
      , PM = function e(t) {
        Ay(this, e),
        this.variableNames = ["dy"],
        this.outputShape = t.inShape;
        var n = t.filterHeight
          , r = t.filterWidth
          , a = t.strideHeight
          , o = t.strideWidth
          , i = t.dilationHeight
          , s = t.dilationWidth
          , u = t.effectiveFilterHeight
          , c = t.effectiveFilterWidth
          , l = u - 1 - t.padInfo.top
          , f = c - 1 - t.padInfo.left
          , p = 1 / (n * r);
        this.userCode = "\n      const ivec2 pads = ivec2(".concat(l, ", ").concat(f, ");\n      const float avgMultiplier = float(").concat(p, ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(u, ";\n            wR += ").concat(i, ") {\n          float dyR = float(dyRCorner + wR) / ").concat(a, ".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight, ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c, ";\n            wC+= ").concat(s, ") {\n            float dyC = float(dyCCorner + wC) / ").concat(o, ".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth, ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , LM = function e(t) {
        Ay(this, e),
        this.variableNames = ["dy"],
        this.outputShape = t.inShape;
        var n = t.filterDepth
          , r = t.filterHeight
          , a = t.filterWidth
          , o = t.strideDepth
          , i = t.strideHeight
          , s = t.strideWidth
          , u = t.dilationDepth
          , c = t.dilationHeight
          , l = t.dilationWidth
          , f = t.effectiveFilterDepth
          , p = t.effectiveFilterHeight
          , d = t.effectiveFilterWidth
          , h = f - 1 - t.padInfo.front
          , m = p - 1 - t.padInfo.top
          , v = d - 1 - t.padInfo.left
          , g = 1 / (n * r * a);
        this.userCode = "\n      const ivec3 pads = ivec3(".concat(h, ", ").concat(m, ", ").concat(v, ");\n      const float avgMultiplier = float(").concat(g, ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(f, ";\n            wD += ").concat(u, ") {\n          float dyD = float(dyDCorner + wD) / ").concat(o, ".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth, ".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(p, ";\n              wR += ").concat(c, ") {\n            float dyR = float(dyRCorner + wR) / ").concat(i, ".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight, ".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d, ";\n                wC += ").concat(l, ") {\n              float dyC = float(dyCCorner + wC) / ").concat(s, ".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth, ".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , UM = "return (a < 0.) ? b * a : a;"
      , VM = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["A", "B"],
        this.outputShape = VI(n, r),
        this.userCode = "\n      float binaryOperation(float a, float b) {\n        ".concat(t, "\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")
    }
      , zM = "\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n"
      , WM = function e(t, n, r) {
        var a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        Ay(this, e),
        this.variableNames = ["A", "B"],
        this.supportsBroadcasting = !0,
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = VI(n, r);
        var o = this.outputShape.length
          , i = "";
        if (a)
            if (0 === o || 1 === _k(this.outputShape))
                i = "\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";
            else if (i = "\n          ".concat(DM(o), " coords = getOutputCoords();\n        "),
            1 === o)
                i += "\n            result.y = (coords + 1) >= ".concat(this.outputShape[0], " ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");
            else {
                var s = yM("coords", o);
                i += "\n            bool nextRowOutOfBounds =\n              (".concat(s[o - 2], " + 1) >= ").concat(this.outputShape[o - 2], ";\n            bool nextColOutOfBounds =\n              (").concat(s[o - 1], " + 1) >= ").concat(this.outputShape[o - 1], ";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")
            }
        this.userCode = "\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(t, "\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(i, "\n\n        setOutput(result);\n      }\n    ")
    }
      , jM = function() {
        function e(t) {
            Ay(this, e),
            this.variableNames = ["A"],
            this.outputShape = t,
            this.userCode = "\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "
        }
        return _y(e, [{
            key: "getCustomSetupFunc",
            value: function(e, t) {
                var n = this;
                return function(r, a) {
                    null == n.minLoc && (n.minLoc = r.getUniformLocationNoThrow(a, "minVal"),
                    n.maxLoc = r.getUniformLocationNoThrow(a, "maxVal")),
                    r.gl.uniform1f(n.minLoc, e),
                    r.gl.uniform1f(n.maxLoc, t)
                }
            }
        }]),
        e
    }()
      , HM = function() {
        function e(t) {
            Ay(this, e),
            this.variableNames = ["A"],
            this.packedInputs = !0,
            this.packedOutput = !0,
            this.outputShape = t,
            this.userCode = "\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "
        }
        return _y(e, [{
            key: "getCustomSetupFunc",
            value: function(e, t) {
                var n = this;
                return function(r, a) {
                    null == n.minLoc && (n.minLoc = r.getUniformLocationNoThrow(a, "minVal"),
                    n.maxLoc = r.getUniformLocationNoThrow(a, "maxVal")),
                    r.gl.uniform1f(n.minLoc, e),
                    r.gl.uniform1f(n.maxLoc, t)
                }
            }
        }]),
        e
    }()
      , GM = function e(t) {
        Ay(this, e),
        this.variableNames = ["real", "imag"],
        this.outputShape = t,
        this.userCode = "\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "
    }
      , KM = function e(t) {
        Ay(this, e),
        this.variableNames = ["x", "dy"],
        this.outputShape = t.filterShape;
        var n = t.strideHeight
          , r = t.strideWidth
          , a = t.padInfo.top
          , o = t.padInfo.left
          , i = "channelsLast" === t.dataFormat;
        this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize, "; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight, "; yR++) {\n            int xR = wR + yR * ").concat(n, " - ").concat(a, ";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight, ") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth, "; yC++) {\n              int xC = wC + yC * ").concat(r, " - ").concat(o, ";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth, ") {\n                continue;\n              }\n\n              if (").concat(i, ") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , qM = function e(t) {
        Ay(this, e),
        this.variableNames = ["dy", "W"],
        this.outputShape = t.inShape;
        var n = t.filterHeight
          , r = t.filterWidth
          , a = t.strideHeight
          , o = t.strideWidth
          , i = "channelsLast" === t.dataFormat
          , s = n - 1 - t.padInfo.top
          , u = r - 1 - t.padInfo.left
          , c = i ? 1 : 2
          , l = i ? 2 : 3
          , f = i ? 3 : 1;
        this.userCode = "\n      const ivec2 pads = ivec2(".concat(s, ", ").concat(u, ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(f, "];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c, "], coords[").concat(l, "]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(n, "; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a, ".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight, ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(n, " - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(r, "; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(o, ".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth, ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(r, " - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(t.outChannels, "; d2++) {\n\n              if (").concat(i, ") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , XM = function e(t) {
        Ay(this, e),
        this.variableNames = ["x", "dy"],
        this.outputShape = t.filterShape;
        var n = t.strideDepth
          , r = t.strideHeight
          , a = t.strideWidth
          , o = t.padInfo.front
          , i = t.padInfo.top
          , s = t.padInfo.left;
        this.userCode = "\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize, "; b++) {\n          for (int yF = 0; yF < ").concat(t.outDepth, "; yF++) {\n            int xF = wF + yF * ").concat(n, " - ").concat(o, ";\n\n            if (xF < 0 || xF >= ").concat(t.inDepth, ") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(t.outHeight, "; yR++) {\n              int xR = wR + yR * ").concat(r, " - ").concat(i, ";\n\n              if (xR < 0 || xR >= ").concat(t.inHeight, ") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(t.outWidth, "; yC++) {\n                int xC = wC + yC * ").concat(a, " - ").concat(s, ";\n\n                if (xC < 0 || xC >= ").concat(t.inWidth, ") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , QM = function e(t) {
        Ay(this, e),
        this.variableNames = ["dy", "W"],
        this.outputShape = t.inShape;
        var n = t.filterDepth
          , r = t.filterHeight
          , a = t.filterWidth
          , o = t.strideDepth
          , i = t.strideHeight
          , s = t.strideWidth
          , u = n - 1 - t.padInfo.front
          , c = r - 1 - t.padInfo.top
          , l = a - 1 - t.padInfo.left;
        this.userCode = "\n      const ivec3 pads = ivec3(".concat(u, ", ").concat(c, ", ").concat(l, ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(n, "; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(o, ".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(t.outDepth, ".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(n, " - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(r, "; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(i, ".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight, ".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(r, " - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a, "; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(s, ".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth, ".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a, " - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(t.outChannels, "; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , YM = function e(t) {
        Ay(this, e),
        this.variableNames = ["x", "dy"],
        this.outputShape = t.filterShape;
        var n = t.strideHeight
          , r = t.strideWidth
          , a = t.padInfo.top
          , o = t.padInfo.left
          , i = t.outChannels / t.inChannels;
        this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(i, " + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(t.batchSize, "; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight, "; yR++) {\n            int xR = wR + yR * ").concat(n, " - ").concat(a, ";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight, ") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth, "; yC++) {\n              int xC = wC + yC * ").concat(r, " - ").concat(o, ";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth, ") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , $M = function e(t) {
        Ay(this, e),
        this.variableNames = ["dy", "W"],
        this.outputShape = t.inShape;
        var n = t.filterHeight
          , r = t.filterWidth
          , a = t.strideHeight
          , o = t.strideWidth
          , i = n - 1 - t.padInfo.top
          , s = r - 1 - t.padInfo.left
          , u = t.outChannels / t.inChannels;
        this.userCode = "\n      const ivec2 pads = ivec2(".concat(i, ", ").concat(s, ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(n, "; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a, ".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight, ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(n, " - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(r, "; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(o, ".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth, ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(r, " - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(u, "; dm++) {\n              int d2 = d1 * ").concat(u, " + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , ZM = function e(t) {
        var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
          , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
          , a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        Ay(this, e),
        this.variableNames = ["x", "W"],
        this.outputShape = t.outShape;
        var o = t.padInfo.top
          , i = t.padInfo.left
          , s = t.strideHeight
          , u = t.strideWidth
          , c = t.dilationHeight
          , l = t.dilationWidth
          , f = t.filterHeight
          , p = t.filterWidth
          , d = 4 * Math.floor(t.inChannels / 4)
          , h = t.inChannels % 4
          , m = "channelsLast" === t.dataFormat
          , v = m ? 1 : 2
          , g = m ? 2 : 3
          , y = m ? 3 : 1
          , b = ""
          , x = "";
        r && (b = a ? "float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(r, "\n        }") : "\n          float activation(float x) {\n            ".concat(r, "\n          }\n        "),
        x = "result = activation(result);");
        var w = n ? "result += getBiasAtOutCoords();" : "";
        n && this.variableNames.push("bias"),
        a && this.variableNames.push("preluActivationWeights"),
        this.userCode = "\n      ".concat(b, "\n\n      const ivec2 strides = ivec2(").concat(s, ", ").concat(u, ");\n      const ivec2 pads = ivec2(").concat(o, ", ").concat(i, ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(y, "];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(v, "], coords[").concat(g, "]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(f, "; wR++) {\n          int xR = xRCorner + wR * ").concat(c, ";\n\n          if (xR < 0 || xR >= ").concat(t.inHeight, ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(p, "; wC++) {\n            int xC = xCCorner + wC * ").concat(l, ";\n\n            if (xC < 0 || xC >= ").concat(t.inWidth, ") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(d, "; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m, ") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1 === h, ") {\n\n              if (").concat(m, ") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(d, ") *\n                    getW(wR, wC, ").concat(d, ", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(d, ", xR, xC) *\n                    getW(wR, wC, ").concat(d, ", d2);\n              }\n\n            } else if (").concat(2 === h, ") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(d, ", d2),\n                getW(wR, wC, ").concat(d, " + 1, d2)\n              );\n\n              if (").concat(m, ") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(d, "),\n                  getX(batch, xR, xC, ").concat(d, " + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(d, ", xR, xC),\n                  getX(batch, ").concat(d, " + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3 === h, ") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(d, ", d2),\n                getW(wR, wC, ").concat(d, " + 1, d2),\n                getW(wR, wC, ").concat(d, " + 2, d2)\n              );\n\n              if (").concat(m, ") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(d, "),\n                  getX(batch, xR, xC, ").concat(d, " + 1),\n                  getX(batch, xR, xC, ").concat(d, " + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(d, ", xR, xC),\n                  getX(batch, ").concat(d, " + 1, xR, xC),\n                  getX(batch, ").concat(d, " + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w, "\n        ").concat(x, "\n        setOutput(result);\n      }\n    ")
    }
      , JM = function e(t) {
        Ay(this, e),
        this.variableNames = ["x", "W"],
        this.outputShape = t.outShape;
        var n = t.padInfo.front
          , r = t.padInfo.top
          , a = t.padInfo.left
          , o = t.strideDepth
          , i = t.strideHeight
          , s = t.strideWidth
          , u = t.dilationDepth
          , c = t.dilationHeight
          , l = t.dilationWidth
          , f = t.filterDepth
          , p = t.filterHeight
          , d = t.filterWidth
          , h = 4 * Math.floor(t.inChannels / 4)
          , m = t.inChannels % 4;
        this.userCode = "\n      const ivec3 strides = ivec3(".concat(o, ", ").concat(i, ", ").concat(s, ");\n      const ivec3 pads = ivec3(").concat(n, ", ").concat(r, ", ").concat(a, ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(f, "; wF++) {\n          int xF = xFCorner + wF * ").concat(u, ";\n\n          if (xF < 0 || xF >= ").concat(t.inDepth, ") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p, "; wR++) {\n            int xR = xRCorner + wR * ").concat(c, ";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight, ") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d, "; wC++) {\n              int xC = xCCorner + wC * ").concat(l, ";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth, ") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(h, "; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1 === m, ") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(h, ") *\n                  getW(wF, wR, wC, ").concat(h, ", d2);\n              } else if (").concat(2 === m, ") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(h, "),\n                  getX(batch, xF, xR, xC, ").concat(h, " + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(h, ", d2),\n                  getW(wF, wR, wC, ").concat(h, " + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3 === m, ") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(h, "),\n                  getX(batch, xF, xR, xC, ").concat(h, " + 1),\n                  getX(batch, xF, xR, xC, ").concat(h, " + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(h, ", d2),\n                  getW(wF, wR, wC, ").concat(h, " + 1, d2),\n                  getW(wF, wR, wC, ").concat(h, " + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , eP = function e(t) {
        var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
          , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
          , a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        Ay(this, e),
        this.variableNames = ["x", "W"],
        this.outputShape = t.outShape;
        var o = t.inHeight
          , i = t.inWidth
          , s = t.padInfo.top
          , u = t.padInfo.left
          , c = t.strideHeight
          , l = t.strideWidth
          , f = t.dilationHeight
          , p = t.dilationWidth
          , d = t.filterHeight
          , h = t.filterWidth
          , m = t.outChannels / t.inChannels
          , v = ""
          , g = "";
        r && (v = a ? "float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(r, "\n        }") : "\n          float activation(float x) {\n            ".concat(r, "\n          }\n        "),
        g = "result = activation(result);");
        var y = n ? "result += getBiasAtOutCoords();" : "";
        n && this.variableNames.push("bias"),
        a && this.variableNames.push("preluActivationWeights"),
        this.userCode = "\n      ".concat(v, "\n\n      const ivec2 strides = ivec2(").concat(c, ", ").concat(l, ");\n      const ivec2 pads = ivec2(").concat(s, ", ").concat(u, ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(m, ";\n        int q = d2 - d1 * ").concat(m, ";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(d, "; wR++) {\n          int xR = xRCorner + wR * ").concat(f, ";\n\n          if (xR < 0 || xR >= ").concat(o, ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(h, "; wC++) {\n            int xC = xCCorner + wC * ").concat(p, ";\n\n            if (xC < 0 || xC >= ").concat(i, ") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(y, "\n        ").concat(g, "\n        setOutput(result);\n      }\n    ")
    }
      , tP = function e(t) {
        var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
          , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
          , a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        Ay(this, e),
        this.variableNames = ["x", "W"],
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = t.outShape;
        for (var o = t.inHeight, i = t.inWidth, s = t.padInfo.top, u = t.padInfo.left, c = t.strideHeight, l = t.strideWidth, f = t.dilationHeight, p = t.dilationWidth, d = t.filterHeight, h = t.filterWidth, m = h, v = "int xR; int xC; int xCOffset;", g = 0; g < d; g++)
            for (var y = 0; y < h; y++)
                v += "\n          vec4 xTexelR".concat(g, "C").concat(2 * y, " = vec4(0.);\n          vec4 wR").concat(g, "C").concat(y, " = vec4(0.);\n          vec4 xR").concat(g, "C").concat(y, " = vec4(0.);");
        for (var b = 0; b < d; b++)
            for (var x = 0; x < m; x++) {
                var w = 2 * x;
                if (v += "\n          xR = xRCorner + ".concat(b * f, ";\n          xC = xCCorner + ").concat(w * p, ";\n        "),
                1 === l) {
                    if (w < h && (v += u % 2 == 1 ? "\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ".concat(o, " && xCOffset >= 0 && xCOffset < ").concat(i, ") {\n                  xTexelR").concat(b, "C").concat(w, " = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ").concat(i, ") {\n                    xTexelR").concat(b, "C").concat(w, ".zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR").concat(b, "C").concat(w, " = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ").concat(o, " && xCOffset >= 0 && xCOffset < ").concat(i, ") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ").concat(i, ") {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR").concat(b, "C").concat(w, " = vec4(previous.zw, xTexelR").concat(b, "C").concat(w, ".xy);\n                } else {\n                  xR").concat(b, "C").concat(w, " = vec4(0, 0, xTexelR").concat(b, "C").concat(w, ".xy);\n                }\n              ") : "\n                if(xR >= 0 && xR < ".concat(o, " && xC >= 0 && xC < ").concat(i, ") {\n                  xTexelR").concat(b, "C").concat(w, " = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR").concat(b, "C").concat(w, " = vec4(0.);\n                }\n\n                xR").concat(b, "C").concat(w, " = xTexelR").concat(b, "C").concat(w, ";\n              "),
                    w + 1 < h)) {
                        var k = u % 2 == 0 ? Sk(p) : p;
                        p % 2 == 0 && u % 2 == 1 || p % 2 != 0 && u % 2 != 1 ? (v += "\n                  xCOffset = xC + ".concat(u % 2, " + ").concat(k, ";\n\n                  if(xR >= 0 && xR < ").concat(o, " &&\n                    xCOffset >= 0 && xCOffset < ").concat(i, ") {\n                    xTexelR").concat(b, "C").concat(w + 2, " = getX(batch, xR, xCOffset, d1);\n                  }\n                "),
                        p > 1 && (v += "\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ".concat(o, " &&\n                      xCOffset >= 0 && xCOffset < ").concat(i, ") {\n                      xTexelR").concat(b, "C").concat(w, " = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR").concat(b, "C").concat(w, " = vec4(0.);\n                    }\n                  ")),
                        v += "\n                  xR".concat(b, "C").concat(w + 1, " = vec4(\n                    xTexelR").concat(b, "C").concat(w, ".zw, xTexelR").concat(b, "C").concat(w + 2, ".xy);\n                ")) : v += "\n                  xCOffset = xC + ".concat(k, ";\n\n                  if(xR >= 0 && xR < ").concat(o, " &&\n                    xCOffset >= 0 && xCOffset < ").concat(i, ") {\n                    xTexelR").concat(b, "C").concat(w + 2, " = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR").concat(b, "C").concat(w + 1, " = xTexelR").concat(b, "C").concat(w + 2, ";\n                ")
                    }
                } else
                    w < h && (v += "\n              if(xR >= 0 && xR < ".concat(o, ") {\n            "),
                    u % 2 == 1 ? (v += "\n                xCOffset = xC + 1 - ".concat(l, ";\n                if(xCOffset >= 0 && xCOffset < ").concat(i, ") {\n                  xTexelR").concat(b, "C").concat(w, " = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR").concat(b, "C").concat(w, " = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ").concat(i, ") {\n                  xTexelR").concat(b, "C").concat(w + 2, " = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR").concat(b, "C").concat(w + 2, " = vec4(0.);\n                }\n\n                xR").concat(b, "C").concat(w, " = vec4(\n                  xTexelR").concat(b, "C").concat(w, ".zw, xTexelR").concat(b, "C").concat(w + 2, ".zw);\n              "),
                    w + 1 < h && (v += "\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ".concat(l, ";\n                  if(xCOffset >= 0 && xCOffset < ").concat(i, ") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR").concat(b, "C").concat(w + 1, " = vec4(xTexelR").concat(b, "C").concat(w + 2, ".xy, final.xy);\n                "))) : (v += "\n                if(xC >= 0 && xC < ".concat(i, ") {\n                  xTexelR").concat(b, "C").concat(w, " = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR").concat(b, "C").concat(w, " = vec4(0.);\n                }\n\n                xCOffset = xC + ").concat(l, ";\n                if(xCOffset >= 0 && xCOffset < ").concat(i, ") {\n                  xTexelR").concat(b, "C").concat(w + 2, " = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR").concat(b, "C").concat(w + 2, " = vec4(0.);\n                }\n\n                xR").concat(b, "C").concat(w, " = vec4(\n                  xTexelR").concat(b, "C").concat(w, ".xy, xTexelR").concat(b, "C").concat(w + 2, ".xy);\n              "),
                    w + 1 < h && (v += "\n                  xR".concat(b, "C").concat(w + 1, " = vec4(\n                    xTexelR").concat(b, "C").concat(w, ".zw, xTexelR").concat(b, "C").concat(w + 2, ".zw);\n                "))),
                    v += "}");
                w < h && (v += "\n            vec4 wTexelR".concat(b, "C").concat(w, " = getW(").concat(b, ", ").concat(w, ", d1, q);\n            wR").concat(b, "C").concat(w, " = vec4(wTexelR").concat(b, "C").concat(w, ".xz, wTexelR").concat(b, "C").concat(w, ".xz);\n          "),
                w + 1 < h && (v += "\n              vec4 wTexelR".concat(b, "C").concat(w + 1, " = getW(").concat(b, ", ").concat(w + 1, ", d1, q);\n              wR").concat(b, "C").concat(w + 1, " =\n                vec4(wTexelR").concat(b, "C").concat(w + 1, ".xz, wTexelR").concat(b, "C").concat(w + 1, ".xz);")))
            }
        for (var C = 0; C < d; C++)
            for (var E = 0; E < h; E++)
                v += "dotProd += xR".concat(C, "C").concat(E, " * wR").concat(C, "C").concat(E, ";");
        var S = ""
          , I = "";
        r && (S = a ? "vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(r, "\n        }") : "vec4 activation(vec4 x) {\n          ".concat(r, "\n        }"),
        I = "result = activation(result);");
        var T = n ? "result += getBiasAtOutCoords();" : "";
        n && this.variableNames.push("bias"),
        a && this.variableNames.push("preluActivationWeights"),
        this.userCode = "\n      ".concat(S, "\n\n      const ivec2 strides = ivec2(").concat(c, ", ").concat(l, ");\n      const ivec2 pads = ivec2(").concat(s, ", ").concat(u, ");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ").concat(v, "\n\n        vec4 result = dotProd;\n        ").concat(T, "\n        ").concat(I, "\n        setOutput(result);\n      }\n    ")
    }
      , nP = function e(t, n, r, a, o) {
        Ay(this, e),
        this.variableNames = ["Image", "Boxes", "BoxInd"],
        this.outputShape = [];
        var i = Uy(t, 4)
          , s = i[0]
          , u = i[1]
          , c = i[2]
          , l = i[3]
          , f = Uy(n, 1)[0]
          , p = Uy(r, 2)
          , d = p[0]
          , h = p[1];
        this.outputShape = [f, d, h, l];
        var m = "bilinear" === a ? 1 : 0
          , v = u - 1 + ".0"
          , g = c - 1 + ".0"
          , y = Uy(d > 1 ? ["" + (u - 1) / (d - 1), "(y2-y1) * height_ratio", "y1*".concat(v, " + float(y)*(height_scale)")] : ["0.0", "0.0", "0.5 * (y1+y2) * ".concat(v)], 3)
          , b = y[0]
          , x = y[1]
          , w = y[2]
          , k = Uy(h > 1 ? ["" + (c - 1) / (h - 1), "(x2-x1) * width_ratio", "x1*".concat(g, " + float(x)*(width_scale)")] : ["0.0", "0.0", "0.5 * (x1+x2) * ".concat(g)], 3)
          , C = k[0]
          , E = k[1]
          , S = k[2];
        this.userCode = "\n      const float height_ratio = float(".concat(b, ");\n      const float width_ratio = float(").concat(C, ");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s, ") {\n          return;\n        }\n\n        float height_scale = ").concat(x, ";\n        float width_scale = ").concat(E, ";\n\n        float in_y = ").concat(w, ";\n        if( in_y < 0.0 || in_y > ").concat(v, " ) {\n          setOutput(float(").concat(o, "));\n          return;\n        }\n        float in_x = ").concat(S, ";\n        if( in_x < 0.0 || in_x > ").concat(g, " ) {\n          setOutput(float(").concat(o, "));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(m, " == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")
    }
      , rP = function() {
        function e(t, n, r) {
            Ay(this, e),
            this.variableNames = ["x"],
            this.outputShape = t;
            var a = t.length
              , o = n ? "0.0" : "getX(".concat(aP(a, "coords"), ")")
              , i = t[t.length - 1]
              , s = ""
              , u = "";
            n ? (s = r ? "end != " + (i - 1) : "end != 0",
            u = r ? "end + 1" : "end - 1") : (s = r ? "end + pow2 < ".concat(i) : "end >= pow2",
            u = r ? "end + pow2" : "end - pow2"),
            this.userCode = "\n      uniform float index;\n      void main() {\n        ".concat(DM(a), " coords = getOutputCoords();\n        int end = ").concat(oP(a, "coords"), ";\n        float val = ").concat(o, ";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(s, ") {\n          int idx = ").concat(u, ";\n          ").concat(oP(a, "coords"), " = idx;\n          val += getX(").concat(aP(a, "coords"), ");\n        }\n        setOutput(val);\n      }\n    ")
        }
        return _y(e, [{
            key: "getCustomSetupFunc",
            value: function(e) {
                var t = this;
                return function(n, r) {
                    null == t.index && (t.index = n.getUniformLocation(r, "index")),
                    n.gl.uniform1f(t.index, e)
                }
            }
        }]),
        e
    }();
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function aP(e, t) {
        if (1 === e)
            return "".concat(t);
        if (2 === e)
            return "".concat(t, ".x, ").concat(t, ".y");
        if (3 === e)
            return "".concat(t, ".x, ").concat(t, ".y, ").concat(t, ".z");
        if (4 === e)
            return "".concat(t, ".x, ").concat(t, ".y, ").concat(t, ".z, ").concat(t, ".w");
        throw Error("Cumulative sum for rank ".concat(e, " is not yet supported"))
    }
    function oP(e, t) {
        if (1 === e)
            return "".concat(t);
        if (2 === e)
            return "".concat(t, ".y");
        if (3 === e)
            return "".concat(t, ".z");
        if (4 === e)
            return "".concat(t, ".w");
        throw Error("Cumulative sum for rank ".concat(e, " is not yet supported"))
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var iP = function e(t) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !1,
        this.packedOutput = !0,
        this.outPackingScheme = wB.DENSE;
        var n = OB(t)
          , r = bM();
        this.outputShape = t,
        this.userCode = "\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(xM(["r", "c", "d"], t), "\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(n[0], ", ").concat(n[1], "));\n        int index = 4 * (resTexRC.x * ").concat(n[1], " + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(r.output, " = result;\n      }\n    ")
    }
      , sP = function e(t) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outPackingScheme = wB.DENSE;
        var n = OB(t)
          , r = bM();
        this.outputShape = t,
        this.userCode = "\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(xM(["r", "c", "d"], t), "\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(n[0], ", ").concat(n[1], "));\n        int index = 4 * (resTexRC.x * ").concat(n[1], " + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(r.output, " = result;\n      }\n    ")
    }
      , uP = function() {
        function e(t, n, r) {
            Ay(this, e),
            this.variableNames = ["x"],
            this.outputShape = [],
            this.outputShape = t,
            this.blockSize = n,
            this.dataFormat = r,
            this.userCode = "\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(), ";\n      int w = ").concat(this.getWidthCoordString(), ";\n      int d = ").concat(this.getDepthCoordString(), ";\n\n      int in_h = h / ").concat(n, ";\n      int offset_h = imod(h, ").concat(n, ");\n      int in_w = w / ").concat(n, ";\n      int offset_w = imod(w, ").concat(n, ");\n      int offset_d = (offset_h * ").concat(n, " + offset_w) *\n        ").concat(this.getOutputDepthSize(), ";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(), ";\n      setOutput(result);\n    }\n  ")
        }
        return _y(e, [{
            key: "getHeightCoordString",
            value: function() {
                return "NHWC" === this.dataFormat ? "coords[1]" : "coords[2]"
            }
        }, {
            key: "getWidthCoordString",
            value: function() {
                return "NHWC" === this.dataFormat ? "coords[2]" : "coords[3]"
            }
        }, {
            key: "getDepthCoordString",
            value: function() {
                return "NHWC" === this.dataFormat ? "coords[3]" : "coords[1]"
            }
        }, {
            key: "getOutputDepthSize",
            value: function() {
                return "NHWC" === this.dataFormat ? this.outputShape[3] : this.outputShape[1]
            }
        }, {
            key: "getInputSamplingString",
            value: function() {
                return "NHWC" === this.dataFormat ? "getX(b, in_h, in_w, in_d)" : "getX(b, in_d, in_h, in_w)"
            }
        }]),
        e
    }()
      , cP = function e(t) {
        Ay(this, e),
        this.variableNames = ["X"],
        this.outputShape = [t, t],
        this.userCode = "\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "
    }
      , lP = function e(t) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.outTexUsage = kB.DOWNLOAD;
        var n = bM();
        this.outputShape = t,
        this.userCode = "\n      ".concat(kM, "\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(n.output, " = encode_float(x);\n      }\n    ")
    }
      , fP = function e(t) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !0,
        this.packedOutput = !1,
        this.outTexUsage = kB.DOWNLOAD;
        var n = bM();
        this.outputShape = t,
        this.userCode = "\n      ".concat(kM, "\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(n.output, " = encode_float(x);\n      }\n    ")
    }
      , pP = function e(t, n) {
        var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        Ay(this, e),
        this.variableNames = ["A"];
        var a = bM()
          , o = Uy(n, 2)
          , i = o[0]
          , s = o[1];
        this.outputShape = t;
        var u = "result";
        r && (u = "floor(result * 255. + 0.5)"),
        this.userCode = "\n      ".concat(wM(t), "\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ").concat(s, ";\n        int c = imod(flatIndex, ").concat(s, ");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(").concat(s, ".0, ").concat(i, ".0);\n        vec4 values = ").concat(a.texture2D, "(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ").concat(a.output, " = vec4(").concat(u, ", 0., 0., 0.);\n      }\n    ")
    }
      , dP = function e(t, n) {
        var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !1,
        this.packedOutput = !0;
        var a = bM()
          , o = Uy(n, 2)
          , i = o[0]
          , s = o[1];
        this.outputShape = t;
        var u = ""
          , c = "result";
        r && (c = "floor(result * 255. + 0.5)");
        for (var l = 0; l <= 1; l++)
            for (var f = 0; f <= 1; f++) {
                var p = 2 * l + f;
                u += "\n          localCoords = coords;\n          if(localCoords[2] + ".concat(f, " < ").concat(t[2], ") {\n            localCoords[2] += ").concat(f, ";\n            if(localCoords[1] + ").concat(l, " < ").concat(t[1], ") {\n              localCoords[1] += ").concat(l, ";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ").concat(s, ";\n              c = imod(flatIndex, ").concat(s, ");\n              uv = (vec2(c, r) + halfCR) / vec2(").concat(s, ".0, ").concat(i, ".0);\n              values = ").concat(a.texture2D, "(A, uv);\n\n              if(offset == 0) {\n                result[").concat(p, "] = values[0];\n              } else if(offset == 1) {\n                result[").concat(p, "] = values[1];\n              } else if(offset == 2) {\n                result[").concat(p, "] = values[2];\n              } else {\n                result[").concat(p, "] = values[3];\n              }\n            }\n          }\n        ")
            }
        this.userCode = "\n      ".concat(wM(t), "\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ").concat(u, "\n\n        ").concat(a.output, " = ").concat(c, ";\n      }\n    ")
    }
      , hP = function() {
        function e(t, n) {
            Ay(this, e),
            this.outputShape = [],
            this.variableNames = ["x"],
            this.outputShape = t,
            this.userCode = "\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "
        }
        return _y(e, [{
            key: "getCustomSetupFunc",
            value: function(e) {
                var t = this;
                return function(n, r) {
                    null == t.valueLoc && (t.valueLoc = n.getUniformLocationNoThrow(r, "value")),
                    n.gl.uniform1f(t.valueLoc, e)
                }
            }
        }]),
        e
    }()
      , mP = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["A", "indices"];
        var a = t.slice();
        a[r] = n,
        this.outputShape = a,
        this.rank = a.length;
        var o = DM(this.rank)
          , i = function(e, t) {
            var n = e.length;
            if (n > 4)
                throw Error("Gather for rank ".concat(n, " is not yet supported"));
            if (1 === n)
                return "int(getIndices(resRC))";
            for (var r = ["resRC.x", "resRC.y", "resRC.z", "resRC.w"], a = [], o = 0; o < e.length; o++)
                o === t ? a.push("int(getIndices(".concat(r[o], "))")) : a.push("".concat(r[o]));
            return a.join()
        }(t, r);
        this.userCode = "\n      void main() {\n        ".concat(o, " resRC = getOutputCoords();\n        setOutput(getA(").concat(i, "));\n      }\n    ")
    }
      , vP = function e(t, n, r) {
        Ay(this, e),
        this.sliceDim = t,
        this.strides = n,
        this.variableNames = ["x", "indices"],
        this.outputShape = r;
        var a = DM(n.length)
          , o = DM(r.length)
          , i = this.sliceDim > 1 ? "strides[j]" : "strides";
        this.userCode = "\n        ".concat(a, " strides = ").concat(a, "(").concat(this.strides, ");\n         void main() {\n          ").concat(o, " coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ").concat(this.sliceDim, "; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ").concat(i, ";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      ")
    };
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function gP(e, t, n, r, a, o) {
        !function(e, t) {
            var n = oC().getNumber("WEBGL_MAX_TEXTURE_SIZE");
            if (e <= 0 || t <= 0)
                throw new Error("Requested texture size [".concat(e, "x").concat(t, "] is invalid."));
            if (e > n || t > n)
                throw new Error("Requested texture size [".concat(e, "x").concat(t, "] greater than WebGL maximum on this browser / GPU [").concat(n, "x").concat(n, "]."))
        }(t, n);
        var i = function(e) {
            return KB(e, (function() {
                return e.createTexture()
            }
            ), "Unable to create WebGLTexture.")
        }(e)
          , s = e.TEXTURE_2D;
        return FB(e, (function() {
            return e.bindTexture(s, i)
        }
        )),
        FB(e, (function() {
            return e.texParameteri(s, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE)
        }
        )),
        FB(e, (function() {
            return e.texParameteri(s, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE)
        }
        )),
        FB(e, (function() {
            return e.texParameteri(s, e.TEXTURE_MIN_FILTER, e.NEAREST)
        }
        )),
        FB(e, (function() {
            return e.texParameteri(s, e.TEXTURE_MAG_FILTER, e.NEAREST)
        }
        )),
        FB(e, (function() {
            return e.texImage2D(s, 0, r, t, n, 0, a, o, null)
        }
        )),
        FB(e, (function() {
            return e.bindTexture(e.TEXTURE_2D, null)
        }
        )),
        i
    }
    function yP(e) {
        return e.internalFormatFloat
    }
    function bP(e) {
        return e.internalFormatHalfFloat
    }
    function xP(e) {
        return e.downloadTextureFormat
    }
    function wP(e) {
        return e.internalFormatPackedFloat
    }
    function kP(e) {
        return e.internalFormatPackedHalfFloat
    }
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var CP = function() {
        function e(t) {
            Ay(this, e),
            this.outputTexture = null,
            this.program = null,
            this.disposed = !1,
            this.vertexAttrsAreBound = !1,
            this.itemsToPoll = [];
            var n = oC().getNumber("WEBGL_VERSION");
            null != t ? (this.gl = t,
            function(e, t) {
                AB[e] = t
            }(n, t)) : this.gl = _B(n);
            var r = "WEBGL_color_buffer_float"
              , a = "EXT_color_buffer_half_float";
            if (1 === oC().getNumber("WEBGL_VERSION")) {
                var o = "OES_texture_half_float";
                if (this.textureFloatExtension = PB(this.gl, "OES_texture_float"),
                ZB(this.gl, o))
                    this.textureHalfFloatExtension = PB(this.gl, o);
                else if (oC().get("WEBGL_FORCE_F16_TEXTURES"))
                    throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");
                if (this.colorBufferFloatExtension = this.gl.getExtension(r),
                ZB(this.gl, a))
                    this.colorBufferHalfFloatExtension = PB(this.gl, a);
                else if (oC().get("WEBGL_FORCE_F16_TEXTURES"))
                    throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")
            } else if (r = "EXT_color_buffer_float",
            ZB(this.gl, r))
                this.colorBufferFloatExtension = this.gl.getExtension(r);
            else {
                if (!ZB(this.gl, a))
                    throw new Error("GL context does not support color renderable floats");
                this.colorBufferHalfFloatExtension = this.gl.getExtension(a)
            }
            this.vertexBuffer = function(e) {
                return function(e, t) {
                    var n = KB(e, (function() {
                        return e.createBuffer()
                    }
                    ), "Unable to create WebGLBuffer");
                    return FB(e, (function() {
                        return e.bindBuffer(e.ARRAY_BUFFER, n)
                    }
                    )),
                    FB(e, (function() {
                        return e.bufferData(e.ARRAY_BUFFER, t, e.STATIC_DRAW)
                    }
                    )),
                    n
                }(e, new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]))
            }(this.gl),
            this.indexBuffer = function(e) {
                return function(e, t) {
                    var n = KB(e, (function() {
                        return e.createBuffer()
                    }
                    ), "Unable to create WebGLBuffer");
                    return FB(e, (function() {
                        return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, n)
                    }
                    )),
                    FB(e, (function() {
                        return e.bufferData(e.ELEMENT_ARRAY_BUFFER, t, e.STATIC_DRAW)
                    }
                    )),
                    n
                }(e, new Uint16Array([0, 1, 2, 2, 1, 3]))
            }(this.gl),
            this.framebuffer = function(e) {
                return KB(e, (function() {
                    return e.createFramebuffer()
                }
                ), "Unable to create WebGLFramebuffer.")
            }(this.gl),
            this.textureConfig = BB(this.gl, this.textureHalfFloatExtension)
        }
        var t;
        return _y(e, [{
            key: "dispose",
            value: function() {
                var e = this;
                if (!this.disposed) {
                    null != this.program && console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),
                    null != this.outputTexture && console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");
                    var t = this.gl;
                    FB(t, (function() {
                        return t.finish()
                    }
                    )),
                    FB(t, (function() {
                        return t.bindFramebuffer(t.FRAMEBUFFER, null)
                    }
                    )),
                    FB(t, (function() {
                        return t.deleteFramebuffer(e.framebuffer)
                    }
                    )),
                    FB(t, (function() {
                        return t.bindBuffer(t.ARRAY_BUFFER, null)
                    }
                    )),
                    FB(t, (function() {
                        return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, null)
                    }
                    )),
                    FB(t, (function() {
                        return t.deleteBuffer(e.indexBuffer)
                    }
                    )),
                    this.disposed = !0
                }
            }
        }, {
            key: "createFloat32MatrixTexture",
            value: function(e, t) {
                return this.throwIfDisposed(),
                function(e, t, n, r) {
                    var a = Uy(RB(t, n), 2);
                    return gP(e, a[0], a[1], yP(r), r.textureFormatFloat, e.FLOAT)
                }(this.gl, e, t, this.textureConfig)
            }
        }, {
            key: "createFloat16MatrixTexture",
            value: function(e, t) {
                return this.throwIfDisposed(),
                function(e, t, n, r) {
                    var a = Uy(RB(t, n), 2);
                    return gP(e, a[0], a[1], bP(r), r.textureFormatFloat, r.textureTypeHalfFloat)
                }(this.gl, e, t, this.textureConfig)
            }
        }, {
            key: "createUnsignedBytesMatrixTexture",
            value: function(e, t) {
                return this.throwIfDisposed(),
                function(e, t, n, r) {
                    var a = Uy(RB(t, n), 2);
                    return gP(e, a[0], a[1], xP(r), e.RGBA, e.UNSIGNED_BYTE)
                }(this.gl, e, t, this.textureConfig)
            }
        }, {
            key: "uploadPixelDataToTexture",
            value: function(e, t) {
                this.throwIfDisposed(),
                function(e, t, n) {
                    FB(e, (function() {
                        return e.bindTexture(e.TEXTURE_2D, t)
                    }
                    )),
                    n.data instanceof Uint8Array ? FB(e, (function() {
                        return e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, n.width, n.height, 0, e.RGBA, e.UNSIGNED_BYTE, n.data)
                    }
                    )) : FB(e, (function() {
                        return e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, n)
                    }
                    )),
                    FB(e, (function() {
                        return e.bindTexture(e.TEXTURE_2D, null)
                    }
                    ))
                }(this.gl, e, t)
            }
        }, {
            key: "uploadDenseMatrixToTexture",
            value: function(e, t, n, r) {
                this.throwIfDisposed(),
                function(e, t, n, r, a, o) {
                    var i, s, u;
                    FB(e, (function() {
                        return e.bindTexture(e.TEXTURE_2D, t)
                    }
                    )),
                    a instanceof Uint8Array ? (i = new Uint8Array(n * r * 4),
                    s = e.UNSIGNED_BYTE,
                    u = e.RGBA) : (i = new Float32Array(n * r * 4),
                    s = e.FLOAT,
                    u = o.internalFormatPackedFloat),
                    i.set(a),
                    FB(e, (function() {
                        return e.texImage2D(e.TEXTURE_2D, 0, u, n, r, 0, e.RGBA, s, i)
                    }
                    )),
                    FB(e, (function() {
                        return e.bindTexture(e.TEXTURE_2D, null)
                    }
                    ))
                }(this.gl, e, t, n, r, this.textureConfig)
            }
        }, {
            key: "createFloat16PackedMatrixTexture",
            value: function(e, t) {
                return this.throwIfDisposed(),
                function(e, t, n, r) {
                    var a = Uy(DB(t, n), 2);
                    return gP(e, a[0], a[1], kP(r), e.RGBA, r.textureTypeHalfFloat)
                }(this.gl, e, t, this.textureConfig)
            }
        }, {
            key: "createPackedMatrixTexture",
            value: function(e, t) {
                return this.throwIfDisposed(),
                function(e, t, n, r) {
                    var a = Uy(DB(t, n), 2);
                    return gP(e, a[0], a[1], wP(r), e.RGBA, e.FLOAT)
                }(this.gl, e, t, this.textureConfig)
            }
        }, {
            key: "deleteMatrixTexture",
            value: function(e) {
                var t = this;
                this.throwIfDisposed(),
                this.outputTexture === e && (HB(this.gl, this.framebuffer),
                this.outputTexture = null),
                FB(this.gl, (function() {
                    return t.gl.deleteTexture(e)
                }
                ))
            }
        }, {
            key: "downloadByteEncodedFloatMatrixFromOutputTexture",
            value: function(e, t, n) {
                var r = this;
                return this.downloadMatrixDriver(e, (function() {
                    return function(e, t, n, r) {
                        var a = Uy(RB(t, n), 2)
                          , o = a[0]
                          , i = a[1]
                          , s = new Uint8Array(t * n * 4);
                        return FB(e, (function() {
                            return e.readPixels(0, 0, o, i, r.downloadTextureFormat, e.UNSIGNED_BYTE, s)
                        }
                        )),
                        new Float32Array(s.buffer)
                    }(r.gl, t, n, r.textureConfig)
                }
                ))
            }
        }, {
            key: "downloadPackedMatrixFromBuffer",
            value: function(e, t, n, r, a, o) {
                return function(e, t, n, r, a, o, i, s) {
                    var u = e
                      , c = new Float32Array(function(e, t) {
                        var n = Uy(DB(e, t), 2);
                        return n[0] * n[1] * 4
                    }(o, i));
                    return u.bindBuffer(u.PIXEL_PACK_BUFFER, t),
                    u.getBufferSubData(u.PIXEL_PACK_BUFFER, 0, c),
                    u.bindBuffer(u.PIXEL_PACK_BUFFER, null),
                    c
                }(this.gl, e, 0, 0, 0, a, o, this.textureConfig)
            }
        }, {
            key: "downloadFloat32MatrixFromBuffer",
            value: function(e, t) {
                return function(e, t, n) {
                    var r = e
                      , a = new Float32Array(n);
                    return r.bindBuffer(r.PIXEL_PACK_BUFFER, t),
                    r.getBufferSubData(r.PIXEL_PACK_BUFFER, 0, a),
                    r.bindBuffer(r.PIXEL_PACK_BUFFER, null),
                    a
                }(this.gl, e, t)
            }
        }, {
            key: "createBufferFromTexture",
            value: function(e, t, n) {
                this.bindTextureToFrameBuffer(e);
                var r = function(e, t, n, r) {
                    var a = e.createBuffer();
                    FB(e, (function() {
                        return e.bindBuffer(e.PIXEL_PACK_BUFFER, a)
                    }
                    ));
                    var o = 16 * t * n;
                    return FB(e, (function() {
                        return e.bufferData(e.PIXEL_PACK_BUFFER, o, e.STREAM_READ)
                    }
                    )),
                    FB(e, (function() {
                        return e.readPixels(0, 0, n, t, e.RGBA, e.FLOAT, 0)
                    }
                    )),
                    FB(e, (function() {
                        return e.bindBuffer(e.PIXEL_PACK_BUFFER, null)
                    }
                    )),
                    a
                }(this.gl, t, n, this.textureConfig);
                return this.unbindTextureToFrameBuffer(),
                r
            }
        }, {
            key: "createAndWaitForFence",
            value: function() {
                var e = this.createFence(this.gl);
                return this.pollFence(e)
            }
        }, {
            key: "createFence",
            value: function(e) {
                var t, n, r = this;
                if (oC().getBool("WEBGL_FENCE_API_ENABLED")) {
                    var a = e
                      , o = a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE, 0);
                    e.flush(),
                    n = function() {
                        var e = a.clientWaitSync(o, 0, 0);
                        return e === a.ALREADY_SIGNALED || e === a.CONDITION_SATISFIED
                    }
                    ,
                    t = o
                } else
                    oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") > 0 ? (t = this.beginQuery(),
                    this.endQuery(),
                    n = function() {
                        return r.isQueryAvailable(t, oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))
                    }
                    ) : n = function() {
                        return !0
                    }
                    ;
                return {
                    query: t,
                    isFencePassed: n
                }
            }
        }, {
            key: "downloadMatrixFromPackedTexture",
            value: function(e, t, n) {
                var r = this;
                return this.downloadMatrixDriver(e, (function() {
                    return function(e, t, n) {
                        var r = new Float32Array(t * n * 4);
                        return FB(e, (function() {
                            return e.readPixels(0, 0, n, t, e.RGBA, e.FLOAT, r)
                        }
                        )),
                        r
                    }(r.gl, t, n)
                }
                ))
            }
        }, {
            key: "createProgram",
            value: function(e) {
                this.throwIfDisposed();
                var t = this.gl
                  , n = function(e, t) {
                    var n = KB(e, (function() {
                        return e.createShader(e.FRAGMENT_SHADER)
                    }
                    ), "Unable to create fragment WebGLShader.");
                    if (FB(e, (function() {
                        return e.shaderSource(n, t)
                    }
                    )),
                    FB(e, (function() {
                        return e.compileShader(n)
                    }
                    )),
                    !1 === e.getShaderParameter(n, e.COMPILE_STATUS))
                        throw function(e, t) {
                            var n = VB.exec(t);
                            if (null == n)
                                return console.log("Couldn't parse line number in error: ".concat(t)),
                                void console.log(e);
                            for (var r = +n[1], a = e.split("\n"), o = a.length.toString().length + 2, i = a.map((function(e, t) {
                                return Bk((t + 1).toString(), o) + e
                            }
                            )), s = 0, u = 0; u < i.length; u++)
                                s = Math.max(i[u].length, s);
                            var c = i.slice(0, r - 1)
                              , l = i.slice(r - 1, r)
                              , f = i.slice(r);
                            console.log(c.join("\n")),
                            console.log(t.split("\n")[0]),
                            console.log("%c ".concat(Bk(l[0], s)), "border:1px solid red; background-color:#e3d2d2; color:#a61717"),
                            console.log(f.join("\n"))
                        }(t, e.getShaderInfoLog(n)),
                        new Error("Failed to compile fragment shader.");
                    return n
                }(t, e)
                  , r = /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
                function(e) {
                    var t = bM();
                    return function(e, t) {
                        var n = KB(e, (function() {
                            return e.createShader(e.VERTEX_SHADER)
                        }
                        ), "Unable to create vertex WebGLShader.");
                        if (FB(e, (function() {
                            return e.shaderSource(n, t)
                        }
                        )),
                        FB(e, (function() {
                            return e.compileShader(n)
                        }
                        )),
                        !1 === e.getShaderParameter(n, e.COMPILE_STATUS))
                            throw console.log(e.getShaderInfoLog(n)),
                            new Error("Failed to compile vertex shader.");
                        return n
                    }(e, "".concat(t.version, "\n    precision highp float;\n    ").concat(t.attribute, " vec3 clipSpacePos;\n    ").concat(t.attribute, " vec2 uv;\n    ").concat(t.varyingVs, " vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))
                }(t)
                  , a = function(e) {
                    return KB(e, (function() {
                        return e.createProgram()
                    }
                    ), "Unable to create WebGLProgram.")
                }(t);
                return FB(t, (function() {
                    return t.attachShader(a, r)
                }
                )),
                FB(t, (function() {
                    return t.attachShader(a, n)
                }
                )),
                function(e, t) {
                    if (FB(e, (function() {
                        return e.linkProgram(t)
                    }
                    )),
                    !1 === e.getProgramParameter(t, e.LINK_STATUS))
                        throw console.log(e.getProgramInfoLog(t)),
                        new Error("Failed to link vertex and fragment shaders.")
                }(t, a),
                this.debug && zB(t, a),
                this.vertexAttrsAreBound || (this.setProgram(a),
                this.vertexAttrsAreBound = function(e, t, n) {
                    return FB(e, (function() {
                        return e.bindBuffer(e.ARRAY_BUFFER, n)
                    }
                    )),
                    WB(e, t, "clipSpacePos", n, 3, 20, 0) && WB(e, t, "uv", n, 2, 20, 12)
                }(t, this.program, this.vertexBuffer)),
                a
            }
        }, {
            key: "deleteProgram",
            value: function(e) {
                var t = this;
                this.throwIfDisposed(),
                e === this.program && (this.program = null),
                null != e && FB(this.gl, (function() {
                    return t.gl.deleteProgram(e)
                }
                ))
            }
        }, {
            key: "setProgram",
            value: function(e) {
                var t = this;
                this.throwIfDisposed(),
                this.program = e,
                null != this.program && this.debug && zB(this.gl, this.program),
                FB(this.gl, (function() {
                    return t.gl.useProgram(e)
                }
                ))
            }
        }, {
            key: "getUniformLocation",
            value: function(e, t) {
                var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                return this.throwIfDisposed(),
                n ? function(e, t, n) {
                    return KB(e, (function() {
                        return e.getUniformLocation(t, n)
                    }
                    ), 'uniform "' + n + '" not present in program.')
                }(this.gl, e, t) : function(e, t, n) {
                    return e.getUniformLocation(t, n)
                }(this.gl, e, t)
            }
        }, {
            key: "getAttributeLocation",
            value: function(e, t) {
                var n = this;
                return this.throwIfDisposed(),
                FB(this.gl, (function() {
                    return n.gl.getAttribLocation(e, t)
                }
                ))
            }
        }, {
            key: "getUniformLocationNoThrow",
            value: function(e, t) {
                return this.throwIfDisposed(),
                this.gl.getUniformLocation(e, t)
            }
        }, {
            key: "setInputMatrixTexture",
            value: function(e, t, n) {
                this.throwIfDisposed(),
                this.throwIfNoProgram(),
                function(e, t, n, r) {
                    FB(e, (function() {
                        return function(e, t, n) {
                            !function(e, t) {
                                var n = e.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1
                                  , r = t + e.TEXTURE0;
                                if (r < e.TEXTURE0 || r > n)
                                    throw new Error("textureUnit must be in ".concat("[gl.TEXTURE0, gl.TEXTURE".concat(n, "]"), "."))
                            }(e, n),
                            FB(e, (function() {
                                return e.activeTexture(e.TEXTURE0 + n)
                            }
                            )),
                            FB(e, (function() {
                                return e.bindTexture(e.TEXTURE_2D, t)
                            }
                            ))
                        }(e, t, r)
                    }
                    )),
                    FB(e, (function() {
                        return e.uniform1i(n, r)
                    }
                    ))
                }(this.gl, e, t, n)
            }
        }, {
            key: "setOutputMatrixTexture",
            value: function(e, t, n) {
                this.setOutputMatrixTextureDriver(e, n, t)
            }
        }, {
            key: "setOutputPackedMatrixTexture",
            value: function(e, t, n) {
                this.throwIfDisposed();
                var r = Uy(DB(t, n), 2)
                  , a = r[0]
                  , o = r[1];
                this.setOutputMatrixTextureDriver(e, a, o)
            }
        }, {
            key: "setOutputMatrixWriteRegion",
            value: function(e, t, n, r) {
                this.setOutputMatrixWriteRegionDriver(n, e, r, t)
            }
        }, {
            key: "setOutputPackedMatrixWriteRegion",
            value: function(e, t, n, r) {
                throw new Error("setOutputPackedMatrixWriteRegion not implemented.")
            }
        }, {
            key: "debugValidate",
            value: function() {
                null != this.program && zB(this.gl, this.program),
                GB(this.gl)
            }
        }, {
            key: "executeProgram",
            value: function() {
                this.throwIfDisposed(),
                this.throwIfNoProgram();
                var e = this.gl;
                this.debug && this.debugValidate(),
                FB(e, (function() {
                    return e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0)
                }
                ))
            }
        }, {
            key: "blockUntilAllProgramsCompleted",
            value: function() {
                var e = this;
                this.throwIfDisposed(),
                FB(this.gl, (function() {
                    return e.gl.finish()
                }
                ))
            }
        }, {
            key: "getQueryTimerExtension",
            value: function() {
                return null == this.disjointQueryTimerExtension && (this.disjointQueryTimerExtension = PB(this.gl, 2 === oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") ? "EXT_disjoint_timer_query_webgl2" : "EXT_disjoint_timer_query")),
                this.disjointQueryTimerExtension
            }
        }, {
            key: "getQueryTimerExtensionWebGL2",
            value: function() {
                return this.getQueryTimerExtension()
            }
        }, {
            key: "getQueryTimerExtensionWebGL1",
            value: function() {
                return this.getQueryTimerExtension()
            }
        }, {
            key: "beginQuery",
            value: function() {
                if (2 === oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")) {
                    var e = this.gl
                      , t = this.getQueryTimerExtensionWebGL2()
                      , n = e.createQuery();
                    return e.beginQuery(t.TIME_ELAPSED_EXT, n),
                    n
                }
                var r = this.getQueryTimerExtensionWebGL1()
                  , a = r.createQueryEXT();
                return r.beginQueryEXT(r.TIME_ELAPSED_EXT, a),
                a
            }
        }, {
            key: "endQuery",
            value: function() {
                if (2 !== oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")) {
                    var e = this.getQueryTimerExtensionWebGL1();
                    e.endQueryEXT(e.TIME_ELAPSED_EXT)
                } else {
                    var t = this.gl
                      , n = this.getQueryTimerExtensionWebGL2();
                    t.endQuery(n.TIME_ELAPSED_EXT)
                }
            }
        }, {
            key: "waitForQueryAndGetTime",
            value: (t = Ty(regeneratorRuntime.mark((function e(t) {
                var n = this;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2,
                            Fk((function() {
                                return n.disposed || n.isQueryAvailable(t, oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))
                            }
                            ));
                        case 2:
                            return e.abrupt("return", this.getQueryTime(t, oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")));
                        case 3:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "getQueryTime",
            value: function(e, t) {
                if (0 === t)
                    return null;
                if (2 === t) {
                    var n = this.gl;
                    return n.getQueryParameter(e, n.QUERY_RESULT) / 1e6
                }
                var r = this.getQueryTimerExtensionWebGL1();
                return r.getQueryObjectEXT(e, r.QUERY_RESULT_EXT) / 1e6
            }
        }, {
            key: "isQueryAvailable",
            value: function(e, t) {
                if (0 === t)
                    return !0;
                if (2 === t) {
                    var n = this.gl
                      , r = this.getQueryTimerExtensionWebGL2()
                      , a = n.getQueryParameter(e, n.QUERY_RESULT_AVAILABLE);
                    return null == this.disjoint && (this.disjoint = this.gl.getParameter(r.GPU_DISJOINT_EXT)),
                    a && !this.disjoint
                }
                var o = this.getQueryTimerExtensionWebGL1()
                  , i = o.getQueryObjectEXT(e, o.QUERY_RESULT_AVAILABLE_EXT);
                return null == this.disjoint && (this.disjoint = this.gl.getParameter(o.GPU_DISJOINT_EXT)),
                i && !this.disjoint
            }
        }, {
            key: "pollFence",
            value: function(e) {
                var t = this;
                return new Promise((function(n) {
                    t.addItemToPoll((function() {
                        return e.isFencePassed()
                    }
                    ), (function() {
                        return n()
                    }
                    ))
                }
                ))
            }
        }, {
            key: "pollItems",
            value: function() {
                for (var e = function(e) {
                    for (var t = 0; t < e.length && e[t](); ++t)
                        ;
                    return t - 1
                }/**
	       * @license
	       * Copyright 2017 Google LLC. All Rights Reserved.
	       * Licensed under the Apache License, Version 2.0 (the "License");
	       * you may not use this file except in compliance with the License.
	       * You may obtain a copy of the License at
	       *
	       * http://www.apache.org/licenses/LICENSE-2.0
	       *
	       * Unless required by applicable law or agreed to in writing, software
	       * distributed under the License is distributed on an "AS IS" BASIS,
	       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	       * See the License for the specific language governing permissions and
	       * limitations under the License.
	       * =============================================================================
	       */
                (this.itemsToPoll.map((function(e) {
                    return e.isDoneFn
                }
                ))), t = 0; t <= e; ++t) {
                    (0,
                    this.itemsToPoll[t].resolveFn)()
                }
                this.itemsToPoll = this.itemsToPoll.slice(e + 1)
            }
        }, {
            key: "addItemToPoll",
            value: function(e, t) {
                var n = this;
                this.itemsToPoll.push({
                    isDoneFn: e,
                    resolveFn: t
                }),
                this.itemsToPoll.length > 1 || Fk((function() {
                    return n.pollItems(),
                    0 === n.itemsToPoll.length
                }
                ))
            }
        }, {
            key: "bindTextureToFrameBuffer",
            value: function(e) {
                this.throwIfDisposed(),
                jB(this.gl, e, this.framebuffer),
                this.debug && GB(this.gl)
            }
        }, {
            key: "unbindTextureToFrameBuffer",
            value: function() {
                null != this.outputTexture ? (jB(this.gl, this.outputTexture, this.framebuffer),
                this.debug && GB(this.gl)) : HB(this.gl, this.framebuffer)
            }
        }, {
            key: "downloadMatrixDriver",
            value: function(e, t) {
                this.bindTextureToFrameBuffer(e);
                var n = t();
                return this.unbindTextureToFrameBuffer(),
                n
            }
        }, {
            key: "setOutputMatrixTextureDriver",
            value: function(e, t, n) {
                this.throwIfDisposed();
                var r = this.gl;
                jB(r, e, this.framebuffer),
                this.debug && GB(r),
                this.outputTexture = e,
                FB(r, (function() {
                    return r.viewport(0, 0, t, n)
                }
                )),
                FB(r, (function() {
                    return r.scissor(0, 0, t, n)
                }
                ))
            }
        }, {
            key: "setOutputMatrixWriteRegionDriver",
            value: function(e, t, n, r) {
                var a = this;
                this.throwIfDisposed(),
                FB(this.gl, (function() {
                    return a.gl.scissor(e, t, n, r)
                }
                ))
            }
        }, {
            key: "throwIfDisposed",
            value: function() {
                if (this.disposed)
                    throw new Error("Attempted to use disposed GPGPUContext.")
            }
        }, {
            key: "throwIfNoProgram",
            value: function() {
                if (null == this.program)
                    throw new Error("No GPU program is currently set.")
            }
        }, {
            key: "debug",
            get: function() {
                return oC().getBool("DEBUG")
            }
        }]),
        e
    }();
    function EP(e, t) {
        if (e.length !== t.length)
            throw Error("Binary was compiled with ".concat(e.length, " inputs, but was executed with ").concat(t.length, " inputs"));
        e.forEach((function(e, n) {
            var r = e.logicalShape
              , a = t[n]
              , o = a.shape;
            if (!Rk(r, o))
                throw Error("Binary was compiled with different shapes than the current args. Shapes ".concat(r, " and ").concat(o, " must match"));
            if (!e.isUniform || !a.isUniform) {
                var i = e.texShape
                  , s = a.isUniform ? null : a.texData.texShape;
                if (!Rk(i, s))
                    throw Error("Binary was compiled with different texture shapes than the current args. Shape ".concat(i, " and ").concat(s, " must match"))
            }
        }
        ))
    }
    /**
	 * @license
	 * Copyright 2019 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var SP = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = t;
        for (var a = r.filterWidth, o = r.inChannels, i = r.strideWidth, s = r.strideHeight, u = r.padInfo, c = r.outWidth, l = r.dilationWidth, f = r.dilationHeight, p = r.dataFormat, d = u.left, h = u.top, m = o * a, v = bM(), g = "channelsLast" === p, y = g ? 0 : 1, b = g ? 1 : 2, x = "", w = 0; w <= 1; w++)
            for (var k = 0; k <= 1; k++)
                x += "\n          blockIndex = rc.y + ".concat(k, ";\n          pos = rc.x + ").concat(w, ";\n\n          if(blockIndex < ").concat(t[1], " && pos < ").concat(t[0], ") {\n            offsetY = int(blockIndex / (").concat(c, ")) * ").concat(s, " - ").concat(h, ";\n            d0 = offsetY + ").concat(f, " * (pos / ").concat(m, ");\n\n            if(d0 < ").concat(n[y], " && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ").concat(c, ".) * ").concat(i, ". - ").concat(d, ".);\n              d1 = offsetX + ").concat(l, " * (int(mod(float(pos), ").concat(m, ".) / ").concat(o, ".));\n\n              if(d1 < ").concat(n[b], " && d1 >= 0) {\n\n                ch = int(mod(float(pos), ").concat(o, ".));\n\n                if (").concat(g, ") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2 * w + k, "] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2 * w + k, "] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");
        this.userCode = "\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(x, "\n\n        ").concat(v.output, " = result;\n      }\n    ")
    }
      , IP = function e(t, n, r, a, o) {
        Ay(this, e),
        this.variableNames = ["x"],
        this.outputShape = [];
        var i, s = n, u = t[3] - 1;
        this.outputShape = t;
        var c = "float(".concat(r, ") + float(").concat(a, ") * sum");
        i = .5 === o ? "inversesqrt(".concat(c, ")") : 1 === o ? "1.0/(".concat(c, ")") : "exp(log(".concat(c, ") * float(-").concat(o, "));"),
        this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s, "; j <= ").concat(s, "; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(u, ") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i, ";\n        setOutput(val);\n      }\n    ")
    }
      , TP = function e(t, n, r, a, o) {
        Ay(this, e),
        this.variableNames = ["inputImage", "outputImage", "dy"],
        this.outputShape = [],
        this.outputShape = t,
        this.depth = t[3],
        this.depthRadius = n,
        this.bias = r,
        this.alpha = a,
        this.beta = o,
        this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth, "; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(n, ")));\n          int depthEnd = int(min(float(").concat(this.depth, "),\n              float(d + ").concat(n, " + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth, ";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a, ") * norm + float(").concat(r, ");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a, ")\n                * float(").concat(o, ")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(o, ");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")
    }
      , AP = function e(t, n, r, a, o) {
        Ay(this, e),
        this.variableNames = ["x"],
        this.outputShape = [],
        this.packedInputs = !0,
        this.packedOutput = !0;
        var i, s = n, u = t[3] - 1;
        this.outputShape = t;
        var c = "float(".concat(r, ") + float(").concat(a, ") * sum");
        i = .5 === o ? "inversesqrt(".concat(c, ")") : 1 === o ? "1.0/(".concat(c, ")") : "exp(log(".concat(c, ") * float(-").concat(o, "));"),
        this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3], ";\n        bool hasNextRow = c < ").concat(this.outputShape[2], ";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s, ";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s, "; j <= ").concat(s, "; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(u, "));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i, ";\n        setOutput(result);\n      }\n    ")
    }
      , NP = function e(t) {
        Ay(this, e),
        this.variableNames = ["dy", "maxPos"],
        this.outputShape = t.inShape;
        var n = t.strideHeight
          , r = t.strideWidth
          , a = t.dilationHeight
          , o = t.effectiveFilterHeight
          , i = t.effectiveFilterWidth
          , s = o - 1 - t.padInfo.top
          , u = i - 1 - t.padInfo.left
          , c = o * i - 1;
        this.userCode = "\n      const ivec2 pads = ivec2(".concat(s, ", ").concat(u, ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(o, ";\n          wR += ").concat(a, ") {\n          float dyR = float(dyRCorner + wR) / ").concat(n, ".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight, ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(i, "; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r, ".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth, ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c, " - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(i, " + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , _P = function e(t) {
        Ay(this, e),
        this.variableNames = ["dy", "maxPos"],
        this.outputShape = t.inShape;
        var n = t.strideDepth
          , r = t.strideHeight
          , a = t.strideWidth
          , o = t.dilationDepth
          , i = t.dilationHeight
          , s = t.dilationWidth
          , u = t.effectiveFilterDepth
          , c = t.effectiveFilterHeight
          , l = t.effectiveFilterWidth
          , f = u - 1 - t.padInfo.front
          , p = c - 1 - t.padInfo.top
          , d = l - 1 - t.padInfo.left
          , h = u * c * l - 1;
        this.userCode = "\n      const ivec3 pads = ivec3(".concat(f, ", ").concat(p, ", ").concat(d, ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u, ";\n           wD += ").concat(o, ") {\n          float dyD = float(dyDCorner + wD) / ").concat(n, ".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth, ".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c, ";\n              wR += ").concat(i, ") {\n            float dyR = float(dyRCorner + wR) / ").concat(r, ".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight, ".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l, ";\n                wC += ").concat(s, ") {\n              float dyC = float(dyCCorner + wC) / ").concat(a, ".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth, ".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(h, " -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c, " * ").concat(l, " +\n                  wR * ").concat(l, " + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")
    }
      , RP = function e(t, n, r) {
        var a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]
          , o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4]
          , i = arguments.length > 5 && void 0 !== arguments[5] && arguments[5]
          , s = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null
          , u = arguments.length > 7 && void 0 !== arguments[7] && arguments[7];
        Ay(this, e),
        this.variableNames = ["matrixA", "matrixB"],
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = r;
        var c = a ? t[1] : t[2]
          , l = Math.ceil(c / 2)
          , f = a ? "i * 2, rc.y" : "rc.y, i * 2"
          , p = o ? "rc.z, i * 2" : "i * 2, rc.z"
          , d = a ? ["a.xxyy", "a.zzww"] : ["a.xxzz", "a.yyww"]
          , h = o ? ["b.xzxz", "b.ywyw"] : ["b.xyxy", "b.zwzw"]
          , m = ""
          , v = "";
        s && (m = u ? "vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(s, "\n        }") : "vec4 activation(vec4 x) {\n          ".concat(s, "\n        }"),
        v = "result = activation(result);");
        var g = i ? "result += getBiasAtOutCoords();" : "";
        i && this.variableNames.push("bias"),
        u && this.variableNames.push("preluActivationWeights");
        var y = "rc.x"
          , b = "rc.x";
        t[0] < n[0] ? y = "int(min(float(rc.x), ".concat(t[0] - 1, ".))") : n[0] < t[0] && (b = "int(min(float(rc.x), ".concat(n[0] - 1, ".))")),
        this.userCode = "\n      ".concat(m, "\n\n      const float sharedDimension = ").concat(l, ".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ").concat(l, "; i++) {\n          int batchA = ").concat(y, ";\n          int batchB = ").concat(b, ";\n          vec4 a = getMatrixA(batchA, ").concat(f, ");\n          vec4 b = getMatrixB(batchB, ").concat(p, ");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(d[0], " * ").concat(h[0], ");\n          result += (").concat(d[1], " * ").concat(h[1], ");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(g, "\n\n        ").concat(v, "\n\n        setOutput(result);\n      }\n    ")
    }
      , OP = function() {
        function e(t, n, r) {
            Ay(this, e),
            this.variableNames = ["probs"],
            this.outputShape = [t, r],
            this.userCode = "\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(n - 1, "; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(n - 1, "));\n      }\n    ")
        }
        return _y(e, [{
            key: "getCustomSetupFunc",
            value: function(e) {
                var t = this;
                return function(n, r) {
                    null == t.seedLoc && (t.seedLoc = n.getUniformLocation(r, "seed")),
                    n.gl.uniform1f(t.seedLoc, e)
                }
            }
        }]),
        e
    }()
      , DP = function e(t, n, r, a) {
        Ay(this, e),
        this.variableNames = ["indices"],
        this.outputShape = [t, n],
        this.userCode = "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a, "), float(").concat(r, "),\n                      float(index == coords.y)));\n      }\n    ")
    }
      , BP = function e(t) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !1,
        this.packedOutput = !0,
        this.outputShape = t;
        var n = t.length;
        if (0 === n)
            this.userCode = "\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";
        else {
            var r = yM("rc", n)
              , a = DM(n)
              , o = function(e, t, n) {
                if (1 === e)
                    return "rc > ".concat(t[0]);
                for (var r = "", a = e - 2; a < e; a++)
                    r += "".concat(n[a], " >= ").concat(t[a]),
                    a < e - 1 && (r += "||");
                return r
            }(n, t, r)
              , i = function(e, t, n, r) {
                if (1 === e)
                    return "";
                var a = r.slice(-2);
                return "\n    int r = ".concat(a[0], ";\n    int c = ").concat(a[1], ";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ").concat(t, ";\n    bool rEdge = rp1 >= ").concat(n, ";\n  ")
            }(n, t[t.length - 1], t[t.length - 2], r)
              , s = function(e, t) {
                var n = e.length
                  , r = function(e, t) {
                    for (var n = [], r = 0; r <= 1; r++)
                        for (var a = 0; a <= 1; a++) {
                            for (var o = "".concat(0 === r ? "r" : "rp1", ", ").concat(0 === a ? "c" : "cp1"), i = 2; i < e; i++)
                                o = "".concat(t[t.length - 1 - i], ",") + o;
                            n.push(o)
                        }
                    return n
                }(n, t);
                return 1 === n ? "getA(rc),\n            rc + 1 >= ".concat(e[0], " ? 0. : getA(rc + 1),\n            0, 0") : "getA(".concat(r[0], "),\n          cEdge ? 0. : getA(").concat(r[1], "),\n          rEdge ? 0. : getA(").concat(r[2], "),\n          rEdge || cEdge ? 0. : getA(").concat(r[3], ")")
            }/**
	     * @license
	     * Copyright 2017 Google LLC. All Rights Reserved.
	     * Licensed under the Apache License, Version 2.0 (the "License");
	     * you may not use this file except in compliance with the License.
	     * You may obtain a copy of the License at
	     *
	     * http://www.apache.org/licenses/LICENSE-2.0
	     *
	     * Unless required by applicable law or agreed to in writing, software
	     * distributed under the License is distributed on an "AS IS" BASIS,
	     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	     * See the License for the specific language governing permissions and
	     * limitations under the License.
	     * =============================================================================
	     */
            (t, r);
            this.userCode = "\n        void main() {\n          ".concat(a, " rc = getOutputCoords();\n\n          if(").concat(o, ") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(i, "\n\n            setOutput(vec4(").concat(s, "));\n          }\n        }\n      ")
        }
    }
      , FP = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["x"],
        this.outputShape = n.map((function(e, n) {
            return e[0] + t[n] + e[1]
        }
        ));
        var a = t.length
          , o = DM(a)
          , i = n.map((function(e) {
            return e[0]
        }
        )).join(",")
          , s = n.map((function(e, n) {
            return e[0] + t[n]
        }
        )).join(",")
          , u = ["coords[0]", "coords[1]", "coords[2]", "coords[3]"].slice(0, a);
        this.userCode = 1 !== a ? "\n      ".concat(o, " start = ").concat(o, "(").concat(i, ");\n      ").concat(o, " end = ").concat(o, "(").concat(s, ");\n\n      void main() {\n        ").concat(o, " outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(").concat(r, "));\n        } else {\n          ").concat(o, " coords = outC - start;\n          setOutput(getX(").concat(u, "));\n        }\n      }\n    ") : "\n        int start = ".concat(i, ";\n        int end = ").concat(s, ";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(").concat(r, "));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")
    }
      , MP = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["x"],
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = n.map((function(e, n) {
            return e[0] + t[n] + e[1]
        }
        ));
        for (var a = t.length, o = DM(a), i = n.map((function(e) {
            return e[0]
        }
        )).join(","), s = n.map((function(e, n) {
            return e[0] + t[n]
        }
        )).join(","), u = yM("rc", a), c = yM("source", a), l = "".concat(u[a - 1], " < ").concat(this.outputShape[a - 1]), f = 1 === a ? "source" : "vec2(".concat(c.slice(-2).join(), ")"), p = ["".concat(o, " rc = outputLoc;"), "".concat(u[a - 1], " += 1;\n       if(").concat(l, ") {\n      "), 1 === a ? "" : "}\n       rc = outputLoc;\n       ".concat(u[a - 2], " += 1;\n       if(").concat(u[a - 2], " < ").concat(this.outputShape[a - 2], ") {"), 1 === a ? "" : "  ".concat(u[a - 1], " += 1;\n         if(").concat(l, ") {")], d = 1 === a ? "rc < start || rc >= end" : "any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))", h = "", m = 0, v = 1 === a ? 2 : 4; m < v; m++)
            h += "\n        ".concat(p[m], "\n        if (").concat(d, ") {\n          result[").concat(m, "] = float(").concat(r, ");\n        } else {\n          ").concat(o, " source = rc - start;\n          result[").concat(m, "] = getChannel(getX(").concat(c.join(), "), ").concat(f, ");\n        }\n      ");
        h += 1 === a ? "} " : "}}",
        this.userCode = "\n      const ".concat(o, " start = ").concat(o, "(").concat(i, ");\n      const ").concat(o, " end = ").concat(o, "(").concat(s, ");\n\n      void main() {\n        ").concat(o, " outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h, "\n        setOutput(result);\n      }\n    ")
    }
      , PP = function e(t, n, r) {
        var a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]
          , o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
        if (Ay(this, e),
        this.variableNames = ["x"],
        "avg" === n && r)
            throw new Error("Cannot compute positions for average pool.");
        var i = t.filterWidth
          , s = t.strideHeight
          , u = t.strideWidth
          , c = t.dilationHeight
          , l = t.dilationWidth
          , f = t.effectiveFilterHeight
          , p = t.effectiveFilterWidth
          , d = t.padInfo.top
          , h = t.padInfo.left;
        this.outputShape = t.outShape;
        var m = "avg" === n
          , v = "((batch  * ".concat(t.inHeight, " + xR) * ").concat(t.inWidth, " + xC) * ").concat(t.inChannels, " + d")
          , g = "(xR * ".concat(t.inWidth, " + xC) * ").concat(t.inChannels, " + d")
          , y = "0.0";
        if (m || (y = "-1.0 / 1e-20"),
        r) {
            var b = ">=";
            this.userCode = "\n        const ivec2 strides = ivec2(".concat(s, ", ").concat(u, ");\n        const ivec2 pads = ivec2(").concat(d, ", ").concat(h, ");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(f, ";\n              wR += ").concat(c, ") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight, ") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(p, ";\n                wC += ").concat(l, ") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(t.inWidth, ") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(b, " currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a ? o ? v : g : "wR * ".concat(p, " + wC"), ";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ")
        } else {
            var x = "".concat(n, "(").concat(n, "(").concat(n, "(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])");
            "avg" === n && (x = "avgValue / count");
            var w = 4 * Math.floor(i / 4)
              , k = i % 4
              , C = "\n      if (".concat(m, ") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ");
            this.userCode = "\n      const ivec2 strides = ivec2(".concat(s, ", ").concat(u, ");\n      const ivec2 pads = ivec2(").concat(d, ", ").concat(h, ");\n      const float initializationValue = ").concat(y, ";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(t.inWidth, ") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y, ");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(f, ";\n            wR += ").concat(c, ") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(t.inHeight, ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(w, "; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l, ";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l, ", d),\n              getValue(batch, xR, xC + 2 * ").concat(l, ", d),\n              getValue(batch, xR, xC + 3 * ").concat(l, ", d)\n            );\n\n            ").concat(C, "\n          }\n\n          int xC = xCCorner + ").concat(w, ";\n          if (").concat(1 === k, ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(C, "\n          } else if (").concat(2 === k, ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l, ", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(C, "\n          } else if (").concat(3 === k, ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l, ", d),\n              getValue(batch, xR, xC + 2 * ").concat(l, ", d),\n              initializationValue\n            );\n\n            ").concat(C, "\n          }\n        }\n        setOutput(").concat(x, ");\n      }\n    ")
        }
    }
      , LP = function e(t, n, r) {
        var a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]
          , o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
        if (Ay(this, e),
        this.variableNames = ["x"],
        "avg" === n && r)
            throw new Error("Cannot compute positions for average pool.");
        var i = t.filterWidth
          , s = t.strideDepth
          , u = t.strideHeight
          , c = t.strideWidth
          , l = t.dilationDepth
          , f = t.dilationHeight
          , p = t.dilationWidth
          , d = t.effectiveFilterDepth
          , h = t.effectiveFilterHeight
          , m = t.effectiveFilterWidth
          , v = t.padInfo.front
          , g = t.padInfo.top
          , y = t.padInfo.left;
        this.outputShape = t.outShape;
        var b = "avg" === n
          , x = "0.0";
        if (b || (x = "-1.0 / 1e-20"),
        r) {
            var w = ">=";
            this.userCode = "\n        const ivec3 strides =\n            ivec3(".concat(s, ", ").concat(u, ", ").concat(c, ");\n        const ivec3 pads = ivec3(").concat(v, ", ").concat(g, ", ").concat(y, ");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d, ";\n              wD += ").concat(l, ") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(t.inDepth, ") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(h, ";\n                wR += ").concat(f, ") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(t.inHeight, ") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(m, ";\n                  wC += ").concat(p, ") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(t.inWidth, ") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(w, " currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a ? o ? "(((batch * ".concat(t.inDepth, " + xD) * ").concat(t.inHeight, " + xR) * ").concat(t.inWidth, " + xC) * ").concat(t.inChannels, " + ch") : "((xD * ".concat(t.inHeight, " + xR) * ").concat(t.inWidth, " + xC) * ").concat(t.inChannels, " + ch") : "wD * ".concat(h, " * ").concat(m, " +\n                      wR * ").concat(m, " + wC"), ";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ")
        } else {
            var k = "".concat(n, "(").concat(n, "(").concat(n, "(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])");
            "avg" === n && (k = "avgValue / count");
            var C = 4 * Math.floor(i / 4)
              , E = i % 4
              , S = "\n      if (".concat(b, ") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ");
            this.userCode = "\n      const ivec3 strides =\n        ivec3(".concat(s, ", ").concat(u, ", ").concat(c, ");\n      const ivec3 pads = ivec3(").concat(v, ", ").concat(g, ", ").concat(y, ");\n      const float initializationValue = ").concat(x, ";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(t.inWidth, ") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(x, ");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d, ";\n            wD += ").concat(l, ") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(t.inDepth, ") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h, ";\n            wR += ").concat(f, ") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight, ") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(C, "; wC += 4) {\n              int xC = xCCorner + wC * ").concat(p, ";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(p, ", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(p, ", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(p, ", ch)\n              );\n\n              ").concat(S, "\n            }\n\n            int xC = xCCorner + ").concat(C, ";\n            if (").concat(1 === E, ") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S, "\n            } else if (").concat(2 === E, ") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(p, ", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S, "\n            } else if (").concat(3 === E, ") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(p, ", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(p, ", ch),\n                initializationValue\n              );\n\n              ").concat(S, "\n            }\n          }\n          setOutput(").concat(k, ");\n        }\n      }\n    ")
        }
    }
      , UP = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["x"];
        var r = t.windowSize
          , a = t.batchSize
          , o = t.inSize
          , i = t.outSize;
        this.outputShape = [a, i];
        var s = "0.0"
          , u = "";
        "prod" === n ? s = "1.0" : "min" === n ? (s = "1.0 / 1e-20",
        u = "min") : "max" === n && (s = "-1.0 / 1e-20",
        u = "max");
        var c = "".concat(n, "(").concat(n, "(").concat(n, "(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])");
        "sum" === n ? c = "sumValue" : "prod" === n ? c = "prodValue" : "all" === n ? c = "allValue" : "any" === n && (c = "anyValue");
        var l = 4 * Math.floor(r / 4)
          , f = r % 4
          , p = "\n      if (".concat("sum" === n, ") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod" === n, ") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(u, "(values, minMaxValue);\n      }\n    ")
          , d = "vec4";
        "all" === n ? (s = "1.0",
        p = "\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",
        d = "bvec4") : "any" === n && (s = "0.0",
        p = "\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",
        d = "bvec4");
        var h = "";
        o % r > 0 && (h = "\n        if (inIdx < 0 || inIdx >= ".concat(o, ") {\n          return initializationValue;\n        }\n      ")),
        this.userCode = "\n      const float initializationValue = ".concat(s, ";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(h, "\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(r, ";\n\n        vec4 minMaxValue = vec4(").concat(s, ");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l, "; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d, " values = ").concat(d, "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(p, "\n        }\n\n        int inIdx = inOffset + ").concat(l, ";\n        if (").concat(1 === f, ") {\n          ").concat(d, " values = ").concat(d, "(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(p, "\n        } else if (").concat(2 === f, ") {\n          ").concat(d, " values = ").concat(d, "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(p, "\n        } else if (").concat(3 === f, ") {\n          ").concat(d, " values = ").concat(d, "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(p, "\n        }\n        setOutput(").concat(c, ");\n      }\n    ")
    }
      , VP = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = t;
        for (var r, a = "", o = 0; o < 4; o++) {
            var i = "thisRC = rc;";
            o % 2 == 1 && (i += "thisRC.z += 1;"),
            o > 1 && (i += "thisRC.y += 1;"),
            a += "\n        ".concat(i, "\n        ").concat(o > 0 ? "if(thisRC.y < rows && thisRC.z < cols){" : "", "\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(o, "] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(o > 0 ? "}" : "", "\n      ")
        }
        /**
	   * @license
	   * Copyright 2018 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        this.userCode = "\n      ".concat((r = n,
        "\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(xM(["r", "c", "d"], r), "\n      return ivec3(r, c, d);\n    }\n  ")), "\n      ").concat(wM(t), "\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(t[1], ";\n        int cols = ").concat(t[2], ";\n\n        ").concat(a, "\n\n        setOutput(result);\n      }\n    ")
    }
      , zP = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["dy"],
        this.outputShape = [],
        this.outputShape = n.shape;
        var a = Uy(n.shape, 3)
          , o = a[1]
          , i = a[2]
          , s = Uy(t.shape, 3)
          , u = s[1]
          , c = s[2]
          , l = [r && u > 1 ? o - 1 : o, r && c > 1 ? i - 1 : i]
          , f = [r && u > 1 ? u - 1 : u, r && c > 1 ? c - 1 : c]
          , p = l[0] / f[0]
          , d = l[1] / f[1]
          , h = 1 / p
          , m = 1 / d
          , v = 2 * Math.ceil(h) + 2
          , g = 2 * Math.ceil(m) + 2;
        this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(p, ");\n        const float widthScale = float(").concat(d, ");\n\n        const float invHeightScale = float(").concat(h, ");\n        const float invWidthScale = float(").concat(m, ");\n\n        const int winHeight = int(").concat(v, ");\n        const int winWidth = int(").concat(g, ");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(u, ") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(c, ") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(o - 1, ".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(i - 1, ".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")
    }
      , WP = function e(t, n, r, a) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.outputShape = [];
        var o = Uy(t, 4)
          , i = o[0]
          , s = o[1]
          , u = o[2]
          , c = o[3];
        this.outputShape = [i, n, r, c];
        var l = [a && n > 1 ? s - 1 : s, a && r > 1 ? u - 1 : u]
          , f = [a && n > 1 ? n - 1 : n, a && r > 1 ? r - 1 : r];
        this.userCode = "\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0] / f[0], ",\n          ").concat(l[1] / f[1], ");\n      const vec2 inputShapeRC = vec2(").concat(s, ".0, ").concat(u, ".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")
    }
      , jP = function e(t, n, r, a) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = [];
        var o = Uy(t, 4)
          , i = o[0]
          , s = o[1]
          , u = o[2]
          , c = o[3];
        this.outputShape = [i, n, r, c];
        var l = [a && n > 1 ? s - 1 : s, a && r > 1 ? u - 1 : u]
          , f = [a && n > 1 ? n - 1 : n, a && r > 1 ? r - 1 : r];
        this.userCode = "\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0] / f[0], ",\n          ").concat(l[1] / f[1], ",\n          ").concat(l[1] / f[1], ");\n      const vec3 inputShapeRC = vec3(").concat(s, ".0, ").concat(u, ".0,\n                                     ").concat(u, ".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c - 1, ";\n        bool hasNextRow = coords.z < ").concat(r - 1, ";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")
    }
      , HP = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["dy"],
        this.outputShape = [],
        this.outputShape = n.shape;
        var a = Uy(n.shape, 3)
          , o = a[1]
          , i = a[2]
          , s = Uy(t.shape, 3)
          , u = s[1]
          , c = s[2]
          , l = [r && u > 1 ? o - 1 : o, r && c > 1 ? i - 1 : i]
          , f = [r && u > 1 ? u - 1 : u, r && c > 1 ? c - 1 : c]
          , p = l[0] / f[0]
          , d = l[1] / f[1]
          , h = 1 / p
          , m = 1 / d
          , v = 2 * Math.ceil(h) + 2
          , g = 2 * Math.ceil(m) + 2;
        this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(p, ");\n        const float widthScale = float(").concat(d, ");\n\n        const float invHeightScale = float(").concat(h, ");\n        const float invWidthScale = float(").concat(m, ");\n\n        const int winHeight = int(").concat(v, ");\n        const int winWidth = int(").concat(g, ");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(u, ") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(c, ") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(l[0], ") *\n                (float(dyR) / float(").concat(f[0], "));\n\n            float sourceFracCol =\n                float(").concat(l[1], ") *\n                  (float(dyC) / float(").concat(f[1], "));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(o, ") - 1),\n                ").concat(r, " ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(i, ") - 1),\n                ").concat(r, " ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")
    }
      , GP = function e(t, n, r, a) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.outputShape = [];
        var o = Uy(t, 4)
          , i = o[0]
          , s = o[1]
          , u = o[2]
          , c = o[3];
        this.outputShape = [i, n, r, c];
        var l = [a && n > 1 ? s - 1 : s, a && r > 1 ? u - 1 : u]
          , f = [a && n > 1 ? n - 1 : n, a && r > 1 ? r - 1 : r]
          , p = a ? "0.5" : "0.0";
        this.userCode = "\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0] / f[0], ",\n          ").concat(l[1] / f[1], ");\n      const vec2 inputShapeRC = vec2(").concat(s, ".0, ").concat(u, ".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(p, ")));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")
    }
      , KP = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["x"];
        var r = t.length;
        if (r > 4)
            throw new Error("WebGL backend: Reverse of rank-".concat(r, " tensor is not yet supported"));
        if (this.outputShape = t,
        1 !== r) {
            var a = t.map((function(e, r) {
                return function(e) {
                    return -1 !== n.indexOf(e) && 1 !== t[e] ? "".concat(t[e], " - coords[").concat(e, "] - 1") : "coords[".concat(e, "]")
                }(r)
            }
            )).join(",")
              , o = DM(r);
            this.userCode = "\n      void main() {\n        ".concat(o, " coords = getOutputCoords();\n        setOutput(getX(").concat(a, "));\n      }\n    ")
        } else
            this.userCode = "\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(t[0], " - coord - 1));\n        }\n      ")
    }
      , qP = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["x"],
        this.packedInputs = !0,
        this.packedOutput = !0;
        var r = t.length;
        if (r > 4)
            throw new Error("WebGL backend: Reverse of rank-".concat(r, " tensor is not yet supported"));
        this.outputShape = t;
        var a = yM("rc", r)
          , o = "".concat(a[r - 1], " + 1 < ").concat(this.outputShape[r - 1])
          , i = "".concat(a[r - 2], " + 1 < ").concat(this.outputShape[r - 2])
          , s = DM(r);
        function u(e) {
            var r = t.map((function(r, a) {
                return function(e, r) {
                    return -1 !== n.indexOf(e) && 1 !== t[e] ? "".concat(t[e], " - ").concat(r[e], " - 1") : "".concat(r[e])
                }(a, e)
            }
            ));
            return "getChannel(getX(".concat(r.join(","), "), vec2(").concat(r.slice(-2).join(","), "))")
        }
        this.userCode = 1 === r ? "\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(t[0], " - rc - 1),\n            ").concat(t[0], " - rc - 1);\n          if(").concat(o, "){\n              result.g = getChannel(getX(").concat(t[0], " - (rc  + 1) - 1),\n                ").concat(t[0], " - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      ") : "\n        void main() {\n          ".concat(s, " rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e) {
            return u(e)
        }(a.slice()), ";\n          if(").concat(o, "){\n            result.g = ").concat(function(e) {
            return e[r - 1] = "(" + e[r - 1] + " + 1)",
            u(e)
        }(a.slice()), ";\n          }\n          if(").concat(i, ") {\n            result.b = ").concat(function(e) {
            return e[r - 2] = "(" + e[r - 2] + " + 1)",
            u(e)
        }(a.slice()), ";\n            if(").concat(o, ") {\n              result.a = ").concat(function(e) {
            return e[r - 1] = "(" + e[r - 1] + " + 1)",
            e[r - 2] = "(" + e[r - 2] + " + 1)",
            u(e)
        }(a.slice()), ";\n            }\n          }\n          setOutput(result);\n        }\n    ")
    }
      , XP = function e(t, n, r, a, o, i) {
        Ay(this, e),
        this.variableNames = ["updates", "indices", "defaultValue"],
        this.outputShape = i;
        var s = DM(o.length)
          , u = DM(i.length)
          , c = "";
        1 === r ? c = "i" : 2 === r && (c = "i, j");
        var l = "getIndices(".concat(c, ")")
          , f = "";
        1 === a ? f = "i" : 2 === a && (f = "i, coords[1]");
        var p = "getUpdates(".concat(f, ")")
          , d = n > 1 ? "strides[j]" : "strides";
        this.userCode = "\n        ".concat(s, " strides = ").concat(s, "(").concat(o, ");\n\n        void main() {\n          ").concat(u, " coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(t, "; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(n, "; j++) {\n              int index = round(").concat(l, ");\n              flattenedIndex += index * ").concat(d, ";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(p, ";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      ")
    }
      , QP = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["x", "segmentIds"];
        var r = t.windowSize
          , a = t.batchSize
          , o = t.inSize
          , i = t.numSegments
          , s = i * Math.ceil(o / r);
        this.outputShape = [a, s];
        var u = 4 * Math.floor(r / 4)
          , c = r % 4
          , l = "\n        sumValue += dot(values, segFilter);\n    "
          , f = "";
        o % r > 0 && (f = "\n        if (inIdx < 0 || inIdx >= ".concat(o, ") {\n          return initializationValue;\n        }\n      "));
        var p = "";
        o % r > 0 && (p = "\n        if (inIdx < 0 || inIdx >= ".concat(o, ") {\n          return -1.0;\n        }\n      ")),
        this.userCode = "\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ".concat(f, "\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(p, "\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(i, ")) * float(").concat(r, "));\n        int currentSeg = int(mod(float(outIdx), float(").concat(i, ")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(u, "; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l, "\n        }\n\n        int inIdx = inOffset + ").concat(u, ";\n        if (").concat(1 === c, ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l, "\n        } else if (").concat(2 === c, ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l, "\n        } else if (").concat(3 === c, ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l, "\n        }\n        setOutput(sumValue);\n      }\n    ")
    }
      , YP = function e(t, n, r) {
        var a, o;
        if (Ay(this, e),
        this.variableNames = ["c", "a", "b"],
        this.outputShape = n,
        r > 4)
            throw Error("Where for rank ".concat(r, " is not yet supported"));
        if (1 === r)
            o = "resRC",
            a = "resRC";
        else {
            for (var i = ["resRC.x", "resRC.y", "resRC.z", "resRC.w"], s = [], u = [], c = 0; c < n.length; c++)
                u.push("".concat(i[c])),
                c < t && s.push("".concat(i[c]));
            a = s.join(),
            o = u.join()
        }
        var l = DM(r);
        this.userCode = "\n      void main() {\n        ".concat(l, " resRC = getOutputCoords();\n        float cVal = getC(").concat(a, ");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(o, "));\n        } else {\n          setOutput(getB(").concat(o, "));\n        }\n      }\n    ")
    }
      , $P = function() {
        function e(t) {
            Ay(this, e),
            this.variableNames = ["source"],
            this.outputShape = t,
            this.rank = t.length;
            var n, r = DM(this.rank), a = "uniform int start[".concat(this.rank, "];"), o = function(e) {
                if (1 === e)
                    return "sourceLoc";
                if (e <= 6)
                    return ZP.slice(0, e).map((function(e) {
                        return "sourceLoc." + e
                    }
                    )).join(",");
                throw Error("Slicing for rank ".concat(e, " is not yet supported"))
            }/**
	     * @license
	     * Copyright 2019 Google LLC. All Rights Reserved.
	     * Licensed under the Apache License, Version 2.0 (the "License");
	     * you may not use this file except in compliance with the License.
	     * You may obtain a copy of the License at
	     *
	     * http://www.apache.org/licenses/LICENSE-2.0
	     *
	     * Unless required by applicable law or agreed to in writing, software
	     * distributed under the License is distributed on an "AS IS" BASIS,
	     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	     * See the License for the specific language governing permissions and
	     * limitations under the License.
	     * =============================================================================
	     */
            (this.rank);
            n = "\n        ".concat(r, " sourceLoc;\n        ").concat(r, " coords = getOutputCoords();\n        ").concat(t.map((function(e, t) {
                return "sourceLoc.".concat(ZP[t], " = start[").concat(t, "] + coords.").concat(ZP[t], ";")
            }
            )).join("\n"), "\n      "),
            this.userCode = "\n      ".concat(a, "\n      void main() {\n        ").concat(n, "\n        setOutput(getSource(").concat(o, "));\n      }\n    ")
        }
        return _y(e, [{
            key: "getCustomSetupFunc",
            value: function(e) {
                var t = this;
                if (e.length !== this.rank)
                    throw Error("The rank (".concat(this.rank, ") of the program must match the length of start (").concat(e.length, ")"));
                return function(n, r) {
                    null == t.startLoc && (t.startLoc = n.getUniformLocationNoThrow(r, "start"),
                    null == t.startLoc) || n.gl.uniform1iv(t.startLoc, e)
                }
            }
        }]),
        e
    }()
      , ZP = ["x", "y", "z", "w", "u", "v"]
      , JP = function() {
        function e(t) {
            Ay(this, e),
            this.variableNames = ["source"],
            this.packedInputs = !0,
            this.packedOutput = !0,
            this.outputShape = t,
            this.rank = t.length;
            var n = DM(this.rank)
              , r = yM("coords", this.rank)
              , a = yM("sourceLoc", this.rank)
              , o = 1 === this.rank ? "sourceLoc" : "vec2(".concat(a.slice(-2).join(), ")")
              , i = "getChannel(getSource(".concat(a.join(), "), ").concat(o, ")")
              , s = "\n      result.x = ".concat(i, ";\n      if (++").concat(r[this.rank - 1], " < ").concat(t[this.rank - 1], ") {\n        ++").concat(a[this.rank - 1], ";\n        result.y = ").concat(i, ";\n        --").concat(a[this.rank - 1], ";\n      }\n    ")
              , u = 1 === this.rank ? "" : "\n      --".concat(r[this.rank - 1], ";\n      if (++").concat(r[this.rank - 2], " < ").concat(t[this.rank - 2], ") {\n        ++").concat(a[this.rank - 2], ";\n        result.z = ").concat(i, ";\n        if (++").concat(r[this.rank - 1], " < ").concat(t[this.rank - 1], ") {\n          ++").concat(a[this.rank - 1], ";\n          result.w = ").concat(i, ";\n        }\n      }\n    ")
              , c = this.rank <= 4 ? "sourceLoc = coords +\n            ".concat(n, "(").concat(t.map((function(e, t) {
                return "start[".concat(t, "]")
            }
            )).join(), ");") : t.map((function(e, t) {
                return "".concat(a[t], " = ").concat(r[t], " + start[").concat(t, "];")
            }
            )).join("\n");
            this.userCode = "\n      uniform int start[".concat(this.rank, "];\n      void main() {\n        ").concat(n, " coords = getOutputCoords();\n        ").concat(n, " sourceLoc;\n        ").concat(c, "\n        vec4 result = vec4(0.);\n        ").concat(s, "\n        ").concat(u, "\n        setOutput(result);\n      }\n    ")
        }
        return _y(e, [{
            key: "getCustomSetupFunc",
            value: function(e) {
                var t = this;
                if (e.length !== this.rank)
                    throw Error("The rank (".concat(this.rank, ") of the program must match the length of start (").concat(e.length, ")"));
                return function(n, r) {
                    null == t.startLoc && (t.startLoc = n.getUniformLocationNoThrow(r, "start"),
                    null == t.startLoc) || n.gl.uniform1iv(t.startLoc, e)
                }
            }
        }]),
        e
    }()
      , eL = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["x"],
        this.outputShape = r;
        var a = r.length
          , o = DM(r.length)
          , i = DM(r.length)
          , s = "";
        if (1 === a)
            s = "coords * strides + begin";
        else {
            var u = 0;
            s = r.map((function(e, t) {
                return u++,
                1 === r.length ? "coords * strides[".concat(t, "] + begin[").concat(t, "]") : "coords[".concat(u - 1, "] * strides[").concat(t, "] + begin[").concat(t, "]")
            }
            )).join(",")
        }
        this.userCode = "\n      ".concat(o, " begin = ").concat(o, "(").concat(t, ");\n      ").concat(o, " strides = ").concat(o, "(").concat(n, ");\n\n      void main() {\n        ").concat(i, " coords = getOutputCoords();\n        setOutput(getX(").concat(s, "));\n      }\n    ")
    }
      , tL = function() {
        function e(t) {
            Ay(this, e),
            this.gpgpu = t,
            this.numUsedTextures = 0,
            this.numFreeTextures = 0,
            this._numBytesAllocated = 0,
            this._numBytesFree = 0,
            this.freeTextures = {},
            this.logEnabled = !1,
            this.usedTextures = {}
        }
        return _y(e, [{
            key: "acquireTexture",
            value: function(e, t, n) {
                var r = rL(t, n)
                  , a = aL(e, r, n);
                a in this.freeTextures || (this.freeTextures[a] = []),
                a in this.usedTextures || (this.usedTextures[a] = []);
                var o, i = nL(e, r, this.gpgpu.gl, this.gpgpu.textureConfig, n);
                if (this.freeTextures[a].length > 0) {
                    this.numFreeTextures--,
                    this.numUsedTextures++,
                    this._numBytesFree -= i,
                    this.log();
                    var s = this.freeTextures[a].shift();
                    return this.usedTextures[a].push(s),
                    s
                }
                return r === CB.PACKED_2X2_FLOAT32 ? o = this.gpgpu.createPackedMatrixTexture(e[0], e[1]) : r === CB.PACKED_2X2_FLOAT16 ? o = this.gpgpu.createFloat16PackedMatrixTexture(e[0], e[1]) : r === CB.UNPACKED_FLOAT32 ? o = this.gpgpu.createFloat32MatrixTexture(e[0], e[1]) : r === CB.UNPACKED_FLOAT16 ? o = this.gpgpu.createFloat16MatrixTexture(e[0], e[1]) : r === CB.PACKED_4X1_UNSIGNED_BYTE && (o = this.gpgpu.createUnsignedBytesMatrixTexture(e[0], e[1])),
                this.usedTextures[a].push(o),
                this.numUsedTextures++,
                this._numBytesAllocated += i,
                this.log(),
                o
            }
        }, {
            key: "releaseTexture",
            value: function(e, t, n, r) {
                if (null != this.freeTextures) {
                    var a = rL(n, r)
                      , o = aL(t, a, r);
                    o in this.freeTextures || (this.freeTextures[o] = []);
                    var i = nL(t, a, this.gpgpu.gl, this.gpgpu.textureConfig, r)
                      , s = oC().get("WEBGL_DELETE_TEXTURE_THRESHOLD");
                    -1 !== s && this._numBytesAllocated > s ? (this.gpgpu.deleteMatrixTexture(e),
                    this._numBytesAllocated -= i) : (this.freeTextures[o].push(e),
                    this.numFreeTextures++,
                    this._numBytesFree += i),
                    this.numUsedTextures--;
                    var u = this.usedTextures[o]
                      , c = u.indexOf(e);
                    if (c < 0)
                        throw new Error("Cannot release a texture that was never provided by this texture manager");
                    u.splice(c, 1),
                    this.log()
                }
            }
        }, {
            key: "log",
            value: function() {
                if (this.logEnabled) {
                    var e = this.numFreeTextures + this.numUsedTextures;
                    console.log("Free/Used", "".concat(this.numFreeTextures, " / ").concat(this.numUsedTextures), "(".concat(e, ")"));
                    var t = this._numBytesFree / this._numBytesAllocated;
                    console.log("Bytes allocated: ".concat(this._numBytesAllocated)),
                    console.log("Bytes unused: ".concat(this._numBytesFree, " (").concat(Math.round(100 * t), "%)"))
                }
            }
        }, {
            key: "getNumUsedTextures",
            value: function() {
                return this.numUsedTextures
            }
        }, {
            key: "getNumFreeTextures",
            value: function() {
                return this.numFreeTextures
            }
        }, {
            key: "dispose",
            value: function() {
                var e = this;
                if (null != this.freeTextures) {
                    for (var t in this.freeTextures)
                        this.freeTextures[t].forEach((function(t) {
                            e.gpgpu.deleteMatrixTexture(t)
                        }
                        ));
                    for (var n in this.usedTextures)
                        this.usedTextures[n].forEach((function(t) {
                            e.gpgpu.deleteMatrixTexture(t)
                        }
                        ));
                    this.freeTextures = null,
                    this.usedTextures = null,
                    this.numUsedTextures = 0,
                    this.numFreeTextures = 0,
                    this._numBytesAllocated = 0,
                    this._numBytesFree = 0
                }
            }
        }, {
            key: "numBytesAllocated",
            get: function() {
                return this._numBytesAllocated
            }
        }, {
            key: "numBytesFree",
            get: function() {
                return this._numBytesFree
            }
        }]),
        e
    }();
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function nL(e, t, n, r, a) {
        var o, i = function(e, t) {
            switch (e) {
            case CB.PACKED_2X2_FLOAT32:
                return wP(t);
            case CB.PACKED_2X2_FLOAT16:
                return kP(t);
            case CB.UNPACKED_FLOAT32:
                return yP(t);
            case CB.UNPACKED_FLOAT16:
                return bP(t);
            case CB.PACKED_4X1_UNSIGNED_BYTE:
                return xP(t);
            default:
                throw new Error("Unknown physical texture type ".concat(e))
            }
        }(t, r);
        if (a) {
            var s = Uy(DB(e[0], e[1]), 2);
            o = s[0] * s[1]
        } else {
            var u = Uy(RB(e[0], e[1]), 2);
            o = u[0] * u[1]
        }
        return o * function(e, t) {
            var n = e;
            if (t === n.R32F)
                return 4;
            if (t === n.R16F)
                return 2;
            if (t === n.RGBA32F)
                return 16;
            if (t === e.RGBA)
                return 16;
            if (t === n.RGBA16F)
                return 8;
            throw new Error("Unknown internal format ".concat(t))
        }(n, i)
    }
    function rL(e, t) {
        if (e === kB.UPLOAD)
            return CB.PACKED_2X2_FLOAT32;
        if (e === kB.RENDER || null == e)
            return function(e) {
                return oC().getBool("WEBGL_RENDER_FLOAT32_ENABLED") ? e ? CB.PACKED_2X2_FLOAT32 : CB.UNPACKED_FLOAT32 : e ? CB.PACKED_2X2_FLOAT16 : CB.UNPACKED_FLOAT16
            }(t);
        if (e === kB.DOWNLOAD || e === kB.PIXELS)
            return CB.PACKED_4X1_UNSIGNED_BYTE;
        throw new Error("Unknown logical texture type ".concat(e))
    }
    function aL(e, t, n) {
        return "".concat(e[0], "_").concat(e[1], "_").concat(t, "_").concat(n)
    }
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var oL = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["A"];
        for (var r = new Array(t.length), a = 0; a < r.length; a++)
            r[a] = t[a] * n[a];
        this.outputShape = r,
        this.rank = r.length;
        var o = DM(this.rank)
          , i = function(e) {
            var t = e.length;
            if (t > 5)
                throw Error("Tile for rank ".concat(t, " is not yet supported"));
            if (1 === t)
                return "imod(resRC, ".concat(e[0], ")");
            for (var n = ["resRC.x", "resRC.y", "resRC.z", "resRC.w", "resRC.u"], r = [], a = 0; a < e.length; a++)
                r.push("imod(".concat(n[a], ", ").concat(e[a], ")"));
            return r.join()
        }/**
	   * @license
	   * Copyright 2017 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        (t);
        this.userCode = "\n      void main() {\n        ".concat(o, " resRC = getOutputCoords();\n        setOutput(getA(").concat(i, "));\n      }\n    ")
    }
      , iL = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.outputShape = t,
        this.userCode = "\n      float unaryOperation(float x) {\n        ".concat(n, "\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")
    }
      , sL = "if (isnan(x)) return x;"
      , uL = "return abs(x);"
      , cL = sL + "\n  return (x < 0.0) ? 0.0 : x;\n"
      , lL = sL + "\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n"
      , fL = "return (x >= 0.0) ? x : (exp(x) - 1.0);"
      , pL = "\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = ".concat(ZN, ";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")
      , dL = "return -x;"
      , hL = "return ceil(x);"
      , mL = "return floor(x);"
      , vL = "return exp(x);"
      , gL = "return exp(x) - 1.0;"
      , yL = "return x;"
      , bL = "\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"
      , xL = "\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"
      , wL = "\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"
      , kL = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = t,
        this.userCode = "\n      vec4 unaryOperation(vec4 x) {\n        ".concat(n, "\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")
    }
      , CL = function e(t) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !0,
        this.packedOutput = !1,
        this.outputShape = t;
        var n = t.length
          , r = yM("rc", n)
          , a = DM(n)
          , o = function(e, t) {
            if (1 === e)
                return "rc";
            for (var n = "", r = 0; r < e; r++)
                n += t[r],
                r < e - 1 && (n += ",");
            return n
        }(n, r)
          , i = r.slice(-2)
          , s = n <= 1 ? "rc" : "vec2(".concat(i.join(","), ")");
        this.userCode = "\n      void main() {\n        ".concat(a, " rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(o, ");\n\n        setOutput(getChannel(packedInput, ").concat(s, "));\n      }\n    ")
    }
      , EL = l_.segment_util
      , SL = f_
      , IL = p_
      , TL = d_
      , AL = KA
      , NL = {};
    function _L(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        if ("linear" === e)
            return "return x;";
        if ("relu" === e)
            return t ? bL : cL;
        if ("elu" === e)
            return t ? wL : fL;
        if ("relu6" === e)
            return t ? xL : lL;
        if ("prelu" === e)
            return t ? zM : UM;
        throw new Error("Activation ".concat(e, " has not been implemented for the WebGL backend."))
    }
    var RL = function(e) {
        Oy(o, e);
        var t, n, r, a = Py(o);
        function o(e) {
            var t, n;
            if (Ay(this, o),
            (t = a.call(this)).pendingRead = new WeakMap,
            t.pendingDisposal = new WeakSet,
            t.dataRefCount = new WeakMap,
            t.numBytesInGPU = 0,
            t.uploadWaitMs = 0,
            t.downloadWaitMs = 0,
            t.warnedAboutMemory = !1,
            t.warnedAboutCPUBackend = !1,
            t.pendingDeletes = 0,
            t.disposed = !1,
            !oC().getBool("HAS_WEBGL"))
                throw new Error("WebGL is not supported on this device");
            if (null == e) {
                var r = _B(oC().getNumber("WEBGL_VERSION"));
                t.binaryCache = ((n = oC().getNumber("WEBGL_VERSION"))in NL || (NL[n] = {}),
                NL[n]),
                t.gpgpu = new CP(r),
                t.canvas = r.canvas,
                t.gpgpuCreatedLocally = !0
            } else
                t.gpgpu = e,
                t.binaryCache = {},
                t.gpgpuCreatedLocally = !1,
                t.canvas = e.gl.canvas;
            return t.textureManager = new tL(t.gpgpu),
            t.numMBBeforeWarning = null == oC().global.screen ? 1024 : oC().global.screen.height * oC().global.screen.width * window.devicePixelRatio * 600 / 1024 / 1024,
            t.texData = new wk(Fy(t),kS()),
            My(t)
        }
        return _y(o, [{
            key: "numDataIds",
            value: function() {
                return this.texData.numDataIds() + (this.cpuBackend ? this.cpuBackend.numDataIds() : 0) - this.pendingDeletes
            }
        }, {
            key: "write",
            value: function(e, t, n) {
                if ((oC().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS") || oC().getBool("DEBUG")) && this.checkNumericalProblems(e),
                "complex64" === n && null != e)
                    throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");
                var r = {};
                return this.texData.set(r, {
                    shape: t,
                    dtype: n,
                    values: e,
                    usage: kB.UPLOAD,
                    refCount: 1,
                    complexParentRefCount: 0
                }),
                r
            }
        }, {
            key: "incRef",
            value: function(e) {
                this.texData.get(e).refCount++
            }
        }, {
            key: "decRef",
            value: function(e) {
                this.texData.has(e) && this.texData.get(e).refCount--
            }
        }, {
            key: "move",
            value: function(e, t, n, r) {
                if (oC().getBool("DEBUG") && this.checkNumericalProblems(t),
                "complex64" === r)
                    throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");
                this.texData.set(e, {
                    shape: n,
                    dtype: r,
                    values: t,
                    usage: kB.UPLOAD,
                    refCount: 1,
                    complexParentRefCount: 0
                })
            }
        }, {
            key: "disposeIntermediateTensorInfo",
            value: function(e) {
                var t = e.dataId;
                if (this.texData.has(t)) {
                    var n = this.texData.get(t);
                    n.refCount--,
                    n.refCount < 1 && this.disposeData(t)
                }
            }
        }, {
            key: "readSync",
            value: function(e) {
                var t = this.texData.get(e)
                  , n = t.values
                  , r = t.dtype
                  , a = t.complexTensorInfos
                  , o = t.slice
                  , i = t.shape
                  , s = t.isPacked;
                if (null != o) {
                    var u;
                    u = s ? new kL(i,yL) : new iL(i,yL);
                    var c = this.runWebGLProgram(u, [{
                        dataId: e,
                        shape: i,
                        dtype: r
                    }], r)
                      , l = this.readSync(c.dataId);
                    return this.disposeIntermediateTensorInfo(c),
                    l
                }
                if (null != n)
                    return this.convertAndCacheOnCPU(e);
                if ("string" === r)
                    return n;
                var f, p, d = null != this.activeTimers;
                return d && (f = SC()),
                p = "complex64" === r ? e_(this.readSync(a.real.dataId), this.readSync(a.imag.dataId)) : this.getValuesFromTexture(e),
                d && (this.downloadWaitMs += SC() - f),
                this.convertAndCacheOnCPU(e, p)
            }
        }, {
            key: "read",
            value: (r = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r, a, o, i, s, u, c, l, f, p, d, h, m, v, g, y, b, x, w;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (!this.pendingRead.has(t)) {
                                e.next = 3;
                                break
                            }
                            return n = this.pendingRead.get(t),
                            e.abrupt("return", new Promise((function(e) {
                                return n.push(e)
                            }
                            )));
                        case 3:
                            if (r = this.texData.get(t),
                            a = r.values,
                            o = r.shape,
                            i = r.slice,
                            s = r.dtype,
                            u = r.complexTensorInfos,
                            c = r.isPacked,
                            null == i) {
                                e.next = 8;
                                break
                            }
                            return l = c ? new kL(o,yL) : new iL(o,yL),
                            f = this.runWebGLProgram(l, [{
                                dataId: t,
                                shape: o,
                                dtype: s
                            }], s),
                            p = this.read(f.dataId),
                            e.abrupt("return", (this.disposeIntermediateTensorInfo(f),
                            p));
                        case 8:
                            if (null == a) {
                                e.next = 10;
                                break
                            }
                            return e.abrupt("return", this.convertAndCacheOnCPU(t));
                        case 10:
                            if (oC().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED") || 2 !== oC().getNumber("WEBGL_VERSION")) {
                                e.next = 12;
                                break
                            }
                            throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");
                        case 12:
                            if (m = null,
                            "complex64" !== s && oC().get("WEBGL_BUFFER_SUPPORTED") && (d = this.decode(t),
                            g = this.texData.get(d.dataId),
                            m = (v = this.gpgpu).createBufferFromTexture.apply(v, [g.texture].concat(Vy(OB(o))))),
                            this.pendingRead.set(t, []),
                            e.t0 = "complex64" !== s,
                            !e.t0) {
                                e.next = 19;
                                break
                            }
                            return e.next = 19,
                            this.gpgpu.createAndWaitForFence();
                        case 19:
                            if ("complex64" !== s) {
                                e.next = 26;
                                break
                            }
                            return e.next = 22,
                            Promise.all([this.read(u.real.dataId), this.read(u.imag.dataId)]);
                        case 22:
                            y = e.sent,
                            h = e_(y[0], y[1]),
                            e.next = 27;
                            break;
                        case 26:
                            null == m ? h = this.getValuesFromTexture(t) : (b = _k(o),
                            h = this.gpgpu.downloadFloat32MatrixFromBuffer(m, b));
                        case 27:
                            return null != d && this.disposeIntermediateTensorInfo(d),
                            x = this.convertAndCacheOnCPU(t, h),
                            w = this.pendingRead.get(t),
                            e.abrupt("return", (this.pendingRead.delete(t),
                            w.forEach((function(e) {
                                return e(x)
                            }
                            )),
                            this.pendingDisposal.has(t) && (this.pendingDisposal.delete(t),
                            this.disposeData(t),
                            this.pendingDeletes--),
                            x));
                        case 30:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return r.apply(this, arguments)
            }
            )
        }, {
            key: "checkNumericalProblems",
            value: function(e) {
                if (null != e)
                    for (var t = 0; t < e.length; t++) {
                        var n = e[t];
                        if (!MB(n)) {
                            if (oC().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))
                                throw Error("The value ".concat(n, " cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'"));
                            throw Error("The value ".concat(n, " cannot be represented on this device."))
                        }
                    }
            }
        }, {
            key: "getValuesFromTexture",
            value: function(e) {
                var t = this.texData.get(e)
                  , n = t.shape
                  , r = t.dtype
                  , a = t.isPacked
                  , o = _k(n);
                if (oC().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")) {
                    var i, s = this.decode(e), u = this.texData.get(s.dataId), c = (i = this.gpgpu).downloadMatrixFromPackedTexture.apply(i, [u.texture].concat(Vy(OB(n)))).subarray(0, o);
                    return this.disposeIntermediateTensorInfo(s),
                    c
                }
                var l = oC().getBool("WEBGL_PACK") && !0 === a
                  , f = l ? QB(n) : n
                  , p = l ? new fP(f) : new lP(f)
                  , d = this.runWebGLProgram(p, [{
                    shape: f,
                    dtype: r,
                    dataId: e
                }], "float32")
                  , h = this.texData.get(d.dataId)
                  , m = this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture, h.texShape[0], h.texShape[1]).subarray(0, o);
                return this.disposeIntermediateTensorInfo(d),
                m
            }
        }, {
            key: "time",
            value: (n = Ty(regeneratorRuntime.mark((function e(t) {
                var n, r, a, o, i, s, u;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (n = this.activeTimers,
                            r = [],
                            a = !1,
                            null == this.programTimersStack ? (this.programTimersStack = r,
                            a = !0) : this.activeTimers.push(r),
                            this.activeTimers = r,
                            t(),
                            o = Nk(this.activeTimers.map((function(e) {
                                return e.query
                            }
                            ))).filter((function(e) {
                                return null != e
                            }
                            )),
                            i = Nk(this.activeTimers.map((function(e) {
                                return e.name
                            }
                            ))).filter((function(e) {
                                return null != e
                            }
                            )),
                            this.activeTimers = n,
                            a && (this.programTimersStack = null),
                            s = {
                                uploadWaitMs: this.uploadWaitMs,
                                downloadWaitMs: this.downloadWaitMs,
                                kernelMs: null,
                                wallMs: null
                            },
                            !(oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE") > 0)) {
                                e.next = 13;
                                break
                            }
                            return e.next = 9,
                            Promise.all(o);
                        case 9:
                            u = e.sent,
                            s.kernelMs = function(e) {
                                for (var t = 0, n = 0; n < e.length; n++)
                                    t += e[n];
                                return t
                            }(u),
                            s.getExtraProfileInfo = function() {
                                return u.map((function(e, t) {
                                    return {
                                        name: i[t],
                                        ms: e
                                    }
                                }
                                )).map((function(e) {
                                    return "".concat(e.name, ": ").concat(e.ms)
                                }
                                )).join(", ")
                            }
                            ,
                            e.next = 14;
                            break;
                        case 13:
                            s.kernelMs = {
                                error: "WebGL query timers are not supported in this environment."
                            };
                        case 14:
                            return e.abrupt("return", (this.uploadWaitMs = 0,
                            this.downloadWaitMs = 0,
                            s));
                        case 15:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "memory",
            value: function() {
                return {
                    unreliable: !1,
                    numBytesInGPU: this.numBytesInGPU,
                    numBytesInGPUAllocated: this.textureManager.numBytesAllocated,
                    numBytesInGPUFree: this.textureManager.numBytesFree
                }
            }
        }, {
            key: "startTimer",
            value: function() {
                return oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE") > 0 ? this.gpgpu.beginQuery() : {
                    startMs: SC(),
                    endMs: null
                }
            }
        }, {
            key: "endTimer",
            value: function(e) {
                return oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE") > 0 ? (this.gpgpu.endQuery(),
                e) : (e.endMs = SC(),
                e)
            }
        }, {
            key: "getQueryTime",
            value: (t = Ty(regeneratorRuntime.mark((function e(t) {
                var n;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (!(oC().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE") > 0)) {
                                e.next = 2;
                                break
                            }
                            return e.abrupt("return", this.gpgpu.waitForQueryAndGetTime(t));
                        case 2:
                            return n = t,
                            e.abrupt("return", n.endMs - n.startMs);
                        case 4:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "disposeData",
            value: function(e) {
                if (!this.pendingDisposal.has(e)) {
                    if (this.pendingRead.has(e))
                        return this.pendingDisposal.add(e),
                        void this.pendingDeletes++;
                    if (this.texData.has(e))
                        if (this.texData.get(e).complexParentRefCount > 0)
                            this.texData.get(e).refCount--;
                        else {
                            this.releaseGPUData(e);
                            var t = this.texData.get(e).complexTensorInfos;
                            null != t && (this.texData.get(t.real.dataId).complexParentRefCount--,
                            this.disposeIntermediateTensorInfo(t.real),
                            this.texData.get(t.imag.dataId).complexParentRefCount--,
                            this.disposeIntermediateTensorInfo(t.imag)),
                            this.texData.delete(e)
                        }
                }
            }
        }, {
            key: "releaseGPUData",
            value: function(e) {
                var t = this.texData.get(e)
                  , n = t.texture
                  , r = t.dtype
                  , a = t.texShape
                  , o = t.usage
                  , i = t.isPacked
                  , s = t.slice
                  , u = s && s.origDataId || e
                  , c = this.dataRefCount.get(u);
                c > 1 ? this.dataRefCount.set(u, c - 1) : (this.dataRefCount.delete(u),
                null != n && (this.numBytesInGPU -= this.computeBytes(a, r),
                this.textureManager.releaseTexture(n, a, o, i)));
                var l = this.texData.get(e);
                l.texture = null,
                l.texShape = null,
                l.isPacked = !1,
                l.slice = null
            }
        }, {
            key: "getTexture",
            value: function(e) {
                return this.uploadToGPU(e),
                this.texData.get(e).texture
            }
        }, {
            key: "getDataInfo",
            value: function(e) {
                return this.texData.get(e)
            }
        }, {
            key: "getCPUBackend",
            value: function() {
                return oC().getBool("WEBGL_CPU_FORWARD") ? (null == this.cpuBackend && (this.cpuBackend = kS().findBackend("cpu")),
                this.cpuBackend) : null
            }
        }, {
            key: "shouldExecuteOnCPU",
            value: function(e) {
                var t = this
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 128
                  , r = this.getCPUBackend();
                return this.warnedAboutCPUBackend || null != r || (console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),
                this.warnedAboutCPUBackend = !0),
                null != r && e.every((function(e) {
                    return null == t.texData.get(e.dataId).texture && _k(e.shape) < n
                }
                ))
            }
        }, {
            key: "getGPGPUContext",
            value: function() {
                return this.gpgpu
            }
        }, {
            key: "slice",
            value: function(e, t, n) {
                if (this.shouldExecuteOnCPU([e])) {
                    var r = lM(this.texData.get(e.dataId).values, t, n, e.shape, e.dtype);
                    return this.makeOutput(n, e.dtype, r)
                }
                if (0 === _k(n))
                    return pE([], n, e.dtype);
                var a = this.texData.get(e.dataId).isPacked
                  , o = gS(e.shape, t, n);
                if (a || !o) {
                    var i = oC().getBool("WEBGL_PACK_ARRAY_OPERATIONS") ? new JP(n) : new $P(n)
                      , s = i.getCustomSetupFunc(t);
                    return this.compileAndRun(i, [e], null, s)
                }
                return this.uploadToGPU(e.dataId),
                this.shallowSlice(e, t, n)
            }
        }, {
            key: "shallowSlice",
            value: function(e, t, n) {
                var r = this.texData.get(e.dataId)
                  , a = this.makeOutput(n, e.dtype)
                  , o = this.texData.get(a.dataId);
                Object.assign(o, r),
                o.shape = n,
                o.dtype = e.dtype;
                var i = yS(t, e.strides);
                r.slice && (i += r.slice.flatOffset),
                o.slice = {
                    flatOffset: i,
                    origDataId: r.slice && r.slice.origDataId || e.dataId
                };
                var s = this.dataRefCount.get(o.slice.origDataId) || 1;
                return this.dataRefCount.set(o.slice.origDataId, s + 1),
                a
            }
        }, {
            key: "stridedSlice",
            value: function(e, t, n, r) {
                var a = this
                  , o = this.tryRunOnCpuOrThrow([e], (function() {
                    return a.cpuBackend.stridedSlice(e, t, n, r)
                }
                ));
                if (o)
                    return o;
                var i = sS(t, n, r);
                if (i.some((function(e) {
                    return 0 === e
                }
                )))
                    return pE([], i);
                var s = new eL(t,r,i);
                return this.compileAndRun(s, [e])
            }
        }, {
            key: "reverse",
            value: function(e, t) {
                var n = oC().getBool("WEBGL_PACK_ARRAY_OPERATIONS") ? new qP(e.shape,t) : new KP(e.shape,t);
                return this.compileAndRun(n, [e])
            }
        }, {
            key: "neg",
            value: function(e) {
                var t = this
                  , n = this.tryRunOnCpuOrThrow([e], (function() {
                    return t.cpuBackend.neg(e)
                }
                ));
                if (n)
                    return n;
                if (oC().getBool("WEBGL_PACK_UNARY_OPERATIONS"))
                    return this.packedUnaryOp(e, dL, e.dtype);
                var r = new iL(e.shape,dL);
                return this.compileAndRun(r, [e])
            }
        }, {
            key: "batchMatMul",
            value: function(e, t, n, r) {
                var a = n ? e.shape[2] : e.shape[1]
                  , o = r ? t.shape[1] : t.shape[2]
                  , i = n ? e.shape[1] : e.shape[2]
                  , s = Math.max(e.shape[0], t.shape[0]);
                if ((1 === a || 1 === o) && i > 1e3) {
                    n && (e = JE(e, [0, 2, 1])),
                    r && (t = JE(t, [0, 2, 1]));
                    var u = 1 === o ? e : e.as3D(s, i, 1)
                      , c = 1 === o ? 2 : 1
                      , l = 1 === o ? t.as3D(s, 1, i) : t;
                    return _S(u, l).sum(c, !0)
                }
                var f = KC(e.dtype, t.dtype)
                  , p = new RP(e.shape,t.shape,[s, a, o],n,r);
                return this.compileAndRun(p, [e, t], f)
            }
        }, {
            key: "fusedBatchMatMul",
            value: function(e) {
                var t = e.a
                  , n = e.b
                  , r = e.transposeA
                  , a = e.transposeB
                  , o = e.bias
                  , i = e.activation
                  , s = e.preluActivationWeights
                  , u = r ? t.shape[2] : t.shape[1]
                  , c = a ? n.shape[1] : n.shape[2]
                  , l = Math.max(t.shape[0], n.shape[0])
                  , f = KC(t.dtype, n.dtype)
                  , p = null != o
                  , d = null != s
                  , h = i ? _L(i, !0) : null
                  , m = new RP(t.shape,n.shape,[l, u, c],r,a,p,h,d)
                  , v = [t, n];
                return o && v.push(o),
                s && v.push(s),
                this.compileAndRun(m, v, f)
            }
        }, {
            key: "localResponseNormalization4D",
            value: function(e, t, n, r, a) {
                var o = oC().getBool("WEBGL_PACK_NORMALIZATION") ? new AP(e.shape,t,n,r,a) : new IP(e.shape,t,n,r,a);
                return this.compileAndRun(o, [e])
            }
        }, {
            key: "LRNGrad",
            value: function(e, t, n, r, a, o, i) {
                var s = new TP(t.shape,r,a,o,i);
                return this.compileAndRun(s, [t, n, e])
            }
        }, {
            key: "tile",
            value: function(e, t) {
                if ("string" === e.dtype) {
                    var n = this.readSync(e.dataId).map((function(e) {
                        return TC(e)
                    }
                    ))
                      , r = VE(e.shape, e.dtype, n);
                    return IL(r, t)
                }
                var a = new oL(e.shape,t);
                return this.compileAndRun(a, [e])
            }
        }, {
            key: "pad",
            value: function(e, t, n) {
                var r = oC().getBool("WEBGL_PACK_ARRAY_OPERATIONS") ? new MP(e.shape,t,n) : new FP(e.shape,t,n);
                return this.compileAndRun(r, [e])
            }
        }, {
            key: "gather",
            value: function(e, t, n) {
                var r = this
                  , a = this.tryRunOnCpuOrThrow([e, t], (function() {
                    return r.cpuBackend.gather(e, t, n)
                }
                ));
                if (a)
                    return a;
                var o = new mP(e.shape,t.size,n);
                return this.compileAndRun(o, [e, t])
            }
        }, {
            key: "batchToSpaceND",
            value: function(e, t, n) {
                Ik(e.rank <= 4, (function() {
                    return "batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"
                }
                ));
                var r = t.reduce((function(e, t) {
                    return e * t
                }
                ))
                  , a = qN(e.shape, t, r)
                  , o = XN(a.length, t.length)
                  , i = QN(e.shape, t, r)
                  , s = YN(n, t.length)
                  , u = $N(i, n, t.length);
                return JE(e.reshape(a), o).reshape(i).slice(s, u)
            }
        }, {
            key: "spaceToBatchND",
            value: function(e, t, n) {
                Ik(e.rank <= 4, (function() {
                    return "spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"
                }
                ));
                var r = t.reduce((function(e, t) {
                    return e * t
                }
                ))
                  , a = [[0, 0]];
                a.push.apply(a, Vy(n));
                for (var o = 1 + t.length; o < e.shape.length; ++o)
                    a.push([0, 0]);
                var i = e.pad(a)
                  , s = qN(i.shape, t, r, !1)
                  , u = XN(s.length, t.length, !1)
                  , c = QN(i.shape, t, r, !1)
                  , l = JE(i.reshape(s), u);
                return YE(l, c)
            }
        }, {
            key: "reduce",
            value: function(e, t, n) {
                var r = e.shape[0]
                  , a = e.shape[1]
                  , o = eT(a)
                  , i = Math.ceil(a / o)
                  , s = new UP({
                    windowSize: o,
                    inSize: a,
                    batchSize: r,
                    outSize: i
                },t)
                  , u = this.compileAndRun(s, [e], n);
                return 1 === u.shape[1] ? u : this.reduce(u, t, n)
            }
        }, {
            key: "argReduce",
            value: function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
                  , r = e.shape[0]
                  , a = e.shape[1];
                null != n && (r = n.shape[0],
                a = n.shape[1]);
                var o = eT(a)
                  , i = {
                    windowSize: o,
                    inSize: a,
                    batchSize: r,
                    outSize: Math.ceil(a / o)
                }
                  , s = new vM(i,t,null == n)
                  , u = [e];
                null != n && u.push(n);
                var c = this.compileAndRun(s, u, "int32");
                return 1 === c.shape[1] ? c : this.argReduce(e, t, c)
            }
        }, {
            key: "argReducePacked",
            value: function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
                  , r = null != n ? n.shape : e.shape
                  , a = eT(r[r.length - 1])
                  , o = new MM(r,a,t,null == n)
                  , i = null == n ? [e] : [e, n]
                  , s = this.compileAndRun(o, i, "int32");
                return s.rank === e.rank ? this.argReducePacked(e, t, s) : s
            }
        }, {
            key: "sum",
            value: function(e, t) {
                US("sum", t, e.rank);
                var n = Uy(PS(e.shape, t), 2)
                  , r = n[0]
                  , a = _k(n[1])
                  , o = e.as2D(-1, a)
                  , i = qC(e.dtype);
                return this.reduce(o, "sum", i).reshape(r)
            }
        }, {
            key: "prod",
            value: function(e, t) {
                var n = this
                  , r = this.tryRunOnCpuOrThrow([e], (function() {
                    return n.cpuBackend.prod(e, t)
                }
                ));
                if (r)
                    return r;
                var a = Uy(PS(e.shape, t), 2)
                  , o = a[0]
                  , i = _k(a[1])
                  , s = e.as2D(-1, i)
                  , u = qC(e.dtype);
                return this.reduce(s, "prod", u).reshape(o)
            }
        }, {
            key: "unsortedSegmentSum",
            value: function(e, t, n) {
                var r = 0
                  , a = VS([r], e.rank)
                  , o = e;
                null != a && (o = JE(e, a),
                r = WS(1, e.rank)[0]);
                var i = EL.computeOutShape(o.shape, r, n)
                  , s = _k([o.shape[r]])
                  , u = o.as2D(-1, s)
                  , c = qC(e.dtype)
                  , l = this.segOpCompute(u, "unsortedSegmentSum", t, c, n).reshape(i);
                return null != a && (l = JE(l, zS(a))),
                l
            }
        }, {
            key: "segOpCompute",
            value: function(e, t, n, r, a) {
                var o = e.shape[0]
                  , i = e.shape[1]
                  , s = EL.segOpComputeOptimalWindowSize(i, a)
                  , u = new QP({
                    windowSize: s,
                    inSize: i,
                    batchSize: o,
                    numSegments: a
                },t)
                  , c = this.compileAndRun(u, [e, n], r);
                return c.shape[1] === a ? c : (n = pA(0, a).tile([i / s]),
                this.segOpCompute(c, t, n, r, a))
            }
        }, {
            key: "argMinMaxReduce",
            value: function(e, t, n) {
                var r = [t];
                if (US("arg" + n.charAt(0).toUpperCase() + n.slice(1), r, e.rank),
                !oC().getBool("WEBGL_PACK_REDUCE") || e.rank <= 2) {
                    var a = Uy(PS(e.shape, r), 2)
                      , o = a[0]
                      , i = _k(a[1])
                      , s = e.as2D(-1, i);
                    return this.argReduce(s, n).reshape(o)
                }
                return this.argReducePacked(e, n)
            }
        }, {
            key: "argMin",
            value: function(e, t) {
                return this.argMinMaxReduce(e, t, "min")
            }
        }, {
            key: "argMax",
            value: function(e, t) {
                return this.argMinMaxReduce(e, t, "max")
            }
        }, {
            key: "cumsum",
            value: function(e, t, n, r) {
                if (t !== e.rank - 1)
                    throw new Error("WebGL cumsum shader expects an inner-most axis=".concat(e.rank - 1, " but got axis=").concat(t));
                for (var a = e.shape[t], o = e, i = 0; i <= Math.ceil(Math.log2(a)) - 1; i++) {
                    var s = new rP(e.shape,!1,r)
                      , u = s.getCustomSetupFunc(i)
                      , c = o;
                    o = this.compileAndRun(s, [o], o.dtype, u),
                    c.dispose()
                }
                if (n) {
                    var l = new rP(e.shape,n,r)
                      , f = o;
                    o = this.compileAndRun(l, [o]),
                    f.dispose()
                }
                return o
            }
        }, {
            key: "equal",
            value: function(e, t) {
                if (oC().getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                    return this.packedBinaryOp(e, t, "\n  return vec4(equal(a, b));\n", "bool");
                var n = new VM("return float(a == b);",e.shape,t.shape);
                return this.compileAndRun(n, [e, t], "bool")
            }
        }, {
            key: "less",
            value: function(e, t) {
                var n = this
                  , r = this.tryRunOnCpuOrThrow([e, t], (function() {
                    return n.cpuBackend.less(e, t)
                }
                ));
                if (r)
                    return r;
                if (oC().getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                    return this.packedBinaryOp(e, t, "\n  return vec4(lessThan(a, b));\n", "bool");
                var a = new VM("return float(a < b);",e.shape,t.shape);
                return this.compileAndRun(a, [e, t], "bool")
            }
        }, {
            key: "lessEqual",
            value: function(e, t) {
                if (oC().getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                    return this.packedBinaryOp(e, t, "\n  return vec4(lessThanEqual(a, b));\n", "bool");
                var n = new VM("return float(a <= b);",e.shape,t.shape);
                return this.compileAndRun(n, [e, t], "bool")
            }
        }, {
            key: "greater",
            value: function(e, t) {
                var n = this
                  , r = this.tryRunOnCpuOrThrow([e, t], (function() {
                    return n.cpuBackend.greater(e, t)
                }
                ));
                if (r)
                    return r;
                if (oC().getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                    return this.packedBinaryOp(e, t, "\n  return vec4(greaterThan(a, b));\n", "bool");
                var a = new VM("return float(a > b);",e.shape,t.shape);
                return this.compileAndRun(a, [e, t], "bool")
            }
        }, {
            key: "greaterEqual",
            value: function(e, t) {
                if (oC().getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                    return this.packedBinaryOp(e, t, "\n  return vec4(greaterThanEqual(a, b));\n", "bool");
                var n = new VM("return float(a >= b);",e.shape,t.shape);
                return this.compileAndRun(n, [e, t], "bool")
            }
        }, {
            key: "logicalNot",
            value: function(e) {
                var t = new iL(e.shape,"return float(!(x >= 1.0));");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "logicalAnd",
            value: function(e, t) {
                if (oC().getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                    return this.packedBinaryOp(e, t, "\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n", "bool");
                var n = new VM("return float(a >= 1.0 && b >= 1.0);",e.shape,t.shape);
                return this.compileAndRun(n, [e, t], "bool")
            }
        }, {
            key: "logicalOr",
            value: function(e, t) {
                if (oC().getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                    return this.packedBinaryOp(e, t, "\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n", "bool");
                var n = new VM("return float(a >= 1.0 || b >= 1.0);",e.shape,t.shape);
                return this.compileAndRun(n, [e, t], "bool")
            }
        }, {
            key: "select",
            value: function(e, t, n) {
                var r = new YP(e.rank,t.shape,t.rank);
                return this.compileAndRun(r, [e, t, n], KC(t.dtype, n.dtype))
            }
        }, {
            key: "where",
            value: function(e) {
                JN("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");
                var t = e.dataSync();
                return AL(e.shape, t)
            }
        }, {
            key: "topk",
            value: function(e, t, n) {
                var r = e.dataSync();
                return TL(r, e.shape, e.dtype, t)
            }
        }, {
            key: "min",
            value: function(e, t) {
                US("min", t, e.rank);
                var n = Uy(PS(e.shape, t), 2)
                  , r = n[0]
                  , a = _k(n[1])
                  , o = e.as2D(-1, a);
                return this.reduce(o, "min", o.dtype).reshape(r)
            }
        }, {
            key: "minimum",
            value: function(e, t) {
                var n = this
                  , r = this.tryRunOnCpuOrThrow([e, t], (function() {
                    return n.cpuBackend.minimum(e, t)
                }
                ));
                if (r)
                    return r;
                var a = oC().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new WM("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape) : new VM("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",e.shape,t.shape);
                return this.compileAndRun(a, [e, t])
            }
        }, {
            key: "mod",
            value: function(e, t) {
                var n = oC().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new WM("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape) : new VM("if (b == 0.0) return NAN;\n  return mod(a, b);",e.shape,t.shape);
                return this.compileAndRun(n, [e, t])
            }
        }, {
            key: "maximum",
            value: function(e, t) {
                var n = this
                  , r = this.tryRunOnCpuOrThrow([e, t], (function() {
                    return n.cpuBackend.maximum(e, t)
                }
                ));
                if (r)
                    return r;
                var a = oC().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new WM("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape) : new VM("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",e.shape,t.shape);
                return this.compileAndRun(a, [e, t])
            }
        }, {
            key: "all",
            value: function(e, t) {
                US("all", t, e.rank);
                var n = Uy(PS(e.shape, t), 2)
                  , r = n[0]
                  , a = _k(n[1])
                  , o = e.as2D(-1, a);
                return this.reduce(o, "all", o.dtype).reshape(r)
            }
        }, {
            key: "any",
            value: function(e, t) {
                US("any", t, e.rank);
                var n = Uy(PS(e.shape, t), 2)
                  , r = n[0]
                  , a = _k(n[1])
                  , o = e.as2D(-1, a);
                return this.reduce(o, "any", o.dtype).reshape(r)
            }
        }, {
            key: "floorDiv",
            value: function(e, t) {
                var n = "int32";
                if (oC().getBool("WEBGL_PACK_BINARY_OPERATIONS"))
                    return this.packedBinaryOp(e, t, "\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n", n);
                var r = new VM("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",e.shape,t.shape);
                return this.compileAndRun(r, [e, t], n)
            }
        }, {
            key: "packedUnaryOp",
            value: function(e, t, n) {
                var r = new kL(e.shape,t);
                return this.compileAndRun(r, [e], n)
            }
        }, {
            key: "packedBinaryOp",
            value: function(e, t, n, r) {
                var a = arguments.length > 4 && void 0 !== arguments[4] && arguments[4]
                  , o = new WM(n,e.shape,t.shape,a);
                return this.compileAndRun(o, [e, t], r)
            }
        }, {
            key: "makeComplexComponentTensorInfo",
            value: function(e, t) {
                return {
                    dataId: t.dataId,
                    dtype: t.dtype,
                    shape: e.shape
                }
            }
        }, {
            key: "addN",
            value: function(e) {
                if (1 === e.length)
                    return e[0];
                if (e.length > oC().get("WEBGL_MAX_TEXTURES_IN_SHADER")) {
                    var t = Math.floor(e.length / 2)
                      , n = this.addN(e.slice(0, t))
                      , r = this.addN(e.slice(t));
                    return this.addN([n, r])
                }
                var a = e.map((function(e) {
                    return e.dtype
                }
                )).reduce((function(e, t) {
                    return KC(e, t)
                }
                ))
                  , o = e.map((function(e) {
                    return e.shape
                }
                ))
                  , i = oC().getBool("WEBGL_PACK") ? new mM(e[0].shape,o) : new hM(e[0].shape,o);
                return this.compileAndRun(i, e, a)
            }
        }, {
            key: "pow",
            value: function(e, t) {
                var n = oC().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new WM("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape) : new VM("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",e.shape,t.shape)
                  , r = KC(e.dtype, t.dtype);
                return this.compileAndRun(n, [e, t], r)
            }
        }, {
            key: "ceil",
            value: function(e) {
                if (this.shouldExecuteOnCPU([e])) {
                    var t = nM(this.texData.get(e.dataId).values, e.dtype);
                    return this.makeOutput(e.shape, e.dtype, t)
                }
                if (oC().getBool("WEBGL_PACK_UNARY_OPERATIONS"))
                    return this.packedUnaryOp(e, hL, e.dtype);
                var n = new iL(e.shape,hL);
                return this.compileAndRun(n, [e])
            }
        }, {
            key: "floor",
            value: function(e) {
                if (this.shouldExecuteOnCPU([e])) {
                    var t = oM(this.texData.get(e.dataId).values, e.dtype);
                    return this.makeOutput(e.shape, e.dtype, t)
                }
                if (oC().getBool("WEBGL_PACK_UNARY_OPERATIONS"))
                    return this.packedUnaryOp(e, mL, e.dtype);
                var n = new iL(e.shape,mL);
                return this.compileAndRun(n, [e])
            }
        }, {
            key: "sign",
            value: function(e) {
                var t = new iL(e.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "isNaN",
            value: function(e) {
                var t = new iL(e.shape,"return float(isnan(x));");
                return this.compileAndRun(t, [e], "bool")
            }
        }, {
            key: "isInf",
            value: function(e) {
                var t = new iL(e.shape,"return float(isinf(x));");
                return this.compileAndRun(t, [e], "bool")
            }
        }, {
            key: "isFinite",
            value: function(e) {
                var t = new iL(e.shape,"return float(!isnan(x) && !isinf(x));");
                return this.compileAndRun(t, [e], "bool")
            }
        }, {
            key: "round",
            value: function(e) {
                var t = new iL(e.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "exp",
            value: function(e) {
                if (this.shouldExecuteOnCPU([e])) {
                    var t = rM(this.texData.get(e.dataId).values, e.dtype);
                    return this.makeOutput(e.shape, e.dtype, t)
                }
                if (oC().getBool("WEBGL_PACK_UNARY_OPERATIONS"))
                    return this.packedUnaryOp(e, vL, e.dtype);
                var n = new iL(e.shape,vL);
                return this.compileAndRun(n, [e])
            }
        }, {
            key: "expm1",
            value: function(e) {
                if (this.shouldExecuteOnCPU([e])) {
                    var t = aM(this.texData.get(e.dataId).values, e.dtype);
                    return this.makeOutput(e.shape, e.dtype, t)
                }
                if (oC().getBool("WEBGL_PACK_UNARY_OPERATIONS"))
                    return this.packedUnaryOp(e, gL, e.dtype);
                var n = new iL(e.shape,gL);
                return this.compileAndRun(n, [e])
            }
        }, {
            key: "softmax",
            value: function(e, t) {
                var n = Pk([t], e.shape)
                  , r = CT(e, n)
                  , a = LS(r.shape, n)
                  , o = ET(e, r.reshape(a))
                  , i = this.exp(o)
                  , s = this.sum(i, n).reshape(a);
                return NS(i, s)
            }
        }, {
            key: "log",
            value: function(e) {
                if (this.shouldExecuteOnCPU([e])) {
                    var t = iM(this.texData.get(e.dataId).values, e.dtype);
                    return this.makeOutput(e.shape, e.dtype, t)
                }
                if (oC().getBool("WEBGL_PACK_UNARY_OPERATIONS"))
                    return this.packedUnaryOp(e, "\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n", e.dtype);
                var n = new iL(e.shape,"if (x < 0.0) return NAN;\n  return log(x);");
                return this.compileAndRun(n, [e])
            }
        }, {
            key: "log1p",
            value: function(e) {
                var t = new iL(e.shape,"return log(1.0 + x);");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "sqrt",
            value: function(e) {
                var t = new iL(e.shape,"return sqrt(x);");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "rsqrt",
            value: function(e) {
                if (this.shouldExecuteOnCPU([e])) {
                    var t = cM(this.texData.get(e.dataId).values, e.dtype);
                    return this.makeOutput(e.shape, e.dtype, t)
                }
                var n = new iL(e.shape,"return inversesqrt(x);");
                return this.compileAndRun(n, [e])
            }
        }, {
            key: "reciprocal",
            value: function(e) {
                var t = new iL(e.shape,"return 1.0 / x;");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "relu",
            value: function(e) {
                var t;
                return t = oC().getBool("WEBGL_PACK") ? new kL(e.shape,bL) : new iL(e.shape,cL),
                this.compileAndRun(t, [e])
            }
        }, {
            key: "relu6",
            value: function(e) {
                var t;
                return t = oC().getBool("WEBGL_PACK") ? new kL(e.shape,xL) : new iL(e.shape,lL),
                this.compileAndRun(t, [e])
            }
        }, {
            key: "prelu",
            value: function(e, t) {
                var n = oC().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new WM(zM,e.shape,t.shape) : new VM(UM,e.shape,t.shape);
                return this.compileAndRun(n, [e, t])
            }
        }, {
            key: "elu",
            value: function(e) {
                if (oC().getBool("WEBGL_PACK_UNARY_OPERATIONS"))
                    return this.packedUnaryOp(e, wL, e.dtype);
                var t = new iL(e.shape,fL);
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "eluDer",
            value: function(e, t) {
                var n = oC().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new WM("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",e.shape,t.shape) : new VM("return (b >= 1.0) ? a : a * (b + 1.0);",e.shape,t.shape);
                return this.compileAndRun(n, [e, t])
            }
        }, {
            key: "selu",
            value: function(e) {
                var t = new iL(e.shape,pL);
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "clip",
            value: function(e, t, n) {
                var r, a = (r = oC().getBool("WEBGL_PACK_CLIP") ? new HM(e.shape) : new jM(e.shape)).getCustomSetupFunc(t, n);
                return this.compileAndRun(r, [e], null, a)
            }
        }, {
            key: "abs",
            value: function(e) {
                if (this.shouldExecuteOnCPU([e]) && "complex64" !== e.dtype) {
                    var t = eM(this.texData.get(e.dataId).values);
                    return this.makeOutput(e.shape, e.dtype, t)
                }
                if (oC().getBool("WEBGL_PACK_UNARY_OPERATIONS"))
                    return this.packedUnaryOp(e, uL, e.dtype);
                var n = new iL(e.shape,uL);
                return this.compileAndRun(n, [e])
            }
        }, {
            key: "complexAbs",
            value: function(e) {
                var t = this.texData.get(e.dataId)
                  , n = new GM(e.shape)
                  , r = [this.makeComplexComponentTensorInfo(e, t.complexTensorInfos.real), this.makeComplexComponentTensorInfo(e, t.complexTensorInfos.imag)];
                return this.compileAndRun(n, r)
            }
        }, {
            key: "sigmoid",
            value: function(e) {
                var t = new iL(e.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "softplus",
            value: function(e) {
                var t = new iL(e.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "asin",
            value: function(e) {
                var t = new iL(e.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "acos",
            value: function(e) {
                var t = new iL(e.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "atan",
            value: function(e) {
                var t = new iL(e.shape,"if (isnan(x)) return x;\n  return atan(x);\n");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "sinh",
            value: function(e) {
                var t = new iL(e.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "cosh",
            value: function(e) {
                var t = new iL(e.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "tanh",
            value: function(e) {
                var t = new iL(e.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "asinh",
            value: function(e) {
                var t = new iL(e.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "acosh",
            value: function(e) {
                var t = new iL(e.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "atanh",
            value: function(e) {
                var t = new iL(e.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "erf",
            value: function(e) {
                var t = new iL(e.shape,'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n');
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "step",
            value: function(e, t) {
                var n = new iL(e.shape,function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    return "if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(".concat(e, ");\n  ")
                }(t));
                return this.compileAndRun(n, [e])
            }
        }, {
            key: "conv2dByMatMul",
            value: function(e, t, n, r, a, o) {
                var i = e.shape
                  , s = this.texData.get(e.dataId)
                  , u = n.inChannels
                  , c = i[0] * i[1] * i[2]
                  , l = n.outChannels
                  , f = "channelsLast" === n.dataFormat
                  , p = (1 === c || 1 === l) && u > 1e3
                  , d = i[2] % 2 != 0 && !!s.isPacked;
                if (p || !oC().getBool("WEBGL_LAZILY_UNPACK") || !oC().getBool("WEBGL_PACK_BINARY_OPERATIONS") || !d) {
                    var h = f ? i[0] * i[1] * i[2] : i[0] * i[2] * i[3]
                      , m = YE(e, [1, h, n.inChannels])
                      , v = YE(t, [1, n.inChannels, n.outChannels])
                      , g = this.fusedBatchMatMul({
                        a: m,
                        b: v,
                        transposeA: !1,
                        transposeB: !1,
                        bias: r,
                        activation: a,
                        preluActivationWeights: o
                    });
                    return YE(g, n.outShape)
                }
                var y = f ? i[0] * i[1] * (i[2] + 1) : i[0] * i[2] * (i[3] + 1)
                  , b = {
                    dataId: e.dataId,
                    shape: [1, y, n.inChannels],
                    dtype: e.dtype
                }
                  , x = s.shape;
                s.shape = s.shape.slice(),
                s.shape[s.shape.length - 2]++,
                Ik($B(s.shape, b.shape), (function() {
                    return "packed reshape ".concat(s.shape, " to ").concat(b.shape, " isn't free")
                }
                ));
                var w = YE(t, [1, n.inChannels, n.outChannels])
                  , k = this.fusedBatchMatMul({
                    a: b,
                    b: w,
                    transposeA: !1,
                    transposeB: !1,
                    bias: r,
                    activation: a,
                    preluActivationWeights: o
                })
                  , C = this.texData.get(k.dataId);
                return Ik(C.isPacked, (function() {
                    return "batchMatMul result is expected to be packed"
                }
                )),
                s.shape = x,
                C.shape = n.outShape,
                kS().makeTensorFromDataId(k.dataId, n.outShape, k.dtype)
            }
        }, {
            key: "conv2dWithIm2Row",
            value: function(e, t, n, r, a, o) {
                var i = n.filterWidth
                  , s = n.filterHeight
                  , u = n.inChannels
                  , c = n.outWidth
                  , l = n.outHeight
                  , f = "channelsLast" === n.dataFormat
                  , p = i * s * u
                  , d = l * c
                  , h = [p, d]
                  , m = e.squeeze([0])
                  , v = t.reshape([1, p, -1])
                  , g = new SP(h,m.shape,n)
                  , y = this.compileAndRun(g, [m]).reshape([1, h[0], h[1]])
                  , b = null != r
                  , x = null != o
                  , w = a ? _L(a, !0) : null
                  , k = new RP(y.shape,v.shape,[1, d, n.outChannels],!0,!1,b,w,x)
                  , C = [y, v];
                r && C.push(r),
                x && C.push(o);
                var E = this.compileAndRun(k, C);
                return f ? E.reshape([1, l, c, n.outChannels]) : E.reshape([1, n.outChannels, l, c])
            }
        }, {
            key: "fusedConv2d",
            value: function(e) {
                var t = e.input
                  , n = e.filter
                  , r = e.convInfo
                  , a = e.bias
                  , o = e.activation
                  , i = e.preluActivationWeights;
                if (1 === r.filterHeight && 1 === r.filterWidth && 1 === r.dilationHeight && 1 === r.dilationWidth && 1 === r.strideHeight && 1 === r.strideWidth && ("SAME" === r.padInfo.type || "VALID" === r.padInfo.type))
                    return this.conv2dByMatMul(t, n, r, a, o, i);
                if (oC().getBool("WEBGL_CONV_IM2COL") && 1 === t.shape[0])
                    return this.conv2dWithIm2Row(t, n, r, a, o, i);
                var s = null != a
                  , u = null != i
                  , c = o ? _L(o, !1) : null
                  , l = new ZM(r,s,c,u)
                  , f = [t, n];
                return a && f.push(a),
                i && f.push(i),
                this.compileAndRun(l, f)
            }
        }, {
            key: "conv2d",
            value: function(e, t, n) {
                if (1 === n.filterHeight && 1 === n.filterWidth && 1 === n.dilationHeight && 1 === n.dilationWidth && 1 === n.strideHeight && 1 === n.strideWidth && ("SAME" === n.padInfo.type || "VALID" === n.padInfo.type))
                    return this.conv2dByMatMul(e, t, n);
                if (oC().getBool("WEBGL_CONV_IM2COL") && 1 === e.shape[0])
                    return this.conv2dWithIm2Row(e, t, n);
                var r = new ZM(n);
                return this.compileAndRun(r, [e, t])
            }
        }, {
            key: "conv2dDerInput",
            value: function(e, t, n) {
                var r = new qM(n);
                return this.compileAndRun(r, [e, t])
            }
        }, {
            key: "conv2dDerFilter",
            value: function(e, t, n) {
                var r = new KM(n);
                return this.compileAndRun(r, [e, t])
            }
        }, {
            key: "fusedDepthwiseConv2D",
            value: function(e) {
                var t, n = e.input, r = e.filter, a = e.convInfo, o = e.bias, i = e.activation, s = e.preluActivationWeights, u = oC().getBool("WEBGL_PACK_DEPTHWISECONV") && a.strideWidth <= 2 && a.outChannels / a.inChannels == 1, c = i ? _L(i, u) : null, l = [n, r], f = null != o, p = null != s;
                return f && l.push(o),
                p && l.push(s),
                u ? (t = new tP(a,f,c,p),
                this.compileAndRun(t, l)) : (t = new eP(a,f,c,p),
                this.compileAndRun(t, l))
            }
        }, {
            key: "depthwiseConv2D",
            value: function(e, t, n) {
                var r;
                return oC().getBool("WEBGL_PACK_DEPTHWISECONV") && n.strideWidth <= 2 && n.outChannels / n.inChannels == 1 ? (r = new tP(n),
                this.compileAndRun(r, [e, t])) : (r = new eP(n),
                this.compileAndRun(r, [e, t]))
            }
        }, {
            key: "depthwiseConv2DDerInput",
            value: function(e, t, n) {
                var r = new $M(n);
                return this.compileAndRun(r, [e, t])
            }
        }, {
            key: "depthwiseConv2DDerFilter",
            value: function(e, t, n) {
                var r = new YM(n);
                return this.compileAndRun(r, [e, t])
            }
        }, {
            key: "conv3d",
            value: function(e, t, n) {
                var r = new JM(n);
                return this.compileAndRun(r, [e, t])
            }
        }, {
            key: "conv3dDerInput",
            value: function(e, t, n) {
                var r = new QM(n);
                return this.compileAndRun(r, [e, t])
            }
        }, {
            key: "conv3dDerFilter",
            value: function(e, t, n) {
                var r = new XM(n);
                return this.compileAndRun(r, [e, t])
            }
        }, {
            key: "unstack",
            value: function(e, t) {
                for (var n = e.shape[t], r = new Array(e.rank - 1), a = 0, o = 0; o < e.rank; o++)
                    o !== t && (r[a++] = e.shape[o]);
                var i = new Array(e.rank).fill(0)
                  , s = e.shape.slice();
                s[t] = 1;
                for (var u = new Array(n), c = 0; c < u.length; c++)
                    i[t] = c,
                    u[c] = this.slice(e, i, s).reshape(r);
                return u
            }
        }, {
            key: "avgPool3d",
            value: function(e, t) {
                var n = new LP(t,"avg",!1);
                return this.compileAndRun(n, [e], "float32")
            }
        }, {
            key: "avgPool3dBackprop",
            value: function(e, t, n) {
                var r = new LM(n);
                return this.compileAndRun(r, [e], t.dtype)
            }
        }, {
            key: "maxPool3d",
            value: function(e, t) {
                var n = new LP(t,"max",!1);
                return this.compileAndRun(n, [e], "float32")
            }
        }, {
            key: "maxPool3dBackprop",
            value: function(e, t, n, r) {
                var a = new LP(r,"max",!0)
                  , o = this.compileAndRun(a, [t])
                  , i = new _P(r)
                  , s = this.compileAndRun(i, [e, o], t.dtype);
                return o.dispose(),
                s
            }
        }, {
            key: "resizeBilinear",
            value: function(e, t, n, r) {
                var a = oC().getBool("WEBGL_PACK_IMAGE_OPERATIONS") ? new jP(e.shape,t,n,r) : new WP(e.shape,t,n,r);
                return this.compileAndRun(a, [e], "float32")
            }
        }, {
            key: "resizeBilinearBackprop",
            value: function(e, t, n) {
                var r = new zP(e,t,n);
                return this.compileAndRun(r, [e])
            }
        }, {
            key: "resizeNearestNeighbor",
            value: function(e, t, n, r) {
                var a = new GP(e.shape,t,n,r);
                return this.compileAndRun(a, [e])
            }
        }, {
            key: "resizeNearestNeighborBackprop",
            value: function(e, t, n) {
                var r = new HP(e,t,n);
                return this.compileAndRun(r, [e])
            }
        }, {
            key: "multinomial",
            value: function(e, t, n, r) {
                var a = t ? e : SA(e)
                  , o = a.shape[0]
                  , i = a.shape[1]
                  , s = new OP(o,i,n)
                  , u = s.getCustomSetupFunc(r);
                return this.compileAndRun(s, [a], "int32", u)
            }
        }, {
            key: "oneHot",
            value: function(e, t, n, r) {
                var a = new DP(e.size,t,n,r);
                return this.compileAndRun(a, [e])
            }
        }, {
            key: "diag",
            value: function(e) {
                var t = new cP(e.size);
                return this.compileAndRun(t, [e])
            }
        }, {
            key: "cropAndResize",
            value: function(e, t, n, r, a, o) {
                var i = new nP(e.shape,t.shape,r,a,o);
                return this.compileAndRun(i, [e, t, n], "float32")
            }
        }, {
            key: "depthToSpace",
            value: function(e, t, n) {
                Ik(t > 1, (function() {
                    return "blockSize should be > 1 for depthToSpace, but was: ".concat(t)
                }
                ));
                var r = e.shape[0]
                  , a = "NHWC" === n ? e.shape[1] : e.shape[2]
                  , o = "NHWC" === n ? e.shape[2] : e.shape[3]
                  , i = "NHWC" === n ? e.shape[3] : e.shape[1]
                  , s = a * t
                  , u = o * t
                  , c = i / (t * t)
                  , l = new uP("NHWC" === n ? [r, s, u, c] : [r, c, s, u],t,n);
                return this.compileAndRun(l, [e])
            }
        }, {
            key: "split",
            value: function(e, t, n) {
                return SL(e, t, n)
            }
        }, {
            key: "scatterND",
            value: function(e, t, n) {
                var r = aS(0, e, n)
                  , a = r.sliceRank
                  , o = r.numUpdates
                  , i = r.sliceSize
                  , s = r.strides
                  , u = r.outputSize
                  , c = [u / i, i]
                  , l = e.reshape([o, a])
                  , f = t.reshape([o, i]);
                if (0 === u)
                    return u_(pE([]), n);
                var p = fT(0)
                  , d = new XP(o,a,l.rank,f.rank,s,c);
                return this.compileAndRun(d, [f, l, p]).reshape(n)
            }
        }, {
            key: "sparseToDense",
            value: function(e, t, n, r) {
                var a = aS(0, e, n)
                  , o = a.sliceRank
                  , i = a.numUpdates
                  , s = a.strides
                  , u = a.outputSize
                  , c = new XP(i,o,e.rank,t.rank,s,[u, 1],!1);
                return this.compileAndRun(c, [t, e, r]).reshape(n)
            }
        }, {
            key: "gatherND",
            value: function(e, t) {
                var n = t.shape
                  , r = n[n.length - 1]
                  , a = Uy(tS(e, t), 4)
                  , o = a[0]
                  , i = a[1]
                  , s = a[2]
                  , u = a[3]
                  , c = t.reshape([i, r])
                  , l = e.reshape([e.size / s, s])
                  , f = new vP(r,u,[i, s]);
                return this.compileAndRun(f, [l, c]).reshape(o)
            }
        }, {
            key: "fill",
            value: function(e, t, n) {
                if ("string" === (n = n || Gk(t))) {
                    var r = Vk(n, _k(e));
                    return r.fill(t),
                    kS().makeTensor(r, e, n, this)
                }
                var a = new hP(e,t)
                  , o = a.getCustomSetupFunc(t);
                return this.compileAndRun(a, [], n, o)
            }
        }, {
            key: "onesLike",
            value: function(e) {
                if ("string" === e.dtype)
                    throw new Error("onesLike is not supported under string dtype");
                return this.fill(e.shape, 1, e.dtype)
            }
        }, {
            key: "zerosLike",
            value: function(e) {
                return this.fill(e.shape, "string" === e.dtype ? "" : 0, e.dtype)
            }
        }, {
            key: "linspace",
            value: function(e, t, n) {
                return c_(e, t, n)
            }
        }, {
            key: "makeTensorInfo",
            value: function(e, t, n) {
                var r = this.write(n, e, t);
                return this.texData.get(r).usage = null,
                {
                    dataId: r,
                    shape: e,
                    dtype: t
                }
            }
        }, {
            key: "makeOutput",
            value: function(e, t, n) {
                var r = this.makeTensorInfo(e, t, n).dataId;
                return kS().makeTensorFromDataId(r, e, t, this)
            }
        }, {
            key: "unpackTensor",
            value: function(e) {
                var t = new CL(e.shape);
                return this.runWebGLProgram(t, [e], e.dtype)
            }
        }, {
            key: "packTensor",
            value: function(e) {
                var t = new BP(e.shape);
                return this.runWebGLProgram(t, [e], e.dtype, null, !0)
            }
        }, {
            key: "packedReshape",
            value: function(e, t) {
                var n = [qB(e.shape)].concat(Vy(XB(e.shape)))
                  , r = {
                    dtype: e.dtype,
                    shape: n,
                    dataId: e.dataId
                }
                  , a = [qB(t)].concat(Vy(XB(t)))
                  , o = new VP(a,n)
                  , i = this.runWebGLProgram(o, [r], e.dtype, null, !0);
                return {
                    dataId: i.dataId,
                    shape: t,
                    dtype: i.dtype
                }
            }
        }, {
            key: "decode",
            value: function(e) {
                var t, n = this.texData.get(e), r = n.isPacked, a = n.shape, o = n.dtype, i = QB(a);
                return t = r ? new sP(i) : new iP(i),
                {
                    dtype: o,
                    shape: a,
                    dataId: this.runWebGLProgram(t, [{
                        shape: i,
                        dtype: o,
                        dataId: e
                    }], o, null, !0).dataId
                }
            }
        }, {
            key: "runWebGLProgram",
            value: function(e, t, n, r) {
                var a = this
                  , o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4]
                  , i = this.makeTensorInfo(e.outputShape, n)
                  , s = this.texData.get(i.dataId);
                if (e.packedOutput && (s.isPacked = !0),
                e.outPackingScheme === wB.DENSE) {
                    var u = OB(e.outputShape);
                    s.texShape = u.map((function(e) {
                        return 2 * e
                    }
                    ))
                }
                if (null != e.outTexUsage && (s.usage = e.outTexUsage),
                0 === _k(i.shape))
                    return s.values = Uk(i.dtype, 0),
                    i;
                var c = []
                  , l = t.map((function(t) {
                    if ("complex64" === t.dtype)
                        throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");
                    var n = a.texData.get(t.dataId);
                    if (null == n.texture) {
                        if (!e.packedInputs && _k(t.shape) <= oC().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))
                            return {
                                shape: t.shape,
                                texData: null,
                                isUniform: !0,
                                uniformValues: n.values
                            };
                        e.packedInputs && (n.isPacked = !0,
                        n.shape = t.shape)
                    } else if (!!n.isPacked != !!e.packedInputs)
                        t = n.isPacked ? a.unpackTensor(t) : a.packTensor(t),
                        c.push(t),
                        n = a.texData.get(t.dataId);
                    else if (n.isPacked && !$B(n.shape, t.shape)) {
                        var r = t
                          , o = t.shape;
                        t.shape = n.shape,
                        t = a.packedReshape(t, o),
                        c.push(t),
                        n = a.texData.get(t.dataId),
                        r.shape = o
                    }
                    return a.uploadToGPU(t.dataId),
                    {
                        shape: t.shape,
                        texData: n,
                        isUniform: !1
                    }
                }
                ));
                this.uploadToGPU(i.dataId);
                var f, p = {
                    shape: i.shape,
                    texData: s,
                    isUniform: !1
                }, d = function(e, t, n) {
                    var r = "";
                    t.concat(n).forEach((function(e) {
                        var t = null != e.texData && null != e.texData.slice && e.texData.slice.flatOffset > 0
                          , n = e.isUniform ? "uniform" : e.texData.texShape;
                        r += "".concat(e.shape, "_").concat(n, "_").concat(t)
                    }
                    ));
                    var a = e.userCode
                      , o = e.constructor.name;
                    return o += "_" + r + "_" + a
                }(e, l, p), h = this.getAndSaveBinary(d, (function() {
                    return function(e, t, n, r) {
                        var a = t.userCode
                          , o = n.map((function(e, n) {
                            var r = {
                                logicalShape: e.shape,
                                texShape: e.isUniform ? null : e.texData.texShape,
                                isUniform: e.isUniform,
                                isPacked: !e.isUniform && e.texData.isPacked,
                                flatOffset: null
                            };
                            return null != e.texData && null != e.texData.slice && e.texData.slice.flatOffset > 0 && (r.flatOffset = e.texData.slice.flatOffset),
                            {
                                name: t.variableNames[n],
                                shapeInfo: r
                            }
                        }
                        ))
                          , i = o.map((function(e) {
                            return e.shapeInfo
                        }
                        ))
                          , s = {
                            logicalShape: r.shape,
                            texShape: r.texData.texShape,
                            isUniform: !1,
                            isPacked: r.texData.isPacked,
                            flatOffset: null
                        }
                          , u = EM(o, s, a, t.packedInputs)
                          , c = e.createProgram(u)
                          , l = null
                          , f = e.getUniformLocation(c, "NAN", !1);
                        1 === oC().getNumber("WEBGL_VERSION") && (l = e.getUniformLocation(c, "INFINITY", !1));
                        for (var p = {}, d = 0; d < t.variableNames.length; d++) {
                            var h = t.variableNames[d];
                            p[h] = e.getUniformLocation(c, h, false),
                            p["offset".concat(h)] = e.getUniformLocation(c, "offset".concat(h), false)
                        }
                        return {
                            program: t,
                            source: u,
                            webGLProgram: c,
                            uniformLocations: p,
                            inShapeInfos: i,
                            outShapeInfo: s,
                            infLoc: l,
                            nanLoc: f
                        }
                    }(a.gpgpu, e, l, p)
                }
                )), m = null != this.activeTimers;
                if (m && (f = this.startTimer()),
                function(e, t, n, r, a) {
                    EP(t.inShapeInfos, n),
                    EP([t.outShapeInfo], [r]);
                    var o = r.texData.texture
                      , i = r.texData.texShape;
                    r.texData.isPacked ? e.setOutputPackedMatrixTexture(o, i[0], i[1]) : e.setOutputMatrixTexture(o, i[0], i[1]),
                    e.setProgram(t.webGLProgram),
                    1 === oC().getNumber("WEBGL_VERSION") && null !== t.infLoc && e.gl.uniform1f(t.infLoc, 1 / 0),
                    null !== t.nanLoc && e.gl.uniform1f(t.nanLoc, NaN),
                    n.forEach((function(n, r) {
                        var a = t.program.variableNames[r]
                          , o = t.uniformLocations[a]
                          , i = t.uniformLocations["offset".concat(a)];
                        if (null != o)
                            if (n.isUniform)
                                if (_k(n.shape) < 2)
                                    e.gl.uniform1f(o, n.uniformValues[0]);
                                else {
                                    var s = n.uniformValues;
                                    s instanceof Float32Array || (s = new Float32Array(s)),
                                    e.gl.uniform1fv(o, s)
                                }
                            else
                                null != n.texData.slice && null != i && e.gl.uniform1i(i, n.texData.slice.flatOffset),
                                e.setInputMatrixTexture(n.texData.texture, o, r)
                    }
                    )),
                    null != a && a(e, t.webGLProgram),
                    e.executeProgram()
                }(this.gpgpu, h, l, p, r),
                c.forEach((function(e) {
                    return a.disposeIntermediateTensorInfo(e)
                }
                )),
                m && (f = this.endTimer(f),
                this.activeTimers.push({
                    name: e.constructor.name,
                    query: this.getQueryTime(f)
                })),
                !oC().getBool("WEBGL_LAZILY_UNPACK") && s.isPacked && !1 === o) {
                    var v = this.unpackTensor(i);
                    return this.disposeIntermediateTensorInfo(i),
                    v
                }
                return i
            }
        }, {
            key: "compileAndRun",
            value: function(e, t, n, r) {
                var a = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                n = n || t[0].dtype;
                var o = this.runWebGLProgram(e, t, n, r, a);
                return kS().makeTensorFromDataId(o.dataId, o.shape, o.dtype)
            }
        }, {
            key: "getAndSaveBinary",
            value: function(e, t) {
                return e in this.binaryCache || (this.binaryCache[e] = t()),
                this.binaryCache[e]
            }
        }, {
            key: "getTextureManager",
            value: function() {
                return this.textureManager
            }
        }, {
            key: "dispose",
            value: function() {
                var e = this;
                this.disposed || (oC().getBool("IS_TEST") || Object.keys(this.binaryCache).forEach((function(t) {
                    e.gpgpu.deleteProgram(e.binaryCache[t].webGLProgram),
                    delete e.binaryCache[t]
                }
                )),
                this.textureManager.dispose(),
                null != this.canvas && "undefined" != typeof HTMLCanvasElement && this.canvas instanceof HTMLCanvasElement ? this.canvas.remove() : this.canvas = null,
                this.gpgpuCreatedLocally && (this.gpgpu.program = null,
                this.gpgpu.dispose()),
                this.disposed = !0)
            }
        }, {
            key: "floatPrecision",
            value: function() {
                var e = this;
                return null == this.floatPrecisionValue && (this.floatPrecisionValue = CS((function() {
                    if (!oC().get("WEBGL_RENDER_FLOAT32_ENABLED")) {
                        var t = oC().getBool("DEBUG");
                        oC().set("DEBUG", !1);
                        var n = e.abs(fT(1e-8)).dataSync()[0];
                        if (oC().set("DEBUG", t),
                        n > 0)
                            return 32
                    }
                    return 16
                }
                ))),
                this.floatPrecisionValue
            }
        }, {
            key: "epsilon",
            value: function() {
                return 32 === this.floatPrecision() ? 1e-7 : 1e-4
            }
        }, {
            key: "uploadToGPU",
            value: function(e) {
                var t = this.texData.get(e)
                  , n = t.shape
                  , r = t.dtype
                  , a = t.values
                  , o = t.texture
                  , i = t.usage
                  , s = t.isPacked;
                if (null == o) {
                    var u, c = null != this.activeTimers;
                    c && (u = SC());
                    var l = t.texShape;
                    if (null == l && (l = function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
                          , n = oC().getNumber("WEBGL_MAX_TEXTURE_SIZE");
                        if (t && (n *= 2,
                        1 === (e = e.map((function(t, n) {
                            return n >= e.length - 2 ? Sk(e[n]) : e[n]
                        }
                        ))).length && (e = [2, e[0]])),
                        2 !== e.length) {
                            var r = Lk(e);
                            e = r.newShape
                        }
                        var a = _k(e);
                        if (e.length <= 1 && a <= n)
                            return [1, a];
                        if (2 === e.length && e[0] <= n && e[1] <= n)
                            return e;
                        if (3 === e.length && e[0] * e[1] <= n && e[2] <= n)
                            return [e[0] * e[1], e[2]];
                        if (3 === e.length && e[0] <= n && e[1] * e[2] <= n)
                            return [e[0], e[1] * e[2]];
                        if (4 === e.length && e[0] * e[1] * e[2] <= n && e[3] <= n)
                            return [e[0] * e[1] * e[2], e[3]];
                        if (4 === e.length && e[0] <= n && e[1] * e[2] * e[3] <= n)
                            return [e[0], e[1] * e[2] * e[3]];
                        if (t) {
                            var o, i = qB(e), s = 2, u = 2;
                            return e.length && (s = (o = Uy(XB(e), 2))[0],
                            u = o[1]),
                            Dk(a = i * (s / 2) * (u / 2)).map((function(e) {
                                return 2 * e
                            }
                            ))
                        }
                        return Dk(a)
                    }(n, s),
                    t.texShape = l),
                    null != a) {
                        var f, p, d = QB(n), h = l[1], m = l[0], v = a instanceof Uint8Array;
                        s ? (h = (f = Uy(DB(l[0], l[1]), 2))[0],
                        m = f[1],
                        p = new dP(d,[m, h],v)) : p = new pP(d,[m, h],v);
                        var g = this.makeTensorInfo([m, h], r);
                        this.texData.get(g.dataId).usage = v ? kB.PIXELS : kB.UPLOAD,
                        this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId), h, m, a);
                        var y = this.runWebGLProgram(p, [g], r, null, !0)
                          , b = this.texData.get(y.dataId);
                        t.texture = b.texture,
                        t.texShape = b.texShape,
                        t.isPacked = b.isPacked,
                        t.usage = b.usage,
                        this.disposeIntermediateTensorInfo(g),
                        this.texData.delete(y.dataId),
                        t.values = null,
                        c && (this.uploadWaitMs += SC() - u)
                    } else {
                        var x = this.acquireTexture(l, i, r, s);
                        t.texture = x
                    }
                }
            }
        }, {
            key: "convertAndCacheOnCPU",
            value: function(e, t) {
                var n = this.texData.get(e)
                  , r = n.dtype;
                return this.releaseGPUData(e),
                null != t && (n.values = function(e, t) {
                    if ("float32" === t || "complex64" === t)
                        return e;
                    if ("int32" === t || "bool" === t) {
                        for (var n = "int32" === t ? new Int32Array(e.length) : new Uint8Array(e.length), r = 0; r < n.length; ++r)
                            n[r] = Math.round(e[r]);
                        return n
                    }
                    throw new Error("Unknown dtype ".concat(t))
                }/**
	       * @license
	       * Copyright 2020 Google Inc. All Rights Reserved.
	       * Licensed under the Apache License, Version 2.0 (the "License");
	       * you may not use this file except in compliance with the License.
	       * You may obtain a copy of the License at
	       *
	       * http://www.apache.org/licenses/LICENSE-2.0
	       *
	       * Unless required by applicable law or agreed to in writing, software
	       * distributed under the License is distributed on an "AS IS" BASIS,
	       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	       * See the License for the specific language governing permissions and
	       * limitations under the License.
	       * =============================================================================
	       */
                (t, r)),
                n.values
            }
        }, {
            key: "acquireTexture",
            value: function(e, t, n, r) {
                if (this.numBytesInGPU += this.computeBytes(e, n),
                !this.warnedAboutMemory && this.numBytesInGPU > 1024 * this.numMBBeforeWarning * 1024) {
                    var a = (this.numBytesInGPU / 1024 / 1024).toFixed(2);
                    this.warnedAboutMemory = !0,
                    console.warn("High memory usage in GPU: ".concat(a, " MB, most likely due to a memory leak"))
                }
                return this.textureManager.acquireTexture(e, t, r)
            }
        }, {
            key: "computeBytes",
            value: function(e, t) {
                return e[0] * e[1] * jk(t)
            }
        }, {
            key: "tryRunOnCpuOrThrow",
            value: function(e, t) {
                if (this.shouldExecuteOnCPU(e))
                    try {
                        return t()
                    } catch (e) {
                        if (oC().getBool("IS_TEST"))
                            throw new Error("CPU forwarding failed")
                    }
                return null
            }
        }]),
        o
    }(kk);
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function OL(e) {
        var t = e.inputs
          , n = e.backend
          , r = t.x;
        return n.incRef(r.dataId),
        {
            dataId: r.dataId,
            shape: r.shape,
            dtype: r.dtype
        }
    }
    nE() && IS("webgl", (function() {
        return new RL
    }
    ), 2);
    var DL = {
        kernelName: "Identity",
        backendName: "webgl",
        kernelFunc: OL
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function BL(e) {
        var t = e.inputs
          , n = e.backend
          , r = t.real
          , a = t.imag
          , o = n.makeTensorInfo(r.shape, "complex64")
          , i = n.texData.get(o.dataId)
          , s = OL({
            inputs: {
                x: r
            },
            backend: n
        });
        n.texData.get(s.dataId).complexParentRefCount++;
        var u = OL({
            inputs: {
                x: a
            },
            backend: n
        });
        return n.texData.get(u.dataId).complexParentRefCount++,
        i.complexTensorInfos = {
            real: s,
            imag: u
        },
        o
    }
    var FL = {
        kernelName: "Complex",
        backendName: "webgl",
        kernelFunc: BL
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function ML(e) {
        return function(t) {
            var n = t.inputs
              , r = t.backend
              , a = n.x
              , o = r
              , i = new iL(a.shape,e);
            return o.runWebGLProgram(i, [a], a.dtype)
        }
    }
    function PL(e) {
        var t = e.opSnippet
          , n = e.packedOpSnippet
          , r = e.checkOutOfBounds
          , a = void 0 !== r && r
          , o = e.supportsComplex
          , i = void 0 !== o && o
          , s = e.cpuKernelImpl
          , u = e.dtype;
        return function(e) {
            var r = e.inputs
              , o = e.backend
              , c = r.a
              , l = r.b
              , f = o;
            if (i && "complex64" === c.dtype) {
                var p = f.texData.get(c.dataId)
                  , d = f.texData.get(l.dataId)
                  , h = [[p.complexTensorInfos.real, d.complexTensorInfos.real], [p.complexTensorInfos.imag, d.complexTensorInfos.imag]].map((function(e) {
                    var n = Uy(e, 2)
                      , r = n[0]
                      , a = n[1]
                      , o = {
                        dataId: r.dataId,
                        dtype: r.dtype,
                        shape: c.shape
                    }
                      , i = {
                        dataId: a.dataId,
                        dtype: a.dtype,
                        shape: l.shape
                    }
                      , s = new VM(t,c.shape,l.shape);
                    return f.runWebGLProgram(s, [o, i], KC(r.dtype, a.dtype))
                }
                ))
                  , m = Uy(h, 2)
                  , v = m[0]
                  , g = m[1]
                  , y = BL({
                    inputs: {
                        real: v,
                        imag: g
                    },
                    backend: f
                });
                return f.disposeIntermediateTensorInfo(v),
                f.disposeIntermediateTensorInfo(g),
                y
            }
            var b, x = u || KC(c.dtype, l.dtype);
            if (f.shouldExecuteOnCPU([c, l]) && null != s) {
                var w = f.texData.get(c.dataId)
                  , k = f.texData.get(l.dataId)
                  , C = Uy(s(c.shape, l.shape, w.values, k.values, x), 2)
                  , E = C[0]
                  , S = C[1]
                  , I = f.makeTensorInfo(S, x);
                return f.texData.get(I.dataId).values = E,
                I
            }
            return b = oC().getBool("WEBGL_PACK_BINARY_OPERATIONS") && null != n ? new WM(n,c.shape,l.shape,a) : new VM(t,c.shape,l.shape),
            f.runWebGLProgram(b, [c, l], x)
        }
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var LL = "return a + b;"
      , UL = PL({
        opSnippet: LL,
        packedOpSnippet: LL,
        supportsComplex: !0,
        cpuKernelImpl: tM
    })
      , VL = {
        kernelName: lC,
        backendName: "webgl",
        kernelFunc: UL
    }
      , zL = {
        kernelName: "Atan2",
        backendName: "webgl",
        kernelFunc: PL({
            opSnippet: "\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",
            packedOpSnippet: "\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"
        })
    }
      , WL = {
        kernelName: "AvgPool",
        backendName: "webgl",
        kernelFunc: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x;
            tF(a, "avgPool");
            var o = r.filterSize
              , i = r.strides
              , s = r.pad
              , u = r.dimRoundingMode;
            Ik(cI(i, 1), (function() {
                return "Error in avgPool: Either strides or dilations must be 1. Got strides ".concat(i, " and dilations '1'")
            }
            ));
            var c = JS(a.shape, o, i, 1, s, u);
            if (1 === c.filterWidth && 1 === c.filterHeight && Rk(c.inShape, c.outShape))
                return OL({
                    inputs: {
                        x: a
                    },
                    backend: n
                });
            var l = new PP(c,"avg",!1);
            return n.runWebGLProgram(l, [a], "float32")
        }
    }
      , jL = {
        kernelName: "AvgPoolBackprop",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.dy
              , o = t.input
              , i = o;
            tF([a, o], "avgPoolBackprop");
            var s = r.filterSize
              , u = r.strides
              , c = r.pad
              , l = JS(i.shape, s, u, 1, c)
              , f = new PM(l);
            return n.runWebGLProgram(f, [a], i.dtype)
        }
    }
      , HL = function e(t, n, r, a, o, i) {
        Ay(this, e),
        this.outputShape = [],
        this.variableNames = ["x", "mean", "variance"],
        VI(t, n),
        VI(t, r);
        var s = "0.0";
        null != a && (VI(t, a),
        this.variableNames.push("offset"),
        s = "getOffsetAtOutCoords()");
        var u = "1.0";
        null != o && (VI(t, o),
        this.variableNames.push("scale"),
        u = "getScaleAtOutCoords()"),
        this.outputShape = t,
        this.userCode = "\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(s, ";\n        float scale = ").concat(u, ";\n        float inv = scale * inversesqrt(variance + float(").concat(i, "));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")
    }
      , GL = function e(t, n, r, a, o, i) {
        Ay(this, e),
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.variableNames = ["x", "mean", "variance"],
        VI(t, n),
        VI(t, r);
        var s = "vec4(0.0)";
        null != a && (VI(t, a),
        this.variableNames.push("offset"),
        s = "getOffsetAtOutCoords()");
        var u = "vec4(1.0)";
        null != o && (VI(t, o),
        this.variableNames.push("scale"),
        u = "getScaleAtOutCoords()"),
        this.outputShape = t,
        this.userCode = "\n      void main() {\n        vec4 offset = ".concat(s, ";\n        vec4 scale = ").concat(u, ";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(i, "));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")
    }
      , KL = {
        kernelName: "FusedBatchNorm",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = t.mean
              , i = t.variance
              , s = t.offset
              , u = t.scale;
            Ik(o.shape.length === i.shape.length, (function() {
                return "Batch normalization gradient requires mean and variance to have equal ranks."
            }
            )),
            Ik(null == s || o.shape.length === s.shape.length, (function() {
                return "Batch normalization gradient requires mean and offset to have equal ranks."
            }
            )),
            Ik(null == u || o.shape.length === u.shape.length, (function() {
                return "Batch normalization gradient requires mean and scale to have equal ranks."
            }
            ));
            var c = r.varianceEpsilon;
            null == c && (c = .001);
            var l = [a, o, i]
              , f = null;
            null != s && (f = s.shape,
            l.push(s));
            var p = null;
            null != u && (p = u.shape,
            l.push(u));
            var d = oC().getBool("WEBGL_PACK_NORMALIZATION") ? new GL(a.shape,o.shape,i.shape,f,p,c) : new HL(a.shape,o.shape,i.shape,f,p,c);
            return n.runWebGLProgram(d, l, l[0].dtype)
        }
    }
      , qL = PL({
        opSnippet: "return float(a != b);",
        dtype: "bool"
    })
      , XL = {
        kernelName: "NotEqual",
        backendName: "webgl",
        kernelFunc: qL
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function QL(e) {
        var t = e.inputs
          , n = e.backend
          , r = t.input;
        return OL({
            inputs: {
                x: n.texData.get(r.dataId).complexTensorInfos.real
            },
            backend: n
        })
    }
    var YL = {
        kernelName: "Real",
        backendName: "webgl",
        kernelFunc: QL
    }
      , $L = {
        kernelName: "Cast",
        backendName: "webgl",
        kernelFunc: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function e(t) {
            var n = t.inputs
              , r = t.backend
              , a = t.attrs
              , o = n.x
              , i = a.dtype;
            if ("complex64" === i) {
                if ("complex64" === o.dtype)
                    return OL({
                        inputs: {
                            x: o
                        },
                        backend: r
                    });
                var s = FT(o.shape)
                  , u = e({
                    inputs: {
                        x: o
                    },
                    backend: r,
                    attrs: {
                        dtype: "float32"
                    }
                })
                  , c = BL({
                    inputs: {
                        real: u,
                        imag: s
                    },
                    backend: r
                });
                return s.dispose(),
                r.disposeIntermediateTensorInfo(u),
                c
            }
            if ("complex64" === o.dtype) {
                var l = QL({
                    inputs: {
                        input: o
                    },
                    backend: r
                })
                  , f = e({
                    inputs: {
                        x: l
                    },
                    backend: r,
                    attrs: {
                        dtype: i
                    }
                });
                return r.disposeIntermediateTensorInfo(l),
                f
            }
            if (!zk(o.dtype, i)) {
                var p = OL({
                    inputs: {
                        x: o
                    },
                    backend: r
                });
                return {
                    dataId: p.dataId,
                    shape: p.shape,
                    dtype: i
                }
            }
            if ("int32" === i)
                return function(e, t) {
                    var n = new iL(e.shape,"return float(int(x));")
                      , r = t.runWebGLProgram(n, [e], "int32");
                    return {
                        dataId: r.dataId,
                        shape: r.shape,
                        dtype: r.dtype
                    }
                }(o, r);
            if ("bool" === i) {
                var d = r.makeTensorInfo([], "bool", Uk("bool", 1))
                  , h = qL({
                    inputs: {
                        a: o,
                        b: d
                    },
                    backend: r
                });
                return r.disposeIntermediateTensorInfo(d),
                h
            }
            throw new Error("Error in Cast: failed to cast ".concat(o.dtype, " to ").concat(i))
        }
    }
      , ZL = function e(t) {
        Ay(this, e),
        this.outputShape = [],
        this.outputShape = hI(t, 1),
        this.variableNames = t.map((function(e, t) {
            return "T".concat(t)
        }
        ));
        var n = new Array(t.length - 1);
        n[0] = t[0][1];
        for (var r = 1; r < n.length; r++)
            n[r] = n[r - 1] + t[r][1];
        for (var a = ["if (yC < ".concat(n[0], ") setOutput(getT0(yR, yC));")], o = 1; o < n.length; o++) {
            var i = n[o - 1];
            a.push("else if (yC < ".concat(n[o], ") setOutput(getT").concat(o, "(yR, yC-").concat(i, "));"))
        }
        var s = n.length
          , u = n[n.length - 1];
        a.push("else setOutput(getT".concat(s, "(yR, yC-").concat(u, "));")),
        this.userCode = "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(a.join("\n        "), "\n      }\n    ")
    }
      , JL = function e(t, n) {
        Ay(this, e),
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = [],
        this.outputShape = hI(t, n);
        var r = this.outputShape
          , a = r.length
          , o = DM(a)
          , i = yM("coords", a)
          , s = ["x", "y", "z", "w", "u", "v"].slice(0, a);
        this.variableNames = t.map((function(e, t) {
            return "T".concat(t)
        }
        ));
        var u = new Array(t.length - 1);
        u[0] = t[0][n];
        for (var c = 1; c < u.length; c++)
            u[c] = u[c - 1] + t[c][n];
        for (var l = s[n], f = s.slice(-2), p = s.join(), d = "if (".concat(l, " < ").concat(u[0], ") {\n        return getChannel(\n            getT0(").concat(p, "), vec2(").concat(f.join(), "));\n        }"), h = 1; h < u.length; h++) {
            var m = u[h - 1];
            d += "\n        if (".concat(l, " < ").concat(u[h], "  && ").concat(l, " >= ").concat(u[h - 1], ") {\n          return getChannel(\n            getT").concat(h, "(").concat(eU(s, l, m), "),\n            vec2(").concat(eU(f, l, m), "));\n        }")
        }
        var v = u.length
          , g = u[u.length - 1];
        d += "\n        return getChannel(\n          getT".concat(v, "(").concat(eU(s, l, g), "),\n          vec2(").concat(eU(f, l, g), "));"),
        this.userCode = "\n      float getValue(".concat(s.map((function(e) {
            return "int " + e
        }
        )), ") {\n        ").concat(d, "\n      }\n\n      void main() {\n        ").concat(o, " coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(i, "), 0., 0., 0.);\n\n        ").concat(i[a - 1], " = ").concat(i[a - 1], " + 1;\n        if (").concat(i[a - 1], " < ").concat(r[a - 1], ") {\n          result.g = getValue(").concat(i, ");\n        }\n\n        ").concat(i[a - 2], " = ").concat(i[a - 2], " + 1;\n        if (").concat(i[a - 2], " < ").concat(r[a - 2], ") {\n          result.a = getValue(").concat(i, ");\n        }\n\n        ").concat(i[a - 1], " = ").concat(i[a - 1], " - 1;\n        if (").concat(i[a - 2], " < ").concat(r[a - 2], " &&\n            ").concat(i[a - 1], " < ").concat(r[a - 1], ") {\n          result.b = getValue(").concat(i, ");\n        }\n        setOutput(result);\n      }\n    ")
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function eU(e, t, n) {
        var r = e.indexOf(t);
        return e.map((function(e, t) {
            return t === r ? "".concat(e, " - ").concat(n) : e
        }
        )).join()
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function tU(e) {
        var t = e.inputs
          , n = e.backend
          , r = t.input;
        return OL({
            inputs: {
                x: n.texData.get(r.dataId).complexTensorInfos.imag
            },
            backend: n
        })
    }
    var nU = {
        kernelName: "Imag",
        backendName: "webgl",
        kernelFunc: tU
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function rU(e) {
        var t = e.inputs
          , n = e.backend
          , r = e.attrs
          , a = t.x
          , o = r.shape
          , i = n
          , s = _k(a.shape)
          , u = Mk(o, s)
          , c = _k(u);
        Ik(s === c, (function() {
            return "The new shape (".concat(u, ") has ").concat(c, " elements and the old shape (").concat(a.shape, ") has ").concat(s, " elements. The new shape and old shape must have the same number of elements.")
        }
        ));
        var l = i.texData.get(a.dataId);
        return !l.isPacked || $B(a.shape, u) || null !== l.texture && $B(l.shape, u) ? (i.incRef(a.dataId),
        {
            dataId: a.dataId,
            shape: u,
            dtype: a.dtype
        }) : function(e, t, n) {
            var r = [qB(e.shape)].concat(Vy(XB(e.shape)))
              , a = {
                dtype: e.dtype,
                shape: r,
                dataId: e.dataId
            }
              , o = [qB(t)].concat(Vy(XB(t)))
              , i = new VP(o,r)
              , s = n.runWebGLProgram(i, [a], e.dtype, null, !0);
            return {
                dataId: s.dataId,
                shape: t,
                dtype: s.dtype
            }
        }(a, u, i)
    }
    var aU = {
        kernelName: "Reshape",
        backendName: "webgl",
        kernelFunc: rU
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function oU(e, t, n) {
        var r = e[0].dtype;
        if ("complex64" === r) {
            var a = e.map((function(e) {
                return QL({
                    inputs: {
                        input: e
                    },
                    backend: n
                })
            }
            ))
              , o = e.map((function(e) {
                return tU({
                    inputs: {
                        input: e
                    },
                    backend: n
                })
            }
            ))
              , i = oU(a, t, n)
              , s = oU(o, t, n)
              , u = BL({
                inputs: {
                    real: i,
                    imag: s
                },
                backend: n
            });
            return a.forEach((function(e) {
                return n.disposeIntermediateTensorInfo(e)
            }
            )),
            o.forEach((function(e) {
                return n.disposeIntermediateTensorInfo(e)
            }
            )),
            n.disposeIntermediateTensorInfo(i),
            n.disposeIntermediateTensorInfo(s),
            u
        }
        if (e.length > oC().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")) {
            var c = Math.floor(e.length / 2)
              , l = oU(e.slice(0, c), t, n)
              , f = oU(e.slice(c), t, n)
              , p = oU([l, f], t, n);
            return n.disposeIntermediateTensorInfo(l),
            n.disposeIntermediateTensorInfo(f),
            p
        }
        if (oC().getBool("WEBGL_PACK_ARRAY_OPERATIONS") && e[0].shape.length > 1) {
            var d = new JL(e.map((function(e) {
                return e.shape
            }
            )),t);
            return n.runWebGLProgram(d, e, r)
        }
        var h = hI(e.map((function(e) {
            return e.shape
        }
        )), t)
          , m = e.map((function(e) {
            return rU({
                inputs: {
                    x: e
                },
                attrs: {
                    shape: [-1, _k(e.shape.slice(t))]
                },
                backend: n
            })
        }
        ))
          , v = new ZL(m.map((function(e) {
            return e.shape
        }
        )))
          , g = n.runWebGLProgram(v, m, r);
        m.forEach((function(e) {
            return n.disposeIntermediateTensorInfo(e)
        }
        ));
        var y = rU({
            inputs: {
                x: g
            },
            attrs: {
                shape: h
            },
            backend: n
        });
        return n.disposeIntermediateTensorInfo(g),
        y
        /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    var iU = {
        kernelName: "Concat",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = Pk(e.attrs.axis, t[0].shape)[0]
              , a = hI(t.map((function(e) {
                return e.shape
            }
            )), r);
            if (0 === _k(a))
                return n.makeTensorInfo(a, t[0].dtype, []);
            var o = t.filter((function(e) {
                return _k(e.shape) > 0
            }
            ));
            return 1 === o.length ? o[0] : (dI(o.map((function(e) {
                return e.shape
            }
            )), r),
            oU(o, r, n))
        }
    }
      , sU = ML("if (isnan(x)) return x;\n  return cos(x);\n")
      , uU = {
        kernelName: fC,
        backendName: "webgl",
        kernelFunc: sU
    }
      , cU = PL({
        opSnippet: "\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",
        packedOpSnippet: "\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",
        checkOutOfBounds: !0
    })
      , lU = {
        kernelName: pC,
        backendName: "webgl",
        kernelFunc: cU
    }
      , fU = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["real", "imag"];
        var a = n[1];
        this.outputShape = n;
        var o, i = r ? "2.0 * ".concat(Math.PI) : "-2.0 * ".concat(Math.PI), s = r ? "".concat(a, ".0") : "1.0";
        if ("real" === t)
            o = "return real * expR - imag * expI;";
        else {
            if ("imag" !== t)
                throw new Error('FFT component must be either "real" or "imag", got '.concat(t, "."));
            o = "return real * expI + imag * expR;"
        }
        this.userCode = "\n      const float exponentMultiplier = ".concat(i, ";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o, "\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a, ");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a, "; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s, ";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2018 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function pU(e, t, n) {
        var r = n.texData.get(e.dataId)
          , a = _k(e.shape)
          , o = e.shape[e.shape.length - 1]
          , i = rU({
            inputs: {
                x: e
            },
            backend: n,
            attrs: {
                shape: [a / o, o]
            }
        }).shape
          , s = new fU("real",i,t)
          , u = new fU("imag",i,t)
          , c = [{
            dataId: r.complexTensorInfos.real.dataId,
            dtype: r.complexTensorInfos.real.dtype,
            shape: i
        }, {
            dataId: r.complexTensorInfos.imag.dataId,
            dtype: r.complexTensorInfos.imag.dtype,
            shape: i
        }]
          , l = n.runWebGLProgram(s, c, "float32")
          , f = n.runWebGLProgram(u, c, "float32")
          , p = BL({
            inputs: {
                real: l,
                imag: f
            },
            backend: n
        });
        n.disposeIntermediateTensorInfo(l),
        n.disposeIntermediateTensorInfo(f);
        var d = rU({
            inputs: {
                x: p
            },
            backend: n,
            attrs: {
                shape: e.shape
            }
        });
        return n.disposeIntermediateTensorInfo(d),
        d
        /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    }
    var dU, hU = {
        kernelName: "FFT",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend;
            return pU(t.input, !1, n)
        }
    }, mU = function e(t) {
        Ay(this, e),
        this.variableNames = ["Image"],
        this.outputShape = [];
        var n = t[2];
        this.outputShape = t,
        this.userCode = "\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(n, " - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(n, ") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")
    }, vU = {
        kernelName: "FlipLeftRight",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = t.image
              , a = n
              , o = new mU(r.shape);
            return a.runWebGLProgram(o, [r], r.dtype)
        }
    }, gU = function e(t) {
        Ay(this, e),
        this.variableNames = ["A"];
        var n = bM()
          , r = Uy(t, 2)
          , a = r[0]
          , o = r[1];
        this.outputShape = t,
        this.userCode = "\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(o, ".0, ").concat(a, ".0);\n\n        vec4 values = ").concat(n.texture2D, "(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")
    }, yU = function e(t) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !1,
        this.packedOutput = !0;
        var n = bM()
          , r = Uy(t, 2)
          , a = r[0]
          , o = r[1];
        this.outputShape = t,
        this.userCode = "\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(o, ".0, ").concat(a, ".0);\n            vec4 values = ").concat(n.texture2D, "(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(n.output, " = result;\n      }\n    ")
    }, bU = {
        kernelName: "FromPixels",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.pixels
              , o = r.numChannels
              , i = "undefined" != typeof HTMLVideoElement && a instanceof HTMLVideoElement
              , s = "undefined" != typeof HTMLImageElement && a instanceof HTMLImageElement
              , u = Uy(i ? [a.videoWidth, a.videoHeight] : [a.width, a.height], 2)
              , c = u[0]
              , l = u[1]
              , f = [l, c]
              , p = [l, c, o];
            (s || i) && (null == dU && (dU = document.createElement("canvas").getContext("2d")),
            dU.canvas.width = c,
            dU.canvas.height = l,
            dU.drawImage(a, 0, 0, c, l),
            a = dU.canvas);
            var d = n.makeTensorInfo(f, "int32");
            n.texData.get(d.dataId).usage = kB.PIXELS,
            n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId), a);
            var h = oC().getBool("WEBGL_PACK") ? new yU(p) : new gU(p)
              , m = n.runWebGLProgram(h, [d], "int32");
            return n.disposeData(d.dataId),
            m
            /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        }
    }, xU = {
        kernelName: "IFFT",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend;
            return pU(t.input, !0, n)
        }
    }, wU = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["x"];
        var r = t.windowSize
          , a = t.batchSize
          , o = t.inSize
          , i = t.outSize;
        this.outputShape = [a, i];
        var s = 4 * Math.floor(r / 4)
          , u = r % 4
          , c = "sumValue += dot(values, ones);";
        if (null != n) {
            var l = 1 / n;
            c = "sumValue += dot(values * ".concat(Ok(l) ? l.toPrecision(2) : l, ", ones);")
        }
        var f = "";
        o % r > 0 && (f = "\n        if (inIdx < 0 || inIdx >= ".concat(o, ") {\n          return 0.0;\n        }\n      ")),
        this.userCode = "\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(f, "\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(r, ";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(s, "; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c, "\n        }\n\n        int inIdx = inOffset + ").concat(s, ";\n        if (").concat(1 === u, ") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c, "\n        } else if (").concat(2 === u, ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c, "\n        } else if (").concat(3 === u, ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c, "\n        }\n        setOutput(sumValue);\n      }\n    ")
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function kU(e, t, n, r) {
        for (var a = function(e) {
            for (var t = []; 0 === t.length || 1 !== t[t.length - 1].outSize; ) {
                var n = t.length ? t[t.length - 1].outSize : e[1]
                  , r = eT(n);
                t.push({
                    inSize: n,
                    windowSize: r,
                    outSize: Math.ceil(n / r)
                })
            }
            return t
        }(e.shape), o = e, i = 0; i < a.length; i++) {
            var s, u, c = a[i], l = c.inSize, f = c.windowSize, p = c.outSize;
            s = "mean" === n ? 0 === i ? new wU({
                windowSize: f,
                inSize: l,
                batchSize: e.shape[0],
                outSize: p
            },l) : new wU({
                windowSize: f,
                inSize: l,
                batchSize: e.shape[0],
                outSize: p
            }) : new UP({
                windowSize: f,
                inSize: l,
                batchSize: e.shape[0],
                outSize: p
            },n),
            u = o,
            o = r.runWebGLProgram(s, [o], t),
            u.dataId !== e.dataId && r.disposeIntermediateTensorInfo(u)
        }
        return o
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var CU = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["A"];
        for (var r = new Array(t.length), a = 0; a < r.length; a++)
            r[a] = t[n[a]];
        this.outputShape = r,
        this.rank = r.length;
        var o = DM(this.rank)
          , i = function(e) {
            var t = e.length;
            if (t > 6)
                throw Error("Transpose for rank ".concat(t, " is not yet supported"));
            for (var n = ["resRC.x", "resRC.y", "resRC.z", "resRC.w", "resRC.u", "resRC.v"], r = new Array(t), a = 0; a < e.length; a++)
                r[e[a]] = n[a];
            return r.join()
        }/**
	   * @license
	   * Copyright 2019 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        (n);
        this.userCode = "\n    void main() {\n      ".concat(o, " resRC = getOutputCoords();\n      setOutput(getA(").concat(i, "));\n    }\n    ")
    }
      , EU = function e(t, n) {
        Ay(this, e),
        this.variableNames = ["A"],
        this.packedInputs = !0,
        this.packedOutput = !0;
        for (var r = new Array(t.length), a = 0; a < r.length; a++)
            r[a] = t[n[a]];
        if (this.outputShape = r,
        this.rank = r.length,
        this.rank > 6)
            throw Error("Packed transpose for rank ".concat(this.rank, " is not yet supported."));
        for (var o = DM(this.rank), i = gM("rc", this.rank), s = new Array(this.rank), u = 0; u < n.length; u++)
            s[n[u]] = i[u];
        var c = "vec2(".concat(s.slice(-2).join(), ")")
          , l = "++".concat(i[this.rank - 1], " < ").concat(r[this.rank - 1])
          , f = "getChannel(getA(".concat(s.join(), "), ").concat(c, ")");
        this.userCode = "\n    void main() {\n      ".concat(o, " rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(f, ";\n      if(").concat(l, ") {\n        result[1] = ").concat(f, ";\n      }\n      --").concat(i[this.rank - 1], ";\n      if(++").concat(i[this.rank - 2], " < ").concat(r[this.rank - 2], ") {\n        result[2] = ").concat(f, ";\n        if(").concat(l, ") {\n          result[3] = ").concat(f, ";\n        }\n      }\n      setOutput(result);\n    }\n    ")
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function SU(e, t, n) {
        var r = oC().getBool("WEBGL_PACK_ARRAY_OPERATIONS") ? new EU(e.shape,t) : new CU(e.shape,t);
        return n.runWebGLProgram(r, [e], e.dtype)
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    for (var IU = {
        kernelName: dC,
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = n.reductionIndices
              , i = n.keepDims
              , s = r
              , u = a.shape.length
              , c = Pk(o, a.shape)
              , l = c
              , f = VS(l, u)
              , p = null != f
              , d = s.shouldExecuteOnCPU([a])
              , h = a;
            if (p) {
                if (d) {
                    for (var m = s.texData.get(h.dataId).values, v = new Array(u), g = 0; g < v.length; g++)
                        v[g] = a.shape[f[g]];
                    var y = pM(m, a.shape, a.dtype, f, v);
                    h = s.makeTensorInfo(v, a.dtype),
                    s.texData.get(h.dataId).values = y
                } else
                    h = SU(a, f, s);
                l = WS(l.length, u)
            }
            US("max", l, u);
            var b, x = Uy(PS(h.shape, l), 2), w = x[0], k = x[1], C = w;
            if (i && (C = LS(w, c)),
            d) {
                var E = s.texData.get(h.dataId).values
                  , S = sM(E, _k(k), C, a.dtype);
                b = s.makeTensorInfo(C, a.dtype),
                s.texData.get(b.dataId).values = S
            } else
                b = function(e, t, n, r) {
                    var a = _k(t)
                      , o = rU({
                        inputs: {
                            x: e
                        },
                        attrs: {
                            shape: [_k(e.shape) / a, a]
                        },
                        backend: r
                    })
                      , i = kU(o, e.dtype, "max", r)
                      , s = rU({
                        inputs: {
                            x: i
                        },
                        attrs: {
                            shape: n
                        },
                        backend: r
                    });
                    return r.disposeIntermediateTensorInfo(o),
                    r.disposeIntermediateTensorInfo(i),
                    s
                }(h, k, C, s);
            return p && s.disposeIntermediateTensorInfo(h),
            b
        }
    }, TU = {
        kernelName: "MaxPool",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x;
            tF(a, "maxPool");
            var o = r.filterSize
              , i = r.strides
              , s = r.pad
              , u = r.dimRoundingMode;
            Ik(cI(i, 1), (function() {
                return "Error in maxPool: Either strides or dilations must be 1. Got strides ".concat(i, " and dilations '1'")
            }
            ));
            var c = JS(a.shape, o, i, 1, s, u);
            if (1 === c.filterWidth && 1 === c.filterHeight && Rk(c.inShape, c.outShape))
                return OL({
                    inputs: {
                        x: a
                    },
                    backend: n
                });
            var l = new PP(c,"max",!1);
            return n.runWebGLProgram(l, [a], a.dtype)
        }
    }, AU = {
        kernelName: "MaxPoolBackprop",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.dy
              , o = t.input
              , i = o;
            tF([o, t.output], "maxPoolBackprop");
            var s = r.filterSize
              , u = r.strides
              , c = r.pad
              , l = r.dimRoundingMode
              , f = JS(i.shape, s, u, 1, c, l)
              , p = new PP(f,"max",!0)
              , d = n.runWebGLProgram(p, [i], i.dtype)
              , h = new NP(f)
              , m = n.runWebGLProgram(h, [a, d], i.dtype);
            return n.disposeIntermediateTensorInfo(d),
            m
        }
    }, NU = {
        kernelName: "MaxPoolWithArgmax",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = n.filterSize
              , i = n.strides
              , s = n.pad
              , u = n.includeBatchInIndex
              , c = r;
            Ik(4 === a.shape.length, (function() {
                return "Error in maxPool: input must be rank 4 but got rank ".concat(a.shape.length, ".")
            }
            ));
            var l = [1, 1];
            Ik(cI(i, l), (function() {
                return "Error in maxPool: Either strides or dilations must be 1. Got strides ".concat(i, " and dilations '").concat(l, "'")
            }
            ));
            var f = JS(a.shape, o, i, l, s)
              , p = Uy(function(e, t, n, r) {
                var a = new PP(n,"max",!1)
                  , o = r.runWebGLProgram(a, [e], "float32");
                return a = new PP(n,"max",!0,!0,t),
                [o, r.runWebGLProgram(a, [e], "float32")]
            }(a, u, f, c), 2);
            return [p[0], p[1]]
        }
    }, _U = {
        kernelName: "Mean",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = n.keepDims
              , i = n.axis
              , s = r
              , u = a.shape.length
              , c = Pk(i, a.shape)
              , l = c
              , f = VS(l, u)
              , p = null != f
              , d = s.shouldExecuteOnCPU([a])
              , h = []
              , m = a;
            if (p) {
                if (d) {
                    for (var v = s.texData.get(m.dataId).values, g = new Array(u), y = 0; y < g.length; y++)
                        g[y] = a.shape[f[y]];
                    var b = pM(v, a.shape, a.dtype, f, g);
                    m = s.makeTensorInfo(g, a.dtype),
                    s.texData.get(m.dataId).values = b
                } else
                    m = SU(a, f, s);
                h.push(m),
                l = WS(l.length, u)
            }
            US("sum", l, u);
            var x = Uy(PS(m.shape, l), 2)
              , w = x[0]
              , k = x[1]
              , C = w;
            o && (C = LS(w, c));
            for (var E = function(e, t, n, r) {
                var a = _k(t)
                  , o = rU({
                    inputs: {
                        x: e
                    },
                    attrs: {
                        shape: [_k(e.shape) / a, a]
                    },
                    backend: r
                })
                  , i = kU(o, "float32", "mean", r)
                  , s = rU({
                    inputs: {
                        x: i
                    },
                    attrs: {
                        shape: n
                    },
                    backend: r
                });
                return r.disposeIntermediateTensorInfo(o),
                r.disposeIntermediateTensorInfo(i),
                s
            }(m, k, C, s), S = 0, I = h; S < I.length; S++) {
                var T = I[S];
                s.disposeIntermediateTensorInfo(T)
            }
            return E
        }
    }, RU = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["x"],
        this.outputShape = n.map((function(e, n) {
            return e[0] + t[n] + e[1]
        }
        ));
        var a = t.length
          , o = DM(a)
          , i = n.map((function(e) {
            return e[0]
        }
        )).join(",")
          , s = n.map((function(e, n) {
            return e[0] + t[n]
        }
        )).join(",")
          , u = ["coords[0]", "coords[1]", "coords[2]", "coords[3]"].slice(0, a)
          , c = "reflect" === r ? 0 : 1;
        this.userCode = 1 !== a ? "\n      ".concat(o, " start = ").concat(o, "(").concat(i, ");\n      ").concat(o, " end = ").concat(o, "(").concat(s, ");\n\n      void main() {\n        ").concat(o, " outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a, "; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c, ";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c, ";\n          }\n        }\n        ").concat(o, " coords = outC - start;\n        setOutput(getX(").concat(u, "));\n      }\n    ") : "\n        int start = ".concat(i, ";\n        int end = ").concat(s, ";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c, ";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c, ";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")
    }, OU = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["x"],
        this.packedInputs = !0,
        this.packedOutput = !0,
        this.outputShape = n.map((function(e, n) {
            return e[0] + t[n] + e[1]
        }
        ));
        var a = t.length
          , o = DM(a)
          , i = n.map((function(e) {
            return e[0]
        }
        )).join(",")
          , s = n.map((function(e, n) {
            return e[0] + t[n]
        }
        )).join(",")
          , u = yM("rc", a)
          , c = yM("source", a)
          , l = "".concat(u[a - 1], " < ").concat(this.outputShape[a - 1])
          , f = 1 === a ? "source" : "vec2(".concat(c.slice(-2).join(), ")")
          , p = "reflect" === r ? 0 : 1
          , d = "";
        if (1 === a) {
            var h = "\n        ".concat(o, " source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(p, ";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(p, ";\n        }\n        source -= start;\n      ");
            d = "\n        ".concat(o, " rc = outputLoc;\n        ").concat(h, "\n        result[0] = getChannel(getX(").concat(c.join(), "), ").concat(f, ");\n        ").concat(u[a - 1], " += 1;\n        if(").concat(l, ") {\n          ").concat(h, "\n          result[1] = getChannel(getX(").concat(c.join(), "), ").concat(f, ");\n        }\n      ")
        } else {
            var m = "\n        ".concat(o, " source = rc;\n        ").concat(o, " lt = ").concat(o, "(lessThan(source, start));\n        ").concat(o, " gte = ").concat(o, "(greaterThanEqual(source, end));\n        ").concat(o, " orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(p, ") +\n                gte * ((end - 1) * 2 - source + ").concat(p, ");\n        source -= start;\n      ");
            d = "\n        ".concat(o, " rc = outputLoc;\n        ").concat(m, "\n        result[0] = getChannel(getX(").concat(c.join(), "), ").concat(f, ");\n        ").concat(u[a - 1], " += 1;\n        if(").concat(l, ") {\n          ").concat(m, "\n          result[1] = getChannel(getX(").concat(c.join(), "), ").concat(f, ");\n        }\n        rc = outputLoc;\n        ").concat(u[a - 2], " += 1;\n        if(").concat(u[a - 2], " < ").concat(this.outputShape[a - 2], ") {\n          ").concat(m, "\n          result[2] = getChannel(getX(").concat(c.join(), "), ").concat(f, ");\n          ").concat(u[a - 1], " += 1;\n          if(").concat(l, ") {\n            ").concat(m, "\n            result[3] = getChannel(getX(").concat(c.join(), "), ").concat(f, ");\n          }\n        }\n      ")
        }
        this.userCode = "\n      const ".concat(o, " start = ").concat(o, "(").concat(i, ");\n      const ").concat(o, " end = ").concat(o, "(").concat(s, ");\n\n      void main() {\n        ").concat(o, " outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d, "\n        setOutput(result);\n      }\n    ")
    }, DU = {
        kernelName: "MirrorPad",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = r.paddings
              , i = r.mode
              , s = oC().getBool("WEBGL_PACK_ARRAY_OPERATIONS") ? new OU(a.shape,o,i) : new RU(a.shape,o,i);
            return n.runWebGLProgram(s, [a], a.dtype)
        }
    }, BU = function e(t, n, r) {
        Ay(this, e),
        this.variableNames = ["AReal", "AImag", "BReal", "BImag"],
        this.outputShape = VI(n, r),
        this.userCode = "\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(t, "\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")
    }, FU = "return a * b;", MU = {
        kernelName: "Multiply",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t, n = e.inputs, r = e.backend, a = n.a, o = n.b, i = KC(a.dtype, o.dtype);
            if ("complex64" === a.dtype) {
                var s = r.texData.get(a.dataId)
                  , u = r.texData.get(o.dataId)
                  , c = new BU("return areal * breal - aimag * bimag;",a.shape,o.shape)
                  , l = new BU("return areal * bimag + aimag * breal;",a.shape,o.shape)
                  , f = [{
                    dataId: s.complexTensorInfos.real.dataId,
                    dtype: s.complexTensorInfos.real.dtype,
                    shape: a.shape
                }, {
                    dataId: s.complexTensorInfos.imag.dataId,
                    dtype: s.complexTensorInfos.imag.dtype,
                    shape: a.shape
                }, {
                    dataId: u.complexTensorInfos.real.dataId,
                    dtype: u.complexTensorInfos.real.dtype,
                    shape: o.shape
                }, {
                    dataId: u.complexTensorInfos.imag.dataId,
                    dtype: u.complexTensorInfos.imag.dtype,
                    shape: o.shape
                }]
                  , p = r.runWebGLProgram(c, f, "float32")
                  , d = r.runWebGLProgram(l, f, "float32")
                  , h = BL({
                    inputs: {
                        real: p,
                        imag: d
                    },
                    backend: r
                });
                return r.disposeIntermediateTensorInfo(p),
                r.disposeIntermediateTensorInfo(d),
                h
            }
            if (r.shouldExecuteOnCPU([a, o])) {
                var m = r.texData.get(a.dataId)
                  , v = r.texData.get(o.dataId)
                  , g = Uy(uM(a.shape, o.shape, m.values, v.values, i), 2)
                  , y = g[0]
                  , b = g[1]
                  , x = r.makeTensorInfo(b, i);
                return r.texData.get(x.dataId).values = y,
                x
            }
            return t = oC().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new WM(FU,a.shape,o.shape) : new VM(FU,a.shape,o.shape),
            r.runWebGLProgram(t, [a, o], i)
        }
    }, PU = {
        kernelName: "NonMaxSuppressionV3",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs;
            JN("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");
            var a = t.boxes
              , o = t.scores
              , i = r.maxOutputSize
              , s = r.iouThreshold
              , u = r.scoreThreshold
              , c = n;
            return RN(c.readSync(a.dataId), c.readSync(o.dataId), i, s, u)
        }
    }, LU = ON, UU = {
        kernelName: "NonMaxSuppressionV4",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs;
            JN("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");
            var a = t.boxes
              , o = t.scores
              , i = r.maxOutputSize
              , s = r.iouThreshold
              , u = r.scoreThreshold
              , c = r.padToMaxOutputSize
              , l = n
              , f = l.readSync(a.dataId)
              , p = l.readSync(o.dataId)
              , d = LU(f, p, i, s, u, c);
            return [d.selectedIndices, d.validOutputs]
        }
    }, VU = DN, zU = {
        kernelName: "NonMaxSuppressionV5",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs;
            JN("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");
            var a = t.boxes
              , o = t.scores
              , i = r.maxOutputSize
              , s = r.iouThreshold
              , u = r.scoreThreshold
              , c = r.softNmsSigma
              , l = n
              , f = l.readSync(a.dataId)
              , p = l.readSync(o.dataId)
              , d = VU(f, p, i, s, u, c);
            return [d.selectedIndices, d.selectedScores]
        }
    }, WU = function e(t, n, r, a) {
        Ay(this, e),
        this.variableNames = ["Image"],
        this.outputShape = [];
        var o = t[1]
          , i = t[2]
          , s = Math.sin(n).toFixed(3)
          , u = Math.cos(n).toFixed(3);
        this.outputShape = t;
        var c, l = Uy(KN(a, o, i), 2), f = l[0], p = l[1], d = f.toFixed(3), h = p.toFixed(3);
        c = "number" == typeof r ? "float outputValue = ".concat(r.toFixed(2), ";") : "\n        vec3 fill = vec3(".concat(r.join(","), ");\n        float outputValue = fill[coords[3]];"),
        this.userCode = "\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ".concat(d, ") * ").concat(u, " - (float(y) - ").concat(h, ") * ").concat(s, ";\n          float coordYFloat = (float(x) - ").concat(d, ") * ").concat(s, " + (float(y) - ").concat(h, ") * ").concat(u, ";\n          int coordX = int(round(coordXFloat + ").concat(d, "));\n          int coordY = int(round(coordYFloat + ").concat(h, "));\n          ").concat(c, "\n          if(coordX >= 0 && coordX < ").concat(i, " && coordY >= 0 && coordY < ").concat(o, ") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")
    }, jU = {
        kernelName: "RotateWithOffset",
        backendName: "webgl",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.image
              , o = n.radians
              , i = n.fillValue
              , s = n.center
              , u = r
              , c = new WU(a.shape,o,i,s);
            return u.runWebGLProgram(c, [a], a.dtype)
        }
    }, HU = ML("if (isnan(x)) return x;\n  return sin(x);\n"), GU = {
        kernelName: hC,
        backendName: "webgl",
        kernelFunc: HU
    }, KU = {
        kernelName: "Square",
        backendName: "webgl",
        kernelFunc: ML("return x * x;")
    }, qU = {
        kernelName: "SquaredDifference",
        backendName: "webgl",
        kernelFunc: PL({
            opSnippet: "return (a - b) * (a - b);",
            packedOpSnippet: "return (a - b) * (a - b);"
        })
    }, XU = "return a - b;", QU = PL({
        opSnippet: XU,
        packedOpSnippet: XU,
        supportsComplex: !0,
        cpuKernelImpl: fM
    }), YU = 0, $U = [VL, zL, WL, jL, KL, $L, FL, iU, uU, lU, hU, vU, bU, DL, xU, nU, IU, TU, AU, NU, _U, DU, MU, PU, UU, zU, XL, YL, aU, jU, GU, KU, {
        kernelName: mC,
        backendName: "webgl",
        kernelFunc: QU
    }, qU, {
        kernelName: "Tan",
        backendName: "webgl",
        kernelFunc: ML("return tan(x);")
    }, {
        kernelName: "Transpose",
        backendName: "webgl",
        kernelFunc: function(e) {
            for (var t, n = e.inputs, r = e.attrs, a = e.backend, o = n.x, i = r.perm, s = a, u = o.shape.length, c = new Array(u), l = 0; l < c.length; l++)
                c[l] = o.shape[i[l]];
            if (s.shouldExecuteOnCPU([o])) {
                var f = s.texData.get(o.dataId).values
                  , p = pM(f, o.shape, o.dtype, i, c);
                t = s.makeTensorInfo(c, o.dtype),
                s.texData.get(t.dataId).values = p
            } else
                t = SU(o, i, s);
            return t
        }
    }, {
        kernelName: "Unique",
        backendName: "webgl",
        kernelFunc: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the License);
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an AS IS BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = n.axis
              , o = t.x;
            tF(o, "unique"),
            console.warn("WARNING: ", "UI might be locked temporarily as data is being downloaded");
            var i = r.readSync(o.dataId)
              , s = dM(i, a, o.shape, o.dtype)
              , u = s.outputValues
              , c = s.outputShape
              , l = s.indices;
            return [r.makeTensorInfo(c, o.dtype, u), r.makeTensorInfo([l.length], "int32", l)]
        }
    }]/**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    ; YU < $U.length; YU++) {
        wC($U[YU])
    }
    /**
	 * @license
	 * Copyright 2017 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var ZU = RN
      , JU = f_
      , eV = p_
      , tV = d_
      , nV = KA
      , rV = function(e) {
        Oy(a, e);
        var t, n, r = Py(a);
        function a() {
            var e;
            return Ay(this, a),
            (e = r.call(this)).blockSize = 48,
            e.firstUse = !0,
            e.data = new wk(Fy(e),kS()),
            e
        }
        return _y(a, [{
            key: "write",
            value: function(e, t, n) {
                this.firstUse && (this.firstUse = !1,
                oC().get("IS_NODE") && JN("\n============================\nHi there ð. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));
                var r = {};
                return this.data.set(r, {
                    values: e,
                    dtype: n,
                    refCount: 1
                }),
                r
            }
        }, {
            key: "makeTensorInfo",
            value: function(e, t, n) {
                var r;
                if ("string" === t && null != n && n.length > 0 && Hk(n[0])) {
                    var a = n.map((function(e) {
                        return IC(e)
                    }
                    ));
                    r = this.write(a, e, t)
                } else
                    r = this.write(n, e, t);
                return {
                    dataId: r,
                    shape: e,
                    dtype: t
                }
            }
        }, {
            key: "incRef",
            value: function(e) {
                this.data.get(e).refCount++
            }
        }, {
            key: "decRef",
            value: function(e) {
                this.data.has(e) && this.data.get(e).refCount--
            }
        }, {
            key: "move",
            value: function(e, t, n, r) {
                this.data.set(e, {
                    values: t,
                    dtype: r,
                    refCount: 1
                })
            }
        }, {
            key: "numDataIds",
            value: function() {
                return this.data.numDataIds()
            }
        }, {
            key: "read",
            value: (n = Ty(regeneratorRuntime.mark((function e(t) {
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.abrupt("return", this.readSync(t));
                        case 1:
                        case "end":
                            return e.stop()
                        }
                }
                ), e, this)
            }
            ))),
            function(e) {
                return n.apply(this, arguments)
            }
            )
        }, {
            key: "readSync",
            value: function(e) {
                var t = this.data.get(e)
                  , n = t.dtype
                  , r = t.complexTensorInfos;
                return "complex64" === n ? e_(this.readSync(r.real.dataId), this.readSync(r.imag.dataId)) : this.data.get(e).values
            }
        }, {
            key: "bufferSync",
            value: function(e) {
                var t = this.readSync(e.dataId)
                  , n = t;
                if ("string" === e.dtype)
                    try {
                        n = t.map((function(e) {
                            return TC(e)
                        }
                        ))
                    } catch (e) {
                        throw new Error("Failed to decode encoded string bytes into utf-8")
                    }
                return VE(e.shape, e.dtype, n)
            }
        }, {
            key: "makeOutput",
            value: function(e, t, n) {
                var r = this.write(e, t, n);
                return kS().makeTensorFromDataId(r, t, n, this)
            }
        }, {
            key: "disposeData",
            value: function(e) {
                if (this.data.has(e)) {
                    var t = this.data.get(e).complexTensorInfos;
                    null != t && (this.disposeData(t.real.dataId),
                    this.disposeData(t.imag.dataId)),
                    this.data.delete(e)
                }
            }
        }, {
            key: "disposeIntermediateTensorInfo",
            value: function(e) {
                var t = e.dataId;
                if (this.data.has(t)) {
                    var n = this.data.get(t);
                    n.refCount--,
                    n.refCount < 1 && this.disposeData(t)
                }
            }
        }, {
            key: "time",
            value: (t = Ty(regeneratorRuntime.mark((function e(t) {
                var n;
                return regeneratorRuntime.wrap((function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return n = SC(),
                            t(),
                            e.abrupt("return", {
                                kernelMs: SC() - n
                            });
                        case 3:
                        case "end":
                            return e.stop()
                        }
                }
                ), e)
            }
            ))),
            function(e) {
                return t.apply(this, arguments)
            }
            )
        }, {
            key: "memory",
            value: function() {
                return {
                    unreliable: !0,
                    reasons: ["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]
                }
            }
        }, {
            key: "stridedSlice",
            value: function(e, t, n, r) {
                iF(e, "stridedSlice");
                var a = sS(t, n, r);
                if (a.some((function(e) {
                    return 0 === e
                }
                )))
                    return pE([], a);
                for (var o = VE(a, e.dtype), i = this.bufferSync(e), s = 0; s < o.size; s++) {
                    for (var u = o.indexToLoc(s), c = new Array(u.length), l = 0; l < c.length; l++)
                        c[l] = u[l] * r[l] + t[l];
                    o.set.apply(o, [i.get.apply(i, c)].concat(Vy(u)))
                }
                return o.toTensor()
            }
        }, {
            key: "diag",
            value: function(e) {
                for (var t = this.readSync(e.dataId), n = VE([e.size, e.size], e.dtype), r = n.values, a = 0; a < t.length; a++)
                    r[a * e.size + a] = t[a];
                return n.toTensor()
            }
        }, {
            key: "unstack",
            value: function(e, t) {
                for (var n = e.shape[t], r = new Array(e.rank - 1), a = 0, o = 0; o < e.rank; o++)
                    o !== t && (r[a++] = e.shape[o]);
                var i = new Array(e.rank).fill(0)
                  , s = e.shape.slice();
                s[t] = 1;
                for (var u = new Array(n), c = 0; c < u.length; c++)
                    i[t] = c,
                    u[c] = gI(e, i, s).reshape(r);
                return u
            }
        }, {
            key: "reverse",
            value: function(e, t) {
                iF(e, "reverse");
                for (var n = VE(e.shape, e.dtype), r = this.bufferSync(e), a = function(a) {
                    var o = n.indexToLoc(a)
                      , i = o.slice();
                    t.forEach((function(t) {
                        return i[t] = e.shape[t] - 1 - i[t]
                    }
                    )),
                    n.set.apply(n, [r.get.apply(r, Vy(i))].concat(Vy(o)))
                }, o = 0; o < n.size; o++)
                    a(o);
                return n.toTensor()
            }
        }, {
            key: "neg",
            value: function(e) {
                return iF(e, "neg"),
                _S(fT(-1), e)
            }
        }, {
            key: "addN",
            value: function(e) {
                var t = this;
                iF(e, "addN");
                for (var n = e.map((function(e) {
                    return t.readSync(e.dataId)
                }
                )), r = VE(e[0].shape, e[0].dtype), a = r.values, o = 0; o < e.length; o++)
                    for (var i = n[o], s = 0; s < a.length; s++)
                        a[s] += i[s];
                return r.toTensor()
            }
        }, {
            key: "softmax",
            value: function(e, t) {
                var n = Pk([t], e.shape)
                  , r = CT(e, n)
                  , a = LS(r.shape, n)
                  , o = ET(e, r.reshape(a))
                  , i = XI(o)
                  , s = this.sum(i, n).reshape(a);
                return NS(i, s)
            }
        }, {
            key: "pow",
            value: function(e, t) {
                return iF([e, t], "pow"),
                this.broadcastedBinaryOp(e, t, e.dtype, (function(e, t) {
                    return Math.pow(e, t)
                }
                ))
            }
        }, {
            key: "floorDiv",
            value: function(e, t) {
                return iF([e, t], "floorDiv"),
                this.broadcastedBinaryOp(e, t, "int32", (function(e, t) {
                    return Math.floor(e / t)
                }
                ))
            }
        }, {
            key: "sum",
            value: function(e, t) {
                iF(e, "sum"),
                US("sum", t, e.rank);
                for (var n = Uy(PS(e.shape, t), 2), r = n[0], a = n[1], o = FT(r, KC(e.dtype, "int32")), i = _k(a), s = this.readSync(o.dataId), u = this.readSync(e.dataId), c = 0; c < s.length; ++c) {
                    for (var l = c * i, f = 0, p = 0; p < i; ++p)
                        f += u[l + p];
                    s[c] = f
                }
                return o
            }
        }, {
            key: "prod",
            value: function(e, t) {
                iF(e, "sum");
                for (var n = Uy(PS(e.shape, t), 2), r = n[0], a = n[1], o = FT(r, KC(e.dtype, "int32")), i = _k(a), s = this.readSync(o.dataId), u = this.readSync(e.dataId), c = 0; c < s.length; ++c) {
                    for (var l = c * i, f = 1, p = 0; p < i; ++p)
                        f *= u[l + p];
                    s[c] = f
                }
                return o
            }
        }, {
            key: "unsortedSegmentSum",
            value: function(e, t, n) {
                iF(e, "unsortedSegmentSum");
                for (var r = [], a = e.rank - t.rank, o = 0; o < a; ++o)
                    t = t.expandDims(o + 1);
                for (var i = 0; i < n; ++i) {
                    var s = fT(i, "int32")
                      , u = zI(s, t).asType("float32").mul(e).sum(0);
                    r.push(u)
                }
                return FA(r)
            }
        }, {
            key: "argMin",
            value: function(e, t) {
                iF(e, "argMin");
                var n = [t];
                US("argMin", n, e.rank);
                for (var r = Uy(PS(e.shape, n), 2), a = r[0], o = r[1], i = FT(a, "int32"), s = _k(o), u = this.readSync(i.dataId), c = this.readSync(e.dataId), l = 0; l < u.length; ++l) {
                    for (var f = l * s, p = c[f], d = 0, h = 0; h < s; ++h) {
                        var m = c[f + h];
                        m < p && (p = m,
                        d = h)
                    }
                    u[l] = d
                }
                return i
            }
        }, {
            key: "argMax",
            value: function(e, t) {
                iF(e, "argMax");
                var n = [t];
                US("argMax", n, e.rank);
                for (var r = Uy(PS(e.shape, n), 2), a = r[0], o = r[1], i = FT(a, "int32"), s = _k(o), u = this.readSync(i.dataId), c = this.readSync(e.dataId), l = 0; l < u.length; ++l) {
                    for (var f = l * s, p = c[f], d = 0, h = 0; h < s; ++h) {
                        var m = c[f + h];
                        m > p && (p = m,
                        d = h)
                    }
                    u[l] = d
                }
                return i
            }
        }, {
            key: "cumsum",
            value: function(e, t, n, r) {
                if (iF(e, "cumsum"),
                t !== e.rank - 1)
                    throw new Error("backend.cumsum in CPU expects an inner-most axis=".concat(e.rank - 1, " but got axis=").concat(t));
                for (var a = KC(e.dtype, "int32"), o = FT(e.shape, a), i = this.readSync(o.dataId), s = this.readSync(e.dataId), u = e.shape[e.rank - 1], c = r ? function(e, t) {
                    return e + u - t - 1
                }
                : function(e, t) {
                    return e + t
                }
                , l = 0; l < s.length; l += u)
                    for (var f = 0; f < u; f++) {
                        var p = c(l, f);
                        if (0 === f)
                            i[p] = n ? 0 : s[p];
                        else {
                            var d = c(l, f - 1);
                            i[p] = n ? s[d] + i[d] : s[p] + i[d]
                        }
                    }
                return o
            }
        }, {
            key: "equal",
            value: function(e, t) {
                return iF([e, t], "equal"),
                this.broadcastedBinaryOp(e, t, "bool", (function(e, t) {
                    return e === t ? 1 : 0
                }
                ))
            }
        }, {
            key: "notEqual",
            value: function(e, t) {
                return iF([e, t], "notEqual"),
                this.broadcastedBinaryOp(e, t, "bool", (function(e, t) {
                    return e !== t ? 1 : 0
                }
                ))
            }
        }, {
            key: "less",
            value: function(e, t) {
                return iF([e, t], "less"),
                this.broadcastedBinaryOp(e, t, "bool", (function(e, t) {
                    return e < t ? 1 : 0
                }
                ))
            }
        }, {
            key: "lessEqual",
            value: function(e, t) {
                return iF([e, t], "lessEqual"),
                this.broadcastedBinaryOp(e, t, "bool", (function(e, t) {
                    return e <= t ? 1 : 0
                }
                ))
            }
        }, {
            key: "greater",
            value: function(e, t) {
                return iF([e, t], "greater"),
                this.broadcastedBinaryOp(e, t, "bool", (function(e, t) {
                    return e > t ? 1 : 0
                }
                ))
            }
        }, {
            key: "greaterEqual",
            value: function(e, t) {
                return iF([e, t], "greaterEqual"),
                this.broadcastedBinaryOp(e, t, "bool", (function(e, t) {
                    return e >= t ? 1 : 0
                }
                ))
            }
        }, {
            key: "logicalAnd",
            value: function(e, t) {
                return iF([e, t], "logicalAnd"),
                this.broadcastedBinaryOp(e, t, "bool", (function(e, t) {
                    return e && t
                }
                ))
            }
        }, {
            key: "logicalOr",
            value: function(e, t) {
                return iF([e, t], "logicalOr"),
                this.broadcastedBinaryOp(e, t, "bool", (function(e, t) {
                    return e || t
                }
                ))
            }
        }, {
            key: "select",
            value: function(e, t, n) {
                iF([e, t, n], "select");
                for (var r = this.readSync(e.dataId), a = this.readSync(t.dataId), o = this.readSync(n.dataId), i = FT(t.shape, KC(t.dtype, n.dtype)), s = this.readSync(i.dataId), u = 0, c = 0 === e.rank || e.rank > 1 || 1 === t.rank ? 1 : _k(t.shape.slice(1)), l = 0; l < r.length; l++)
                    for (var f = 0; f < c; f++)
                        1 === r[l] ? s[u++] = a[l] : s[u++] = o[l];
                return i
            }
        }, {
            key: "where",
            value: function(e) {
                iF([e], "where");
                var t = this.readSync(e.dataId);
                return nV(e.shape, t)
            }
        }, {
            key: "topk",
            value: function(e, t, n) {
                iF(e, "topk");
                var r = this.readSync(e.dataId);
                return tV(r, e.shape, e.dtype, t)
            }
        }, {
            key: "min",
            value: function(e, t) {
                iF(e, "min"),
                US("min", t, e.rank);
                for (var n = Uy(PS(e.shape, t), 2), r = n[0], a = n[1], o = FT(r, e.dtype), i = _k(a), s = this.readSync(o.dataId), u = this.readSync(e.dataId), c = 0; c < s.length; ++c) {
                    for (var l = c * i, f = u[l], p = 0; p < i; ++p) {
                        var d = u[l + p];
                        d < f && (f = d)
                    }
                    s[c] = f
                }
                return o
            }
        }, {
            key: "minimum",
            value: function(e, t) {
                return iF([e, t], "minimum"),
                this.broadcastedBinaryOp(e, t, e.dtype, (function(e, t) {
                    return Math.min(e, t)
                }
                ))
            }
        }, {
            key: "mod",
            value: function(e, t) {
                return iF([e, t], "mod"),
                this.broadcastedBinaryOp(e, t, e.dtype, (function(e, t) {
                    var n = e % t;
                    return e < 0 && t < 0 || e >= 0 && t >= 0 ? n : (n + t) % t
                }
                ))
            }
        }, {
            key: "maximum",
            value: function(e, t) {
                return iF([e, t], "maximum"),
                this.broadcastedBinaryOp(e, t, e.dtype, (function(e, t) {
                    return Math.max(e, t)
                }
                ))
            }
        }, {
            key: "all",
            value: function(e, t) {
                iF(e, "all"),
                US("all", t, e.rank);
                for (var n = Uy(PS(e.shape, t), 2), r = n[0], a = n[1], o = FT(r, e.dtype), i = _k(a), s = this.readSync(o.dataId), u = this.readSync(e.dataId), c = 0; c < s.length; ++c) {
                    for (var l = c * i, f = u[l], p = 0; p < i; ++p) {
                        var d = u[l + p];
                        f = f && d
                    }
                    s[c] = f
                }
                return o
            }
        }, {
            key: "any",
            value: function(e, t) {
                iF(e, "any"),
                US("any", t, e.rank);
                for (var n = Uy(PS(e.shape, t), 2), r = n[0], a = n[1], o = FT(r, e.dtype), i = _k(a), s = this.readSync(o.dataId), u = this.readSync(e.dataId), c = 0; c < s.length; ++c) {
                    for (var l = c * i, f = u[l], p = 0; p < i; ++p) {
                        var d = u[l + p];
                        f = f || d
                    }
                    s[c] = f
                }
                return o
            }
        }, {
            key: "squaredDifference",
            value: function(e, t) {
                return iF([e, t], "squaredDifference"),
                this.broadcastedBinaryOp(e, t, e.dtype, (function(e, t) {
                    var n = e - t;
                    return n * n
                }
                ))
            }
        }, {
            key: "eluDer",
            value: function(e, t) {
                iF([e, t], "eluDer");
                for (var n = new Float32Array(t.size), r = this.readSync(t.dataId), a = this.readSync(e.dataId), o = 0; o < r.length; ++o) {
                    var i = r[o];
                    n[o] = i >= 1 ? a[o] : a[o] * (i + 1)
                }
                return this.makeOutput(n, t.shape, "float32")
            }
        }, {
            key: "atan2",
            value: function(e, t) {
                return iF([e, t], "atan2"),
                this.broadcastedBinaryOp(e, t, e.dtype, (function(e, t) {
                    return Math.atan2(e, t)
                }
                ))
            }
        }, {
            key: "tile",
            value: function(e, t) {
                return iF(e, "tile"),
                eV(this.bufferSync(e), t)
            }
        }, {
            key: "gather",
            value: function(e, t, n) {
                iF([e, t], "gather");
                var r = e.shape.slice()
                  , a = this.readSync(t.dataId);
                r[n] = a.length;
                for (var o = VE(r, e.dtype), i = this.bufferSync(e), s = 0; s < o.size; ++s) {
                    var u = o.indexToLoc(s)
                      , c = u.slice();
                    c[n] = a[u[n]];
                    var l = i.locToIndex(c);
                    o.values[s] = i.values[l]
                }
                return o.toTensor()
            }
        }, {
            key: "batchToSpaceND",
            value: function(e, t, n) {
                iF([e], "batchToSpaceND");
                var r = t.reduce((function(e, t) {
                    return e * t
                }
                ))
                  , a = qN(e.shape, t, r)
                  , o = XN(a.length, t.length)
                  , i = QN(e.shape, t, r)
                  , s = YN(n, t.length)
                  , u = $N(i, n, t.length);
                return JE(e.reshape(a), o).reshape(i).slice(s, u)
            }
        }, {
            key: "pool3d",
            value: function(e, t, n) {
                iF(e, "pool3d");
                for (var r = t.strideDepth, a = t.strideHeight, o = t.strideWidth, i = t.dilationDepth, s = t.dilationHeight, u = t.dilationWidth, c = t.effectiveFilterDepth, l = t.effectiveFilterHeight, f = t.effectiveFilterWidth, p = t.padInfo.front, d = t.padInfo.top, h = t.padInfo.left, m = "max" === n ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY, v = this.readSync(e.dataId), g = VE(t.outShape, e.dtype), y = g.values, b = t.outShape[1] * t.outShape[2] * t.outShape[3] * t.outShape[4], x = t.outShape[2] * t.outShape[3] * t.outShape[4], w = t.outShape[3] * t.outShape[4], k = t.outShape[4], C = 0; C < t.batchSize; ++C)
                    for (var E = C * b, S = C * e.strides[0], I = 0; I < t.inChannels; ++I)
                        for (var T = 0; T < t.outDepth; ++T) {
                            for (var A = T * r - p, N = A; N < 0; )
                                N += i;
                            for (var _ = Math.min(t.inDepth, c + A), R = E + T * x, O = 0; O < t.outHeight; ++O) {
                                for (var D = O * a - d, B = D; B < 0; )
                                    B += s;
                                for (var F = Math.min(t.inHeight, l + D), M = R + O * w, P = 0; P < t.outWidth; ++P) {
                                    for (var L = P * o - h, U = L; U < 0; )
                                        U += u;
                                    for (var V = Math.min(t.inWidth, f + L), z = M + P * k, W = m, j = 0, H = 0, G = N; G < _; G += i) {
                                        for (var K = S + G * e.strides[1], q = B; q < F; q += s) {
                                            for (var X = K + q * e.strides[2], Q = U; Q < V; Q += u) {
                                                var Y = v[X + Q * e.strides[3] + I];
                                                if ("max" === n && Y > W ? W = Y : "avg" === n && (j += Y,
                                                H++),
                                                isNaN(W))
                                                    break
                                            }
                                            if (isNaN(W))
                                                break
                                        }
                                        if (isNaN(W))
                                            break
                                    }
                                    y[z + I] = "avg" === n ? j / H : W
                                }
                            }
                        }
                return g.toTensor()
            }
        }, {
            key: "avgPool3d",
            value: function(e, t) {
                return iF(e, "avgPool3d"),
                this.pool3d(e, t, "avg").toFloat()
            }
        }, {
            key: "avgPool3dBackprop",
            value: function(e, t, n) {
                iF([e, t], "avgPool3dBackprop");
                for (var r = n.strideDepth, a = n.strideHeight, o = n.strideWidth, i = n.filterDepth, s = n.filterHeight, u = n.filterWidth, c = n.dilationDepth, l = n.dilationHeight, f = n.dilationWidth, p = n.effectiveFilterDepth, d = n.effectiveFilterHeight, h = n.effectiveFilterWidth, m = p - 1 - n.padInfo.front, v = h - 1 - n.padInfo.left, g = d - 1 - n.padInfo.top, y = VE(t.shape, "float32"), b = 1 / (i * s * u), x = this.bufferSync(e), w = 0; w < n.batchSize; ++w)
                    for (var k = 0; k < n.inChannels; ++k)
                        for (var C = 0; C < n.inDepth; ++C)
                            for (var E = 0; E < n.inHeight; ++E)
                                for (var S = 0; S < n.inWidth; ++S) {
                                    for (var I = C - m, T = E - g, A = S - v, N = 0, _ = 0; _ < p; _ += c) {
                                        var R = (I + _) / r;
                                        if (!(R < 0 || R >= n.outDepth || Math.floor(R) !== R))
                                            for (var O = 0; O < d; O += l) {
                                                var D = (T + O) / a;
                                                if (!(D < 0 || D >= n.outHeight || Math.floor(D) !== D))
                                                    for (var B = 0; B < h; B += f) {
                                                        var F = (A + B) / o;
                                                        F < 0 || F >= n.outWidth || Math.floor(F) !== F || (N += x.get(w, R, D, F, k))
                                                    }
                                            }
                                    }
                                    y.set(N * b, w, C, E, S, k)
                                }
                return y.toTensor()
            }
        }, {
            key: "maxPool3d",
            value: function(e, t) {
                return iF(e, "maxPool3d"),
                this.pool3d(e, t, "max").toFloat()
            }
        }, {
            key: "maxPool3dPositions",
            value: function(e, t) {
                for (var n = VE(t.outShape, "int32"), r = t.strideDepth, a = t.strideHeight, o = t.strideWidth, i = t.dilationDepth, s = t.dilationHeight, u = t.dilationWidth, c = t.effectiveFilterDepth, l = t.effectiveFilterHeight, f = t.effectiveFilterWidth, p = t.padInfo.front, d = t.padInfo.top, h = t.padInfo.left, m = this.bufferSync(e), v = 0; v < t.batchSize; ++v)
                    for (var g = 0; g < t.inChannels; ++g)
                        for (var y = 0; y < t.outDepth; ++y) {
                            for (var b = y * r - p, x = b; x < 0; )
                                x += i;
                            for (var w = Math.min(t.inDepth, c + b), k = 0; k < t.outHeight; ++k) {
                                for (var C = k * a - d, E = C; E < 0; )
                                    E += s;
                                for (var S = Math.min(t.inHeight, l + C), I = 0; I < t.outWidth; ++I) {
                                    for (var T = I * o - h, A = T; A < 0; )
                                        A += u;
                                    for (var N = Math.min(t.inWidth, f + T), _ = Number.NEGATIVE_INFINITY, R = -1, O = x; O < w; O += i)
                                        for (var D = O - b, B = E; B < S; B += s)
                                            for (var F = B - C, M = A; M < N; M += u) {
                                                var P = M - T
                                                  , L = m.get(v, O, B, M, g);
                                                L >= _ && (_ = L,
                                                R = D * l * f + F * l + P)
                                            }
                                    n.set(R, v, y, k, I, g)
                                }
                            }
                        }
                return n.toTensor()
            }
        }, {
            key: "maxPool3dBackprop",
            value: function(e, t, n, r) {
                iF([t, n], "maxPool3dBackprop");
                for (var a = this.maxPool3dPositions(t, r), o = r.strideDepth, i = r.strideHeight, s = r.strideWidth, u = r.dilationDepth, c = r.dilationHeight, l = r.dilationWidth, f = r.effectiveFilterDepth, p = r.effectiveFilterHeight, d = r.effectiveFilterWidth, h = f - 1 - r.padInfo.front, m = d - 1 - r.padInfo.left, v = p - 1 - r.padInfo.top, g = VE(t.shape, "float32"), y = this.bufferSync(a), b = this.bufferSync(e), x = 0; x < r.batchSize; ++x)
                    for (var w = 0; w < r.inChannels; ++w)
                        for (var k = 0; k < r.inDepth; ++k)
                            for (var C = 0; C < r.inHeight; ++C)
                                for (var E = 0; E < r.inWidth; ++E) {
                                    for (var S = k - h, I = C - v, T = E - m, A = 0, N = 0; N < f; N += u) {
                                        var _ = (S + N) / o;
                                        if (!(_ < 0 || _ >= r.outDepth || Math.floor(_) !== _))
                                            for (var R = 0; R < p; R += c) {
                                                var O = (I + R) / i;
                                                if (!(O < 0 || O >= r.outHeight || Math.floor(O) !== O))
                                                    for (var D = 0; D < d; D += l) {
                                                        var B = (T + D) / s;
                                                        if (!(B < 0 || B >= r.outWidth || Math.floor(B) !== B)) {
                                                            var F = f * p * d - 1 - y.get(x, _, O, B, w) === N * p * d + R * d + D ? 1 : 0;
                                                            0 !== F && (A += b.get(x, _, O, B, w) * F)
                                                        }
                                                    }
                                            }
                                    }
                                    g.set(A, x, k, C, E, w)
                                }
                return g.toTensor()
            }
        }, {
            key: "resizeBilinear",
            value: function(e, t, n, r) {
                iF(e, "resizeBilinear");
                for (var a = Uy(e.shape, 4), o = a[0], i = a[1], s = a[2], u = a[3], c = this.readSync(e.dataId), l = new Float32Array(_k([o, t, n, u])), f = [r && t > 1 ? i - 1 : i, r && n > 1 ? s - 1 : s], p = [r && t > 1 ? t - 1 : t, r && n > 1 ? n - 1 : n], d = 0, h = f[0] / p[0], m = f[1] / p[1], v = 0; v < o; v++)
                    for (var g = 0; g < t; g++)
                        for (var y = h * g, b = Math.floor(y), x = y - b, w = Math.min(i - 1, Math.ceil(y)), k = v * e.strides[0] + b * e.strides[1], C = v * e.strides[0] + w * e.strides[1], E = 0; E < n; E++)
                            for (var S = m * E, I = Math.floor(S), T = S - I, A = Math.min(s - 1, Math.ceil(S)), N = k + I * e.strides[2], _ = C + I * e.strides[2], R = k + A * e.strides[2], O = C + A * e.strides[2], D = 0; D < u; D++) {
                                var B = c[N + D]
                                  , F = c[_ + D]
                                  , M = B + (c[R + D] - B) * T
                                  , P = M + (F + (c[O + D] - F) * T - M) * x;
                                l[d++] = P
                            }
                return pE(l, [o, t, n, u])
            }
        }, {
            key: "resizeBilinearBackprop",
            value: function(e, t, n) {
                iF([e, t], "resizeBilinearBackprop");
                for (var r = Uy(t.shape, 4), a = r[0], o = r[1], i = r[2], s = r[3], u = Uy(e.shape, 3), c = u[1], l = u[2], f = new Float32Array(a * o * i * s), p = [n && c > 1 ? o - 1 : o, n && l > 1 ? i - 1 : i], d = [n && c > 1 ? c - 1 : c, n && l > 1 ? l - 1 : l], h = p[0] / d[0], m = p[1] / d[1], v = this.readSync(e.dataId), g = 0, y = 0; y < a; y++)
                    for (var b = y * t.strides[0], x = 0; x < c; x++)
                        for (var w = x * h, k = Math.floor(w), C = Math.min(Math.ceil(w), o - 1), E = b + k * t.strides[1], S = b + C * t.strides[1], I = w - k, T = 1 - I, A = 0; A < l; A++)
                            for (var N = A * m, _ = Math.floor(N), R = Math.min(Math.ceil(N), i - 1), O = N - _, D = 1 - O, B = E + _ * t.strides[2], F = E + R * t.strides[2], M = S + _ * t.strides[2], P = S + R * t.strides[2], L = T * D, U = T * O, V = I * D, z = I * O, W = 0; W < s; W++) {
                                var j = v[g++];
                                f[B + W] += j * L,
                                f[F + W] += j * U,
                                f[M + W] += j * V,
                                f[P + W] += j * z
                            }
                return VA(f, [a, i, o, s], t.dtype)
            }
        }, {
            key: "resizeNearestNeighbor",
            value: function(e, t, n, r) {
                iF(e, "resizeNearestNeighbor");
                for (var a = Uy(e.shape, 4), o = a[0], i = a[1], s = a[2], u = a[3], c = this.readSync(e.dataId), l = new Float32Array(o * t * n * u), f = [r && t > 1 ? i - 1 : i, r && n > 1 ? s - 1 : s], p = [r && t > 1 ? t - 1 : t, r && n > 1 ? n - 1 : n], d = f[0] / p[0], h = f[1] / p[1], m = 0, v = 0; v < o; v++)
                    for (var g = v * e.strides[0], y = 0; y < t; y++)
                        for (var b = d * y, x = g + Math.min(i - 1, r ? Math.round(b) : Math.floor(b)) * e.strides[1], w = 0; w < n; w++)
                            for (var k = h * w, C = x + Math.min(s - 1, r ? Math.round(k) : Math.floor(k)) * e.strides[2], E = 0; E < u; E++) {
                                var S = c[C + E];
                                l[m++] = S
                            }
                return pE(l, [o, t, n, u], e.dtype)
            }
        }, {
            key: "resizeNearestNeighborBackprop",
            value: function(e, t, n) {
                iF([e, t], "resizeNearestNeighborBackprop");
                for (var r = Uy(t.shape, 4), a = r[0], o = r[1], i = r[2], s = r[3], u = Uy(e.shape, 3), c = u[1], l = u[2], f = new Float32Array(a * o * i * s), p = this.readSync(e.dataId), d = [n && c > 1 ? o - 1 : o, n && l > 1 ? i - 1 : i], h = [n && c > 1 ? c - 1 : c, n && l > 1 ? l - 1 : l], m = d[0] / h[0], v = d[1] / h[1], g = 1 / m, y = 1 / v, b = 2 * Math.ceil(g) + 2, x = 2 * Math.ceil(y) + 2, w = 0; w < a; w++)
                    for (var k = w * t.strides[0], C = 0; C < o; C++)
                        for (var E = k + C * t.strides[1], S = Math.floor(C * g), I = Math.floor(S - b / 2), T = 0; T < i; T++)
                            for (var A = E + T * t.strides[2], N = Math.floor(T * y), _ = Math.floor(N - x / 2), R = 0; R < s; R++) {
                                for (var O = 0, D = 0; D < b; D++) {
                                    var B = D + I;
                                    if (!(B < 0 || B >= c)) {
                                        var F = k + B * e.strides[1]
                                          , M = B * m;
                                        if (C === Math.min(o - 1, n ? Math.round(M) : Math.floor(M)))
                                            for (var P = 0; P < x; P++) {
                                                var L = P + _;
                                                if (!(L < 0 || L >= l)) {
                                                    var U = F + L * e.strides[2]
                                                      , V = L * v;
                                                    T === Math.min(i - 1, n ? Math.round(V) : Math.floor(V)) && (O += p[U + R])
                                                }
                                            }
                                    }
                                }
                                f[A + R] = O
                            }
                return VA(f, t.shape, t.dtype)
            }
        }, {
            key: "localResponseNormalization4D",
            value: function(e, t, n, r, a) {
                iF(e, "localResponseNormalization4D");
                var o = e.shape[3]
                  , i = o - 1
                  , s = this.readSync(e.dataId)
                  , u = e.size
                  , c = new Float32Array(u);
                function l(e) {
                    for (var n = e % o, r = e - n + Math.max(0, n - t), a = e - n + Math.min(n + t, i), u = 0; r <= a; r++) {
                        var c = s[r];
                        u += c * c
                    }
                    return u
                }
                for (var f = 0; f < u; f++) {
                    var p = l(f)
                      , d = s[f] * Math.pow(n + r * p, -a);
                    c[f] = d
                }
                return VA(c, e.shape)
            }
        }, {
            key: "LRNGrad",
            value: function(e, t, n, r, a, o, i) {
                iF(e, "LRNGrad");
                for (var s = e.shape[3], u = this.readSync(e.dataId), c = this.readSync(t.dataId), l = this.readSync(n.dataId), f = new Float32Array(e.size), p = e.size, d = 0; d < p; d++) {
                    for (var h = d % s, m = d - h + Math.max(0, h - r), v = d - h + Math.min(s, h + r + 1), g = 0, y = m; y < v; y++)
                        g += Math.pow(c[y], 2);
                    g = o * g + a;
                    for (var b = m; b < v; b++) {
                        var x = -2 * o * i * c[b] * l[d] / g;
                        d === b && (x += Math.pow(g, -i)),
                        x *= u[d],
                        f[b] += x
                    }
                }
                return VA(f, e.shape)
            }
        }, {
            key: "multinomial",
            value: function(e, t, n, r) {
                iF(e, "multinomial");
                for (var a = t ? e : SA(e), o = a.shape[0], i = a.shape[1], s = FT([o, n], "int32"), u = this.readSync(s.dataId), c = this.readSync(a.dataId), l = 0; l < o; ++l) {
                    var f = l * i
                      , p = new Float32Array(i - 1);
                    p[0] = c[f];
                    for (var d = 1; d < p.length; ++d)
                        p[d] = p[d - 1] + c[f + d];
                    for (var h = sA.alea(r.toString()), m = l * n, v = 0; v < n; ++v) {
                        var g = h();
                        u[m + v] = p.length;
                        for (var y = 0; y < p.length; y++)
                            if (g < p[y]) {
                                u[m + v] = y;
                                break
                            }
                    }
                }
                return s
            }
        }, {
            key: "oneHot",
            value: function(e, t, n, r) {
                iF(e, "oneHot");
                var a = new Float32Array(e.size * t);
                a.fill(r);
                for (var o = this.readSync(e.dataId), i = 0; i < e.size; ++i)
                    o[i] >= 0 && o[i] < t && (a[i * t + o[i]] = n);
                return UA(a, [e.size, t], "int32")
            }
        }, {
            key: "nonMaxSuppression",
            value: function(e, t, n, r, a) {
                iF(e, "nonMaxSuppression");
                var o = this.readSync(e.dataId)
                  , i = this.readSync(t.dataId);
                return ZU(o, i, n, r, a)
            }
        }, {
            key: "depthToSpace",
            value: function(e, t, n) {
                Ik("NHWC" === n, (function() {
                    return "Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(n)
                }
                )),
                Ik(t > 1, (function() {
                    return "blockSize should be > 1 for depthToSpace, but was: ".concat(t)
                }
                ));
                for (var r = e.shape[0], a = e.shape[1], o = e.shape[2], i = e.shape[3], s = a * t, u = o * t, c = i / (t * t), l = this.readSync(e.dataId), f = new Float32Array(r * s * u * c), p = 0, d = 0; d < r; ++d)
                    for (var h = 0; h < s; ++h)
                        for (var m = Math.floor(h / t), v = h % t, g = 0; g < u; ++g)
                            for (var y = Math.floor(g / t), b = (v * t + g % t) * c, x = 0; x < c; ++x) {
                                var w = x + b + i * (y + o * (m + a * d));
                                f[p++] = l[w]
                            }
                return VA(f, [r, s, u, c])
            }
        }, {
            key: "broadcastedBinaryOp",
            value: function(e, t, n, r) {
                var a = VI(e.shape, t.shape)
                  , o = VE(a, n)
                  , i = this.readSync(e.dataId)
                  , s = this.readSync(t.dataId)
                  , u = LI(e.shape, a)
                  , c = LI(t.shape, a)
                  , l = o.values;
                if (u.length + c.length === 0)
                    for (var f = 0; f < l.length; ++f)
                        l[f] = r(i[f % i.length], s[f % s.length]);
                else
                    for (var p = this.bufferSync(e), d = this.bufferSync(t), h = function(n) {
                        var a = o.indexToLoc(n)
                          , f = a.slice(-e.rank);
                        u.forEach((function(e) {
                            return f[e] = 0
                        }
                        ));
                        var h = p.locToIndex(f)
                          , m = a.slice(-t.rank);
                        c.forEach((function(e) {
                            return m[e] = 0
                        }
                        ));
                        var v = d.locToIndex(m);
                        l[n] = r(i[h], s[v])
                    }, m = 0; m < l.length; ++m)
                        h(m);
                return o.toTensor()
            }
        }, {
            key: "split",
            value: function(e, t, n) {
                return JU(e, t, n)
            }
        }, {
            key: "dispose",
            value: function() {}
        }, {
            key: "floatPrecision",
            value: function() {
                return 32
            }
        }, {
            key: "epsilon",
            value: function() {
                return Ly(Dy(a.prototype), "epsilon", this).call(this)
            }
        }, {
            key: "cropAndResize",
            value: function(e, t, n, r, a, o) {
                for (var i = Uy(e.shape, 4), s = i[0], u = i[1], c = i[2], l = i[3], f = t.shape[0], p = Uy(r, 2), d = p[0], h = p[1], m = VE([f, d, h, l], "float32"), v = this.readSync(t.dataId), g = this.readSync(n.dataId), y = this.readSync(e.dataId), b = e.strides, x = m.strides, w = 0; w < f; w++) {
                    var k = 4 * w
                      , C = v[k]
                      , E = v[k + 1]
                      , S = v[k + 2]
                      , I = v[k + 3]
                      , T = g[w];
                    if (!(T >= s))
                        for (var A = d > 1 ? (S - C) * (u - 1) / (d - 1) : 0, N = h > 1 ? (I - E) * (c - 1) / (h - 1) : 0, _ = 0; _ < d; _++) {
                            var R = d > 1 ? C * (u - 1) + _ * A : .5 * (C + S) * (u - 1);
                            if (R < 0 || R > u - 1)
                                for (var O = 0; O < h; O++)
                                    for (var D = 0; D < l; D++) {
                                        var B = D + O * x[2] + _ * x[1] + w * x[0];
                                        m.values[B] = o
                                    }
                            else if ("bilinear" === a)
                                for (var F = Math.floor(R), M = Math.ceil(R), P = R - F, L = 0; L < h; L++) {
                                    var U = h > 1 ? E * (c - 1) + L * N : .5 * (E + I) * (c - 1);
                                    if (U < 0 || U > c - 1)
                                        for (var V = 0; V < l; V++) {
                                            var z = V + L * x[2] + _ * x[1] + w * x[0];
                                            m.values[z] = o
                                        }
                                    else
                                        for (var W = Math.floor(U), j = Math.ceil(U), H = U - W, G = 0; G < l; G++) {
                                            var K = G + W * b[2] + F * b[1] + T * b[0]
                                              , q = y[K]
                                              , X = y[K = G + j * b[2] + F * b[1] + T * b[0]]
                                              , Q = y[K = G + W * b[2] + M * b[1] + T * b[0]]
                                              , Y = q + (X - q) * H
                                              , $ = Q + (y[K = G + j * b[2] + M * b[1] + T * b[0]] - Q) * H;
                                            K = G + L * x[2] + _ * x[1] + w * x[0],
                                            m.values[K] = Y + ($ - Y) * P
                                        }
                                }
                            else
                                for (var Z = 0; Z < h; ++Z) {
                                    var J = h > 1 ? E * (c - 1) + Z * N : .5 * (E + I) * (c - 1);
                                    if (J < 0 || J > c - 1)
                                        for (var ee = 0; ee < l; ee++) {
                                            var te = ee + Z * x[2] + _ * x[1] + w * x[0];
                                            m.values[te] = o
                                        }
                                    else
                                        for (var ne = Math.round(J), re = Math.round(R), ae = 0; ae < l; ae++) {
                                            var oe = ae + ne * b[2] + re * b[1] + T * b[0]
                                              , ie = ae + Z * x[2] + _ * x[1] + w * x[0];
                                            m.values[ie] = y[oe]
                                        }
                                }
                        }
                }
                return m.toTensor()
            }
        }, {
            key: "sparseToDense",
            value: function(e, t, n, r) {
                var a = aS(0, e, n)
                  , o = a.sliceRank
                  , i = a.numUpdates
                  , s = a.sliceSize
                  , u = a.strides
                  , c = a.outputSize;
                return this.scatter(e, t, n, c, s, i, o, u, r, !1)
            }
        }, {
            key: "gatherND",
            value: function(e, t) {
                var n = t.shape
                  , r = n[n.length - 1]
                  , a = Uy(tS(e, t), 4)
                  , o = a[0]
                  , i = a[1]
                  , s = a[2]
                  , u = a[3];
                if (0 === i)
                    return pE([], o, e.dtype);
                for (var c = new FC([i, s],e.dtype), l = this.readSync(t.dataId), f = this.readSync(e.dataId), p = 0; p < i; p++) {
                    for (var d = [], h = 0, m = 0; m < r; m++) {
                        var v = l[p * r + m];
                        h += v * u[m],
                        d.push(v)
                    }
                    if (h < 0 || h >= e.size / s)
                        throw new Error("Invalid indices: ".concat(d, " does not index into ").concat(e.shape));
                    for (var g = 0; g < s; g++)
                        c.values[p * s + g] = f[h * s + g]
                }
                return c.toTensor().reshape(o)
            }
        }, {
            key: "scatterND",
            value: function(e, t, n) {
                var r = aS(0, e, n)
                  , a = r.sliceRank
                  , o = r.numUpdates
                  , i = r.sliceSize
                  , s = r.strides
                  , u = r.outputSize
                  , c = fT(0);
                return this.scatter(e, t, n, u, i, o, a, s, c, !0)
            }
        }, {
            key: "onesLike",
            value: function(e) {
                if ("string" === e.dtype)
                    throw new Error("onesLike is not supported for string tensors");
                return ZI(e.shape, 1, e.dtype)
            }
        }, {
            key: "zerosLike",
            value: function(e) {
                var t = Vk(e.dtype, _k(e.shape));
                return this.makeOutput(t, e.shape, e.dtype)
            }
        }, {
            key: "linspace",
            value: function(e, t, n) {
                return c_(e, t, n)
            }
        }, {
            key: "scatter",
            value: function(e, t, n, r, a, o, i, s, u, c) {
                var l = [r / a, a]
                  , f = this.readSync(e.dataId)
                  , p = this.readSync(t.dataId);
                if (0 === r)
                    return pE([], n, t.dtype);
                var d = new FC(l,t.dtype);
                d.values.fill(this.readSync(u.dataId)[0]);
                for (var h = 0; h < o; h++) {
                    for (var m = [], v = 0, g = 0; g < i; g++) {
                        var y = f[h * i + g];
                        m.push(y),
                        v += y * s[g]
                    }
                    if (v < 0 || v >= r / a)
                        throw new Error("Invalid indices: ".concat(m, " does not index into ").concat(n));
                    for (var b = 0; b < a; b++)
                        c ? d.values[v * a + b] += p[h * a + b] : d.values[v * a + b] = 0 === t.rank ? p[0] : p[h * a + b]
                }
                return d.toTensor().reshape(n)
            }
        }]),
        a
    }(kk);
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    IS("cpu", (function() {
        return new rV
    }
    ), 1);
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the License);
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an AS IS BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var aV = kF("Elu", (function(e) {
        return e >= 0 ? e : Math.exp(e) - 1
    }
    ))
      , oV = {
        kernelName: "Elu",
        backendName: "cpu",
        kernelFunc: aV
    }
      , iV = oF((function(e, t) {
        return e < 0 ? t * e : e
    }
    ));
    function sV(e) {
        var t = e.inputs
          , n = e.backend
          , r = t.x
          , a = t.alpha;
        iF([r, a], "prelu");
        var o = n.data.get(r.dataId).values
          , i = n.data.get(a.dataId).values
          , s = Uy(iV(r.shape, a.shape, o, i, r.dtype), 2)
          , u = s[0]
          , c = s[1];
        return n.makeTensorInfo(c, r.dtype, u)
    }
    var uV = {
        kernelName: "Prelu",
        backendName: "cpu",
        kernelFunc: sV
    }
      , cV = kF("Relu", (function(e) {
        return Math.max(0, e)
    }
    ))
      , lV = {
        kernelName: "Relu",
        backendName: "cpu",
        kernelFunc: cV
    }
      , fV = kF("Relu6", (function(e) {
        return Math.min(Math.max(0, e), 6)
    }
    ))
      , pV = {
        kernelName: "Relu6",
        backendName: "cpu",
        kernelFunc: fV
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the License);
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an AS IS BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function dV(e, t, n, r) {
        if ("linear" === n)
            return cF({
                inputs: {
                    x: t
                },
                backend: e
            });
        if ("relu" === n)
            return cV({
                inputs: {
                    x: t
                },
                backend: e
            });
        if ("elu" === n)
            return aV({
                inputs: {
                    x: t
                },
                backend: e
            });
        if ("relu6" === n)
            return fV({
                inputs: {
                    x: t
                },
                backend: e
            });
        if ("prelu" === n)
            return sV({
                inputs: {
                    x: t,
                    alpha: r
                },
                backend: e
            });
        throw new Error("Activation ".concat(n, " has not been implemented for the CPU backend."))
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function hV(e) {
        var t = e.inputs
          , n = e.backend
          , r = e.attrs
          , a = t.x
          , o = r.shape
          , i = _k(a.shape)
          , s = Mk(o, i)
          , u = _k(s);
        Ik(i === u, (function() {
            return "The new shape (".concat(s, ") has ").concat(u, " elements and the old shape (").concat(a.shape, ") has ").concat(i, " elements. The new shape and old shape must have the same number of elements.")
        }
        )),
        n.incRef(a.dataId);
        var c = n.data.get(a.dataId);
        if (null != c.complexTensorInfos) {
            var l = c.complexTensorInfos.real
              , f = c.complexTensorInfos.imag;
            l.shape = s,
            f.shape = s
        }
        return {
            dataId: a.dataId,
            shape: s,
            dtype: a.dtype
        }
    }
    var mV = {
        kernelName: "Reshape",
        backendName: "cpu",
        kernelFunc: hV
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the License);
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an AS IS BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function vV(e) {
        var t = e.inputs
          , n = e.backend
          , r = e.attrs
          , a = t.a
          , o = t.b
          , i = r.transposeA
          , s = r.transposeB;
        iF([a, o], "matMul");
        var u = a.shape.length
          , c = o.shape.length
          , l = i ? a.shape[u - 2] : a.shape[u - 1]
          , f = s ? o.shape[c - 1] : o.shape[c - 2]
          , p = i ? a.shape[u - 1] : a.shape[u - 2]
          , d = s ? o.shape[c - 2] : o.shape[c - 1]
          , h = a.shape.slice(0, -2)
          , m = o.shape.slice(0, -2)
          , v = _k(h)
          , g = _k(m);
        Ik(u >= 2 && c >= 2 && (v === g || 1 === v || 1 === g), (function() {
            return "Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (".concat(h, ") and (").concat(m, ").")
        }
        ));
        var y = (v > g ? a.shape.slice(0, -2) : o.shape.slice(0, -2)).concat([p, d]);
        Ik(l === f, (function() {
            return "Error in matMul: inner shapes (".concat(l, ") and (").concat(f, ") of Tensors with shapes ").concat(a.shape, " and ").concat(o.shape, " and transposeA=").concat(i, " and transposeB=").concat(s, " must match.")
        }
        ));
        for (var b = s ? [g, d, f] : [g, f, d], x = hV({
            inputs: {
                x: a
            },
            backend: n,
            attrs: {
                shape: i ? [v, l, p] : [v, p, l]
            }
        }), w = hV({
            inputs: {
                x: o
            },
            backend: n,
            attrs: {
                shape: b
            }
        }), k = i ? x.shape[1] : x.shape[2], C = i ? x.shape[2] : x.shape[1], E = s ? w.shape[1] : w.shape[2], S = Math.max(v, g), I = n.data.get(x.dataId).values, T = n.data.get(w.dataId).values, A = Xk(x.shape), N = Xk(w.shape), _ = Uy(i ? [A[0], 1, A[1]] : [A[0], A[1], 1], 3), R = _[0], O = _[1], D = _[2], B = Uy(s ? [1, N[1], N[0]] : [N[1], 1, N[0]], 3), F = B[0], M = B[1], P = B[2], L = C * E, U = VE([S, C, E], x.dtype), V = U.values, z = n.blockSize, W = 0; W < S; W++)
            for (var j = 0; j < C; j += z)
                for (var H = 0; H < E; H += z)
                    for (var G = 0; G < k; G += z)
                        for (var K = Math.min(j + z, C), q = Math.min(H + z, E), X = Math.min(G + z, k), Q = j; Q < K; Q++)
                            for (var Y = H; Y < q; Y++) {
                                for (var $ = 0, Z = G; Z < X; Z++) {
                                    var J = Math.min(W, v - 1) * R
                                      , ee = Math.min(W, g - 1) * P;
                                    $ += I[J + Q * O + Z * D] * T[Z * F + Y * M + ee]
                                }
                                V[W * L + (Q * E + Y)] += $
                            }
        return n.disposeIntermediateTensorInfo(x),
        n.disposeIntermediateTensorInfo(w),
        n.makeTensorInfo(y, U.dtype, U.values)
    }
    var gV = {
        kernelName: "BatchMatMul",
        backendName: "cpu",
        kernelFunc: vV
    }
      , yV = {
        kernelName: "_FusedMatMul",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t, n, r, a = e.inputs, o = e.backend, i = e.attrs, s = a.a, u = a.b, c = a.bias, l = a.preluActivationWeights, f = i.transposeA, p = i.transposeB, d = i.activation, h = [];
            t = vV({
                inputs: {
                    a: s,
                    b: u
                },
                attrs: {
                    transposeA: f,
                    transposeB: p
                },
                backend: o
            }),
            c && (n = bF({
                inputs: {
                    a: t,
                    b: c
                },
                backend: o
            }),
            h.push(t),
            t = n),
            d && (r = dV(o, t, d, l),
            h.push(t),
            t = r);
            for (var m = 0, v = h; m < v.length; m++) {
                var g = v[m];
                o.disposeIntermediateTensorInfo(g)
            }
            return t
        }
    }
      , bV = {
        kernelName: "Acos",
        backendName: "cpu",
        kernelFunc: kF("Acos", (function(e) {
            return Math.acos(e)
        }
        ))
    }
      , xV = {
        kernelName: "Acosh",
        backendName: "cpu",
        kernelFunc: kF("Acosh", (function(e) {
            return Math.acosh(e)
        }
        ))
    }
      , wV = {
        kernelName: "Asin",
        backendName: "cpu",
        kernelFunc: kF("Asin", (function(e) {
            return Math.asin(e)
        }
        ))
    }
      , kV = {
        kernelName: "Asinh",
        backendName: "cpu",
        kernelFunc: kF("Asinh", (function(e) {
            return Math.asinh(e)
        }
        ))
    }
      , CV = {
        kernelName: "Atan",
        backendName: "cpu",
        kernelFunc: kF("Atan", (function(e) {
            return Math.atan(e)
        }
        ))
    }
      , EV = {
        kernelName: "Atanh",
        backendName: "cpu",
        kernelFunc: kF("Atanh", (function(e) {
            return Math.atanh(e)
        }
        ))
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the License);
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an AS IS BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the License);
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an AS IS BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function SV(e, t, n, r, a, o) {
        for (var i = a.strideHeight, s = a.strideWidth, u = a.dilationHeight, c = a.dilationWidth, l = a.effectiveFilterHeight, f = a.effectiveFilterWidth, p = a.padInfo.top, d = a.padInfo.left, h = "max" === o ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY, m = VE(a.outShape, n), v = m.values, g = a.outShape[1] * a.outShape[2] * a.outShape[3], y = a.outShape[2] * a.outShape[3], b = a.outShape[3], x = 0; x < a.batchSize; ++x)
            for (var w = x * g, k = x * r[0], C = 0; C < a.inChannels; ++C)
                for (var E = 0; E < a.outHeight; ++E)
                    for (var S = E * i - p, I = Math.max(0, S), T = Math.min(a.inHeight, l + S), A = w + E * y, N = 0; N < a.outWidth; ++N) {
                        for (var _ = N * s - d, R = Math.max(0, _), O = Math.min(a.inWidth, f + _), D = h, B = 0, F = 0, M = I; M < T; M += u) {
                            for (var P = k + M * r[1], L = R; L < O; L += c) {
                                var U = e[P + L * r[2] + C];
                                "max" === o && U > D ? D = U : "avg" === o && (B += U,
                                F++)
                            }
                            if (isNaN(D))
                                break
                        }
                        v[A + N * b + C] = "avg" === o ? B / F : D
                    }
        return m
    }
    function IV(e, t, n, r) {
        for (var a = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], o = arguments.length > 5 && void 0 !== arguments[5] && arguments[5], i = VE(r.outShape, "int32"), s = r.strideHeight, u = r.strideWidth, c = r.dilationHeight, l = r.dilationWidth, f = r.effectiveFilterHeight, p = r.effectiveFilterWidth, d = r.padInfo.top, h = r.padInfo.left, m = VE(t, n, e), v = 0; v < r.batchSize; ++v)
            for (var g = 0; g < r.inChannels; ++g)
                for (var y = 0; y < r.outHeight; ++y) {
                    for (var b = y * s - d, x = b; x < 0; )
                        x += c;
                    for (var w = Math.min(r.inHeight, f + b), k = 0; k < r.outWidth; ++k) {
                        for (var C = k * u - h, E = C; E < 0; )
                            E += l;
                        for (var S = Math.min(r.inWidth, p + C), I = Number.NEGATIVE_INFINITY, T = -1, A = x; A < w; A += c)
                            for (var N = A - b, _ = E; _ < S; _ += l) {
                                var R = _ - C
                                  , O = m.get(v, A, _, g);
                                O > I && (I = O,
                                T = a ? o ? ((v * r.inHeight + A) * r.inWidth + _) * r.inChannels + g : (A * r.inWidth + _) * r.inChannels + g : N * p + R)
                            }
                        i.set(T, v, y, k, g)
                    }
                }
        return i
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    var TV = {
        kernelName: "AvgPool",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x;
            iF(a, "avgPool");
            var o = r.filterSize
              , i = r.strides
              , s = r.pad
              , u = r.dimRoundingMode;
            Ik(cI(i, 1), (function() {
                return "Error in avgPool: Either strides or dilations must be 1. Got strides ".concat(i, " and dilations '1'")
            }
            ));
            var c, l = JS(a.shape, o, i, 1, s, u);
            if (1 === l.filterWidth && 1 === l.filterHeight && Rk(l.inShape, l.outShape))
                c = cF({
                    inputs: {
                        x: a
                    },
                    backend: n
                });
            else {
                var f = n.data.get(a.dataId).values
                  , p = Xk(a.shape)
                  , d = SV(f, a.shape, a.dtype, p, l, "avg");
                c = n.makeTensorInfo(l.outShape, a.dtype, d.values)
            }
            return c
        }
    }
      , AV = {
        kernelName: "AvgPoolBackprop",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.dy
              , o = t.input
              , i = o;
            iF([a, o], "avgPoolBackprop");
            for (var s = r.filterSize, u = r.strides, c = r.pad, l = JS(i.shape, s, u, 1, c), f = l.strideHeight, p = l.strideWidth, d = l.filterHeight, h = l.filterWidth, m = l.dilationHeight, v = l.dilationWidth, g = l.effectiveFilterHeight, y = l.effectiveFilterWidth, b = y - 1 - l.padInfo.left, x = g - 1 - l.padInfo.top, w = VE(i.shape, "float32"), k = 1 / (d * h), C = n.data.get(a.dataId).values, E = VE(a.shape, "float32", C), S = 0; S < l.batchSize; ++S)
                for (var I = 0; I < l.inChannels; ++I)
                    for (var T = 0; T < l.inHeight; ++T)
                        for (var A = 0; A < l.inWidth; ++A) {
                            for (var N = T - x, _ = A - b, R = 0, O = 0; O < g; O += m) {
                                var D = (N + O) / f;
                                if (!(D < 0 || D >= l.outHeight || Math.floor(D) !== D))
                                    for (var B = 0; B < y; B += v) {
                                        var F = (_ + B) / p;
                                        F < 0 || F >= l.outWidth || Math.floor(F) !== F || (R += E.get(S, D, F, I))
                                    }
                            }
                            w.set(R * k, S, T, A, I)
                        }
            return n.makeTensorInfo(w.shape, w.dtype, w.values)
        }
    }
      , NV = {
        kernelName: "FusedBatchNorm",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = t.scale
              , i = t.offset
              , s = t.mean
              , u = t.variance;
            Ik(s.shape.length === u.shape.length, (function() {
                return "Batch normalization gradient requires mean and variance to have equal ranks."
            }
            )),
            Ik(null == i || s.shape.length === i.shape.length, (function() {
                return "Batch normalization gradient requires mean and offset to have equal ranks."
            }
            )),
            Ik(null == o || s.shape.length === o.shape.length, (function() {
                return "Batch normalization gradient requires mean and scale to have equal ranks."
            }
            )),
            iF([a, s, u, o, i], "batchNorm");
            var c = r.varianceEpsilon;
            null == c && (c = .001);
            for (var l = n.data.get(a.dataId).values, f = n.data.get(s.dataId).values, p = n.data.get(u.dataId).values, d = o ? n.data.get(o.dataId).values : new Float32Array([1]), h = i ? n.data.get(i.dataId).values : new Float32Array([0]), m = new Float32Array(l.length), v = h.length, g = d.length, y = p.length, b = f.length, x = 0, w = 0, k = 0, C = 0, E = 0; E < l.length; ++E)
                m[E] = h[x++] + (l[E] - f[w++]) * d[k++] / Math.sqrt(p[C++] + c),
                x >= v && (x = 0),
                w >= b && (w = 0),
                k >= g && (k = 0),
                C >= y && (C = 0);
            return n.makeTensorInfo(a.shape, a.dtype, m)
        }
    }
      , _V = {
        kernelName: "ClipByValue",
        backendName: "cpu",
        kernelFunc: kF("ClipByValue", (function(e, t) {
            var n = t;
            return e > n.clipValueMax ? n.clipValueMax : e < n.clipValueMin ? n.clipValueMin : e
        }
        ))
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the License);
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an AS IS BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function RV(e) {
        var t = e.inputs
          , n = e.backend
          , r = t.input
          , a = n.data.get(r.dataId).complexTensorInfos.imag
          , o = n.data.get(a.dataId).values;
        return n.makeTensorInfo(a.shape, a.dtype, o)
    }
    var OV = {
        kernelName: "Imag",
        backendName: "cpu",
        kernelFunc: RV
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function DV(e) {
        var t = e.inputs
          , n = e.backend
          , r = Pk(e.attrs.axis, t[0].shape)[0]
          , a = hI(t.map((function(e) {
            return e.shape
        }
        )), r);
        if (0 === _k(a))
            return n.makeTensorInfo(a, t[0].dtype, []);
        var o = t.filter((function(e) {
            return _k(e.shape) > 0
        }
        ));
        if (1 === o.length)
            return o[0];
        if (dI(o.map((function(e) {
            return e.shape
        }
        )), r),
        "complex64" === o[0].dtype) {
            var i = o.map((function(e) {
                return fF({
                    inputs: {
                        input: e
                    },
                    backend: n
                })
            }
            ))
              , s = o.map((function(e) {
                return RV({
                    inputs: {
                        input: e
                    },
                    backend: n
                })
            }
            ))
              , u = DV({
                inputs: i,
                backend: n,
                attrs: {
                    axis: r
                }
            })
              , c = DV({
                inputs: s,
                backend: n,
                attrs: {
                    axis: r
                }
            })
              , l = sF({
                inputs: {
                    real: u,
                    imag: c
                },
                backend: n
            });
            return i.forEach((function(e) {
                return n.disposeIntermediateTensorInfo(e)
            }
            )),
            s.forEach((function(e) {
                return n.disposeIntermediateTensorInfo(e)
            }
            )),
            n.disposeIntermediateTensorInfo(u),
            n.disposeIntermediateTensorInfo(c),
            l
        }
        var f = o.map((function(e) {
            var t = _k(e.shape.slice(r));
            return hV({
                inputs: {
                    x: e
                },
                backend: n,
                attrs: {
                    shape: [-1, t]
                }
            })
        }
        ));
        a = hI(f.map((function(e) {
            return e.shape
        }
        )), 1);
        var p = Uk(o[0].dtype, _k(a));
        if (1 === f[0].shape[0]) {
            var d = 0;
            f.forEach((function(e) {
                var t = n.data.get(e.dataId).values
                  , r = _k(e.shape);
                p.set(t, d),
                d += r
            }
            ))
        } else {
            var h = 0;
            f.forEach((function(e) {
                for (var t = n.data.get(e.dataId).values, r = 0, o = 0; o < e.shape[0]; ++o)
                    for (var i = o * a[1] + h, s = 0; s < e.shape[1]; ++s)
                        p[i + s] = t[r++];
                h += e.shape[1]
            }
            ))
        }
        var m = hI(o.map((function(e) {
            return e.shape
        }
        )), r)
          , v = n.makeTensorInfo(m, t[0].dtype, p);
        return f.forEach((function(e) {
            return n.disposeIntermediateTensorInfo(e)
        }
        )),
        v
    }
    var BV = {
        kernelName: "Concat",
        backendName: "cpu",
        kernelFunc: DV
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function FV(e) {
        var t = e.inputs
          , n = e.backend
          , r = e.attrs
          , a = t.x
          , o = t.filter
          , i = r.strides
          , s = r.pad
          , u = r.dataFormat
          , c = r.dilations
          , l = r.dimRoundingMode;
        iF([a, o], "conv2d");
        for (var f = lI(u), p = tI(a.shape, o.shape, i, c, s, l, !1, f), d = p.filterHeight, h = p.filterWidth, m = p.dilationHeight, v = p.dilationWidth, g = p.padInfo.left, y = p.padInfo.top, b = "channelsLast" === p.dataFormat, x = new FC(p.outShape,a.dtype), w = Xk(a.shape), k = Xk(o.shape), C = w[0], E = b ? w[1] : w[2], S = b ? w[2] : 1, I = b ? 1 : w[1], T = x.strides[0], A = b ? x.strides[1] : x.strides[2], N = b ? x.strides[2] : 1, _ = b ? 1 : x.strides[1], R = n.data.get(a.dataId).values, O = n.data.get(o.dataId).values, D = x.values, B = 0; B < p.batchSize; ++B)
            for (var F = B * C, M = B * T, P = 0; P < p.outHeight; ++P)
                for (var L = M + P * A, U = P * p.strideHeight - y, V = 0; V < d; ++V) {
                    var z = U + V * m;
                    if (!(z < 0 || z >= p.inHeight))
                        for (var W = V * k[0], j = F + z * E, H = 0; H < p.outWidth; ++H)
                            for (var G = L + H * N, K = H * p.strideWidth - g, q = 0; q < h; ++q) {
                                var X = K + q * v;
                                if (!(X < 0 || X >= p.inWidth))
                                    for (var Q = j + X * S, Y = W + q * k[1], $ = 0; $ < p.inChannels; ++$) {
                                        for (var Z = R[Q + $ * I], J = 0; J < p.outChannels; ++J)
                                            D[G + J * _] += Z * O[Y + J];
                                        Y += p.outChannels
                                    }
                            }
                }
        return n.makeTensorInfo(x.shape, x.dtype, D)
    }
    var MV = {
        kernelName: "Conv2D",
        backendName: "cpu",
        kernelFunc: FV
    }
      , PV = {
        kernelName: "Conv2DBackpropFilter",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = t.dy
              , i = r.strides
              , s = r.pad
              , u = r.dataFormat
              , c = r.dimRoundingMode
              , l = r.filterShape;
            iF([a, o], "conv2dBackpropFilter");
            for (var f = lI(u), p = tI(a.shape, l, i, 1, s, c, !1, f), d = p.strideHeight, h = p.strideWidth, m = p.filterHeight, v = p.filterWidth, g = "channelsLast" === p.dataFormat, y = new FC(p.filterShape,"float32"), b = p.padInfo.left, x = p.padInfo.top, w = n.data.get(a.dataId).values, k = n.data.get(o.dataId).values, C = new FC(a.shape,a.dtype,w), E = new FC(o.shape,o.dtype,k), S = 0; S < m; ++S)
                for (var I = Math.max(0, Math.ceil((x - S) / d)), T = Math.min(p.outHeight, (p.inHeight + x - S) / d), A = 0; A < v; ++A)
                    for (var N = Math.max(0, Math.ceil((b - A) / h)), _ = Math.min(p.outWidth, (p.inWidth + b - A) / h), R = 0; R < p.inChannels; ++R)
                        for (var O = 0; O < p.outChannels; ++O) {
                            for (var D = 0, B = 0; B < p.batchSize; ++B)
                                for (var F = I; F < T; ++F)
                                    for (var M = S + F * d - x, P = N; P < _; ++P) {
                                        var L = A + P * h - b;
                                        D += g ? C.get(B, M, L, R) * E.get(B, F, P, O) : C.get(B, R, M, L) * E.get(B, O, F, P)
                                    }
                            y.set(D, S, A, R, O)
                        }
            return n.makeTensorInfo(y.shape, y.dtype, y.values)
        }
    }
      , LV = {
        kernelName: "Conv2DBackpropInput",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.dy
              , o = t.filter
              , i = r.inputShape
              , s = r.strides
              , u = r.pad
              , c = r.dataFormat
              , l = r.dimRoundingMode;
            iF([a, o], "conv2dBackpropInput");
            var f = Xk(o.shape)
              , p = Xk(a.shape)
              , d = lI(c)
              , h = tI(i, o.shape, s, 1, u, l, !1, d)
              , m = new FC(h.inShape,"float32")
              , v = m.values
              , g = n.data.get(a.dataId).values
              , y = n.data.get(o.dataId).values
              , b = Uy(f, 3)
              , x = b[0]
              , w = b[1]
              , k = b[2]
              , C = h.batchSize
              , E = h.filterHeight
              , S = h.filterWidth
              , I = h.inChannels
              , T = h.inHeight
              , A = h.inWidth
              , N = h.outChannels
              , _ = h.outHeight
              , R = h.outWidth
              , O = h.strideHeight
              , D = h.strideWidth;
            d = h.dataFormat;
            for (var B = E - 1 - h.padInfo.top, F = S - 1 - h.padInfo.left, M = "channelsLast" === d, P = m.strides[0], L = M ? m.strides[1] : m.strides[2], U = M ? m.strides[2] : 1, V = M ? 1 : m.strides[1], z = p[0], W = M ? p[1] : p[2], j = M ? p[2] : 1, H = M ? 1 : p[1], G = 0; G < C; ++G)
                for (var K = 0; K < I; ++K)
                    for (var q = 0; q < T; ++q)
                        for (var X = q - B, Q = Math.max(0, Math.ceil(X / O)), Y = Math.min(_, (E + X) / O), $ = 0; $ < A; ++$) {
                            for (var Z = $ - F, J = Math.max(0, Math.ceil(Z / D)), ee = Math.min(R, (S + Z) / D), te = 0, ne = Q; ne < Y; ++ne)
                                for (var re = ne * O - X, ae = J; ae < ee; ++ae)
                                    for (var oe = z * G + W * ne + j * ae, ie = x * (E - 1 - re) + w * (S - 1 - (ae * D - Z)) + k * K, se = 0; se < N; ++se)
                                        te += g[oe + H * se] * y[ie + se];
                            v[P * G + L * q + U * $ + V * K] = te
                        }
            return n.makeTensorInfo(m.shape, m.dtype, m.values)
        }
    }
      , UV = {
        kernelName: "Conv3D",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = t.filter
              , i = r.strides
              , s = r.pad
              , u = r.dilations;
            iF([a, o], "conv3d");
            for (var c = nI(a.shape, o.shape, i, u, s), l = c.filterDepth, f = c.filterHeight, p = c.filterWidth, d = c.dilationDepth, h = c.dilationHeight, m = c.dilationWidth, v = c.padInfo, g = v.front, y = v.left, b = v.top, x = new FC(c.outShape,a.dtype), w = n.data.get(a.dataId).values, k = n.data.get(o.dataId).values, C = x.values, E = Xk(a.shape), S = Xk(o.shape), I = 0; I < c.batchSize; ++I)
                for (var T = I * E[0], A = I * x.strides[0], N = 0; N < c.outDepth; ++N)
                    for (var _ = A + N * x.strides[1], R = N * c.strideDepth - g, O = 0; O < l; ++O) {
                        var D = R + O * d;
                        if (!(D < 0 || D >= c.inDepth))
                            for (var B = O * S[0], F = T + D * E[1], M = 0; M < c.outHeight; ++M)
                                for (var P = _ + M * x.strides[2], L = M * c.strideHeight - b, U = 0; U < f; ++U) {
                                    var V = L + U * h;
                                    if (!(V < 0 || V >= c.inHeight))
                                        for (var z = B + U * S[1], W = F + V * E[2], j = 0; j < c.outWidth; ++j)
                                            for (var H = P + j * c.outChannels, G = j * c.strideWidth - y, K = 0; K < p; ++K) {
                                                var q = G + K * m;
                                                if (!(q < 0 || q >= c.inWidth))
                                                    for (var X = z + K * S[2], Q = W + q * c.inChannels, Y = X, $ = 0; $ < c.inChannels; ++$) {
                                                        for (var Z = w[Q + $], J = 0; J < c.outChannels; ++J)
                                                            C[H + J] += Z * k[Y + J];
                                                        Y += c.outChannels
                                                    }
                                            }
                                }
                    }
            return n.makeTensorInfo(x.shape, x.dtype, x.values)
        }
    }
      , VV = {
        kernelName: "Conv3DBackpropFilterV2",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = t.dy
              , i = r.strides
              , s = r.pad
              , u = r.filterShape;
            iF([a, o], "conv3dBackpropFilterV2");
            for (var c = Xk(a.shape), l = Xk(o.shape), f = nI(a.shape, u, i, 1, s), p = f.strideDepth, d = f.strideHeight, h = f.strideWidth, m = f.filterDepth, v = f.filterHeight, g = f.filterWidth, y = new FC(f.filterShape,"float32"), b = y.values, x = Uy(y.strides, 4), w = x[0], k = x[1], C = x[2], E = x[3], S = n.data.get(o.dataId).values, I = Uy(l, 4), T = I[0], A = I[1], N = I[2], _ = I[3], R = n.data.get(a.dataId).values, O = Uy(c, 4), D = O[0], B = O[1], F = O[2], M = O[3], P = f.padInfo.front, L = f.padInfo.left, U = f.padInfo.top, V = 0; V < m; ++V)
                for (var z = Math.max(0, Math.ceil((P - V) / p)), W = Math.min(f.outDepth, (f.inDepth + P - V) / p), j = V * w, H = 0; H < v; ++H)
                    for (var G = Math.max(0, Math.ceil((U - H) / d)), K = Math.min(f.outHeight, (f.inHeight + U - H) / d), q = H * k + j, X = 0; X < g; ++X)
                        for (var Q = Math.max(0, Math.ceil((L - X) / h)), Y = Math.min(f.outWidth, (f.inWidth + L - X) / h), $ = X * C + q, Z = 0; Z < f.inChannels; ++Z)
                            for (var J = Z * E + $, ee = 0; ee < f.outChannels; ++ee) {
                                for (var te = 0, ne = 0; ne < f.batchSize; ++ne)
                                    for (var re = ne * D, ae = ne * T, oe = z; oe < W; ++oe)
                                        for (var ie = (V + oe * p - P) * B + re, se = oe * A + ae, ue = G; ue < K; ++ue)
                                            for (var ce = (H + ue * d - U) * F + ie, le = ue * N + se, fe = Q; fe < Y; ++fe) {
                                                var pe = fe * _ + le;
                                                te += R[(X + fe * h - L) * M + ce + Z] * S[pe + ee]
                                            }
                                b[J + ee] = te
                            }
            return n.makeTensorInfo(y.shape, y.dtype, y.values)
        }
    }
      , zV = {
        kernelName: "Conv3DBackpropInputV2",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.dy
              , o = t.filter
              , i = r.pad
              , s = r.strides
              , u = r.inputShape;
            iF([a], "conv3dBackpropInputV2");
            for (var c = Xk(a.shape), l = Xk(o.shape), f = nI(u, o.shape, s, 1, i), p = new FC(f.inShape,"float32"), d = p.values, h = Uy(p.strides, 4), m = h[0], v = h[1], g = h[2], y = h[3], b = n.data.get(a.dataId).values, x = Uy(c, 4), w = x[0], k = x[1], C = x[2], E = x[3], S = n.data.get(o.dataId).values, I = Uy(l, 4), T = I[0], A = I[1], N = I[2], _ = I[3], R = f.batchSize, O = f.filterDepth, D = f.filterHeight, B = f.filterWidth, F = f.inChannels, M = f.inDepth, P = f.inHeight, L = f.inWidth, U = f.outChannels, V = f.outDepth, z = f.outHeight, W = f.outWidth, j = f.strideDepth, H = f.strideHeight, G = f.strideWidth, K = O - 1 - f.padInfo.front, q = D - 1 - f.padInfo.top, X = B - 1 - f.padInfo.left, Q = 0; Q < R; ++Q)
                for (var Y = 0; Y < F; ++Y)
                    for (var $ = 0; $ < M; ++$)
                        for (var Z = $ - K, J = Math.max(0, Math.ceil(Z / j)), ee = Math.min(V, (O + Z) / j), te = 0; te < P; ++te)
                            for (var ne = te - q, re = Math.max(0, Math.ceil(ne / H)), ae = Math.min(z, (D + ne) / H), oe = 0; oe < L; ++oe) {
                                for (var ie = oe - X, se = Math.max(0, Math.ceil(ie / G)), ue = Math.min(W, (B + ie) / G), ce = 0, le = J; le < ee; ++le)
                                    for (var fe = le * j - Z, pe = re; pe < ae; ++pe)
                                        for (var de = pe * H - ne, he = se; he < ue; ++he)
                                            for (var me = w * Q + k * le + C * pe + E * he, ve = T * (O - 1 - fe) + A * (D - 1 - de) + N * (B - 1 - (he * G - ie)) + _ * Y, ge = 0; ge < U; ++ge)
                                                ce += b[me + ge] * S[ve + ge];
                                d[m * Q + v * $ + g * te + y * oe + Y] = ce
                            }
            return n.makeTensorInfo(p.shape, p.dtype, p.values)
        }
    }
      , WV = kF(fC, (function(e) {
        return Math.cos(e)
    }
    ))
      , jV = {
        kernelName: fC,
        backendName: "cpu",
        kernelFunc: WV
    }
      , HV = {
        kernelName: "Cosh",
        backendName: "cpu",
        kernelFunc: kF("Cosh", (function(e) {
            return Math.cosh(e)
        }
        ))
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function GV(e) {
        var t = e.inputs
          , n = e.backend
          , r = e.attrs
          , a = t.x
          , o = t.filter
          , i = r.strides
          , s = r.pad
          , u = r.dilations
          , c = r.dimRoundingMode;
        iF([a, o], "depthwiseConv2DNative");
        var l = Xk(a.shape)
          , f = Xk(o.shape)
          , p = u;
        null == p && (p = [1, 1]),
        Ik(cI(i, p), (function() {
            return "Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ".concat(i, " and dilations '").concat(p, "'")
        }
        ));
        for (var d = tI(a.shape, o.shape, i, p, s, c, !0), h = d.filterHeight, m = d.filterWidth, v = d.dilationHeight, g = d.dilationWidth, y = d.padInfo, b = y.left, x = y.top, w = d.outChannels / d.inChannels, k = new FC(d.outShape,a.dtype), C = n.data.get(a.dataId).values, E = n.data.get(o.dataId).values, S = k.values, I = 0; I < d.batchSize; ++I)
            for (var T = I * l[0], A = I * k.strides[0], N = 0; N < d.outHeight; ++N)
                for (var _ = A + N * k.strides[1], R = N * d.strideHeight - b, O = 0; O < h; ++O) {
                    var D = R + O * v;
                    if (!(D < 0 || D >= d.inHeight))
                        for (var B = O * f[0], F = T + D * l[1], M = 0; M < d.outWidth; ++M)
                            for (var P = _ + M * k.strides[2], L = M * d.strideWidth - x, U = 0; U < m; ++U) {
                                var V = L + U * g;
                                if (!(V < 0 || V >= d.inWidth))
                                    for (var z = B + U * f[1], W = F + V * d.inChannels, j = P, H = z, G = 0; G < d.inChannels; ++G) {
                                        for (var K = C[W + G], q = 0; q < w; ++q)
                                            S[j + q] += K * E[H + q];
                                        j += w,
                                        H += w
                                    }
                            }
                }
        return n.makeTensorInfo(k.shape, k.dtype, k.values)
    }
    var KV = {
        kernelName: "DepthwiseConv2dNative",
        backendName: "cpu",
        kernelFunc: GV
    }
      , qV = {
        kernelName: "DepthwiseConv2dNativeBackpropFilter",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = t.dy
              , i = r.strides
              , s = r.dilations
              , u = r.pad
              , c = r.dimRoundingMode
              , l = r.filterShape;
            iF([a, o], "depthwiseConv2dNativeBackpropFilter");
            for (var f = tI(a.shape, l, i, s, u, c, !0), p = f.strideHeight, d = f.strideWidth, h = f.filterHeight, m = f.filterWidth, v = new FC(f.filterShape,"float32"), g = f.padInfo.left, y = f.padInfo.top, b = f.outChannels / f.inChannels, x = n.data.get(a.dataId).values, w = new FC(a.shape,a.dtype,x), k = n.data.get(o.dataId).values, C = new FC(o.shape,o.dtype,k), E = 0; E < h; ++E)
                for (var S = Math.max(0, Math.ceil((y - E) / p)), I = Math.min(f.outHeight, (f.inHeight + y - E) / p), T = 0; T < m; ++T)
                    for (var A = Math.max(0, Math.ceil((g - T) / d)), N = Math.min(f.outWidth, (f.inWidth + g - T) / d), _ = 0; _ < f.outChannels; ++_) {
                        for (var R = Math.trunc(_ / b), O = _ % b, D = 0, B = 0; B < f.batchSize; ++B)
                            for (var F = S; F < I; ++F)
                                for (var M = E + F * p - y, P = A; P < N; ++P) {
                                    var L = T + P * d - g;
                                    D += w.get(B, M, L, R) * C.get(B, F, P, _)
                                }
                        v.set(D, E, T, R, O)
                    }
            return n.makeTensorInfo(v.shape, v.dtype, v.values)
        }
    }
      , XV = {
        kernelName: "DepthwiseConv2dNativeBackpropInput",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.dy
              , o = t.filter
              , i = r.strides
              , s = r.dilations
              , u = r.pad
              , c = r.dimRoundingMode
              , l = r.inputShape;
            iF([a, o], "depthwiseConv2DNativeBackpropInput");
            for (var f = Xk(a.shape), p = Xk(o.shape), d = tI(l, o.shape, i, s, u, c, !0), h = new FC(d.inShape,"float32"), m = h.values, v = Uy(h.strides, 3), g = v[0], y = v[1], b = v[2], x = n.data.get(a.dataId).values, w = Uy(f, 3), k = w[0], C = w[1], E = w[2], S = n.data.get(o.dataId).values, I = Uy(p, 3), T = I[0], A = I[1], N = I[2], _ = d.batchSize, R = d.filterHeight, O = d.filterWidth, D = d.inChannels, B = d.inHeight, F = d.inWidth, M = d.outChannels, P = d.outHeight, L = d.outWidth, U = d.strideHeight, V = d.strideWidth, z = R - 1 - d.padInfo.top, W = O - 1 - d.padInfo.left, j = M / D, H = 0; H < _; ++H)
                for (var G = 0; G < D; ++G)
                    for (var K = 0; K < B; ++K)
                        for (var q = K - z, X = Math.max(0, Math.ceil(q / U)), Q = Math.min(P, (R + q) / U), Y = 0; Y < F; ++Y) {
                            for (var $ = Y - W, Z = Math.max(0, Math.ceil($ / V)), J = Math.min(L, (O + $) / V), ee = 0, te = X; te < Q; ++te)
                                for (var ne = te * U - q, re = Z; re < J; ++re)
                                    for (var ae = k * H + C * te + E * re, oe = T * (R - 1 - ne) + A * (O - 1 - (re * V - $)) + N * G, ie = 0; ie < j; ++ie)
                                        ee += x[ae + (G * j + ie)] * S[oe + ie];
                            m[g * H + y * K + b * Y + G] = ee
                        }
            return n.makeTensorInfo(h.shape, h.dtype, h.values)
        }
    }
      , QV = {
        kernelName: "Dilation2D",
        backendName: "cpu",
        kernelFunc: function(e) {
            for (var t = e.inputs, n = e.backend, r = e.attrs, a = t.x, o = t.filter, i = r.strides, s = r.pad, u = r.dilations, c = n, l = c.data.get(a.dataId).values, f = a.shape.length, p = c.data.get(o.dataId).values, d = o.shape.length, h = ZS(a.shape, o.shape, i, s, "NHWC", u), m = h.batchSize, v = h.inHeight, g = h.inWidth, y = h.inChannels, b = h.outHeight, x = h.outWidth, w = h.padInfo, k = h.strideHeight, C = h.strideWidth, E = h.filterHeight, S = h.filterWidth, I = h.dilationHeight, T = h.dilationWidth, A = h.outShape, N = _k(A), _ = A.length, R = Vk(a.dtype, N), O = 0; O < m; ++O)
                for (var D = 0; D < b; ++D)
                    for (var B = D * k - w.top, F = 0; F < x; ++F)
                        for (var M = F * C - w.left, P = 0; P < y; ++P) {
                            for (var L = Number.MIN_SAFE_INTEGER, U = 0; U < E; ++U) {
                                var V = B + U * I;
                                if (V >= 0 && V < v)
                                    for (var z = 0; z < S; ++z) {
                                        var W = M + z * T;
                                        if (W >= 0 && W < g) {
                                            var j = tC([O, V, W, P], f, Xk(a.shape))
                                              , H = tC([U, z, P], d, Xk(o.shape))
                                              , G = l[j] + p[H];
                                            G > L && (L = G)
                                        }
                                    }
                            }
                            R[tC([O, D, F, P], _, Xk(A))] = L
                        }
            return {
                dataId: c.write(EC(R, a.dtype), A, a.dtype),
                shape: A,
                dtype: a.dtype
            }
        }
    }
      , YV = {
        kernelName: "Dilation2DBackpropFilter",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = t.filter
              , i = t.dy
              , s = r.strides
              , u = r.pad
              , c = r.dilations
              , l = n
              , f = Yk(a.shape, l.data.get(a.dataId).values)
              , p = Yk(o.shape, l.data.get(o.dataId).values)
              , d = ZS(a.shape, o.shape, s, u, "NHWC", c)
              , h = d.batchSize
              , m = d.inHeight
              , v = d.inWidth
              , g = d.inChannels
              , y = d.outHeight
              , b = d.outWidth
              , x = d.padInfo
              , w = d.strideHeight
              , k = d.strideWidth
              , C = d.filterHeight
              , E = d.filterWidth
              , S = d.dilationHeight
              , I = d.dilationWidth
              , T = d.outShape;
            Ik(i.rank === T.length, (function() {
                return "Error in Dilation2DBackpropFilter, dy must have the same rank as output ".concat(T.length, ", but got ").concat(i.rank)
            }
            ));
            for (var A = Yk(T, l.data.get(i.dataId).values), N = Jk(o.shape, o.dtype), _ = 0; _ < h; ++_)
                for (var R = 0; R < y; ++R)
                    for (var O = R * w - x.top, D = 0; D < b; ++D)
                        for (var B = D * k - x.left, F = 0; F < g; ++F) {
                            for (var M = Number.MIN_SAFE_INTEGER, P = 0, L = 0, U = 0; U < C; ++U) {
                                var V = O + U * S;
                                if (V >= 0 && V < m)
                                    for (var z = 0; z < E; ++z) {
                                        var W = B + z * I;
                                        if (W >= 0 && W < v) {
                                            var j = f[_][V][W][F] + p[U][z][F];
                                            j > M && (M = j,
                                            P = U,
                                            L = z)
                                        }
                                    }
                            }
                            N[P][L][F] += A[_][R][D][F]
                        }
            return {
                dataId: l.write(EC(N, a.dtype), o.shape, o.dtype),
                shape: o.shape,
                dtype: o.dtype
            }
        }
    }
      , $V = {
        kernelName: "Dilation2DBackpropInput",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = t.filter
              , i = t.dy
              , s = r.strides
              , u = r.pad
              , c = r.dilations
              , l = n
              , f = Yk(a.shape, l.data.get(a.dataId).values)
              , p = Yk(o.shape, l.data.get(o.dataId).values)
              , d = ZS(a.shape, o.shape, s, u, "NHWC", c)
              , h = d.batchSize
              , m = d.inHeight
              , v = d.inWidth
              , g = d.inChannels
              , y = d.outHeight
              , b = d.outWidth
              , x = d.padInfo
              , w = d.strideHeight
              , k = d.strideWidth
              , C = d.filterHeight
              , E = d.filterWidth
              , S = d.dilationHeight
              , I = d.dilationWidth
              , T = d.outShape;
            Ik(i.rank === T.length, (function() {
                return "Error in Dilation2DBackpropInput, dy must have the same rank as output ".concat(T.length, ", but got ").concat(i.rank)
            }
            ));
            for (var A = Yk(T, l.data.get(i.dataId).values), N = Jk(a.shape, a.dtype), _ = 0; _ < h; ++_)
                for (var R = 0; R < y; ++R)
                    for (var O = R * w - x.top, D = 0; D < b; ++D)
                        for (var B = D * k - x.left, F = 0; F < g; ++F) {
                            for (var M = Number.MIN_SAFE_INTEGER, P = O < 0 ? 0 : O, L = B < 0 ? 0 : B, U = 0; U < C; ++U) {
                                var V = O + U * S;
                                if (V >= 0 && V < m)
                                    for (var z = 0; z < E; ++z) {
                                        var W = B + z * I;
                                        if (W >= 0 && W < v) {
                                            var j = f[_][V][W][F] + p[U][z][F];
                                            j > M && (M = j,
                                            P = V,
                                            L = W)
                                        }
                                    }
                            }
                            N[_][P][L][F] += A[_][R][D][F]
                        }
            return {
                dataId: l.write(EC(N, a.dtype), a.shape, a.dtype),
                shape: a.shape,
                dtype: a.dtype
            }
        }
    }
      , ZV = oF((function(e, t) {
        return e / t
    }
    ))
      , JV = mF(pC, ZV)
      , ez = {
        kernelName: pC,
        backendName: "cpu",
        kernelFunc: JV
    }
      , tz = {
        kernelName: "Erf",
        backendName: "cpu",
        kernelFunc: kF("Erf", (function(e) {
            var t = Math.sign(e)
              , n = Math.abs(e)
              , r = 1 / (1 + .3275911 * n);
            return t * (1 - ((((1.061405429 * r - 1.453152027) * r + 1.421413741) * r - .284496736) * r + .254829592) * r * Math.exp(-n * n))
        }
        ))
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function nz(e, t, n) {
        for (var r = e.shape, a = r[0], o = r[1], i = n.data.get(e.dataId), s = i.complexTensorInfos.real, u = i.complexTensorInfos.imag, c = [a, o], l = _k(c), f = Uk("float32", l), p = Uk("float32", l), d = 0; d < a; d++) {
            for (var h = jF({
                inputs: {
                    x: s
                },
                backend: n,
                attrs: {
                    begin: [d, 0],
                    size: [1, o]
                }
            }), m = jF({
                inputs: {
                    x: u
                },
                backend: n,
                attrs: {
                    begin: [d, 0],
                    size: [1, o]
                }
            }), v = sF({
                inputs: {
                    real: h,
                    imag: m
                },
                backend: n
            }), g = rz(v, t, n), y = e_(g.real, g.imag), b = 0; b < o; b++) {
                var x = a_(y, b);
                f[d * o + b] = x.real,
                p[d * o + b] = x.imag
            }
            n.disposeIntermediateTensorInfo(h),
            n.disposeIntermediateTensorInfo(m),
            n.disposeIntermediateTensorInfo(v)
        }
        var w = n.makeTensorInfo(c, "float32", f)
          , k = n.makeTensorInfo(c, "float32", p)
          , C = sF({
            inputs: {
                real: w,
                imag: k
            },
            backend: n
        });
        return n.disposeIntermediateTensorInfo(w),
        n.disposeIntermediateTensorInfo(k),
        C
    }
    function rz(e, t, n) {
        var r, a, o = _k(e.shape), i = n.data.get(e.dataId), s = n.data.get(i.complexTensorInfos.real.dataId).values, u = n.data.get(i.complexTensorInfos.imag.dataId).values;
        if (0 == ((a = o) & a - 1)) {
            var c = az(s, u, o, t, n)
              , l = [e.shape[0], e.shape[1]];
            if (t) {
                var f = n.makeTensorInfo(l, "float32", c.real)
                  , p = n.makeTensorInfo(l, "float32", c.imag)
                  , d = n.makeTensorInfo([], "float32", (r = o,
                "string" == "float32" ? IC(r) : EC([r], "float32")))
                  , h = cF({
                    inputs: {
                        x: d
                    },
                    backend: n
                })
                  , m = ez.kernelFunc({
                    inputs: {
                        a: f,
                        b: d
                    },
                    backend: n
                })
                  , v = ez.kernelFunc({
                    inputs: {
                        a: p,
                        b: h
                    },
                    backend: n
                })
                  , g = n.data.get(m.dataId).values
                  , y = n.data.get(v.dataId).values;
                return n.disposeIntermediateTensorInfo(f),
                n.disposeIntermediateTensorInfo(p),
                n.disposeIntermediateTensorInfo(d),
                n.disposeIntermediateTensorInfo(h),
                n.disposeIntermediateTensorInfo(m),
                n.disposeIntermediateTensorInfo(v),
                {
                    real: g,
                    imag: y
                }
            }
            return c
        }
        return t_(function(e, t, n) {
            for (var r = new Float32Array(2 * t), a = 0; a < t; a++) {
                for (var o = 0, i = 0, s = 0; s < t; s++) {
                    var u = s_(a * s, t, n)
                      , c = a_(e, s);
                    o += c.real * u.real - c.imag * u.imag,
                    i += c.real * u.imag + c.imag * u.real
                }
                n && (o /= t,
                i /= t),
                o_(r, o, i, a)
            }
            return r
        }/**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        (e_(s, u), o, t))
    }
    function az(e, t, n, r, a) {
        if (1 === n)
            return {
                real: e,
                imag: t
            };
        var o = e_(e, t)
          , i = n / 2
          , s = n_(o)
          , u = s.real
          , c = s.imag
          , l = [u.length]
          , f = a.makeTensorInfo(l, "float32", u)
          , p = a.makeTensorInfo(l, "float32", c)
          , d = sF({
            inputs: {
                real: f,
                imag: p
            },
            backend: a
        })
          , h = r_(o)
          , m = h.real
          , v = h.imag
          , g = [m.length]
          , y = a.makeTensorInfo(g, "float32", m)
          , b = a.makeTensorInfo(g, "float32", v)
          , x = sF({
            inputs: {
                real: y,
                imag: b
            },
            backend: a
        })
          , w = az(u, c, i, r, a)
          , k = w.real
          , C = w.imag
          , E = [k.length]
          , S = a.makeTensorInfo(E, "float32", k)
          , I = a.makeTensorInfo(E, "float32", C)
          , T = sF({
            inputs: {
                real: S,
                imag: I
            },
            backend: a
        })
          , A = az(m, v, i, r, a)
          , N = A.real
          , _ = A.imag
          , R = [N.length]
          , O = a.makeTensorInfo(R, "float32", N)
          , D = a.makeTensorInfo(R, "float32", _)
          , B = sF({
            inputs: {
                real: O,
                imag: D
            },
            backend: a
        })
          , F = i_(n, r)
          , M = [F.real.length]
          , P = a.makeTensorInfo(M, "float32", F.real)
          , L = a.makeTensorInfo(M, "float32", F.imag)
          , U = sF({
            inputs: {
                real: P,
                imag: L
            },
            backend: a
        })
          , V = MF({
            inputs: {
                a: U,
                b: B
            },
            backend: a
        })
          , z = bF({
            inputs: {
                a: T,
                b: V
            },
            backend: a
        })
          , W = QF({
            inputs: {
                a: T,
                b: V
            },
            backend: a
        })
          , j = fF({
            inputs: {
                input: z
            },
            backend: a
        })
          , H = fF({
            inputs: {
                input: W
            },
            backend: a
        })
          , G = RV({
            inputs: {
                input: z
            },
            backend: a
        })
          , K = RV({
            inputs: {
                input: W
            },
            backend: a
        })
          , q = DV({
            inputs: [j, H],
            backend: a,
            attrs: {
                axis: 0
            }
        })
          , X = DV({
            inputs: [G, K],
            backend: a,
            attrs: {
                axis: 0
            }
        })
          , Q = a.data.get(q.dataId).values
          , Y = a.data.get(X.dataId).values;
        return a.disposeIntermediateTensorInfo(f),
        a.disposeIntermediateTensorInfo(p),
        a.disposeIntermediateTensorInfo(d),
        a.disposeIntermediateTensorInfo(y),
        a.disposeIntermediateTensorInfo(b),
        a.disposeIntermediateTensorInfo(x),
        a.disposeIntermediateTensorInfo(S),
        a.disposeIntermediateTensorInfo(I),
        a.disposeIntermediateTensorInfo(T),
        a.disposeIntermediateTensorInfo(O),
        a.disposeIntermediateTensorInfo(D),
        a.disposeIntermediateTensorInfo(B),
        a.disposeIntermediateTensorInfo(P),
        a.disposeIntermediateTensorInfo(L),
        a.disposeIntermediateTensorInfo(U),
        a.disposeIntermediateTensorInfo(V),
        a.disposeIntermediateTensorInfo(z),
        a.disposeIntermediateTensorInfo(W),
        a.disposeIntermediateTensorInfo(j),
        a.disposeIntermediateTensorInfo(G),
        a.disposeIntermediateTensorInfo(H),
        a.disposeIntermediateTensorInfo(K),
        a.disposeIntermediateTensorInfo(q),
        a.disposeIntermediateTensorInfo(X),
        {
            real: Q,
            imag: Y
        }
    }
    var oz = {
        kernelName: "FFT",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = t.input
              , a = _k(r.shape)
              , o = r.shape[r.shape.length - 1]
              , i = hV({
                inputs: {
                    x: r
                },
                backend: n,
                attrs: {
                    shape: [a / o, o]
                }
            })
              , s = nz(i, !1, n)
              , u = hV({
                inputs: {
                    x: s
                },
                backend: n,
                attrs: {
                    shape: r.shape
                }
            });
            return n.disposeIntermediateTensorInfo(i),
            n.disposeIntermediateTensorInfo(s),
            u
        }
    }
      , iz = {
        kernelName: "Fill",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.backend
              , n = e.attrs
              , r = n.shape
              , a = n.value
              , o = n.dtype || Gk(a)
              , i = Vk(o, _k(r));
            return function(e, t, n) {
                e.fill(t)
            }/**
	     * @license
	     * Copyright 2020 Google LLC. All Rights Reserved.
	     * Licensed under the Apache License, Version 2.0 (the "License");
	     * you may not use this file except in compliance with the License.
	     * You may obtain a copy of the License at
	     *
	     * http://www.apache.org/licenses/LICENSE-2.0
	     *
	     * Unless required by applicable law or agreed to in writing, software
	     * distributed under the License is distributed on an "AS IS" BASIS,
	     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	     * See the License for the specific language governing permissions and
	     * limitations under the License.
	     * =============================================================================
	     */
            (i, a),
            t.makeTensorInfo(r, o, i)
        }
    }
      , sz = {
        kernelName: "FlipLeftRight",
        backendName: "cpu",
        kernelFunc: function(e) {
            for (var t = e.inputs, n = (e.attrs,
            e.backend), r = t.image, a = n, o = Uk(r.dtype, _k(r.shape)), i = Uy(r.shape, 4), s = i[0], u = i[1], c = i[2], l = i[3], f = a.data.get(r.dataId).values, p = 0; p < s; p++)
                for (var d = p * c * u * l, h = 0; h < u; h++)
                    for (var m = h * (c * l), v = 0; v < c; v++)
                        for (var g = v * l, y = 0; y < l; y++) {
                            var b = [s, h, v, y][2]
                              , x = Math.round(c - b)
                              , w = d + m + g + y
                              , k = f[w];
                            x >= 0 && x < c && (k = f[d + m + x * l + y]),
                            o[w] = k
                        }
            return {
                dataId: a.write(o, r.shape, r.dtype),
                shape: r.shape,
                dtype: r.dtype
            }
        }
    }
      , uz = {
        kernelName: "FusedConv2D",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = t.filter
              , i = t.bias
              , s = t.preluActivationWeights
              , u = r.strides
              , c = r.pad
              , l = r.dataFormat
              , f = r.dilations
              , p = r.dimRoundingMode
              , d = r.activation
              , h = FV({
                inputs: {
                    x: a,
                    filter: o
                },
                backend: n,
                attrs: {
                    strides: u,
                    pad: c,
                    dataFormat: l,
                    dilations: f,
                    dimRoundingMode: p
                }
            });
            if (i) {
                var m = h;
                h = bF({
                    inputs: {
                        a: h,
                        b: i
                    },
                    backend: n
                }),
                n.disposeIntermediateTensorInfo(m)
            }
            if (d) {
                var v = h;
                h = dV(n, h, d, s),
                n.disposeIntermediateTensorInfo(v)
            }
            return h
        }
    }
      , cz = {
        kernelName: "FusedDepthwiseConv2D",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = t.filter
              , i = t.bias
              , s = t.preluActivationWeights
              , u = r.strides
              , c = r.pad
              , l = r.dataFormat
              , f = r.dilations
              , p = r.dimRoundingMode
              , d = r.activation
              , h = GV({
                inputs: {
                    x: a,
                    filter: o
                },
                backend: n,
                attrs: {
                    strides: u,
                    pad: c,
                    dataFormat: l,
                    dilations: f,
                    dimRoundingMode: p
                }
            });
            if (i) {
                var m = h;
                h = bF({
                    inputs: {
                        a: h,
                        b: i
                    },
                    backend: n
                }),
                n.disposeIntermediateTensorInfo(m)
            }
            if (d) {
                var v = h;
                h = dV(n, h, d, s),
                n.disposeIntermediateTensorInfo(v)
            }
            return h
        }
    }
      , lz = {
        kernelName: "IFFT",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = t.input
              , a = _k(r.shape)
              , o = r.shape[r.shape.length - 1]
              , i = hV({
                inputs: {
                    x: r
                },
                backend: n,
                attrs: {
                    shape: [a / o, o]
                }
            })
              , s = nz(i, !0, n)
              , u = hV({
                inputs: {
                    x: s
                },
                backend: n,
                attrs: {
                    shape: r.shape
                }
            });
            return n.disposeIntermediateTensorInfo(i),
            n.disposeIntermediateTensorInfo(s),
            u
        }
    }
      , fz = {
        kernelName: "IsFinite",
        backendName: "cpu",
        kernelFunc: kF("IsFinite", (function(e) {
            return Number.isFinite(e) ? 1 : 0
        }
        ), "bool")
    }
      , pz = {
        kernelName: "IsInf",
        backendName: "cpu",
        kernelFunc: kF("IsInf", (function(e) {
            return Math.abs(e) === 1 / 0 ? 1 : 0
        }
        ), "bool")
    }
      , dz = {
        kernelName: "IsNan",
        backendName: "cpu",
        kernelFunc: kF("IsNan", (function(e) {
            return Number.isNaN(e) ? 1 : 0
        }
        ), "bool")
    }
      , hz = {
        kernelName: "Log1p",
        backendName: "cpu",
        kernelFunc: kF("Log1p", (function(e) {
            return Math.log1p(e)
        }
        ))
    }
      , mz = {
        kernelName: "LogicalNot",
        backendName: "cpu",
        kernelFunc: kF("LogicalNot", (function(e) {
            return e ? 0 : 1
        }
        ), "bool")
    }
      , vz = {
        kernelName: dC,
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = n.reductionIndices
              , i = n.keepDims
              , s = r
              , u = a.shape
              , c = u.length
              , l = Pk(o, u)
              , f = l
              , p = VS(f, c)
              , d = s.data.get(a.dataId).values;
            if (null != p) {
                for (var h = new Array(c), m = 0; m < h.length; m++)
                    h[m] = u[p[m]];
                d = $F(d, u, a.dtype, p, h),
                f = WS(f.length, c),
                u = h
            }
            iF(a, "max"),
            US("max", f, c);
            var v = Uy(PS(u, f), 2)
              , g = v[0]
              , y = BF(d, _k(v[1]), g, a.dtype)
              , b = s.write(y, g, a.dtype)
              , x = g;
            return i && (x = LS(g, l)),
            {
                dataId: b,
                shape: x,
                dtype: a.dtype
            }
        }
    }
      , gz = {
        kernelName: "MaxPool",
        backendName: "cpu",
        kernelFunc: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x;
            iF(a, "maxPool");
            var o = r.filterSize
              , i = r.strides
              , s = r.pad
              , u = r.dimRoundingMode;
            Ik(cI(i, 1), (function() {
                return "Error in maxPool: Either strides or dilations must be 1. Got strides ".concat(i, " and dilations '1'")
            }
            ));
            var c, l = JS(a.shape, o, i, 1, s, u);
            if (1 === l.filterWidth && 1 === l.filterHeight && Rk(l.inShape, l.outShape))
                c = cF({
                    inputs: {
                        x: a
                    },
                    backend: n
                });
            else {
                var f = n.data.get(a.dataId).values
                  , p = Xk(a.shape)
                  , d = SV(f, a.shape, a.dtype, p, l, "max");
                c = n.makeTensorInfo(l.outShape, a.dtype, d.values)
            }
            return c
        }
    }
      , yz = {
        kernelName: "MaxPoolBackprop",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.dy
              , o = t.input
              , i = o;
            iF([o, t.output], "maxPoolBackprop");
            for (var s = r.filterSize, u = r.strides, c = r.pad, l = r.dimRoundingMode, f = JS(i.shape, s, u, 1, c, l), p = n.data.get(i.dataId).values, d = VE(f.outShape, i.dtype, IV(p, i.shape, i.dtype, f).values), h = f.strideHeight, m = f.strideWidth, v = f.dilationHeight, g = f.dilationWidth, y = f.effectiveFilterHeight, b = f.effectiveFilterWidth, x = b - 1 - f.padInfo.left, w = y - 1 - f.padInfo.top, k = VE(i.shape, "float32"), C = n.data.get(a.dataId).values, E = VE(a.shape, "float32", C), S = 0; S < f.batchSize; ++S)
                for (var I = 0; I < f.inChannels; ++I)
                    for (var T = 0; T < f.inHeight; ++T)
                        for (var A = 0; A < f.inWidth; ++A) {
                            for (var N = T - w, _ = A - x, R = 0, O = 0; O < y; O += v) {
                                var D = (N + O) / h;
                                if (!(D < 0 || D >= f.outHeight || Math.floor(D) !== D))
                                    for (var B = 0; B < b; B += g) {
                                        var F = (_ + B) / m;
                                        if (!(F < 0 || F >= f.outWidth || Math.floor(F) !== F)) {
                                            var M = y * b - 1 - d.get(S, D, F, I) === O * b + B ? 1 : 0;
                                            0 !== M && (R += E.get(S, D, F, I) * M)
                                        }
                                    }
                            }
                            k.set(R, S, T, A, I)
                        }
            return n.makeTensorInfo(k.shape, k.dtype, k.values)
        }
    }
      , bz = {
        kernelName: "MaxPoolWithArgmax",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = t.x
              , o = n.filterSize
              , i = n.strides
              , s = n.pad
              , u = n.includeBatchInIndex
              , c = r;
            iF(a, "MaxPoolWithArgmax");
            var l = c.data.get(a.dataId).values
              , f = JS(a.shape, o, i, [1, 1], s)
              , p = Uy(function(e, t, n, r, a) {
                var o = SV(e, 0, n, Xk(t), a, "max")
                  , i = IV(e, t, n, a, !0, r);
                return [o.values, i.values]
            }(l, a.shape, a.dtype, u, f), 2)
              , d = p[0]
              , h = p[1]
              , m = c.write(d, f.outShape, a.dtype)
              , v = c.write(h, f.outShape, a.dtype);
            return [{
                dataId: m,
                shape: f.outShape,
                dtype: a.dtype
            }, {
                dataId: v,
                shape: f.outShape,
                dtype: "int32"
            }]
        }
    }
      , xz = {
        kernelName: "MirrorPad",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = r.paddings
              , i = r.mode;
            iF(a, "mirrorPad");
            for (var s = o.map((function(e, t) {
                return e[0] + a.shape[t] + e[1]
            }
            )), u = o.map((function(e) {
                return e[0]
            }
            )), c = o.map((function(e, t) {
                return e[0] + a.shape[t]
            }
            )), l = "reflect" === i ? 0 : 1, f = n.data.get(a.dataId).values, p = a.shape.length, d = Xk(a.shape), h = _k(s), m = s.length, v = Xk(s), g = Uk(a.dtype, h), y = 0; y < h; y++) {
                for (var b = nC(y, m, v), x = 0; x < m; x++)
                    b[x] < u[x] ? b[x] = 2 * u[x] - b[x] - l : b[x] >= c[x] && (b[x] = 2 * (c[x] - 1) - b[x] + l);
                var w = tC(b = b.map((function(e, t) {
                    return e - u[t]
                }
                )), p, d);
                g[y] = f[w]
            }
            return {
                dataId: n.write(g, s, a.dtype),
                shape: s,
                dtype: a.dtype
            }
        }
    }
      , wz = ON
      , kz = {
        kernelName: "NonMaxSuppressionV4",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.boxes
              , o = t.scores
              , i = r.maxOutputSize
              , s = r.iouThreshold
              , u = r.scoreThreshold
              , c = r.padToMaxOutputSize
              , l = n;
            iF(a, "NonMaxSuppressionPadded");
            var f = l.data.get(a.dataId).values
              , p = l.data.get(o.dataId).values
              , d = wz(f, p, i, s, u, c);
            return [d.selectedIndices, d.validOutputs]
        }
    }
      , Cz = DN
      , Ez = {
        kernelName: "NonMaxSuppressionV5",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.boxes
              , o = t.scores
              , i = r.maxOutputSize
              , s = r.iouThreshold
              , u = r.scoreThreshold
              , c = r.softNmsSigma
              , l = n;
            iF(a, "NonMaxSuppressionWithScore");
            var f = l.data.get(a.dataId).values
              , p = l.data.get(o.dataId).values
              , d = Cz(f, p, i, s, u, c);
            return [d.selectedIndices, d.selectedScores]
        }
    }
      , Sz = {
        kernelName: "PadV2",
        backendName: "cpu",
        kernelFunc: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = r.paddings
              , i = r.constantValue;
            iF(a, "pad");
            var s = o.map((function(e, t) {
                return e[0] + a.shape[t] + e[1]
            }
            ))
              , u = o.map((function(e) {
                return e[0]
            }
            ))
              , c = n.data.get(a.dataId).values
              , l = _k(a.shape)
              , f = a.shape.length
              , p = Xk(a.shape)
              , d = _k(s)
              , h = s.length
              , m = Xk(s)
              , v = Uk(a.dtype, d);
            0 !== i && v.fill(i);
            for (var g = 0; g < l; g++)
                v[tC(nC(g, f, p).map((function(e, t) {
                    return e + u[t]
                }
                )), h, m)] = c[g];
            return {
                dataId: n.write(v, s, a.dtype),
                shape: s,
                dtype: a.dtype
            }
        }
    }
      , Iz = {
        kernelName: "Reciprocal",
        backendName: "cpu",
        kernelFunc: kF("Reciprocal", (function(e) {
            return 1 / e
        }
        ))
    }
      , Tz = {
        kernelName: "RotateWithOffset",
        backendName: "cpu",
        kernelFunc: function(e) {
            for (var t = e.inputs, n = e.attrs, r = e.backend, a = t.image, o = n.radians, i = n.fillValue, s = n.center, u = r, c = Uk(a.dtype, _k(a.shape)), l = Uy(a.shape, 4), f = l[0], p = l[1], d = l[2], h = l[3], m = Uy(KN(s, p, d), 2), v = m[0], g = m[1], y = Math.sin(o), b = Math.cos(o), x = u.data.get(a.dataId).values, w = 0; w < f; w++)
                for (var k = w * d * p * h, C = 0; C < p; C++)
                    for (var E = C * (d * h), S = 0; S < d; S++)
                        for (var I = S * h, T = 0; T < h; T++) {
                            var A = [f, C, S, T]
                              , N = A[2]
                              , _ = A[1]
                              , R = (N - v) * b - (_ - g) * y
                              , O = (N - v) * y + (_ - g) * b;
                            R = Math.round(R + v),
                            O = Math.round(O + g);
                            var D = i;
                            "number" != typeof i && (D = 3 === T ? 255 : i[T]),
                            R >= 0 && R < d && O >= 0 && O < p && (D = x[k + O * (d * h) + R * h + T]),
                            c[k + E + I + T] = D
                        }
            return {
                dataId: u.write(c, a.shape, a.dtype),
                shape: a.shape,
                dtype: a.dtype
            }
        }
    }
      , Az = {
        kernelName: "Round",
        backendName: "cpu",
        kernelFunc: kF("Round", (function(e) {
            var t = Math.floor(e);
            return e - t < .5 ? Math.floor(e) : e - t > .5 ? Math.ceil(e) : t % 2 == 0 ? t : t + 1
        }
        ))
    }
      , Nz = {
        kernelName: "Selu",
        backendName: "cpu",
        kernelFunc: kF("Selu", (function(e) {
            return e >= 0 ? 1.0507009873554805 * e : 1.7580993408473768 * (Math.exp(e) - 1)
        }
        ))
    }
      , _z = {
        kernelName: "Sigmoid",
        backendName: "cpu",
        kernelFunc: kF("Sigmoid", (function(e) {
            return 1 / (1 + Math.exp(-e))
        }
        ))
    }
      , Rz = {
        kernelName: "Sign",
        backendName: "cpu",
        kernelFunc: kF("Sign", (function(e) {
            return e < 0 ? -1 : e > 0 ? 1 : 0
        }
        ))
    }
      , Oz = kF(hC, (function(e) {
        return Math.sin(e)
    }
    ))
      , Dz = {
        kernelName: hC,
        backendName: "cpu",
        kernelFunc: Oz
    }
      , Bz = {
        kernelName: "Sinh",
        backendName: "cpu",
        kernelFunc: kF("Sinh", (function(e) {
            return Math.sinh(e)
        }
        ))
    }
      , Fz = Math.log(1.1920928955078125e-7) + 2
      , Mz = {
        kernelName: "Softplus",
        backendName: "cpu",
        kernelFunc: kF("Softplus", (function(e) {
            var t = e > -Fz
              , n = e < Fz
              , r = Math.exp(e);
            return n ? r : t ? e : Math.log(1 + r)
        }
        ))
    };
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the License);
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an AS IS BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    function Pz(e) {
        var t = e.inputs
          , n = e.attrs
          , r = e.backend
          , a = t.x
          , o = n.perm;
        iF(a, "transpose");
        for (var i = a.shape.length, s = new Array(i), u = 0; u < s.length; u++)
            s[u] = a.shape[o[u]];
        var c = $F(r.data.get(a.dataId).values, a.shape, a.dtype, o, s);
        return {
            dataId: r.write(c, s, a.dtype),
            shape: s,
            dtype: a.dtype
        }
    }
    /**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    for (var Lz = {
        kernelName: "Transpose",
        backendName: "cpu",
        kernelFunc: Pz
    }, Uz = {
        kernelName: "SpaceToBatchND",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = e.attrs
              , a = t.x
              , o = r.blockShape
              , i = r.paddings;
            iF([a], "spaceToBatchND");
            var s = _k(o)
              , u = [[0, 0]];
            u.push.apply(u, Vy(i));
            for (var c = 1 + o.length; c < a.shape.length; ++c)
                u.push([0, 0]);
            var l = Sz.kernelFunc({
                inputs: {
                    x: a
                },
                backend: n,
                attrs: {
                    paddings: u,
                    constantValue: 0
                }
            })
              , f = qN(l.shape, o, s, !1)
              , p = XN(f.length, o.length, !1)
              , d = QN(l.shape, o, s, !1)
              , h = hV({
                inputs: {
                    x: l
                },
                backend: n,
                attrs: {
                    shape: f
                }
            })
              , m = Pz({
                inputs: {
                    x: h
                },
                backend: n,
                attrs: {
                    perm: p
                }
            })
              , v = hV({
                inputs: {
                    x: m
                },
                backend: n,
                attrs: {
                    shape: d
                }
            });
            return n.disposeIntermediateTensorInfo(l),
            n.disposeIntermediateTensorInfo(h),
            n.disposeIntermediateTensorInfo(m),
            v
        }
    }, Vz = {
        kernelName: "Sqrt",
        backendName: "cpu",
        kernelFunc: kF("Sqrt", (function(e) {
            return Math.sqrt(e)
        }
        ))
    }, zz = {
        kernelName: "Square",
        backendName: "cpu",
        kernelFunc: function(e) {
            var t = e.inputs
              , n = e.backend
              , r = t.x
              , a = n;
            iF(r, "square");
            for (var o = a.data.get(r.dataId).values, i = new Float32Array(o.length), s = 0; s < o.length; ++s) {
                var u = o[s];
                i[s] = u * u
            }
            return {
                dataId: a.write(i, r.shape, r.dtype),
                shape: r.shape,
                dtype: r.dtype
            }
        }
    }, Wz = {
        kernelName: "Step",
        backendName: "cpu",
        kernelFunc: kF("Step", (function(e, t) {
            var n = t;
            return isNaN(e) ? NaN : e > 0 ? 1 : n.alpha
        }
        ))
    }, jz = {
        kernelName: "Tan",
        backendName: "cpu",
        kernelFunc: kF("Tan", (function(e) {
            return Math.tan(e)
        }
        ))
    }, Hz = kF("Tanh", (function(e) {
        return Math.tanh(e)
    }
    )), Gz = 0, Kz = [yV, aF, bV, xV, xF, wV, kV, CV, EV, TV, AV, gV, NV, hF, SF, _V, uF, BV, PV, LV, MV, VV, zV, UV, jV, HV, KV, qV, XV, QV, $V, YV, ez, oV, tz, TF, NF, oz, iz, sz, RF, uz, cz, lF, lz, OV, fz, pz, dz, DF, hz, mz, gz, yz, bz, vz, xz, PF, kz, Ez, UF, Sz, uV, pF, Iz, lV, pV, mV, Tz, Az, zF, Nz, _z, Rz, Dz, Bz, HF, Mz, Uz, Vz, zz, KF, Wz, YF, jz, {
        kernelName: "Tanh",
        backendName: "cpu",
        kernelFunc: Hz
    }, Lz, {
        kernelName: "Unique",
        backendName: "cpu",
        kernelFunc: /**
	   * @license
	   * Copyright 2020 Google LLC. All Rights Reserved.
	   * Licensed under the Apache License, Version 2.0 (the License);
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   * http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an AS IS BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   * =============================================================================
	   */
        function(e) {
            var t = e.inputs
              , n = e.attrs
              , r = e.backend
              , a = n.axis
              , o = t.x;
            iF(o, "unique");
            var i = ZF(r.data.get(o.dataId).values, a, o.shape, o.dtype)
              , s = i.outputValues
              , u = i.outputShape
              , c = i.indices;
            return [r.makeTensorInfo(u, o.dtype, s), r.makeTensorInfo([c.length], "int32", c)]
        }
    }]/**
	 * @license
	 * Copyright 2020 Google LLC. All Rights Reserved.
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 * =============================================================================
	 */
    ; Gz < Kz.length; Gz++) {
        wC(Kz[Gz])
    }
    var qz = Yg.Mode
      , Xz = Yg.FaceDirection
      , Qz = Yg.Errors;
    !function(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        if (wS("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),
        IB)
            throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");
        EB = e,
        TB = t
    }("https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@2.7.0/dist/tfjs-backend-wasm.wasm");
    var Yz = function(e) {
        var t = e.find((function(e) {
            return "left" === e.name
        }
        ))
          , n = e.find((function(e) {
            return "right" === e.name
        }
        ));
        if (t && n) {
            var r = t.image;
            t.image = n.image,
            n.image = r
        }
        return e
    };
    function $z() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
          , t = e.apiCheck
          , n = e.mode
          , r = e.bgCameraMask
          , a = e.bgCameraMaskRed
          , o = e.surroundStyle
          , i = e.cropAreaDimension
          , s = e.onLivenessDetectionDone
          , u = e.onError
          , c = kg.useState(!1)
          , l = hw(c, 2)
          , f = l[0]
          , p = l[1]
          , d = kg.useRef(null)
          , h = ey.useSDKSettings()
          , m = h.lang
          , v = h.assetRoot
          , g = h.apiClient
          , y = n === qz.ACTIVE
          , b = kg.useReducer((function(e) {
            return e + 1
        }
        ), 0)
          , x = hw(b, 2)
          , w = (x[0],
        x[1])
          , k = kg.useRef(null)
          , C = kg.useRef(null);
        null === C.current && (C.current = Ey.initFaceVerificationData({
            assetRoot: v
        }));
        var E = kg.useState("")
          , S = hw(E, 2)
          , I = S[0]
          , T = S[1]
          , A = kg.useCallback((function(e) {
            var t, n, a = e.clientWidth, s = e.clientHeight, u = e.videoAreaWidth, c = e.videoAreaHeight, l = e.lostX, f = e.lostY;
            ww.isMobile ? n = t = u : t = n = c - 200;
            var d = Math.floor((u - t) / 2) + l
              , h = 5 + f
              , m = r;
            k.current = {
                x: d,
                y: h,
                width: t,
                height: n,
                image: m,
                surroundStyle: o
            },
            "object" === iw(i) ? k.current = pw(pw({}, k.current), i) : "function" == typeof i && (k.current = pw(pw({}, k.current), i({
                clientWidth: a,
                clientHeight: s,
                videoAreaWidth: u,
                videoAreaHeight: c,
                lostX: l,
                lostY: f,
                isMobile: ww.isMobile
            }))),
            w(),
            p(!0)
        }
        ), [r, o, i])
          , N = kg.useState(3)
          , _ = hw(N, 2)
          , R = _[0]
          , O = _[1]
          , D = kg.useState(!1)
          , B = hw(D, 2)
          , F = B[0]
          , M = B[1]
          , P = kg.useRef(!1)
          , L = kg.useCallback((function(e) {
            M(e),
            P.current = e
        }
        ), [])
          , U = kg.useRef(null)
          , V = kg.useRef([])
          , z = kg.useCallback((function() {
            O(3),
            clearInterval(U.current),
            L(!0),
            U.current = setInterval((function() {
                O((function(e) {
                    if (e - 1 == 0) {
                        clearInterval(U.current);
                        var n = V.current;
                        t ? Promise.all(n.map((function(e) {
                            return g.uploadImage({
                                file: e,
                                label: "portrait"
                            })
                        }
                        ))).then((function(e) {
                            g.verifyFaceLiveness({
                                images: e.map((function(e) {
                                    return {
                                        id: e.data.image_id
                                    }
                                }
                                ))
                            }).then((function(e) {
                                s({
                                    apiCheckPassed: e.data.is_live,
                                    verifyFaceLivenessResult: e.data
                                })
                            }
                            ))
                        }
                        )) : s({
                            frontalFaces: n
                        })
                    }
                    return e - 1
                }
                ))
            }
            ), 1e3)
        }
        ), [L, t, s, g]);
        kg.useEffect((function() {
            I && (clearInterval(U.current),
            L(!1))
        }
        ), [I, L]),
        kg.useEffect((function() {
            var e, n, o = d.current, i = xk((function() {
                var e = C.current.steps;
                if (C.current.curStepIndex++,
                C.current.curStepIndex === e.length && s && !t) {
                    var n = e.map((function(e) {
                        return {
                            name: e.name,
                            image: {
                                blob: e.image.blob
                            }
                        }
                    }
                    ));
                    s({
                        steps: Yz(n),
                        frontalFaces: e.map((function(e) {
                            return e.frontalFaceImage.blob
                        }
                        )).filter((function(e) {
                            return null !== e
                        }
                        ))
                    })
                }
                w()
            }
            ), 400);
            function c(e, t, n) {
                return l.apply(this, arguments)
            }
            function l() {
                return (l = uw(regeneratorRuntime.mark((function e(n, r, a) {
                    var o, u, c, l, f, p;
                    return regeneratorRuntime.wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                if (o = C.current,
                                u = o.curStepIndex,
                                c = o.steps,
                                !(u < c.length)) {
                                    e.next = 18;
                                    break
                                }
                                if (l = c[u],
                                n !== Xz.FRONTAL || !(null === l.frontalFaceImage.blurScore || a > l.frontalFaceImage.blurScore)) {
                                    e.next = 10;
                                    break
                                }
                                return l.frontalFaceImage.blurScore = a,
                                e.next = 7,
                                gy.takePicture({
                                    canvas: r
                                });
                            case 7:
                                f = e.sent,
                                l.frontalFaceImage.blob = f,
                                t && g.uploadImage({
                                    file: f,
                                    label: "portrait"
                                }).then((function(e) {
                                    if (l.frontalFaceImage.imageId = e.data.image_id,
                                    C.current.curStepIndex === c.length) {
                                        var t = C.current.steps
                                          , n = t.slice(0, t.length - 1).filter((function(e) {
                                            return e.frontalFaceImage.imageId
                                        }
                                        ));
                                        0 === n.length ? s({
                                            error: "wrong_face_movement"
                                        }) : Promise.all([g.verifyFaceLiveness({
                                            images: [].concat(mw(n.slice(0, Math.min(2, n.length))), [t[t.length - 1]]).map((function(e) {
                                                return {
                                                    id: e.frontalFaceImage.imageId
                                                }
                                            }
                                            ))
                                        }), g.compareFaces({
                                            image1: {
                                                id: n[n.length - 1].frontalFaceImage.imageId
                                            },
                                            image2: {
                                                id: t[t.length - 1].frontalFaceImage.imageId
                                            }
                                        })]).then((function(e) {
                                            var t = hw(e, 2)
                                              , n = t[0]
                                              , r = t[1]
                                              , a = !0 === n.data.is_live && "matched" === r.data.compare_faces[0].result;
                                            s({
                                                apiCheckPassed: a,
                                                verifyFaceLivenessResult: n.data,
                                                compareFacesResult: r.data
                                            })
                                        }
                                        ))
                                    }
                                }
                                ));
                            case 10:
                                if (l.name !== n || !(null === l.image.blurScore || a > l.image.blurScore)) {
                                    e.next = 18;
                                    break
                                }
                                return l.image.blurScore = a,
                                e.next = 14,
                                gy.takePicture({
                                    canvas: r
                                });
                            case 14:
                                p = e.sent,
                                l.image.blob = p,
                                l.image.objUrl = URL.createObjectURL(p),
                                i();
                            case 18:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                )))).apply(this, arguments)
            }
            function p(e, t) {
                return h.apply(this, arguments)
            }
            function h() {
                return (h = uw(regeneratorRuntime.mark((function e(t, n) {
                    return regeneratorRuntime.wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                !0 === P.current && t === Xz.FRONTAL && V.current.length < 3 && gy.takePicture({
                                    canvas: n
                                }).then((function(e) {
                                    V.current.push(e)
                                }
                                ));
                            case 1:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e)
                }
                )))).apply(this, arguments)
            }
            function v(e, t) {
                return b.apply(this, arguments)
            }
            function b() {
                return (b = uw(regeneratorRuntime.mark((function t(i, s) {
                    var u, l, f, d, h, g, b, x, w, C, E, S;
                    return regeneratorRuntime.wrap((function(t) {
                        for (; ; )
                            switch (t.prev = t.next) {
                            case 0:
                                return t.next = 2,
                                ay.sleep(30);
                            case 2:
                                return u = i.cropX,
                                l = i.cropY,
                                f = i.cropWidth,
                                d = i.cropHeight,
                                s.getContext("2d").drawImage(o, u, l, f, d, 0, 0, f, d),
                                t.next = 7,
                                my.calculateBlurScore(s);
                            case 7:
                                return h = t.sent,
                                t.next = 10,
                                e.estimateFaces(s, !1, !1, !0);
                            case 10:
                                if (g = t.sent,
                                b = Ey.validatePredictions(g, f, d),
                                x = b.error,
                                w = b.fullFace,
                                C = "",
                                k.current.image = r,
                                w && (S = w.landmarks,
                                E = Ey.calculateFaceDirection(S)),
                                x && ("face_too_small" !== x.code || ![Xz.DOWN, Xz.UP, Xz.LEFT, Xz.RIGHT].includes(E))) {
                                    t.next = 25;
                                    break
                                }
                                if (!y) {
                                    t.next = 21;
                                    break
                                }
                                return t.next = 19,
                                c(E, s, h);
                            case 19:
                                t.next = 23;
                                break;
                            case 21:
                                return t.next = 23,
                                p(E, s);
                            case 23:
                                t.next = 27;
                                break;
                            case 25:
                                C = x.msg[m],
                                k.current.image = a;
                            case 27:
                                T(C),
                                -1 !== n && (n = requestAnimationFrame((function() {
                                    return v(i, s)
                                }
                                )));
                            case 29:
                            case "end":
                                return t.stop()
                            }
                    }
                    ), t)
                }
                )))).apply(this, arguments)
            }
            function x() {
                return (x = uw(regeneratorRuntime.mark((function t() {
                    var n, r, a, i, s;
                    return regeneratorRuntime.wrap((function(t) {
                        for (; ; )
                            switch (t.prev = t.next) {
                            case 0:
                                return n = !1,
                                t.prev = 1,
                                t.next = 4,
                                SS("wasm");
                            case 4:
                                t.next = 24;
                                break;
                            case 6:
                                return t.prev = 6,
                                t.t0 = t.catch(1),
                                t.prev = 8,
                                t.next = 11,
                                SS("webgl");
                            case 11:
                                t.next = 24;
                                break;
                            case 13:
                                return t.prev = 13,
                                t.t1 = t.catch(8),
                                t.prev = 15,
                                t.next = 18,
                                SS("cpu");
                            case 18:
                                t.next = 24;
                                break;
                            case 20:
                                t.prev = 20,
                                t.t2 = t.catch(15),
                                console.error(t.t2),
                                n = !0;
                            case 24:
                                if (!n) {
                                    t.next = 29;
                                    break
                                }
                                T(Qz.unable_to_load_model.msg[m]),
                                u(Qz.unable_to_load_model),
                                t.next = 38;
                                break;
                            case 29:
                                return t.next = 31,
                                UO();
                            case 31:
                                e = t.sent,
                                r = gy.analyzeVideoAndWindowSizes(o, k.current),
                                a = r.cropWidth,
                                i = r.cropHeight,
                                (s = document.createElement("canvas")).width = a,
                                s.height = i,
                                v(r, s);
                            case 38:
                            case "end":
                                return t.stop()
                            }
                    }
                    ), t, null, [[1, 6], [8, 13], [15, 20]])
                }
                )))).apply(this, arguments)
            }
            return f && function() {
                x.apply(this, arguments)
            }(),
            function() {
                cancelAnimationFrame(n),
                n = -1
            }
        }
        ), [f, m, s, y, g, t, r, a]);
        var W = C.current
          , j = W.curStepIndex
          , H = W.steps
          , G = H[j]
          , K = G ? G.instructions[m] : null
          , q = G ? G.directionIcon : "";
        return {
            countdownToTakePicture: R,
            cropArea: k,
            curStepIndex: j,
            directionIcon: q,
            faceDetectionError: I,
            handleTriggerPassiveMode: z,
            handleVideoPlayed: A,
            instructions: K,
            isActiveMode: y,
            refVideo: d,
            showCountdown: F,
            steps: H,
            videoPlayed: f
        }
    }
    function Zz() {
        var e = dw(["\n  position: absolute;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n"]);
        return Zz = function() {
            return e
        }
        ,
        e
    }
    function Jz() {
        var e = dw(["\n  position: absolute;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #ffffff;\n  font-size: 140px;\n  opacity: 0.6;\n"]);
        return Jz = function() {
            return e
        }
        ,
        e
    }
    function eW() {
        var e = dw(["\n  cursor: pointer;\n  text-align: center;\n  width: 50px;\n  img {\n    width: 100%;\n  }\n"]);
        return eW = function() {
            return e
        }
        ,
        e
    }
    function tW() {
        var e = dw(["\n  color: #ffffff;\n  height: 70px;\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: ", ";\n"]);
        return tW = function() {
            return e
        }
        ,
        e
    }
    function nW() {
        var e = dw(["\n  width: 60px;\n  height: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #ffffff;\n\n  & + & {\n    margin-left: 5px;\n  }\n\n  ", "\n\n  img {\n    width: 100%;\n    margin: 0;\n  }\n"]);
        return nW = function() {
            return e
        }
        ,
        e
    }
    function rW() {
        var e = dw(["\n  height: 70px;\n  position: absolute;\n  ", "\n  ", "\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: ", ";\n"]);
        return rW = function() {
            return e
        }
        ,
        e
    }
    function aW() {
        var e = dw(["\n  ", "\n  ", "\n  font-size: 18px;\n"]);
        return aW = function() {
            return e
        }
        ,
        e
    }
    function oW() {
        var e = dw(["\n  ", "\n  ", "\n  font-size: 18px;\n  color: #ff5555;\n"]);
        return oW = function() {
            return e
        }
        ,
        e
    }
    function iW() {
        var e = dw(["\n  position: absolute;\n  z-index: ", ";\n  color: #ffffff;\n"]);
        return iW = function() {
            return e
        }
        ,
        e
    }
    var sW = ow.div(iW(), 1002)
      , uW = ow(sW)(oW(), (function(e) {
        var t = e.top;
        return t && qx(["top:", "px;"], t)
    }
    ), (function(e) {
        var t = e.bottom;
        return t && qx(["bottom:", "px;"], t)
    }
    ))
      , cW = ow(sW)(aW(), (function(e) {
        var t = e.top;
        return t && qx(["top:", "px;"], t)
    }
    ), (function(e) {
        var t = e.bottom;
        return t && qx(["bottom:", "px;"], t)
    }
    ))
      , lW = ow.div(rW(), (function(e) {
        var t = e.top;
        return t && qx(["top:", "px;"], t)
    }
    ), (function(e) {
        var t = e.bottom;
        return t && qx(["bottom:", "px;"], t)
    }
    ), 1002)
      , fW = ow.div(nW(), (function(e) {
        return !e.active && qx(["opacity:0.4;"])
    }
    ))
      , pW = ow.div(tW(), 1002)
      , dW = ow.div(eW())
      , hW = ow.div(Jz())
      , mW = ow.div(Zz())
      , vW = ww.isMobile ? {
        width: 640
    } : null
      , gW = {
        background: "#000000",
        opacity: .6
    };
    function yW(e) {
        var t = e.apiCheck
          , n = e.mode
          , r = e.onLivenessDetectionDone
          , a = e.onClose
          , o = e.onError
          , i = $z({
            apiCheck: t,
            mode: n,
            bgCameraMask: ry.useAsset("bg_camera_mask.png"),
            bgCameraMaskRed: ry.useAsset("bg_camera_mask_red.png"),
            surroundStyle: gW,
            onLivenessDetectionDone: r,
            onError: o
        })
          , s = i.countdownToTakePicture
          , u = i.cropArea
          , c = i.curStepIndex
          , l = i.directionIcon
          , f = i.faceDetectionError
          , p = i.handleTriggerPassiveMode
          , d = i.handleVideoPlayed
          , h = i.instructions
          , m = i.isActiveMode
          , v = i.refVideo
          , g = i.showCountdown
          , y = i.steps
          , b = i.videoPlayed
          , x = u.current ? u.current.y + u.current.height + 5 : 0
          , w = x + 30
          , k = w + 70;
        return kg.createElement(Uw, {
            frontCamera: !0,
            onVideoPlayed: d,
            onClose: a,
            flipHorizontal: !0,
            ref: v,
            videoSettings: vW,
            onError: o
        }, b ? kg.createElement(kg.Fragment, null, u.current ? kg.createElement(Qw, {
            x: "".concat(u.current.x, "px"),
            y: "".concat(u.current.y, "px"),
            width: "".concat(u.current.width, "px"),
            height: "".concat(u.current.height, "px"),
            surroundStyle: u.current.surroundStyle
        }, kg.createElement(Yw, {
            src: u.current.image,
            width: u.current.width
        }), g ? kg.createElement(hW, null, s) : null, m && l ? kg.createElement(mW, null, kg.createElement("img", {
            src: l,
            alt: ""
        })) : null) : null, kg.createElement(kg.Fragment, null, f ? kg.createElement(uW, {
            top: x
        }, f) : null, m ? kg.createElement(kg.Fragment, null, kg.createElement(lW, {
            top: w
        }, y.map((function(e, t) {
            var n = e.name
              , r = e.icon
              , a = e.image.objUrl;
            return kg.createElement(fW, {
                key: n,
                active: c >= t
            }, a ? kg.createElement("img", {
                src: a,
                alt: ""
            }) : kg.createElement("img", {
                src: r,
                alt: ""
            }))
        }
        ))), h ? kg.createElement(cW, {
            top: k
        }, h) : null) : kg.createElement(kg.Fragment, null, f ? null : kg.createElement(pW, null, kg.createElement(dW, {
            onClick: p
        }, kg.createElement($w, null)))))) : null)
    }
    yW.propTypes = {
        apiCheck: qg.bool,
        mode: qg.string,
        onLivenessDetectionDone: qg.func,
        onClose: qg.func,
        onError: qg.func
    },
    yW.defaultProps = {
        apiCheck: !1,
        mode: null,
        onLivenessDetectionDone: null,
        onClose: null,
        onError: function() {}
    };
    var bW = Object.freeze({
        __proto__: null,
        Text: sW,
        FaceDetectionError: uW,
        FaceVerificationInstructions: cW,
        FaceVerificationStepsWrapper: lW,
        StepItem: fW,
        BottomButtonsOverlay: pW,
        Button: dW,
        CountDownOverlay: hW,
        DirectionIconOverlay: mW,
        default: yW,
        useLivenessDetection: $z
    });
    function xW() {
        var e = dw(["\n  font-size: 16px;\n  text-align: center;\n  color: #bcbcbc;\n"]);
        return xW = function() {
            return e
        }
        ,
        e
    }
    function wW() {
        var e = dw(["\n  font-weight: bold;\n  font-size: 18px;\n"]);
        return wW = function() {
            return e
        }
        ,
        e
    }
    function kW() {
        var e = dw(["\n  color: #fff;\n  text-align: center;\n"]);
        return kW = function() {
            return e
        }
        ,
        e
    }
    function CW() {
        var e = dw(["\n  cursor: pointer;\n  text-align: center;\n  width: 60px;\n  img {\n    width: 100%;\n  }\n"]);
        return CW = function() {
            return e
        }
        ,
        e
    }
    function EW() {
        var e = dw(["\n  color: #ffffff;\n  background-color: #000;\n  height: 180px;\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: column;\n  z-index: ", ";\n"]);
        return EW = function() {
            return e
        }
        ,
        e
    }
    var SW = ow.div(EW(), 1002)
      , IW = ow.div(CW())
      , TW = ow.div(kW())
      , AW = ow(TW)(wW())
      , NW = ow(TW)(xW());
    function _W(e) {
        var t = e.frontCamera
          , n = e.title
          , r = e.description
          , a = e.onClose
          , o = e.onImageTaken
          , i = e.usePortraitMask
          , s = e.onError
          , u = hw(kg.useState(!1), 2)
          , c = u[0]
          , l = u[1]
          , f = kg.useRef(null)
          , p = hw(kg.useState(null), 2)
          , d = p[0]
          , h = p[1]
          , m = ry.useAsset("id_card_mask_landscape.png")
          , v = ry.useAsset("id_card_mask_portrait.png")
          , g = ry.useAsset("ic_camera.svg")
          , y = kg.useCallback(uw(regeneratorRuntime.mark((function e() {
            var t, n;
            return regeneratorRuntime.wrap((function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return t = f.current,
                        e.next = 3,
                        gy.takePicture({
                            video: t,
                            cropArea: d
                        });
                    case 3:
                        n = e.sent,
                        o(n);
                    case 5:
                    case "end":
                        return e.stop()
                    }
            }
            ), e)
        }
        ))), [o, d])
          , b = kg.useCallback((function(e) {
            var t, n, r, a = e.videoAreaWidth, o = e.videoAreaHeight, s = e.lostX, u = e.lostY;
            l(!0),
            i ? (t = .7 * (n = o - 180),
            r = 5 + u) : (t = ww.isMobile ? a : Math.floor(.7 * a),
            n = Math.floor(t / 1.6),
            r = 10 + u);
            var c = Math.floor((a - t) / 2) + s;
            h({
                x: c,
                y: r,
                width: t,
                height: n,
                image: i ? v : m,
                surroundStyle: {
                    opacity: .6,
                    background: "#000"
                }
            })
        }
        ), [i, m, v]);
        return kg.createElement(Uw, {
            frontCamera: t,
            onVideoPlayed: b,
            onClose: a,
            flipHorizontal: t,
            ref: f,
            onError: s
        }, c ? kg.createElement(kg.Fragment, null, d ? kg.createElement(Qw, {
            x: "".concat(d.x, "px"),
            y: "".concat(d.y, "px"),
            width: "".concat(d.width, "px"),
            height: "".concat(d.height, "px"),
            surroundStyle: d.surroundStyle
        }, kg.createElement(Yw, {
            src: d.image,
            width: d.width
        })) : null, kg.createElement(SW, null, kg.createElement("div", null, kg.createElement(AW, null, n), kg.createElement(NW, null, r)), kg.createElement(IW, {
            onClick: y
        }, kg.createElement("img", {
            src: g,
            alt: ""
        })))) : null)
    }
    _W.propTypes = {
        frontCamera: qg.bool,
        title: qg.string,
        description: qg.string,
        onClose: qg.func,
        onImageTaken: qg.func,
        usePortraitMask: qg.bool,
        onError: qg.func
    },
    _W.defaultProps = {
        frontCamera: !0,
        title: "",
        description: "",
        onClose: null,
        onImageTaken: null,
        usePortraitMask: !1,
        onError: function() {}
    };
    var RW = Object.freeze({
        __proto__: null,
        Camera: $w
    });
    function OW() {
        var e = dw(["\n  transition: stroke-dashoffset 0.4s;\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n"]);
        return OW = function() {
            return e
        }
        ,
        e
    }
    var DW = ow.circle(OW());
    function BW(e) {
        var t = e.className
          , n = e.style
          , r = e.radius
          , a = e.strokeWidth
          , o = e.progress
          , i = e.activeColor
          , s = e.insideRingColor
          , u = e.outsideRingColor
          , c = e.dashedRingColor
          , l = e.innerPadding
          , f = e.dashedRingWidth
          , p = e.dashedRingLineThick
          , d = e.dashedRingLineSpacing
          , h = e.showOutsideRing
          , m = e.showInsideRing
          , v = e.showDashedRing
          , g = 2 * r
          , y = 2 * r
          , b = r - 2 * a
          , x = 2 * Math.PI * b
          , w = x - o / 100 * x
          , k = b - f / 2 - a / 2 - l
          , C = 2 * Math.PI * k
          , E = C - o / 100 * C
          , S = k - f / 2 - a / 2;
        return kg.createElement("svg", {
            className: t,
            style: n,
            width: g,
            height: y,
            viewBox: "0 0 ".concat(g, " ").concat(y),
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg"
        }, h ? kg.createElement(kg.Fragment, null, kg.createElement("circle", {
            opacity: "0.1",
            cx: r,
            cy: r,
            r: b,
            stroke: u
        }), kg.createElement(DW, {
            cx: r,
            cy: r,
            r: b,
            stroke: i,
            strokeWidth: a,
            strokeLinecap: "round",
            strokeDasharray: "".concat(x, " ").concat(x),
            style: {
                strokeDashoffset: w
            }
        })) : null, v ? kg.createElement(kg.Fragment, null, kg.createElement("circle", {
            opacity: "0.3",
            cx: r,
            cy: r,
            r: k,
            stroke: c,
            strokeWidth: f,
            strokeDasharray: "".concat(p, " ").concat(d)
        }), kg.createElement("mask", {
            id: "mask0",
            "mask-type": "alpha",
            maskUnits: "userSpaceOnUse"
        }, kg.createElement("circle", {
            cx: r,
            cy: r,
            r: k,
            stroke: i,
            strokeWidth: f,
            strokeDasharray: "".concat(p, " ").concat(d)
        })), kg.createElement("g", {
            mask: "url(#mask0)"
        }, kg.createElement(DW, {
            cx: r,
            cy: r,
            r: k,
            stroke: i,
            strokeWidth: f,
            strokeDasharray: "".concat(C, " ").concat(C),
            style: {
                strokeDashoffset: E
            }
        }))) : null, m ? kg.createElement("circle", {
            cx: r,
            cy: r,
            r: S,
            stroke: s,
            strokeWidth: a
        }) : null)
    }
    BW.propTypes = {
        className: qg.string,
        style: qg.shape({}),
        radius: qg.number,
        strokeWidth: qg.number,
        progress: qg.number,
        activeColor: qg.string,
        insideRingColor: qg.string,
        outsideRingColor: qg.string,
        dashedRingColor: qg.string,
        innerPadding: qg.number,
        dashedRingWidth: qg.number,
        dashedRingLineThick: qg.number,
        dashedRingLineSpacing: qg.number,
        showOutsideRing: qg.bool,
        showDashedRing: qg.bool,
        showInsideRing: qg.bool
    },
    BW.defaultProps = {
        className: "",
        style: null,
        radius: 160,
        strokeWidth: 3,
        progress: 0,
        activeColor: "#0092ff",
        insideRingColor: "#f2f6f9",
        outsideRingColor: "#f2f6f9",
        dashedRingColor: "#ffffff",
        innerPadding: 5,
        dashedRingWidth: 10,
        dashedRingLineThick: 1,
        dashedRingLineSpacing: 6,
        showOutsideRing: !0,
        showDashedRing: !0,
        showInsideRing: !0
    };
    var FW = $z
      , MW = function(e, t) {
        if (null == e)
            return {};
        var n, r, a = function(e, t) {
            if (null == e)
                return {};
            var n, r, a = {}, o = Object.keys(e);
            for (r = 0; r < o.length; r++)
                n = o[r],
                t.indexOf(n) >= 0 || (a[n] = e[n]);
            return a
        }(e, t);
        if (Object.getOwnPropertySymbols) {
            var o = Object.getOwnPropertySymbols(e);
            for (r = 0; r < o.length; r++)
                n = o[r],
                t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (a[n] = e[n])
        }
        return a
    }(bW, ["useLivenessDetection"])
      , PW = i((function(e, t) {
        var n, r, a, o, i;
        if ("undefined" == typeof window || "function" != typeof MessageChannel) {
            var s = null
              , u = null
              , c = function() {
                if (null !== s)
                    try {
                        var e = t.unstable_now();
                        s(!0, e),
                        s = null
                    } catch (e) {
                        throw setTimeout(c, 0),
                        e
                    }
            }
              , l = Date.now();
            t.unstable_now = function() {
                return Date.now() - l
            }
            ,
            n = function(e) {
                null !== s ? setTimeout(n, 0, e) : (s = e,
                setTimeout(c, 0))
            }
            ,
            r = function(e, t) {
                u = setTimeout(e, t)
            }
            ,
            a = function() {
                clearTimeout(u)
            }
            ,
            o = function() {
                return !1
            }
            ,
            i = t.unstable_forceFrameRate = function() {}
        } else {
            var f = window.performance
              , p = window.Date
              , d = window.setTimeout
              , h = window.clearTimeout;
            if ("undefined" != typeof console) {
                var m = window.cancelAnimationFrame;
                "function" != typeof window.requestAnimationFrame && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),
                "function" != typeof m && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")
            }
            if ("object" == typeof f && "function" == typeof f.now)
                t.unstable_now = function() {
                    return f.now()
                }
                ;
            else {
                var v = p.now();
                t.unstable_now = function() {
                    return p.now() - v
                }
            }
            var g = !1
              , y = null
              , b = -1
              , x = 5
              , w = 0;
            o = function() {
                return t.unstable_now() >= w
            }
            ,
            i = function() {}
            ,
            t.unstable_forceFrameRate = function(e) {
                0 > e || 125 < e ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported") : x = 0 < e ? Math.floor(1e3 / e) : 5
            }
            ;
            var k = new MessageChannel
              , C = k.port2;
            k.port1.onmessage = function() {
                if (null !== y) {
                    var e = t.unstable_now();
                    w = e + x;
                    try {
                        y(!0, e) ? C.postMessage(null) : (g = !1,
                        y = null)
                    } catch (e) {
                        throw C.postMessage(null),
                        e
                    }
                } else
                    g = !1
            }
            ,
            n = function(e) {
                y = e,
                g || (g = !0,
                C.postMessage(null))
            }
            ,
            r = function(e, n) {
                b = d((function() {
                    e(t.unstable_now())
                }
                ), n)
            }
            ,
            a = function() {
                h(b),
                b = -1
            }
        }
        function E(e, t) {
            var n = e.length;
            e.push(t);
            e: for (; ; ) {
                var r = n - 1 >>> 1
                  , a = e[r];
                if (!(void 0 !== a && 0 < T(a, t)))
                    break e;
                e[r] = t,
                e[n] = a,
                n = r
            }
        }
        function S(e) {
            return void 0 === (e = e[0]) ? null : e
        }
        function I(e) {
            var t = e[0];
            if (void 0 !== t) {
                var n = e.pop();
                if (n !== t) {
                    e[0] = n;
                    e: for (var r = 0, a = e.length; r < a; ) {
                        var o = 2 * (r + 1) - 1
                          , i = e[o]
                          , s = o + 1
                          , u = e[s];
                        if (void 0 !== i && 0 > T(i, n))
                            void 0 !== u && 0 > T(u, i) ? (e[r] = u,
                            e[s] = n,
                            r = s) : (e[r] = i,
                            e[o] = n,
                            r = o);
                        else {
                            if (!(void 0 !== u && 0 > T(u, n)))
                                break e;
                            e[r] = u,
                            e[s] = n,
                            r = s
                        }
                    }
                }
                return t
            }
            return null
        }
        function T(e, t) {
            var n = e.sortIndex - t.sortIndex;
            return 0 !== n ? n : e.id - t.id
        }
        var A = []
          , N = []
          , _ = 1
          , R = null
          , O = 3
          , D = !1
          , B = !1
          , F = !1;
        function M(e) {
            for (var t = S(N); null !== t; ) {
                if (null === t.callback)
                    I(N);
                else {
                    if (!(t.startTime <= e))
                        break;
                    I(N),
                    t.sortIndex = t.expirationTime,
                    E(A, t)
                }
                t = S(N)
            }
        }
        function P(e) {
            if (F = !1,
            M(e),
            !B)
                if (null !== S(A))
                    B = !0,
                    n(L);
                else {
                    var t = S(N);
                    null !== t && r(P, t.startTime - e)
                }
        }
        function L(e, n) {
            B = !1,
            F && (F = !1,
            a()),
            D = !0;
            var i = O;
            try {
                for (M(n),
                R = S(A); null !== R && (!(R.expirationTime > n) || e && !o()); ) {
                    var s = R.callback;
                    if (null !== s) {
                        R.callback = null,
                        O = R.priorityLevel;
                        var u = s(R.expirationTime <= n);
                        n = t.unstable_now(),
                        "function" == typeof u ? R.callback = u : R === S(A) && I(A),
                        M(n)
                    } else
                        I(A);
                    R = S(A)
                }
                if (null !== R)
                    var c = !0;
                else {
                    var l = S(N);
                    null !== l && r(P, l.startTime - n),
                    c = !1
                }
                return c
            } finally {
                R = null,
                O = i,
                D = !1
            }
        }
        function U(e) {
            switch (e) {
            case 1:
                return -1;
            case 2:
                return 250;
            case 5:
                return 1073741823;
            case 4:
                return 1e4;
            default:
                return 5e3
            }
        }
        var V = i;
        t.unstable_IdlePriority = 5,
        t.unstable_ImmediatePriority = 1,
        t.unstable_LowPriority = 4,
        t.unstable_NormalPriority = 3,
        t.unstable_Profiling = null,
        t.unstable_UserBlockingPriority = 2,
        t.unstable_cancelCallback = function(e) {
            e.callback = null
        }
        ,
        t.unstable_continueExecution = function() {
            B || D || (B = !0,
            n(L))
        }
        ,
        t.unstable_getCurrentPriorityLevel = function() {
            return O
        }
        ,
        t.unstable_getFirstCallbackNode = function() {
            return S(A)
        }
        ,
        t.unstable_next = function(e) {
            switch (O) {
            case 1:
            case 2:
            case 3:
                var t = 3;
                break;
            default:
                t = O
            }
            var n = O;
            O = t;
            try {
                return e()
            } finally {
                O = n
            }
        }
        ,
        t.unstable_pauseExecution = function() {}
        ,
        t.unstable_requestPaint = V,
        t.unstable_runWithPriority = function(e, t) {
            switch (e) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                e = 3
            }
            var n = O;
            O = e;
            try {
                return t()
            } finally {
                O = n
            }
        }
        ,
        t.unstable_scheduleCallback = function(e, o, i) {
            var s = t.unstable_now();
            if ("object" == typeof i && null !== i) {
                var u = i.delay;
                u = "number" == typeof u && 0 < u ? s + u : s,
                i = "number" == typeof i.timeout ? i.timeout : U(e)
            } else
                i = U(e),
                u = s;
            return e = {
                id: _++,
                callback: o,
                priorityLevel: e,
                startTime: u,
                expirationTime: i = u + i,
                sortIndex: -1
            },
            u > s ? (e.sortIndex = u,
            E(N, e),
            null === S(A) && e === S(N) && (F ? a() : F = !0,
            r(P, u - s))) : (e.sortIndex = i,
            E(A, e),
            B || D || (B = !0,
            n(L))),
            e
        }
        ,
        t.unstable_shouldYield = function() {
            var e = t.unstable_now();
            M(e);
            var n = S(A);
            return n !== R && null !== R && null !== n && null !== n.callback && n.startTime <= e && n.expirationTime < R.expirationTime || o()
        }
        ,
        t.unstable_wrapCallback = function(e) {
            var t = O;
            return function() {
                var n = O;
                O = t;
                try {
                    return e.apply(this, arguments)
                } finally {
                    O = n
                }
            }
        }
    }
    ))
      , LW = (i((function(e, t) {}
    )),
    i((function(e) {
        e.exports = PW
    }
    )));
    function UW(e) {
        for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++)
            t += "&args[]=" + encodeURIComponent(arguments[n]);
        return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    }
    if (!kg)
        throw Error(UW(227));
    function VW(e, t, n, r, a, o, i, s, u) {
        var c = Array.prototype.slice.call(arguments, 3);
        try {
            t.apply(n, c)
        } catch (e) {
            this.onError(e)
        }
    }
    var zW = !1
      , WW = null
      , jW = !1
      , HW = null
      , GW = {
        onError: function(e) {
            zW = !0,
            WW = e
        }
    };
    function KW(e, t, n, r, a, o, i, s, u) {
        zW = !1,
        WW = null,
        VW.apply(GW, arguments)
    }
    var qW = null
      , XW = null
      , QW = null;
    function YW(e, t, n) {
        var r = e.type || "unknown-event";
        e.currentTarget = QW(n),
        function(e, t, n, r, a, o, i, s, u) {
            if (KW.apply(this, arguments),
            zW) {
                if (!zW)
                    throw Error(UW(198));
                var c = WW;
                zW = !1,
                WW = null,
                jW || (jW = !0,
                HW = c)
            }
        }(r, t, void 0, e),
        e.currentTarget = null
    }
    var $W = null
      , ZW = {};
    function JW() {
        if ($W)
            for (var e in ZW) {
                var t = ZW[e]
                  , n = $W.indexOf(e);
                if (!(-1 < n))
                    throw Error(UW(96, e));
                if (!tj[n]) {
                    if (!t.extractEvents)
                        throw Error(UW(97, e));
                    for (var r in tj[n] = t,
                    n = t.eventTypes) {
                        var a = void 0
                          , o = n[r]
                          , i = t
                          , s = r;
                        if (nj.hasOwnProperty(s))
                            throw Error(UW(99, s));
                        nj[s] = o;
                        var u = o.phasedRegistrationNames;
                        if (u) {
                            for (a in u)
                                u.hasOwnProperty(a) && ej(u[a], i, s);
                            a = !0
                        } else
                            o.registrationName ? (ej(o.registrationName, i, s),
                            a = !0) : a = !1;
                        if (!a)
                            throw Error(UW(98, r, e))
                    }
                }
            }
    }
    function ej(e, t, n) {
        if (rj[e])
            throw Error(UW(100, e));
        rj[e] = t,
        aj[e] = t.eventTypes[n].dependencies
    }
    var tj = []
      , nj = {}
      , rj = {}
      , aj = {};
    function oj(e) {
        var t, n = !1;
        for (t in e)
            if (e.hasOwnProperty(t)) {
                var r = e[t];
                if (!ZW.hasOwnProperty(t) || ZW[t] !== r) {
                    if (ZW[t])
                        throw Error(UW(102, t));
                    ZW[t] = r,
                    n = !0
                }
            }
        n && JW()
    }
    var ij = !("undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement)
      , sj = null
      , uj = null
      , cj = null;
    function lj(e) {
        if (e = XW(e)) {
            if ("function" != typeof sj)
                throw Error(UW(280));
            var t = e.stateNode;
            t && (t = qW(t),
            sj(e.stateNode, e.type, t))
        }
    }
    function fj(e) {
        uj ? cj ? cj.push(e) : cj = [e] : uj = e
    }
    function pj() {
        if (uj) {
            var e = uj
              , t = cj;
            if (cj = uj = null,
            lj(e),
            t)
                for (e = 0; e < t.length; e++)
                    lj(t[e])
        }
    }
    function dj(e, t) {
        return e(t)
    }
    function hj(e, t, n, r, a) {
        return e(t, n, r, a)
    }
    function mj() {}
    var vj = dj
      , gj = !1
      , yj = !1;
    function bj() {
        null === uj && null === cj || (mj(),
        pj())
    }
    function xj(e, t, n) {
        if (yj)
            return e(t, n);
        yj = !0;
        try {
            return vj(e, t, n)
        } finally {
            yj = !1,
            bj()
        }
    }
    var wj = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/
      , kj = Object.prototype.hasOwnProperty
      , Cj = {}
      , Ej = {};
    function Sj(e, t, n, r, a, o) {
        this.acceptsBooleans = 2 === t || 3 === t || 4 === t,
        this.attributeName = r,
        this.attributeNamespace = a,
        this.mustUseProperty = n,
        this.propertyName = e,
        this.type = t,
        this.sanitizeURL = o
    }
    var Ij = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e) {
        Ij[e] = new Sj(e,0,!1,e,null,!1)
    }
    )),
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach((function(e) {
        var t = e[0];
        Ij[t] = new Sj(t,1,!1,e[1],null,!1)
    }
    )),
    ["contentEditable", "draggable", "spellCheck", "value"].forEach((function(e) {
        Ij[e] = new Sj(e,2,!1,e.toLowerCase(),null,!1)
    }
    )),
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach((function(e) {
        Ij[e] = new Sj(e,2,!1,e,null,!1)
    }
    )),
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e) {
        Ij[e] = new Sj(e,3,!1,e.toLowerCase(),null,!1)
    }
    )),
    ["checked", "multiple", "muted", "selected"].forEach((function(e) {
        Ij[e] = new Sj(e,3,!0,e,null,!1)
    }
    )),
    ["capture", "download"].forEach((function(e) {
        Ij[e] = new Sj(e,4,!1,e,null,!1)
    }
    )),
    ["cols", "rows", "size", "span"].forEach((function(e) {
        Ij[e] = new Sj(e,6,!1,e,null,!1)
    }
    )),
    ["rowSpan", "start"].forEach((function(e) {
        Ij[e] = new Sj(e,5,!1,e.toLowerCase(),null,!1)
    }
    ));
    var Tj = /[\-:]([a-z])/g;
    function Aj(e) {
        return e[1].toUpperCase()
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e) {
        var t = e.replace(Tj, Aj);
        Ij[t] = new Sj(t,1,!1,e,null,!1)
    }
    )),
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e) {
        var t = e.replace(Tj, Aj);
        Ij[t] = new Sj(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)
    }
    )),
    ["xml:base", "xml:lang", "xml:space"].forEach((function(e) {
        var t = e.replace(Tj, Aj);
        Ij[t] = new Sj(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)
    }
    )),
    ["tabIndex", "crossOrigin"].forEach((function(e) {
        Ij[e] = new Sj(e,1,!1,e.toLowerCase(),null,!1)
    }
    )),
    Ij.xlinkHref = new Sj("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),
    ["src", "href", "action", "formAction"].forEach((function(e) {
        Ij[e] = new Sj(e,1,!1,e.toLowerCase(),null,!0)
    }
    ));
    var Nj = kg.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function _j(e, t, n, r) {
        var a = Ij.hasOwnProperty(t) ? Ij[t] : null;
        (null !== a ? 0 === a.type : !r && (2 < t.length && ("o" === t[0] || "O" === t[0]) && ("n" === t[1] || "N" === t[1]))) || (function(e, t, n, r) {
            if (null == t || function(e, t, n, r) {
                if (null !== n && 0 === n.type)
                    return !1;
                switch (typeof t) {
                case "function":
                case "symbol":
                    return !0;
                case "boolean":
                    return !r && (null !== n ? !n.acceptsBooleans : "data-" !== (e = e.toLowerCase().slice(0, 5)) && "aria-" !== e);
                default:
                    return !1
                }
            }(e, t, n, r))
                return !0;
            if (r)
                return !1;
            if (null !== n)
                switch (n.type) {
                case 3:
                    return !t;
                case 4:
                    return !1 === t;
                case 5:
                    return isNaN(t);
                case 6:
                    return isNaN(t) || 1 > t
                }
            return !1
        }(t, n, a, r) && (n = null),
        r || null === a ? function(e) {
            return !!kj.call(Ej, e) || !kj.call(Cj, e) && (wj.test(e) ? Ej[e] = !0 : (Cj[e] = !0,
            !1))
        }(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n)) : a.mustUseProperty ? e[a.propertyName] = null === n ? 3 !== a.type && "" : n : (t = a.attributeName,
        r = a.attributeNamespace,
        null === n ? e.removeAttribute(t) : (n = 3 === (a = a.type) || 4 === a && !0 === n ? "" : "" + n,
        r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))))
    }
    Nj.hasOwnProperty("ReactCurrentDispatcher") || (Nj.ReactCurrentDispatcher = {
        current: null
    }),
    Nj.hasOwnProperty("ReactCurrentBatchConfig") || (Nj.ReactCurrentBatchConfig = {
        suspense: null
    });
    var Rj = /^(.*)[\\\/]/
      , Oj = "function" == typeof Symbol && Symbol.for
      , Dj = Oj ? Symbol.for("react.element") : 60103
      , Bj = Oj ? Symbol.for("react.portal") : 60106
      , Fj = Oj ? Symbol.for("react.fragment") : 60107
      , Mj = Oj ? Symbol.for("react.strict_mode") : 60108
      , Pj = Oj ? Symbol.for("react.profiler") : 60114
      , Lj = Oj ? Symbol.for("react.provider") : 60109
      , Uj = Oj ? Symbol.for("react.context") : 60110
      , Vj = Oj ? Symbol.for("react.concurrent_mode") : 60111
      , zj = Oj ? Symbol.for("react.forward_ref") : 60112
      , Wj = Oj ? Symbol.for("react.suspense") : 60113
      , jj = Oj ? Symbol.for("react.suspense_list") : 60120
      , Hj = Oj ? Symbol.for("react.memo") : 60115
      , Gj = Oj ? Symbol.for("react.lazy") : 60116
      , Kj = Oj ? Symbol.for("react.block") : 60121
      , qj = "function" == typeof Symbol && Symbol.iterator;
    function Xj(e) {
        return null === e || "object" != typeof e ? null : "function" == typeof (e = qj && e[qj] || e["@@iterator"]) ? e : null
    }
    function Qj(e) {
        if (null == e)
            return null;
        if ("function" == typeof e)
            return e.displayName || e.name || null;
        if ("string" == typeof e)
            return e;
        switch (e) {
        case Fj:
            return "Fragment";
        case Bj:
            return "Portal";
        case Pj:
            return "Profiler";
        case Mj:
            return "StrictMode";
        case Wj:
            return "Suspense";
        case jj:
            return "SuspenseList"
        }
        if ("object" == typeof e)
            switch (e.$$typeof) {
            case Uj:
                return "Context.Consumer";
            case Lj:
                return "Context.Provider";
            case zj:
                var t = e.render;
                return t = t.displayName || t.name || "",
                e.displayName || ("" !== t ? "ForwardRef(" + t + ")" : "ForwardRef");
            case Hj:
                return Qj(e.type);
            case Kj:
                return Qj(e.render);
            case Gj:
                if (e = 1 === e._status ? e._result : null)
                    return Qj(e)
            }
        return null
    }
    function Yj(e) {
        var t = "";
        do {
            e: switch (e.tag) {
            case 3:
            case 4:
            case 6:
            case 7:
            case 10:
            case 9:
                var n = "";
                break e;
            default:
                var r = e._debugOwner
                  , a = e._debugSource
                  , o = Qj(e.type);
                n = null,
                r && (n = Qj(r.type)),
                r = o,
                o = "",
                a ? o = " (at " + a.fileName.replace(Rj, "") + ":" + a.lineNumber + ")" : n && (o = " (created by " + n + ")"),
                n = "\n    in " + (r || "Unknown") + o
            }
            t += n,
            e = e.return
        } while (e);return t
    }
    function $j(e) {
        switch (typeof e) {
        case "boolean":
        case "number":
        case "object":
        case "string":
        case "undefined":
            return e;
        default:
            return ""
        }
    }
    function Zj(e) {
        var t = e.type;
        return (e = e.nodeName) && "input" === e.toLowerCase() && ("checkbox" === t || "radio" === t)
    }
    function Jj(e) {
        e._valueTracker || (e._valueTracker = function(e) {
            var t = Zj(e) ? "checked" : "value"
              , n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t)
              , r = "" + e[t];
            if (!e.hasOwnProperty(t) && void 0 !== n && "function" == typeof n.get && "function" == typeof n.set) {
                var a = n.get
                  , o = n.set;
                return Object.defineProperty(e, t, {
                    configurable: !0,
                    get: function() {
                        return a.call(this)
                    },
                    set: function(e) {
                        r = "" + e,
                        o.call(this, e)
                    }
                }),
                Object.defineProperty(e, t, {
                    enumerable: n.enumerable
                }),
                {
                    getValue: function() {
                        return r
                    },
                    setValue: function(e) {
                        r = "" + e
                    },
                    stopTracking: function() {
                        e._valueTracker = null,
                        delete e[t]
                    }
                }
            }
        }(e))
    }
    function eH(e) {
        if (!e)
            return !1;
        var t = e._valueTracker;
        if (!t)
            return !0;
        var n = t.getValue()
          , r = "";
        return e && (r = Zj(e) ? e.checked ? "true" : "false" : e.value),
        (e = r) !== n && (t.setValue(e),
        !0)
    }
    function tH(e, t) {
        var n = t.checked;
        return Pv({}, t, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != n ? n : e._wrapperState.initialChecked
        })
    }
    function nH(e, t) {
        var n = null == t.defaultValue ? "" : t.defaultValue
          , r = null != t.checked ? t.checked : t.defaultChecked;
        n = $j(null != t.value ? t.value : n),
        e._wrapperState = {
            initialChecked: r,
            initialValue: n,
            controlled: "checkbox" === t.type || "radio" === t.type ? null != t.checked : null != t.value
        }
    }
    function rH(e, t) {
        null != (t = t.checked) && _j(e, "checked", t, !1)
    }
    function aH(e, t) {
        rH(e, t);
        var n = $j(t.value)
          , r = t.type;
        if (null != n)
            "number" === r ? (0 === n && "" === e.value || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
        else if ("submit" === r || "reset" === r)
            return void e.removeAttribute("value");
        t.hasOwnProperty("value") ? iH(e, t.type, n) : t.hasOwnProperty("defaultValue") && iH(e, t.type, $j(t.defaultValue)),
        null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked)
    }
    function oH(e, t, n) {
        if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
            var r = t.type;
            if (!("submit" !== r && "reset" !== r || void 0 !== t.value && null !== t.value))
                return;
            t = "" + e._wrapperState.initialValue,
            n || t === e.value || (e.value = t),
            e.defaultValue = t
        }
        "" !== (n = e.name) && (e.name = ""),
        e.defaultChecked = !!e._wrapperState.initialChecked,
        "" !== n && (e.name = n)
    }
    function iH(e, t, n) {
        "number" === t && e.ownerDocument.activeElement === e || (null == n ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + n && (e.defaultValue = "" + n))
    }
    function sH(e, t) {
        return e = Pv({
            children: void 0
        }, t),
        (t = function(e) {
            var t = "";
            return kg.Children.forEach(e, (function(e) {
                null != e && (t += e)
            }
            )),
            t
        }(t.children)) && (e.children = t),
        e
    }
    function uH(e, t, n, r) {
        if (e = e.options,
        t) {
            t = {};
            for (var a = 0; a < n.length; a++)
                t["$" + n[a]] = !0;
            for (n = 0; n < e.length; n++)
                a = t.hasOwnProperty("$" + e[n].value),
                e[n].selected !== a && (e[n].selected = a),
                a && r && (e[n].defaultSelected = !0)
        } else {
            for (n = "" + $j(n),
            t = null,
            a = 0; a < e.length; a++) {
                if (e[a].value === n)
                    return e[a].selected = !0,
                    void (r && (e[a].defaultSelected = !0));
                null !== t || e[a].disabled || (t = e[a])
            }
            null !== t && (t.selected = !0)
        }
    }
    function cH(e, t) {
        if (null != t.dangerouslySetInnerHTML)
            throw Error(UW(91));
        return Pv({}, t, {
            value: void 0,
            defaultValue: void 0,
            children: "" + e._wrapperState.initialValue
        })
    }
    function lH(e, t) {
        var n = t.value;
        if (null == n) {
            if (n = t.children,
            t = t.defaultValue,
            null != n) {
                if (null != t)
                    throw Error(UW(92));
                if (Array.isArray(n)) {
                    if (!(1 >= n.length))
                        throw Error(UW(93));
                    n = n[0]
                }
                t = n
            }
            null == t && (t = ""),
            n = t
        }
        e._wrapperState = {
            initialValue: $j(n)
        }
    }
    function fH(e, t) {
        var n = $j(t.value)
          , r = $j(t.defaultValue);
        null != n && ((n = "" + n) !== e.value && (e.value = n),
        null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)),
        null != r && (e.defaultValue = "" + r)
    }
    function pH(e) {
        var t = e.textContent;
        t === e._wrapperState.initialValue && "" !== t && null !== t && (e.value = t)
    }
    var dH = "http://www.w3.org/1999/xhtml"
      , hH = "http://www.w3.org/2000/svg";
    function mH(e) {
        switch (e) {
        case "svg":
            return "http://www.w3.org/2000/svg";
        case "math":
            return "http://www.w3.org/1998/Math/MathML";
        default:
            return "http://www.w3.org/1999/xhtml"
        }
    }
    function vH(e, t) {
        return null == e || "http://www.w3.org/1999/xhtml" === e ? mH(t) : "http://www.w3.org/2000/svg" === e && "foreignObject" === t ? "http://www.w3.org/1999/xhtml" : e
    }
    var gH, yH = function(e) {
        return "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(t, n, r, a) {
            MSApp.execUnsafeLocalFunction((function() {
                return e(t, n)
            }
            ))
        }
        : e
    }((function(e, t) {
        if (e.namespaceURI !== hH || "innerHTML"in e)
            e.innerHTML = t;
        else {
            for ((gH = gH || document.createElement("div")).innerHTML = "<svg>" + t.valueOf().toString() + "</svg>",
            t = gH.firstChild; e.firstChild; )
                e.removeChild(e.firstChild);
            for (; t.firstChild; )
                e.appendChild(t.firstChild)
        }
    }
    ));
    function bH(e, t) {
        if (t) {
            var n = e.firstChild;
            if (n && n === e.lastChild && 3 === n.nodeType)
                return void (n.nodeValue = t)
        }
        e.textContent = t
    }
    function xH(e, t) {
        var n = {};
        return n[e.toLowerCase()] = t.toLowerCase(),
        n["Webkit" + e] = "webkit" + t,
        n["Moz" + e] = "moz" + t,
        n
    }
    var wH = {
        animationend: xH("Animation", "AnimationEnd"),
        animationiteration: xH("Animation", "AnimationIteration"),
        animationstart: xH("Animation", "AnimationStart"),
        transitionend: xH("Transition", "TransitionEnd")
    }
      , kH = {}
      , CH = {};
    function EH(e) {
        if (kH[e])
            return kH[e];
        if (!wH[e])
            return e;
        var t, n = wH[e];
        for (t in n)
            if (n.hasOwnProperty(t) && t in CH)
                return kH[e] = n[t];
        return e
    }
    ij && (CH = document.createElement("div").style,
    "AnimationEvent"in window || (delete wH.animationend.animation,
    delete wH.animationiteration.animation,
    delete wH.animationstart.animation),
    "TransitionEvent"in window || delete wH.transitionend.transition);
    var SH = EH("animationend")
      , IH = EH("animationiteration")
      , TH = EH("animationstart")
      , AH = EH("transitionend")
      , NH = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ")
      , _H = new ("function" == typeof WeakMap ? WeakMap : Map);
    function RH(e) {
        var t = _H.get(e);
        return void 0 === t && (t = new Map,
        _H.set(e, t)),
        t
    }
    function OH(e) {
        var t = e
          , n = e;
        if (e.alternate)
            for (; t.return; )
                t = t.return;
        else {
            e = t;
            do {
                0 != (1026 & (t = e).effectTag) && (n = t.return),
                e = t.return
            } while (e)
        }
        return 3 === t.tag ? n : null
    }
    function DH(e) {
        if (13 === e.tag) {
            var t = e.memoizedState;
            if (null === t && (null !== (e = e.alternate) && (t = e.memoizedState)),
            null !== t)
                return t.dehydrated
        }
        return null
    }
    function BH(e) {
        if (OH(e) !== e)
            throw Error(UW(188))
    }
    function FH(e) {
        if (!(e = function(e) {
            var t = e.alternate;
            if (!t) {
                if (null === (t = OH(e)))
                    throw Error(UW(188));
                return t !== e ? null : e
            }
            for (var n = e, r = t; ; ) {
                var a = n.return;
                if (null === a)
                    break;
                var o = a.alternate;
                if (null === o) {
                    if (null !== (r = a.return)) {
                        n = r;
                        continue
                    }
                    break
                }
                if (a.child === o.child) {
                    for (o = a.child; o; ) {
                        if (o === n)
                            return BH(a),
                            e;
                        if (o === r)
                            return BH(a),
                            t;
                        o = o.sibling
                    }
                    throw Error(UW(188))
                }
                if (n.return !== r.return)
                    n = a,
                    r = o;
                else {
                    for (var i = !1, s = a.child; s; ) {
                        if (s === n) {
                            i = !0,
                            n = a,
                            r = o;
                            break
                        }
                        if (s === r) {
                            i = !0,
                            r = a,
                            n = o;
                            break
                        }
                        s = s.sibling
                    }
                    if (!i) {
                        for (s = o.child; s; ) {
                            if (s === n) {
                                i = !0,
                                n = o,
                                r = a;
                                break
                            }
                            if (s === r) {
                                i = !0,
                                r = o,
                                n = a;
                                break
                            }
                            s = s.sibling
                        }
                        if (!i)
                            throw Error(UW(189))
                    }
                }
                if (n.alternate !== r)
                    throw Error(UW(190))
            }
            if (3 !== n.tag)
                throw Error(UW(188));
            return n.stateNode.current === n ? e : t
        }(e)))
            return null;
        for (var t = e; ; ) {
            if (5 === t.tag || 6 === t.tag)
                return t;
            if (t.child)
                t.child.return = t,
                t = t.child;
            else {
                if (t === e)
                    break;
                for (; !t.sibling; ) {
                    if (!t.return || t.return === e)
                        return null;
                    t = t.return
                }
                t.sibling.return = t.return,
                t = t.sibling
            }
        }
        return null
    }
    function MH(e, t) {
        if (null == t)
            throw Error(UW(30));
        return null == e ? t : Array.isArray(e) ? Array.isArray(t) ? (e.push.apply(e, t),
        e) : (e.push(t),
        e) : Array.isArray(t) ? [e].concat(t) : [e, t]
    }
    function PH(e, t, n) {
        Array.isArray(e) ? e.forEach(t, n) : e && t.call(n, e)
    }
    var LH = null;
    function UH(e) {
        if (e) {
            var t = e._dispatchListeners
              , n = e._dispatchInstances;
            if (Array.isArray(t))
                for (var r = 0; r < t.length && !e.isPropagationStopped(); r++)
                    YW(e, t[r], n[r]);
            else
                t && YW(e, t, n);
            e._dispatchListeners = null,
            e._dispatchInstances = null,
            e.isPersistent() || e.constructor.release(e)
        }
    }
    function VH(e) {
        if (null !== e && (LH = MH(LH, e)),
        e = LH,
        LH = null,
        e) {
            if (PH(e, UH),
            LH)
                throw Error(UW(95));
            if (jW)
                throw e = HW,
                jW = !1,
                HW = null,
                e
        }
    }
    function zH(e) {
        return (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement),
        3 === e.nodeType ? e.parentNode : e
    }
    function WH(e) {
        if (!ij)
            return !1;
        var t = (e = "on" + e)in document;
        return t || ((t = document.createElement("div")).setAttribute(e, "return;"),
        t = "function" == typeof t[e]),
        t
    }
    var jH = [];
    function HH(e) {
        e.topLevelType = null,
        e.nativeEvent = null,
        e.targetInst = null,
        e.ancestors.length = 0,
        10 > jH.length && jH.push(e)
    }
    function GH(e, t, n, r) {
        if (jH.length) {
            var a = jH.pop();
            return a.topLevelType = e,
            a.eventSystemFlags = r,
            a.nativeEvent = t,
            a.targetInst = n,
            a
        }
        return {
            topLevelType: e,
            eventSystemFlags: r,
            nativeEvent: t,
            targetInst: n,
            ancestors: []
        }
    }
    function KH(e) {
        var t = e.targetInst
          , n = t;
        do {
            if (!n) {
                e.ancestors.push(n);
                break
            }
            var r = n;
            if (3 === r.tag)
                r = r.stateNode.containerInfo;
            else {
                for (; r.return; )
                    r = r.return;
                r = 3 !== r.tag ? null : r.stateNode.containerInfo
            }
            if (!r)
                break;
            5 !== (t = n.tag) && 6 !== t || e.ancestors.push(n),
            n = uK(r)
        } while (n);for (n = 0; n < e.ancestors.length; n++) {
            t = e.ancestors[n];
            var a = zH(e.nativeEvent);
            r = e.topLevelType;
            var o = e.nativeEvent
              , i = e.eventSystemFlags;
            0 === n && (i |= 64);
            for (var s = null, u = 0; u < tj.length; u++) {
                var c = tj[u];
                c && (c = c.extractEvents(r, t, o, a, i)) && (s = MH(s, c))
            }
            VH(s)
        }
    }
    function qH(e, t, n) {
        if (!n.has(e)) {
            switch (e) {
            case "scroll":
                TG(t, "scroll", !0);
                break;
            case "focus":
            case "blur":
                TG(t, "focus", !0),
                TG(t, "blur", !0),
                n.set("blur", null),
                n.set("focus", null);
                break;
            case "cancel":
            case "close":
                WH(e) && TG(t, e, !0);
                break;
            case "invalid":
            case "submit":
            case "reset":
                break;
            default:
                -1 === NH.indexOf(e) && IG(e, t)
            }
            n.set(e, null)
        }
    }
    var XH, QH, YH, $H = !1, ZH = [], JH = null, eG = null, tG = null, nG = new Map, rG = new Map, aG = [], oG = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "), iG = "focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
    function sG(e, t, n, r, a) {
        return {
            blockedOn: e,
            topLevelType: t,
            eventSystemFlags: 32 | n,
            nativeEvent: a,
            container: r
        }
    }
    function uG(e, t) {
        switch (e) {
        case "focus":
        case "blur":
            JH = null;
            break;
        case "dragenter":
        case "dragleave":
            eG = null;
            break;
        case "mouseover":
        case "mouseout":
            tG = null;
            break;
        case "pointerover":
        case "pointerout":
            nG.delete(t.pointerId);
            break;
        case "gotpointercapture":
        case "lostpointercapture":
            rG.delete(t.pointerId)
        }
    }
    function cG(e, t, n, r, a, o) {
        return null === e || e.nativeEvent !== o ? (e = sG(t, n, r, a, o),
        null !== t && (null !== (t = cK(t)) && QH(t)),
        e) : (e.eventSystemFlags |= r,
        e)
    }
    function lG(e) {
        var t = uK(e.target);
        if (null !== t) {
            var n = OH(t);
            if (null !== n)
                if (13 === (t = n.tag)) {
                    if (null !== (t = DH(n)))
                        return e.blockedOn = t,
                        void LW.unstable_runWithPriority(e.priority, (function() {
                            YH(n)
                        }
                        ))
                } else if (3 === t && n.stateNode.hydrate)
                    return void (e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null)
        }
        e.blockedOn = null
    }
    function fG(e) {
        if (null !== e.blockedOn)
            return !1;
        var t = RG(e.topLevelType, e.eventSystemFlags, e.container, e.nativeEvent);
        if (null !== t) {
            var n = cK(t);
            return null !== n && QH(n),
            e.blockedOn = t,
            !1
        }
        return !0
    }
    function pG(e, t, n) {
        fG(e) && n.delete(t)
    }
    function dG() {
        for ($H = !1; 0 < ZH.length; ) {
            var e = ZH[0];
            if (null !== e.blockedOn) {
                null !== (e = cK(e.blockedOn)) && XH(e);
                break
            }
            var t = RG(e.topLevelType, e.eventSystemFlags, e.container, e.nativeEvent);
            null !== t ? e.blockedOn = t : ZH.shift()
        }
        null !== JH && fG(JH) && (JH = null),
        null !== eG && fG(eG) && (eG = null),
        null !== tG && fG(tG) && (tG = null),
        nG.forEach(pG),
        rG.forEach(pG)
    }
    function hG(e, t) {
        e.blockedOn === t && (e.blockedOn = null,
        $H || ($H = !0,
        LW.unstable_scheduleCallback(LW.unstable_NormalPriority, dG)))
    }
    function mG(e) {
        function t(t) {
            return hG(t, e)
        }
        if (0 < ZH.length) {
            hG(ZH[0], e);
            for (var n = 1; n < ZH.length; n++) {
                var r = ZH[n];
                r.blockedOn === e && (r.blockedOn = null)
            }
        }
        for (null !== JH && hG(JH, e),
        null !== eG && hG(eG, e),
        null !== tG && hG(tG, e),
        nG.forEach(t),
        rG.forEach(t),
        n = 0; n < aG.length; n++)
            (r = aG[n]).blockedOn === e && (r.blockedOn = null);
        for (; 0 < aG.length && null === (n = aG[0]).blockedOn; )
            lG(n),
            null === n.blockedOn && aG.shift()
    }
    var vG = {}
      , gG = new Map
      , yG = new Map
      , bG = ["abort", "abort", SH, "animationEnd", IH, "animationIteration", TH, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart", "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", AH, "transitionEnd", "waiting", "waiting"];
    function xG(e, t) {
        for (var n = 0; n < e.length; n += 2) {
            var r = e[n]
              , a = e[n + 1]
              , o = "on" + (a[0].toUpperCase() + a.slice(1));
            o = {
                phasedRegistrationNames: {
                    bubbled: o,
                    captured: o + "Capture"
                },
                dependencies: [r],
                eventPriority: t
            },
            yG.set(r, t),
            gG.set(r, o),
            vG[a] = o
        }
    }
    xG("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0),
    xG("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1),
    xG(bG, 2);
    for (var wG = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), kG = 0; kG < wG.length; kG++)
        yG.set(wG[kG], 0);
    var CG = LW.unstable_UserBlockingPriority
      , EG = LW.unstable_runWithPriority
      , SG = !0;
    function IG(e, t) {
        TG(t, e, !1)
    }
    function TG(e, t, n) {
        var r = yG.get(t);
        switch (void 0 === r ? 2 : r) {
        case 0:
            r = AG.bind(null, t, 1, e);
            break;
        case 1:
            r = NG.bind(null, t, 1, e);
            break;
        default:
            r = _G.bind(null, t, 1, e)
        }
        n ? e.addEventListener(t, r, !0) : e.addEventListener(t, r, !1)
    }
    function AG(e, t, n, r) {
        gj || mj();
        var a = _G
          , o = gj;
        gj = !0;
        try {
            hj(a, e, t, n, r)
        } finally {
            (gj = o) || bj()
        }
    }
    function NG(e, t, n, r) {
        EG(CG, _G.bind(null, e, t, n, r))
    }
    function _G(e, t, n, r) {
        if (SG)
            if (0 < ZH.length && -1 < oG.indexOf(e))
                e = sG(null, e, t, n, r),
                ZH.push(e);
            else {
                var a = RG(e, t, n, r);
                if (null === a)
                    uG(e, r);
                else if (-1 < oG.indexOf(e))
                    e = sG(a, e, t, n, r),
                    ZH.push(e);
                else if (!function(e, t, n, r, a) {
                    switch (t) {
                    case "focus":
                        return JH = cG(JH, e, t, n, r, a),
                        !0;
                    case "dragenter":
                        return eG = cG(eG, e, t, n, r, a),
                        !0;
                    case "mouseover":
                        return tG = cG(tG, e, t, n, r, a),
                        !0;
                    case "pointerover":
                        var o = a.pointerId;
                        return nG.set(o, cG(nG.get(o) || null, e, t, n, r, a)),
                        !0;
                    case "gotpointercapture":
                        return o = a.pointerId,
                        rG.set(o, cG(rG.get(o) || null, e, t, n, r, a)),
                        !0
                    }
                    return !1
                }(a, e, t, n, r)) {
                    uG(e, r),
                    e = GH(e, r, null, t);
                    try {
                        xj(KH, e)
                    } finally {
                        HH(e)
                    }
                }
            }
    }
    function RG(e, t, n, r) {
        if (null !== (n = uK(n = zH(r)))) {
            var a = OH(n);
            if (null === a)
                n = null;
            else {
                var o = a.tag;
                if (13 === o) {
                    if (null !== (n = DH(a)))
                        return n;
                    n = null
                } else if (3 === o) {
                    if (a.stateNode.hydrate)
                        return 3 === a.tag ? a.stateNode.containerInfo : null;
                    n = null
                } else
                    a !== n && (n = null)
            }
        }
        e = GH(e, r, n, t);
        try {
            xj(KH, e)
        } finally {
            HH(e)
        }
        return null
    }
    var OG = {
        animationIterationCount: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
    }
      , DG = ["Webkit", "ms", "Moz", "O"];
    function BG(e, t, n) {
        return null == t || "boolean" == typeof t || "" === t ? "" : n || "number" != typeof t || 0 === t || OG.hasOwnProperty(e) && OG[e] ? ("" + t).trim() : t + "px"
    }
    function FG(e, t) {
        for (var n in e = e.style,
        t)
            if (t.hasOwnProperty(n)) {
                var r = 0 === n.indexOf("--")
                  , a = BG(n, t[n], r);
                "float" === n && (n = "cssFloat"),
                r ? e.setProperty(n, a) : e[n] = a
            }
    }
    Object.keys(OG).forEach((function(e) {
        DG.forEach((function(t) {
            t = t + e.charAt(0).toUpperCase() + e.substring(1),
            OG[t] = OG[e]
        }
        ))
    }
    ));
    var MG = Pv({
        menuitem: !0
    }, {
        area: !0,
        base: !0,
        br: !0,
        col: !0,
        embed: !0,
        hr: !0,
        img: !0,
        input: !0,
        keygen: !0,
        link: !0,
        meta: !0,
        param: !0,
        source: !0,
        track: !0,
        wbr: !0
    });
    function PG(e, t) {
        if (t) {
            if (MG[e] && (null != t.children || null != t.dangerouslySetInnerHTML))
                throw Error(UW(137, e, ""));
            if (null != t.dangerouslySetInnerHTML) {
                if (null != t.children)
                    throw Error(UW(60));
                if ("object" != typeof t.dangerouslySetInnerHTML || !("__html"in t.dangerouslySetInnerHTML))
                    throw Error(UW(61))
            }
            if (null != t.style && "object" != typeof t.style)
                throw Error(UW(62, ""))
        }
    }
    function LG(e, t) {
        if (-1 === e.indexOf("-"))
            return "string" == typeof t.is;
        switch (e) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
            return !1;
        default:
            return !0
        }
    }
    var UG = dH;
    function VG(e, t) {
        var n = RH(e = 9 === e.nodeType || 11 === e.nodeType ? e : e.ownerDocument);
        t = aj[t];
        for (var r = 0; r < t.length; r++)
            qH(t[r], e, n)
    }
    function zG() {}
    function WG(e) {
        if (void 0 === (e = e || ("undefined" != typeof document ? document : void 0)))
            return null;
        try {
            return e.activeElement || e.body
        } catch (t) {
            return e.body
        }
    }
    function jG(e) {
        for (; e && e.firstChild; )
            e = e.firstChild;
        return e
    }
    function HG(e, t) {
        var n, r = jG(e);
        for (e = 0; r; ) {
            if (3 === r.nodeType) {
                if (n = e + r.textContent.length,
                e <= t && n >= t)
                    return {
                        node: r,
                        offset: t - e
                    };
                e = n
            }
            e: {
                for (; r; ) {
                    if (r.nextSibling) {
                        r = r.nextSibling;
                        break e
                    }
                    r = r.parentNode
                }
                r = void 0
            }
            r = jG(r)
        }
    }
    function GG(e, t) {
        return !(!e || !t) && (e === t || (!e || 3 !== e.nodeType) && (t && 3 === t.nodeType ? GG(e, t.parentNode) : "contains"in e ? e.contains(t) : !!e.compareDocumentPosition && !!(16 & e.compareDocumentPosition(t))))
    }
    function KG() {
        for (var e = window, t = WG(); t instanceof e.HTMLIFrameElement; ) {
            try {
                var n = "string" == typeof t.contentWindow.location.href
            } catch (e) {
                n = !1
            }
            if (!n)
                break;
            t = WG((e = t.contentWindow).document)
        }
        return t
    }
    function qG(e) {
        var t = e && e.nodeName && e.nodeName.toLowerCase();
        return t && ("input" === t && ("text" === e.type || "search" === e.type || "tel" === e.type || "url" === e.type || "password" === e.type) || "textarea" === t || "true" === e.contentEditable)
    }
    var XG = "$?"
      , QG = "$!"
      , YG = null
      , $G = null;
    function ZG(e, t) {
        switch (e) {
        case "button":
        case "input":
        case "select":
        case "textarea":
            return !!t.autoFocus
        }
        return !1
    }
    function JG(e, t) {
        return "textarea" === e || "option" === e || "noscript" === e || "string" == typeof t.children || "number" == typeof t.children || "object" == typeof t.dangerouslySetInnerHTML && null !== t.dangerouslySetInnerHTML && null != t.dangerouslySetInnerHTML.__html
    }
    var eK = "function" == typeof setTimeout ? setTimeout : void 0
      , tK = "function" == typeof clearTimeout ? clearTimeout : void 0;
    function nK(e) {
        for (; null != e; e = e.nextSibling) {
            var t = e.nodeType;
            if (1 === t || 3 === t)
                break
        }
        return e
    }
    function rK(e) {
        e = e.previousSibling;
        for (var t = 0; e; ) {
            if (8 === e.nodeType) {
                var n = e.data;
                if ("$" === n || n === QG || n === XG) {
                    if (0 === t)
                        return e;
                    t--
                } else
                    "/$" === n && t++
            }
            e = e.previousSibling
        }
        return null
    }
    var aK = Math.random().toString(36).slice(2)
      , oK = "__reactInternalInstance$" + aK
      , iK = "__reactEventHandlers$" + aK
      , sK = "__reactContainere$" + aK;
    function uK(e) {
        var t = e[oK];
        if (t)
            return t;
        for (var n = e.parentNode; n; ) {
            if (t = n[sK] || n[oK]) {
                if (n = t.alternate,
                null !== t.child || null !== n && null !== n.child)
                    for (e = rK(e); null !== e; ) {
                        if (n = e[oK])
                            return n;
                        e = rK(e)
                    }
                return t
            }
            n = (e = n).parentNode
        }
        return null
    }
    function cK(e) {
        return !(e = e[oK] || e[sK]) || 5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag ? null : e
    }
    function lK(e) {
        if (5 === e.tag || 6 === e.tag)
            return e.stateNode;
        throw Error(UW(33))
    }
    function fK(e) {
        return e[iK] || null
    }
    function pK(e) {
        do {
            e = e.return
        } while (e && 5 !== e.tag);return e || null
    }
    function dK(e, t) {
        var n = e.stateNode;
        if (!n)
            return null;
        var r = qW(n);
        if (!r)
            return null;
        n = r[t];
        e: switch (t) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
            (r = !r.disabled) || (r = !("button" === (e = e.type) || "input" === e || "select" === e || "textarea" === e)),
            e = !r;
            break e;
        default:
            e = !1
        }
        if (e)
            return null;
        if (n && "function" != typeof n)
            throw Error(UW(231, t, typeof n));
        return n
    }
    function hK(e, t, n) {
        (t = dK(e, n.dispatchConfig.phasedRegistrationNames[t])) && (n._dispatchListeners = MH(n._dispatchListeners, t),
        n._dispatchInstances = MH(n._dispatchInstances, e))
    }
    function mK(e) {
        if (e && e.dispatchConfig.phasedRegistrationNames) {
            for (var t = e._targetInst, n = []; t; )
                n.push(t),
                t = pK(t);
            for (t = n.length; 0 < t--; )
                hK(n[t], "captured", e);
            for (t = 0; t < n.length; t++)
                hK(n[t], "bubbled", e)
        }
    }
    function vK(e, t, n) {
        e && n && n.dispatchConfig.registrationName && (t = dK(e, n.dispatchConfig.registrationName)) && (n._dispatchListeners = MH(n._dispatchListeners, t),
        n._dispatchInstances = MH(n._dispatchInstances, e))
    }
    function gK(e) {
        e && e.dispatchConfig.registrationName && vK(e._targetInst, null, e)
    }
    function yK(e) {
        PH(e, mK)
    }
    var bK = null
      , xK = null
      , wK = null;
    function kK() {
        if (wK)
            return wK;
        var e, t, n = xK, r = n.length, a = "value"in bK ? bK.value : bK.textContent, o = a.length;
        for (e = 0; e < r && n[e] === a[e]; e++)
            ;
        var i = r - e;
        for (t = 1; t <= i && n[r - t] === a[o - t]; t++)
            ;
        return wK = a.slice(e, 1 < t ? 1 - t : void 0)
    }
    function CK() {
        return !0
    }
    function EK() {
        return !1
    }
    function SK(e, t, n, r) {
        for (var a in this.dispatchConfig = e,
        this._targetInst = t,
        this.nativeEvent = n,
        e = this.constructor.Interface)
            e.hasOwnProperty(a) && ((t = e[a]) ? this[a] = t(n) : "target" === a ? this.target = r : this[a] = n[a]);
        return this.isDefaultPrevented = (null != n.defaultPrevented ? n.defaultPrevented : !1 === n.returnValue) ? CK : EK,
        this.isPropagationStopped = EK,
        this
    }
    function IK(e, t, n, r) {
        if (this.eventPool.length) {
            var a = this.eventPool.pop();
            return this.call(a, e, t, n, r),
            a
        }
        return new this(e,t,n,r)
    }
    function TK(e) {
        if (!(e instanceof this))
            throw Error(UW(279));
        e.destructor(),
        10 > this.eventPool.length && this.eventPool.push(e)
    }
    function AK(e) {
        e.eventPool = [],
        e.getPooled = IK,
        e.release = TK
    }
    Pv(SK.prototype, {
        preventDefault: function() {
            this.defaultPrevented = !0;
            var e = this.nativeEvent;
            e && (e.preventDefault ? e.preventDefault() : "unknown" != typeof e.returnValue && (e.returnValue = !1),
            this.isDefaultPrevented = CK)
        },
        stopPropagation: function() {
            var e = this.nativeEvent;
            e && (e.stopPropagation ? e.stopPropagation() : "unknown" != typeof e.cancelBubble && (e.cancelBubble = !0),
            this.isPropagationStopped = CK)
        },
        persist: function() {
            this.isPersistent = CK
        },
        isPersistent: EK,
        destructor: function() {
            var e, t = this.constructor.Interface;
            for (e in t)
                this[e] = null;
            this.nativeEvent = this._targetInst = this.dispatchConfig = null,
            this.isPropagationStopped = this.isDefaultPrevented = EK,
            this._dispatchInstances = this._dispatchListeners = null
        }
    }),
    SK.Interface = {
        type: null,
        target: null,
        currentTarget: function() {
            return null
        },
        eventPhase: null,
        bubbles: null,
        cancelable: null,
        timeStamp: function(e) {
            return e.timeStamp || Date.now()
        },
        defaultPrevented: null,
        isTrusted: null
    },
    SK.extend = function(e) {
        function t() {}
        function n() {
            return r.apply(this, arguments)
        }
        var r = this;
        t.prototype = r.prototype;
        var a = new t;
        return Pv(a, n.prototype),
        n.prototype = a,
        n.prototype.constructor = n,
        n.Interface = Pv({}, r.Interface, e),
        n.extend = r.extend,
        AK(n),
        n
    }
    ,
    AK(SK);
    var NK = SK.extend({
        data: null
    })
      , _K = SK.extend({
        data: null
    })
      , RK = [9, 13, 27, 32]
      , OK = ij && "CompositionEvent"in window
      , DK = null;
    ij && "documentMode"in document && (DK = document.documentMode);
    var BK = ij && "TextEvent"in window && !DK
      , FK = ij && (!OK || DK && 8 < DK && 11 >= DK)
      , MK = String.fromCharCode(32)
      , PK = {
        beforeInput: {
            phasedRegistrationNames: {
                bubbled: "onBeforeInput",
                captured: "onBeforeInputCapture"
            },
            dependencies: ["compositionend", "keypress", "textInput", "paste"]
        },
        compositionEnd: {
            phasedRegistrationNames: {
                bubbled: "onCompositionEnd",
                captured: "onCompositionEndCapture"
            },
            dependencies: "blur compositionend keydown keypress keyup mousedown".split(" ")
        },
        compositionStart: {
            phasedRegistrationNames: {
                bubbled: "onCompositionStart",
                captured: "onCompositionStartCapture"
            },
            dependencies: "blur compositionstart keydown keypress keyup mousedown".split(" ")
        },
        compositionUpdate: {
            phasedRegistrationNames: {
                bubbled: "onCompositionUpdate",
                captured: "onCompositionUpdateCapture"
            },
            dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(" ")
        }
    }
      , LK = !1;
    function UK(e, t) {
        switch (e) {
        case "keyup":
            return -1 !== RK.indexOf(t.keyCode);
        case "keydown":
            return 229 !== t.keyCode;
        case "keypress":
        case "mousedown":
        case "blur":
            return !0;
        default:
            return !1
        }
    }
    function VK(e) {
        return "object" == typeof (e = e.detail) && "data"in e ? e.data : null
    }
    var zK = !1;
    var WK = {
        eventTypes: PK,
        extractEvents: function(e, t, n, r) {
            var a;
            if (OK)
                e: {
                    switch (e) {
                    case "compositionstart":
                        var o = PK.compositionStart;
                        break e;
                    case "compositionend":
                        o = PK.compositionEnd;
                        break e;
                    case "compositionupdate":
                        o = PK.compositionUpdate;
                        break e
                    }
                    o = void 0
                }
            else
                zK ? UK(e, n) && (o = PK.compositionEnd) : "keydown" === e && 229 === n.keyCode && (o = PK.compositionStart);
            return o ? (FK && "ko" !== n.locale && (zK || o !== PK.compositionStart ? o === PK.compositionEnd && zK && (a = kK()) : (xK = "value"in (bK = r) ? bK.value : bK.textContent,
            zK = !0)),
            o = NK.getPooled(o, t, n, r),
            a ? o.data = a : null !== (a = VK(n)) && (o.data = a),
            yK(o),
            a = o) : a = null,
            (e = BK ? function(e, t) {
                switch (e) {
                case "compositionend":
                    return VK(t);
                case "keypress":
                    return 32 !== t.which ? null : (LK = !0,
                    MK);
                case "textInput":
                    return (e = t.data) === MK && LK ? null : e;
                default:
                    return null
                }
            }(e, n) : function(e, t) {
                if (zK)
                    return "compositionend" === e || !OK && UK(e, t) ? (e = kK(),
                    wK = xK = bK = null,
                    zK = !1,
                    e) : null;
                switch (e) {
                case "paste":
                    return null;
                case "keypress":
                    if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                        if (t.char && 1 < t.char.length)
                            return t.char;
                        if (t.which)
                            return String.fromCharCode(t.which)
                    }
                    return null;
                case "compositionend":
                    return FK && "ko" !== t.locale ? null : t.data;
                default:
                    return null
                }
            }(e, n)) ? ((t = _K.getPooled(PK.beforeInput, t, n, r)).data = e,
            yK(t)) : t = null,
            null === a ? t : null === t ? a : [a, t]
        }
    }
      , jK = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
    };
    function HK(e) {
        var t = e && e.nodeName && e.nodeName.toLowerCase();
        return "input" === t ? !!jK[e.type] : "textarea" === t
    }
    var GK = {
        change: {
            phasedRegistrationNames: {
                bubbled: "onChange",
                captured: "onChangeCapture"
            },
            dependencies: "blur change click focus input keydown keyup selectionchange".split(" ")
        }
    };
    function KK(e, t, n) {
        return (e = SK.getPooled(GK.change, e, t, n)).type = "change",
        fj(n),
        yK(e),
        e
    }
    var qK = null
      , XK = null;
    function QK(e) {
        VH(e)
    }
    function YK(e) {
        if (eH(lK(e)))
            return e
    }
    function $K(e, t) {
        if ("change" === e)
            return t
    }
    var ZK = !1;
    function JK() {
        qK && (qK.detachEvent("onpropertychange", eq),
        XK = qK = null)
    }
    function eq(e) {
        if ("value" === e.propertyName && YK(XK))
            if (e = KK(XK, e, zH(e)),
            gj)
                VH(e);
            else {
                gj = !0;
                try {
                    dj(QK, e)
                } finally {
                    gj = !1,
                    bj()
                }
            }
    }
    function tq(e, t, n) {
        "focus" === e ? (JK(),
        XK = n,
        (qK = t).attachEvent("onpropertychange", eq)) : "blur" === e && JK()
    }
    function nq(e) {
        if ("selectionchange" === e || "keyup" === e || "keydown" === e)
            return YK(XK)
    }
    function rq(e, t) {
        if ("click" === e)
            return YK(t)
    }
    function aq(e, t) {
        if ("input" === e || "change" === e)
            return YK(t)
    }
    ij && (ZK = WH("input") && (!document.documentMode || 9 < document.documentMode));
    var oq = {
        eventTypes: GK,
        _isInputEventSupported: ZK,
        extractEvents: function(e, t, n, r) {
            var a = t ? lK(t) : window
              , o = a.nodeName && a.nodeName.toLowerCase();
            if ("select" === o || "input" === o && "file" === a.type)
                var i = $K;
            else if (HK(a))
                if (ZK)
                    i = aq;
                else {
                    i = nq;
                    var s = tq
                }
            else
                (o = a.nodeName) && "input" === o.toLowerCase() && ("checkbox" === a.type || "radio" === a.type) && (i = rq);
            if (i && (i = i(e, t)))
                return KK(i, n, r);
            s && s(e, a, t),
            "blur" === e && (e = a._wrapperState) && e.controlled && "number" === a.type && iH(a, "number", a.value)
        }
    }
      , iq = SK.extend({
        view: null,
        detail: null
    })
      , sq = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
    };
    function uq(e) {
        var t = this.nativeEvent;
        return t.getModifierState ? t.getModifierState(e) : !!(e = sq[e]) && !!t[e]
    }
    function cq() {
        return uq
    }
    var lq = 0
      , fq = 0
      , pq = !1
      , dq = !1
      , hq = iq.extend({
        screenX: null,
        screenY: null,
        clientX: null,
        clientY: null,
        pageX: null,
        pageY: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        getModifierState: cq,
        button: null,
        buttons: null,
        relatedTarget: function(e) {
            return e.relatedTarget || (e.fromElement === e.srcElement ? e.toElement : e.fromElement)
        },
        movementX: function(e) {
            if ("movementX"in e)
                return e.movementX;
            var t = lq;
            return lq = e.screenX,
            pq ? "mousemove" === e.type ? e.screenX - t : 0 : (pq = !0,
            0)
        },
        movementY: function(e) {
            if ("movementY"in e)
                return e.movementY;
            var t = fq;
            return fq = e.screenY,
            dq ? "mousemove" === e.type ? e.screenY - t : 0 : (dq = !0,
            0)
        }
    })
      , mq = hq.extend({
        pointerId: null,
        width: null,
        height: null,
        pressure: null,
        tangentialPressure: null,
        tiltX: null,
        tiltY: null,
        twist: null,
        pointerType: null,
        isPrimary: null
    })
      , vq = {
        mouseEnter: {
            registrationName: "onMouseEnter",
            dependencies: ["mouseout", "mouseover"]
        },
        mouseLeave: {
            registrationName: "onMouseLeave",
            dependencies: ["mouseout", "mouseover"]
        },
        pointerEnter: {
            registrationName: "onPointerEnter",
            dependencies: ["pointerout", "pointerover"]
        },
        pointerLeave: {
            registrationName: "onPointerLeave",
            dependencies: ["pointerout", "pointerover"]
        }
    }
      , gq = {
        eventTypes: vq,
        extractEvents: function(e, t, n, r, a) {
            var o = "mouseover" === e || "pointerover" === e
              , i = "mouseout" === e || "pointerout" === e;
            if (o && 0 == (32 & a) && (n.relatedTarget || n.fromElement) || !i && !o)
                return null;
            (o = r.window === r ? r : (o = r.ownerDocument) ? o.defaultView || o.parentWindow : window,
            i) ? (i = t,
            null !== (t = (t = n.relatedTarget || n.toElement) ? uK(t) : null) && (t !== OH(t) || 5 !== t.tag && 6 !== t.tag) && (t = null)) : i = null;
            if (i === t)
                return null;
            if ("mouseout" === e || "mouseover" === e)
                var s = hq
                  , u = vq.mouseLeave
                  , c = vq.mouseEnter
                  , l = "mouse";
            else
                "pointerout" !== e && "pointerover" !== e || (s = mq,
                u = vq.pointerLeave,
                c = vq.pointerEnter,
                l = "pointer");
            if (e = null == i ? o : lK(i),
            o = null == t ? o : lK(t),
            (u = s.getPooled(u, i, n, r)).type = l + "leave",
            u.target = e,
            u.relatedTarget = o,
            (n = s.getPooled(c, t, n, r)).type = l + "enter",
            n.target = o,
            n.relatedTarget = e,
            l = t,
            (r = i) && l)
                e: {
                    for (c = l,
                    i = 0,
                    e = s = r; e; e = pK(e))
                        i++;
                    for (e = 0,
                    t = c; t; t = pK(t))
                        e++;
                    for (; 0 < i - e; )
                        s = pK(s),
                        i--;
                    for (; 0 < e - i; )
                        c = pK(c),
                        e--;
                    for (; i--; ) {
                        if (s === c || s === c.alternate)
                            break e;
                        s = pK(s),
                        c = pK(c)
                    }
                    s = null
                }
            else
                s = null;
            for (c = s,
            s = []; r && r !== c && (null === (i = r.alternate) || i !== c); )
                s.push(r),
                r = pK(r);
            for (r = []; l && l !== c && (null === (i = l.alternate) || i !== c); )
                r.push(l),
                l = pK(l);
            for (l = 0; l < s.length; l++)
                vK(s[l], "bubbled", u);
            for (l = r.length; 0 < l--; )
                vK(r[l], "captured", n);
            return 0 == (64 & a) ? [u] : [u, n]
        }
    };
    var yq = "function" == typeof Object.is ? Object.is : function(e, t) {
        return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t
    }
      , bq = Object.prototype.hasOwnProperty;
    function xq(e, t) {
        if (yq(e, t))
            return !0;
        if ("object" != typeof e || null === e || "object" != typeof t || null === t)
            return !1;
        var n = Object.keys(e)
          , r = Object.keys(t);
        if (n.length !== r.length)
            return !1;
        for (r = 0; r < n.length; r++)
            if (!bq.call(t, n[r]) || !yq(e[n[r]], t[n[r]]))
                return !1;
        return !0
    }
    var wq = ij && "documentMode"in document && 11 >= document.documentMode
      , kq = {
        select: {
            phasedRegistrationNames: {
                bubbled: "onSelect",
                captured: "onSelectCapture"
            },
            dependencies: "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")
        }
    }
      , Cq = null
      , Eq = null
      , Sq = null
      , Iq = !1;
    function Tq(e, t) {
        var n = t.window === t ? t.document : 9 === t.nodeType ? t : t.ownerDocument;
        return Iq || null == Cq || Cq !== WG(n) ? null : ("selectionStart"in (n = Cq) && qG(n) ? n = {
            start: n.selectionStart,
            end: n.selectionEnd
        } : n = {
            anchorNode: (n = (n.ownerDocument && n.ownerDocument.defaultView || window).getSelection()).anchorNode,
            anchorOffset: n.anchorOffset,
            focusNode: n.focusNode,
            focusOffset: n.focusOffset
        },
        Sq && xq(Sq, n) ? null : (Sq = n,
        (e = SK.getPooled(kq.select, Eq, e, t)).type = "select",
        e.target = Cq,
        yK(e),
        e))
    }
    var Aq = {
        eventTypes: kq,
        extractEvents: function(e, t, n, r, a, o) {
            if (!(o = !(a = o || (r.window === r ? r.document : 9 === r.nodeType ? r : r.ownerDocument)))) {
                e: {
                    a = RH(a),
                    o = aj.onSelect;
                    for (var i = 0; i < o.length; i++)
                        if (!a.has(o[i])) {
                            a = !1;
                            break e
                        }
                    a = !0
                }
                o = !a
            }
            if (o)
                return null;
            switch (a = t ? lK(t) : window,
            e) {
            case "focus":
                (HK(a) || "true" === a.contentEditable) && (Cq = a,
                Eq = t,
                Sq = null);
                break;
            case "blur":
                Sq = Eq = Cq = null;
                break;
            case "mousedown":
                Iq = !0;
                break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
                return Iq = !1,
                Tq(n, r);
            case "selectionchange":
                if (wq)
                    break;
            case "keydown":
            case "keyup":
                return Tq(n, r)
            }
            return null
        }
    }
      , Nq = SK.extend({
        animationName: null,
        elapsedTime: null,
        pseudoElement: null
    })
      , _q = SK.extend({
        clipboardData: function(e) {
            return "clipboardData"in e ? e.clipboardData : window.clipboardData
        }
    })
      , Rq = iq.extend({
        relatedTarget: null
    });
    function Oq(e) {
        var t = e.keyCode;
        return "charCode"in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : e = t,
        10 === e && (e = 13),
        32 <= e || 13 === e ? e : 0
    }
    var Dq = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
    }
      , Bq = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
    }
      , Fq = iq.extend({
        key: function(e) {
            if (e.key) {
                var t = Dq[e.key] || e.key;
                if ("Unidentified" !== t)
                    return t
            }
            return "keypress" === e.type ? 13 === (e = Oq(e)) ? "Enter" : String.fromCharCode(e) : "keydown" === e.type || "keyup" === e.type ? Bq[e.keyCode] || "Unidentified" : ""
        },
        location: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        repeat: null,
        locale: null,
        getModifierState: cq,
        charCode: function(e) {
            return "keypress" === e.type ? Oq(e) : 0
        },
        keyCode: function(e) {
            return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
        },
        which: function(e) {
            return "keypress" === e.type ? Oq(e) : "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
        }
    })
      , Mq = hq.extend({
        dataTransfer: null
    })
      , Pq = iq.extend({
        touches: null,
        targetTouches: null,
        changedTouches: null,
        altKey: null,
        metaKey: null,
        ctrlKey: null,
        shiftKey: null,
        getModifierState: cq
    })
      , Lq = SK.extend({
        propertyName: null,
        elapsedTime: null,
        pseudoElement: null
    })
      , Uq = hq.extend({
        deltaX: function(e) {
            return "deltaX"in e ? e.deltaX : "wheelDeltaX"in e ? -e.wheelDeltaX : 0
        },
        deltaY: function(e) {
            return "deltaY"in e ? e.deltaY : "wheelDeltaY"in e ? -e.wheelDeltaY : "wheelDelta"in e ? -e.wheelDelta : 0
        },
        deltaZ: null,
        deltaMode: null
    })
      , Vq = {
        eventTypes: vG,
        extractEvents: function(e, t, n, r) {
            var a = gG.get(e);
            if (!a)
                return null;
            switch (e) {
            case "keypress":
                if (0 === Oq(n))
                    return null;
            case "keydown":
            case "keyup":
                e = Fq;
                break;
            case "blur":
            case "focus":
                e = Rq;
                break;
            case "click":
                if (2 === n.button)
                    return null;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
                e = hq;
                break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
                e = Mq;
                break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
                e = Pq;
                break;
            case SH:
            case IH:
            case TH:
                e = Nq;
                break;
            case AH:
                e = Lq;
                break;
            case "scroll":
                e = iq;
                break;
            case "wheel":
                e = Uq;
                break;
            case "copy":
            case "cut":
            case "paste":
                e = _q;
                break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
                e = mq;
                break;
            default:
                e = SK
            }
            return yK(t = e.getPooled(a, t, n, r)),
            t
        }
    };
    if ($W)
        throw Error(UW(101));
    $W = Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),
    JW(),
    qW = fK,
    XW = cK,
    QW = lK,
    oj({
        SimpleEventPlugin: Vq,
        EnterLeaveEventPlugin: gq,
        ChangeEventPlugin: oq,
        SelectEventPlugin: Aq,
        BeforeInputEventPlugin: WK
    });
    var zq = []
      , Wq = -1;
    function jq(e) {
        0 > Wq || (e.current = zq[Wq],
        zq[Wq] = null,
        Wq--)
    }
    function Hq(e, t) {
        Wq++,
        zq[Wq] = e.current,
        e.current = t
    }
    var Gq = {}
      , Kq = {
        current: Gq
    }
      , qq = {
        current: !1
    }
      , Xq = Gq;
    function Qq(e, t) {
        var n = e.type.contextTypes;
        if (!n)
            return Gq;
        var r = e.stateNode;
        if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
            return r.__reactInternalMemoizedMaskedChildContext;
        var a, o = {};
        for (a in n)
            o[a] = t[a];
        return r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t,
        e.__reactInternalMemoizedMaskedChildContext = o),
        o
    }
    function Yq(e) {
        return null != (e = e.childContextTypes)
    }
    function $q() {
        jq(qq),
        jq(Kq)
    }
    function Zq(e, t, n) {
        if (Kq.current !== Gq)
            throw Error(UW(168));
        Hq(Kq, t),
        Hq(qq, n)
    }
    function Jq(e, t, n) {
        var r = e.stateNode;
        if (e = t.childContextTypes,
        "function" != typeof r.getChildContext)
            return n;
        for (var a in r = r.getChildContext())
            if (!(a in e))
                throw Error(UW(108, Qj(t) || "Unknown", a));
        return Pv({}, n, {}, r)
    }
    function eX(e) {
        return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || Gq,
        Xq = Kq.current,
        Hq(Kq, e),
        Hq(qq, qq.current),
        !0
    }
    function tX(e, t, n) {
        var r = e.stateNode;
        if (!r)
            throw Error(UW(169));
        n ? (e = Jq(e, t, Xq),
        r.__reactInternalMemoizedMergedChildContext = e,
        jq(qq),
        jq(Kq),
        Hq(Kq, e)) : jq(qq),
        Hq(qq, n)
    }
    var nX = LW.unstable_runWithPriority
      , rX = LW.unstable_scheduleCallback
      , aX = LW.unstable_cancelCallback
      , oX = LW.unstable_requestPaint
      , iX = LW.unstable_now
      , sX = LW.unstable_getCurrentPriorityLevel
      , uX = LW.unstable_ImmediatePriority
      , cX = LW.unstable_UserBlockingPriority
      , lX = LW.unstable_NormalPriority
      , fX = LW.unstable_LowPriority
      , pX = LW.unstable_IdlePriority
      , dX = {}
      , hX = LW.unstable_shouldYield
      , mX = void 0 !== oX ? oX : function() {}
      , vX = null
      , gX = null
      , yX = !1
      , bX = iX()
      , xX = 1e4 > bX ? iX : function() {
        return iX() - bX
    }
    ;
    function wX() {
        switch (sX()) {
        case uX:
            return 99;
        case cX:
            return 98;
        case lX:
            return 97;
        case fX:
            return 96;
        case pX:
            return 95;
        default:
            throw Error(UW(332))
        }
    }
    function kX(e) {
        switch (e) {
        case 99:
            return uX;
        case 98:
            return cX;
        case 97:
            return lX;
        case 96:
            return fX;
        case 95:
            return pX;
        default:
            throw Error(UW(332))
        }
    }
    function CX(e, t) {
        return e = kX(e),
        nX(e, t)
    }
    function EX(e, t, n) {
        return e = kX(e),
        rX(e, t, n)
    }
    function SX(e) {
        return null === vX ? (vX = [e],
        gX = rX(uX, TX)) : vX.push(e),
        dX
    }
    function IX() {
        if (null !== gX) {
            var e = gX;
            gX = null,
            aX(e)
        }
        TX()
    }
    function TX() {
        if (!yX && null !== vX) {
            yX = !0;
            var e = 0;
            try {
                var t = vX;
                CX(99, (function() {
                    for (; e < t.length; e++) {
                        var n = t[e];
                        do {
                            n = n(!0)
                        } while (null !== n)
                    }
                }
                )),
                vX = null
            } catch (t) {
                throw null !== vX && (vX = vX.slice(e + 1)),
                rX(uX, IX),
                t
            } finally {
                yX = !1
            }
        }
    }
    function AX(e, t, n) {
        return 1073741821 - (1 + ((1073741821 - e + t / 10) / (n /= 10) | 0)) * n
    }
    function NX(e, t) {
        if (e && e.defaultProps)
            for (var n in t = Pv({}, t),
            e = e.defaultProps)
                void 0 === t[n] && (t[n] = e[n]);
        return t
    }
    var _X = {
        current: null
    }
      , RX = null
      , OX = null
      , DX = null;
    function BX() {
        DX = OX = RX = null
    }
    function FX(e) {
        var t = _X.current;
        jq(_X),
        e.type._context._currentValue = t
    }
    function MX(e, t) {
        for (; null !== e; ) {
            var n = e.alternate;
            if (e.childExpirationTime < t)
                e.childExpirationTime = t,
                null !== n && n.childExpirationTime < t && (n.childExpirationTime = t);
            else {
                if (!(null !== n && n.childExpirationTime < t))
                    break;
                n.childExpirationTime = t
            }
            e = e.return
        }
    }
    function PX(e, t) {
        RX = e,
        DX = OX = null,
        null !== (e = e.dependencies) && null !== e.firstContext && (e.expirationTime >= t && (lY = !0),
        e.firstContext = null)
    }
    function LX(e, t) {
        if (DX !== e && !1 !== t && 0 !== t)
            if ("number" == typeof t && 1073741823 !== t || (DX = e,
            t = 1073741823),
            t = {
                context: e,
                observedBits: t,
                next: null
            },
            null === OX) {
                if (null === RX)
                    throw Error(UW(308));
                OX = t,
                RX.dependencies = {
                    expirationTime: 0,
                    firstContext: t,
                    responders: null
                }
            } else
                OX = OX.next = t;
        return e._currentValue
    }
    var UX = !1;
    function VX(e) {
        e.updateQueue = {
            baseState: e.memoizedState,
            baseQueue: null,
            shared: {
                pending: null
            },
            effects: null
        }
    }
    function zX(e, t) {
        e = e.updateQueue,
        t.updateQueue === e && (t.updateQueue = {
            baseState: e.baseState,
            baseQueue: e.baseQueue,
            shared: e.shared,
            effects: e.effects
        })
    }
    function WX(e, t) {
        return (e = {
            expirationTime: e,
            suspenseConfig: t,
            tag: 0,
            payload: null,
            callback: null,
            next: null
        }).next = e
    }
    function jX(e, t) {
        if (null !== (e = e.updateQueue)) {
            var n = (e = e.shared).pending;
            null === n ? t.next = t : (t.next = n.next,
            n.next = t),
            e.pending = t
        }
    }
    function HX(e, t) {
        var n = e.alternate;
        null !== n && zX(n, e),
        null === (n = (e = e.updateQueue).baseQueue) ? (e.baseQueue = t.next = t,
        t.next = t) : (t.next = n.next,
        n.next = t)
    }
    function GX(e, t, n, r) {
        var a = e.updateQueue;
        UX = !1;
        var o = a.baseQueue
          , i = a.shared.pending;
        if (null !== i) {
            if (null !== o) {
                var s = o.next;
                o.next = i.next,
                i.next = s
            }
            o = i,
            a.shared.pending = null,
            null !== (s = e.alternate) && (null !== (s = s.updateQueue) && (s.baseQueue = i))
        }
        if (null !== o) {
            s = o.next;
            var u = a.baseState
              , c = 0
              , l = null
              , f = null
              , p = null;
            if (null !== s)
                for (var d = s; ; ) {
                    if ((i = d.expirationTime) < r) {
                        var h = {
                            expirationTime: d.expirationTime,
                            suspenseConfig: d.suspenseConfig,
                            tag: d.tag,
                            payload: d.payload,
                            callback: d.callback,
                            next: null
                        };
                        null === p ? (f = p = h,
                        l = u) : p = p.next = h,
                        i > c && (c = i)
                    } else {
                        null !== p && (p = p.next = {
                            expirationTime: 1073741823,
                            suspenseConfig: d.suspenseConfig,
                            tag: d.tag,
                            payload: d.payload,
                            callback: d.callback,
                            next: null
                        }),
                        j$(i, d.suspenseConfig);
                        e: {
                            var m = e
                              , v = d;
                            switch (i = t,
                            h = n,
                            v.tag) {
                            case 1:
                                if ("function" == typeof (m = v.payload)) {
                                    u = m.call(h, u, i);
                                    break e
                                }
                                u = m;
                                break e;
                            case 3:
                                m.effectTag = -4097 & m.effectTag | 64;
                            case 0:
                                if (null == (i = "function" == typeof (m = v.payload) ? m.call(h, u, i) : m))
                                    break e;
                                u = Pv({}, u, i);
                                break e;
                            case 2:
                                UX = !0
                            }
                        }
                        null !== d.callback && (e.effectTag |= 32,
                        null === (i = a.effects) ? a.effects = [d] : i.push(d))
                    }
                    if (null === (d = d.next) || d === s) {
                        if (null === (i = a.shared.pending))
                            break;
                        d = o.next = i.next,
                        i.next = s,
                        a.baseQueue = o = i,
                        a.shared.pending = null
                    }
                }
            null === p ? l = u : p.next = f,
            a.baseState = l,
            a.baseQueue = p,
            H$(c),
            e.expirationTime = c,
            e.memoizedState = u
        }
    }
    function KX(e, t, n) {
        if (e = t.effects,
        t.effects = null,
        null !== e)
            for (t = 0; t < e.length; t++) {
                var r = e[t]
                  , a = r.callback;
                if (null !== a) {
                    if (r.callback = null,
                    r = a,
                    a = n,
                    "function" != typeof r)
                        throw Error(UW(191, r));
                    r.call(a)
                }
            }
    }
    var qX = Nj.ReactCurrentBatchConfig
      , XX = (new kg.Component).refs;
    function QX(e, t, n, r) {
        n = null == (n = n(r, t = e.memoizedState)) ? t : Pv({}, t, n),
        e.memoizedState = n,
        0 === e.expirationTime && (e.updateQueue.baseState = n)
    }
    var YX = {
        isMounted: function(e) {
            return !!(e = e._reactInternalFiber) && OH(e) === e
        },
        enqueueSetState: function(e, t, n) {
            e = e._reactInternalFiber;
            var r = _$()
              , a = qX.suspense;
            (a = WX(r = R$(r, e, a), a)).payload = t,
            null != n && (a.callback = n),
            jX(e, a),
            O$(e, r)
        },
        enqueueReplaceState: function(e, t, n) {
            e = e._reactInternalFiber;
            var r = _$()
              , a = qX.suspense;
            (a = WX(r = R$(r, e, a), a)).tag = 1,
            a.payload = t,
            null != n && (a.callback = n),
            jX(e, a),
            O$(e, r)
        },
        enqueueForceUpdate: function(e, t) {
            e = e._reactInternalFiber;
            var n = _$()
              , r = qX.suspense;
            (r = WX(n = R$(n, e, r), r)).tag = 2,
            null != t && (r.callback = t),
            jX(e, r),
            O$(e, n)
        }
    };
    function $X(e, t, n, r, a, o, i) {
        return "function" == typeof (e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(r, o, i) : !t.prototype || !t.prototype.isPureReactComponent || (!xq(n, r) || !xq(a, o))
    }
    function ZX(e, t, n) {
        var r = !1
          , a = Gq
          , o = t.contextType;
        return "object" == typeof o && null !== o ? o = LX(o) : (a = Yq(t) ? Xq : Kq.current,
        o = (r = null != (r = t.contextTypes)) ? Qq(e, a) : Gq),
        t = new t(n,o),
        e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null,
        t.updater = YX,
        e.stateNode = t,
        t._reactInternalFiber = e,
        r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = a,
        e.__reactInternalMemoizedMaskedChildContext = o),
        t
    }
    function JX(e, t, n, r) {
        e = t.state,
        "function" == typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, r),
        "function" == typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, r),
        t.state !== e && YX.enqueueReplaceState(t, t.state, null)
    }
    function eQ(e, t, n, r) {
        var a = e.stateNode;
        a.props = n,
        a.state = e.memoizedState,
        a.refs = XX,
        VX(e);
        var o = t.contextType;
        "object" == typeof o && null !== o ? a.context = LX(o) : (o = Yq(t) ? Xq : Kq.current,
        a.context = Qq(e, o)),
        GX(e, n, a, r),
        a.state = e.memoizedState,
        "function" == typeof (o = t.getDerivedStateFromProps) && (QX(e, t, o, n),
        a.state = e.memoizedState),
        "function" == typeof t.getDerivedStateFromProps || "function" == typeof a.getSnapshotBeforeUpdate || "function" != typeof a.UNSAFE_componentWillMount && "function" != typeof a.componentWillMount || (t = a.state,
        "function" == typeof a.componentWillMount && a.componentWillMount(),
        "function" == typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount(),
        t !== a.state && YX.enqueueReplaceState(a, a.state, null),
        GX(e, n, a, r),
        a.state = e.memoizedState),
        "function" == typeof a.componentDidMount && (e.effectTag |= 4)
    }
    var tQ = Array.isArray;
    function nQ(e, t, n) {
        if (null !== (e = n.ref) && "function" != typeof e && "object" != typeof e) {
            if (n._owner) {
                if (n = n._owner) {
                    if (1 !== n.tag)
                        throw Error(UW(309));
                    var r = n.stateNode
                }
                if (!r)
                    throw Error(UW(147, e));
                var a = "" + e;
                return null !== t && null !== t.ref && "function" == typeof t.ref && t.ref._stringRef === a ? t.ref : ((t = function(e) {
                    var t = r.refs;
                    t === XX && (t = r.refs = {}),
                    null === e ? delete t[a] : t[a] = e
                }
                )._stringRef = a,
                t)
            }
            if ("string" != typeof e)
                throw Error(UW(284));
            if (!n._owner)
                throw Error(UW(290, e))
        }
        return e
    }
    function rQ(e, t) {
        if ("textarea" !== e.type)
            throw Error(UW(31, "[object Object]" === Object.prototype.toString.call(t) ? "object with keys {" + Object.keys(t).join(", ") + "}" : t, ""))
    }
    function aQ(e) {
        function t(t, n) {
            if (e) {
                var r = t.lastEffect;
                null !== r ? (r.nextEffect = n,
                t.lastEffect = n) : t.firstEffect = t.lastEffect = n,
                n.nextEffect = null,
                n.effectTag = 8
            }
        }
        function n(n, r) {
            if (!e)
                return null;
            for (; null !== r; )
                t(n, r),
                r = r.sibling;
            return null
        }
        function r(e, t) {
            for (e = new Map; null !== t; )
                null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                t = t.sibling;
            return e
        }
        function a(e, t) {
            return (e = lZ(e, t)).index = 0,
            e.sibling = null,
            e
        }
        function o(t, n, r) {
            return t.index = r,
            e ? null !== (r = t.alternate) ? (r = r.index) < n ? (t.effectTag = 2,
            n) : r : (t.effectTag = 2,
            n) : n
        }
        function i(t) {
            return e && null === t.alternate && (t.effectTag = 2),
            t
        }
        function s(e, t, n, r) {
            return null === t || 6 !== t.tag ? ((t = dZ(n, e.mode, r)).return = e,
            t) : ((t = a(t, n)).return = e,
            t)
        }
        function u(e, t, n, r) {
            return null !== t && t.elementType === n.type ? ((r = a(t, n.props)).ref = nQ(e, t, n),
            r.return = e,
            r) : ((r = fZ(n.type, n.key, n.props, null, e.mode, r)).ref = nQ(e, t, n),
            r.return = e,
            r)
        }
        function c(e, t, n, r) {
            return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation ? ((t = hZ(n, e.mode, r)).return = e,
            t) : ((t = a(t, n.children || [])).return = e,
            t)
        }
        function l(e, t, n, r, o) {
            return null === t || 7 !== t.tag ? ((t = pZ(n, e.mode, r, o)).return = e,
            t) : ((t = a(t, n)).return = e,
            t)
        }
        function f(e, t, n) {
            if ("string" == typeof t || "number" == typeof t)
                return (t = dZ("" + t, e.mode, n)).return = e,
                t;
            if ("object" == typeof t && null !== t) {
                switch (t.$$typeof) {
                case Dj:
                    return (n = fZ(t.type, t.key, t.props, null, e.mode, n)).ref = nQ(e, null, t),
                    n.return = e,
                    n;
                case Bj:
                    return (t = hZ(t, e.mode, n)).return = e,
                    t
                }
                if (tQ(t) || Xj(t))
                    return (t = pZ(t, e.mode, n, null)).return = e,
                    t;
                rQ(e, t)
            }
            return null
        }
        function p(e, t, n, r) {
            var a = null !== t ? t.key : null;
            if ("string" == typeof n || "number" == typeof n)
                return null !== a ? null : s(e, t, "" + n, r);
            if ("object" == typeof n && null !== n) {
                switch (n.$$typeof) {
                case Dj:
                    return n.key === a ? n.type === Fj ? l(e, t, n.props.children, r, a) : u(e, t, n, r) : null;
                case Bj:
                    return n.key === a ? c(e, t, n, r) : null
                }
                if (tQ(n) || Xj(n))
                    return null !== a ? null : l(e, t, n, r, null);
                rQ(e, n)
            }
            return null
        }
        function d(e, t, n, r, a) {
            if ("string" == typeof r || "number" == typeof r)
                return s(t, e = e.get(n) || null, "" + r, a);
            if ("object" == typeof r && null !== r) {
                switch (r.$$typeof) {
                case Dj:
                    return e = e.get(null === r.key ? n : r.key) || null,
                    r.type === Fj ? l(t, e, r.props.children, a, r.key) : u(t, e, r, a);
                case Bj:
                    return c(t, e = e.get(null === r.key ? n : r.key) || null, r, a)
                }
                if (tQ(r) || Xj(r))
                    return l(t, e = e.get(n) || null, r, a, null);
                rQ(t, r)
            }
            return null
        }
        function h(a, i, s, u) {
            for (var c = null, l = null, h = i, m = i = 0, v = null; null !== h && m < s.length; m++) {
                h.index > m ? (v = h,
                h = null) : v = h.sibling;
                var g = p(a, h, s[m], u);
                if (null === g) {
                    null === h && (h = v);
                    break
                }
                e && h && null === g.alternate && t(a, h),
                i = o(g, i, m),
                null === l ? c = g : l.sibling = g,
                l = g,
                h = v
            }
            if (m === s.length)
                return n(a, h),
                c;
            if (null === h) {
                for (; m < s.length; m++)
                    null !== (h = f(a, s[m], u)) && (i = o(h, i, m),
                    null === l ? c = h : l.sibling = h,
                    l = h);
                return c
            }
            for (h = r(a, h); m < s.length; m++)
                null !== (v = d(h, a, m, s[m], u)) && (e && null !== v.alternate && h.delete(null === v.key ? m : v.key),
                i = o(v, i, m),
                null === l ? c = v : l.sibling = v,
                l = v);
            return e && h.forEach((function(e) {
                return t(a, e)
            }
            )),
            c
        }
        function m(a, i, s, u) {
            var c = Xj(s);
            if ("function" != typeof c)
                throw Error(UW(150));
            if (null == (s = c.call(s)))
                throw Error(UW(151));
            for (var l = c = null, h = i, m = i = 0, v = null, g = s.next(); null !== h && !g.done; m++,
            g = s.next()) {
                h.index > m ? (v = h,
                h = null) : v = h.sibling;
                var y = p(a, h, g.value, u);
                if (null === y) {
                    null === h && (h = v);
                    break
                }
                e && h && null === y.alternate && t(a, h),
                i = o(y, i, m),
                null === l ? c = y : l.sibling = y,
                l = y,
                h = v
            }
            if (g.done)
                return n(a, h),
                c;
            if (null === h) {
                for (; !g.done; m++,
                g = s.next())
                    null !== (g = f(a, g.value, u)) && (i = o(g, i, m),
                    null === l ? c = g : l.sibling = g,
                    l = g);
                return c
            }
            for (h = r(a, h); !g.done; m++,
            g = s.next())
                null !== (g = d(h, a, m, g.value, u)) && (e && null !== g.alternate && h.delete(null === g.key ? m : g.key),
                i = o(g, i, m),
                null === l ? c = g : l.sibling = g,
                l = g);
            return e && h.forEach((function(e) {
                return t(a, e)
            }
            )),
            c
        }
        return function(e, r, o, s) {
            var u = "object" == typeof o && null !== o && o.type === Fj && null === o.key;
            u && (o = o.props.children);
            var c = "object" == typeof o && null !== o;
            if (c)
                switch (o.$$typeof) {
                case Dj:
                    e: {
                        for (c = o.key,
                        u = r; null !== u; ) {
                            if (u.key === c) {
                                switch (u.tag) {
                                case 7:
                                    if (o.type === Fj) {
                                        n(e, u.sibling),
                                        (r = a(u, o.props.children)).return = e,
                                        e = r;
                                        break e
                                    }
                                    break;
                                default:
                                    if (u.elementType === o.type) {
                                        n(e, u.sibling),
                                        (r = a(u, o.props)).ref = nQ(e, u, o),
                                        r.return = e,
                                        e = r;
                                        break e
                                    }
                                }
                                n(e, u);
                                break
                            }
                            t(e, u),
                            u = u.sibling
                        }
                        o.type === Fj ? ((r = pZ(o.props.children, e.mode, s, o.key)).return = e,
                        e = r) : ((s = fZ(o.type, o.key, o.props, null, e.mode, s)).ref = nQ(e, r, o),
                        s.return = e,
                        e = s)
                    }
                    return i(e);
                case Bj:
                    e: {
                        for (u = o.key; null !== r; ) {
                            if (r.key === u) {
                                if (4 === r.tag && r.stateNode.containerInfo === o.containerInfo && r.stateNode.implementation === o.implementation) {
                                    n(e, r.sibling),
                                    (r = a(r, o.children || [])).return = e,
                                    e = r;
                                    break e
                                }
                                n(e, r);
                                break
                            }
                            t(e, r),
                            r = r.sibling
                        }
                        (r = hZ(o, e.mode, s)).return = e,
                        e = r
                    }
                    return i(e)
                }
            if ("string" == typeof o || "number" == typeof o)
                return o = "" + o,
                null !== r && 6 === r.tag ? (n(e, r.sibling),
                (r = a(r, o)).return = e,
                e = r) : (n(e, r),
                (r = dZ(o, e.mode, s)).return = e,
                e = r),
                i(e);
            if (tQ(o))
                return h(e, r, o, s);
            if (Xj(o))
                return m(e, r, o, s);
            if (c && rQ(e, o),
            void 0 === o && !u)
                switch (e.tag) {
                case 1:
                case 0:
                    throw e = e.type,
                    Error(UW(152, e.displayName || e.name || "Component"))
                }
            return n(e, r)
        }
    }
    var oQ = aQ(!0)
      , iQ = aQ(!1)
      , sQ = {}
      , uQ = {
        current: sQ
    }
      , cQ = {
        current: sQ
    }
      , lQ = {
        current: sQ
    };
    function fQ(e) {
        if (e === sQ)
            throw Error(UW(174));
        return e
    }
    function pQ(e, t) {
        switch (Hq(lQ, t),
        Hq(cQ, e),
        Hq(uQ, sQ),
        e = t.nodeType) {
        case 9:
        case 11:
            t = (t = t.documentElement) ? t.namespaceURI : vH(null, "");
            break;
        default:
            t = vH(t = (e = 8 === e ? t.parentNode : t).namespaceURI || null, e = e.tagName)
        }
        jq(uQ),
        Hq(uQ, t)
    }
    function dQ() {
        jq(uQ),
        jq(cQ),
        jq(lQ)
    }
    function hQ(e) {
        fQ(lQ.current);
        var t = fQ(uQ.current)
          , n = vH(t, e.type);
        t !== n && (Hq(cQ, e),
        Hq(uQ, n))
    }
    function mQ(e) {
        cQ.current === e && (jq(uQ),
        jq(cQ))
    }
    var vQ = {
        current: 0
    };
    function gQ(e) {
        for (var t = e; null !== t; ) {
            if (13 === t.tag) {
                var n = t.memoizedState;
                if (null !== n && (null === (n = n.dehydrated) || n.data === XG || n.data === QG))
                    return t
            } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
                if (0 != (64 & t.effectTag))
                    return t
            } else if (null !== t.child) {
                t.child.return = t,
                t = t.child;
                continue
            }
            if (t === e)
                break;
            for (; null === t.sibling; ) {
                if (null === t.return || t.return === e)
                    return null;
                t = t.return
            }
            t.sibling.return = t.return,
            t = t.sibling
        }
        return null
    }
    function yQ(e, t) {
        return {
            responder: e,
            props: t
        }
    }
    var bQ = Nj.ReactCurrentDispatcher
      , xQ = Nj.ReactCurrentBatchConfig
      , wQ = 0
      , kQ = null
      , CQ = null
      , EQ = null
      , SQ = !1;
    function IQ() {
        throw Error(UW(321))
    }
    function TQ(e, t) {
        if (null === t)
            return !1;
        for (var n = 0; n < t.length && n < e.length; n++)
            if (!yq(e[n], t[n]))
                return !1;
        return !0
    }
    function AQ(e, t, n, r, a, o) {
        if (wQ = o,
        kQ = t,
        t.memoizedState = null,
        t.updateQueue = null,
        t.expirationTime = 0,
        bQ.current = null === e || null === e.memoizedState ? $Q : ZQ,
        e = n(r, a),
        t.expirationTime === wQ) {
            o = 0;
            do {
                if (t.expirationTime = 0,
                !(25 > o))
                    throw Error(UW(301));
                o += 1,
                EQ = CQ = null,
                t.updateQueue = null,
                bQ.current = JQ,
                e = n(r, a)
            } while (t.expirationTime === wQ)
        }
        if (bQ.current = YQ,
        t = null !== CQ && null !== CQ.next,
        wQ = 0,
        EQ = CQ = kQ = null,
        SQ = !1,
        t)
            throw Error(UW(300));
        return e
    }
    function NQ() {
        var e = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        return null === EQ ? kQ.memoizedState = EQ = e : EQ = EQ.next = e,
        EQ
    }
    function _Q() {
        if (null === CQ) {
            var e = kQ.alternate;
            e = null !== e ? e.memoizedState : null
        } else
            e = CQ.next;
        var t = null === EQ ? kQ.memoizedState : EQ.next;
        if (null !== t)
            EQ = t,
            CQ = e;
        else {
            if (null === e)
                throw Error(UW(310));
            e = {
                memoizedState: (CQ = e).memoizedState,
                baseState: CQ.baseState,
                baseQueue: CQ.baseQueue,
                queue: CQ.queue,
                next: null
            },
            null === EQ ? kQ.memoizedState = EQ = e : EQ = EQ.next = e
        }
        return EQ
    }
    function RQ(e, t) {
        return "function" == typeof t ? t(e) : t
    }
    function OQ(e) {
        var t = _Q()
          , n = t.queue;
        if (null === n)
            throw Error(UW(311));
        n.lastRenderedReducer = e;
        var r = CQ
          , a = r.baseQueue
          , o = n.pending;
        if (null !== o) {
            if (null !== a) {
                var i = a.next;
                a.next = o.next,
                o.next = i
            }
            r.baseQueue = a = o,
            n.pending = null
        }
        if (null !== a) {
            a = a.next,
            r = r.baseState;
            var s = i = o = null
              , u = a;
            do {
                var c = u.expirationTime;
                if (c < wQ) {
                    var l = {
                        expirationTime: u.expirationTime,
                        suspenseConfig: u.suspenseConfig,
                        action: u.action,
                        eagerReducer: u.eagerReducer,
                        eagerState: u.eagerState,
                        next: null
                    };
                    null === s ? (i = s = l,
                    o = r) : s = s.next = l,
                    c > kQ.expirationTime && (kQ.expirationTime = c,
                    H$(c))
                } else
                    null !== s && (s = s.next = {
                        expirationTime: 1073741823,
                        suspenseConfig: u.suspenseConfig,
                        action: u.action,
                        eagerReducer: u.eagerReducer,
                        eagerState: u.eagerState,
                        next: null
                    }),
                    j$(c, u.suspenseConfig),
                    r = u.eagerReducer === e ? u.eagerState : e(r, u.action);
                u = u.next
            } while (null !== u && u !== a);null === s ? o = r : s.next = i,
            yq(r, t.memoizedState) || (lY = !0),
            t.memoizedState = r,
            t.baseState = o,
            t.baseQueue = s,
            n.lastRenderedState = r
        }
        return [t.memoizedState, n.dispatch]
    }
    function DQ(e) {
        var t = _Q()
          , n = t.queue;
        if (null === n)
            throw Error(UW(311));
        n.lastRenderedReducer = e;
        var r = n.dispatch
          , a = n.pending
          , o = t.memoizedState;
        if (null !== a) {
            n.pending = null;
            var i = a = a.next;
            do {
                o = e(o, i.action),
                i = i.next
            } while (i !== a);yq(o, t.memoizedState) || (lY = !0),
            t.memoizedState = o,
            null === t.baseQueue && (t.baseState = o),
            n.lastRenderedState = o
        }
        return [o, r]
    }
    function BQ(e) {
        var t = NQ();
        return "function" == typeof e && (e = e()),
        t.memoizedState = t.baseState = e,
        e = (e = t.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: RQ,
            lastRenderedState: e
        }).dispatch = QQ.bind(null, kQ, e),
        [t.memoizedState, e]
    }
    function FQ(e, t, n, r) {
        return e = {
            tag: e,
            create: t,
            destroy: n,
            deps: r,
            next: null
        },
        null === (t = kQ.updateQueue) ? (t = {
            lastEffect: null
        },
        kQ.updateQueue = t,
        t.lastEffect = e.next = e) : null === (n = t.lastEffect) ? t.lastEffect = e.next = e : (r = n.next,
        n.next = e,
        e.next = r,
        t.lastEffect = e),
        e
    }
    function MQ() {
        return _Q().memoizedState
    }
    function PQ(e, t, n, r) {
        var a = NQ();
        kQ.effectTag |= e,
        a.memoizedState = FQ(1 | t, n, void 0, void 0 === r ? null : r)
    }
    function LQ(e, t, n, r) {
        var a = _Q();
        r = void 0 === r ? null : r;
        var o = void 0;
        if (null !== CQ) {
            var i = CQ.memoizedState;
            if (o = i.destroy,
            null !== r && TQ(r, i.deps))
                return void FQ(t, n, o, r)
        }
        kQ.effectTag |= e,
        a.memoizedState = FQ(1 | t, n, o, r)
    }
    function UQ(e, t) {
        return PQ(516, 4, e, t)
    }
    function VQ(e, t) {
        return LQ(516, 4, e, t)
    }
    function zQ(e, t) {
        return LQ(4, 2, e, t)
    }
    function WQ(e, t) {
        return "function" == typeof t ? (e = e(),
        t(e),
        function() {
            t(null)
        }
        ) : null != t ? (e = e(),
        t.current = e,
        function() {
            t.current = null
        }
        ) : void 0
    }
    function jQ(e, t, n) {
        return n = null != n ? n.concat([e]) : null,
        LQ(4, 2, WQ.bind(null, t, e), n)
    }
    function HQ() {}
    function GQ(e, t) {
        return NQ().memoizedState = [e, void 0 === t ? null : t],
        e
    }
    function KQ(e, t) {
        var n = _Q();
        t = void 0 === t ? null : t;
        var r = n.memoizedState;
        return null !== r && null !== t && TQ(t, r[1]) ? r[0] : (n.memoizedState = [e, t],
        e)
    }
    function qQ(e, t) {
        var n = _Q();
        t = void 0 === t ? null : t;
        var r = n.memoizedState;
        return null !== r && null !== t && TQ(t, r[1]) ? r[0] : (e = e(),
        n.memoizedState = [e, t],
        e)
    }
    function XQ(e, t, n) {
        var r = wX();
        CX(98 > r ? 98 : r, (function() {
            e(!0)
        }
        )),
        CX(97 < r ? 97 : r, (function() {
            var r = xQ.suspense;
            xQ.suspense = void 0 === t ? null : t;
            try {
                e(!1),
                n()
            } finally {
                xQ.suspense = r
            }
        }
        ))
    }
    function QQ(e, t, n) {
        var r = _$()
          , a = qX.suspense;
        a = {
            expirationTime: r = R$(r, e, a),
            suspenseConfig: a,
            action: n,
            eagerReducer: null,
            eagerState: null,
            next: null
        };
        var o = t.pending;
        if (null === o ? a.next = a : (a.next = o.next,
        o.next = a),
        t.pending = a,
        o = e.alternate,
        e === kQ || null !== o && o === kQ)
            SQ = !0,
            a.expirationTime = wQ,
            kQ.expirationTime = wQ;
        else {
            if (0 === e.expirationTime && (null === o || 0 === o.expirationTime) && null !== (o = t.lastRenderedReducer))
                try {
                    var i = t.lastRenderedState
                      , s = o(i, n);
                    if (a.eagerReducer = o,
                    a.eagerState = s,
                    yq(s, i))
                        return
                } catch (e) {}
            O$(e, r)
        }
    }
    var YQ = {
        readContext: LX,
        useCallback: IQ,
        useContext: IQ,
        useEffect: IQ,
        useImperativeHandle: IQ,
        useLayoutEffect: IQ,
        useMemo: IQ,
        useReducer: IQ,
        useRef: IQ,
        useState: IQ,
        useDebugValue: IQ,
        useResponder: IQ,
        useDeferredValue: IQ,
        useTransition: IQ
    }
      , $Q = {
        readContext: LX,
        useCallback: GQ,
        useContext: LX,
        useEffect: UQ,
        useImperativeHandle: function(e, t, n) {
            return n = null != n ? n.concat([e]) : null,
            PQ(4, 2, WQ.bind(null, t, e), n)
        },
        useLayoutEffect: function(e, t) {
            return PQ(4, 2, e, t)
        },
        useMemo: function(e, t) {
            var n = NQ();
            return t = void 0 === t ? null : t,
            e = e(),
            n.memoizedState = [e, t],
            e
        },
        useReducer: function(e, t, n) {
            var r = NQ();
            return t = void 0 !== n ? n(t) : t,
            r.memoizedState = r.baseState = t,
            e = (e = r.queue = {
                pending: null,
                dispatch: null,
                lastRenderedReducer: e,
                lastRenderedState: t
            }).dispatch = QQ.bind(null, kQ, e),
            [r.memoizedState, e]
        },
        useRef: function(e) {
            return e = {
                current: e
            },
            NQ().memoizedState = e
        },
        useState: BQ,
        useDebugValue: HQ,
        useResponder: yQ,
        useDeferredValue: function(e, t) {
            var n = BQ(e)
              , r = n[0]
              , a = n[1];
            return UQ((function() {
                var n = xQ.suspense;
                xQ.suspense = void 0 === t ? null : t;
                try {
                    a(e)
                } finally {
                    xQ.suspense = n
                }
            }
            ), [e, t]),
            r
        },
        useTransition: function(e) {
            var t = BQ(!1)
              , n = t[0];
            return t = t[1],
            [GQ(XQ.bind(null, t, e), [t, e]), n]
        }
    }
      , ZQ = {
        readContext: LX,
        useCallback: KQ,
        useContext: LX,
        useEffect: VQ,
        useImperativeHandle: jQ,
        useLayoutEffect: zQ,
        useMemo: qQ,
        useReducer: OQ,
        useRef: MQ,
        useState: function() {
            return OQ(RQ)
        },
        useDebugValue: HQ,
        useResponder: yQ,
        useDeferredValue: function(e, t) {
            var n = OQ(RQ)
              , r = n[0]
              , a = n[1];
            return VQ((function() {
                var n = xQ.suspense;
                xQ.suspense = void 0 === t ? null : t;
                try {
                    a(e)
                } finally {
                    xQ.suspense = n
                }
            }
            ), [e, t]),
            r
        },
        useTransition: function(e) {
            var t = OQ(RQ)
              , n = t[0];
            return t = t[1],
            [KQ(XQ.bind(null, t, e), [t, e]), n]
        }
    }
      , JQ = {
        readContext: LX,
        useCallback: KQ,
        useContext: LX,
        useEffect: VQ,
        useImperativeHandle: jQ,
        useLayoutEffect: zQ,
        useMemo: qQ,
        useReducer: DQ,
        useRef: MQ,
        useState: function() {
            return DQ(RQ)
        },
        useDebugValue: HQ,
        useResponder: yQ,
        useDeferredValue: function(e, t) {
            var n = DQ(RQ)
              , r = n[0]
              , a = n[1];
            return VQ((function() {
                var n = xQ.suspense;
                xQ.suspense = void 0 === t ? null : t;
                try {
                    a(e)
                } finally {
                    xQ.suspense = n
                }
            }
            ), [e, t]),
            r
        },
        useTransition: function(e) {
            var t = DQ(RQ)
              , n = t[0];
            return t = t[1],
            [KQ(XQ.bind(null, t, e), [t, e]), n]
        }
    }
      , eY = null
      , tY = null
      , nY = !1;
    function rY(e, t) {
        var n = uZ(5, null, null, 0);
        n.elementType = "DELETED",
        n.type = "DELETED",
        n.stateNode = t,
        n.return = e,
        n.effectTag = 8,
        null !== e.lastEffect ? (e.lastEffect.nextEffect = n,
        e.lastEffect = n) : e.firstEffect = e.lastEffect = n
    }
    function aY(e, t) {
        switch (e.tag) {
        case 5:
            var n = e.type;
            return null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) && (e.stateNode = t,
            !0);
        case 6:
            return null !== (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) && (e.stateNode = t,
            !0);
        case 13:
        default:
            return !1
        }
    }
    function oY(e) {
        if (nY) {
            var t = tY;
            if (t) {
                var n = t;
                if (!aY(e, t)) {
                    if (!(t = nK(n.nextSibling)) || !aY(e, t))
                        return e.effectTag = -1025 & e.effectTag | 2,
                        nY = !1,
                        void (eY = e);
                    rY(eY, n)
                }
                eY = e,
                tY = nK(t.firstChild)
            } else
                e.effectTag = -1025 & e.effectTag | 2,
                nY = !1,
                eY = e
        }
    }
    function iY(e) {
        for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag; )
            e = e.return;
        eY = e
    }
    function sY(e) {
        if (e !== eY)
            return !1;
        if (!nY)
            return iY(e),
            nY = !0,
            !1;
        var t = e.type;
        if (5 !== e.tag || "head" !== t && "body" !== t && !JG(t, e.memoizedProps))
            for (t = tY; t; )
                rY(e, t),
                t = nK(t.nextSibling);
        if (iY(e),
        13 === e.tag) {
            if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
                throw Error(UW(317));
            e: {
                for (e = e.nextSibling,
                t = 0; e; ) {
                    if (8 === e.nodeType) {
                        var n = e.data;
                        if ("/$" === n) {
                            if (0 === t) {
                                tY = nK(e.nextSibling);
                                break e
                            }
                            t--
                        } else
                            "$" !== n && n !== QG && n !== XG || t++
                    }
                    e = e.nextSibling
                }
                tY = null
            }
        } else
            tY = eY ? nK(e.stateNode.nextSibling) : null;
        return !0
    }
    function uY() {
        tY = eY = null,
        nY = !1
    }
    var cY = Nj.ReactCurrentOwner
      , lY = !1;
    function fY(e, t, n, r) {
        t.child = null === e ? iQ(t, null, n, r) : oQ(t, e.child, n, r)
    }
    function pY(e, t, n, r, a) {
        n = n.render;
        var o = t.ref;
        return PX(t, a),
        r = AQ(e, t, n, r, o, a),
        null === e || lY ? (t.effectTag |= 1,
        fY(e, t, r, a),
        t.child) : (t.updateQueue = e.updateQueue,
        t.effectTag &= -517,
        e.expirationTime <= a && (e.expirationTime = 0),
        AY(e, t, a))
    }
    function dY(e, t, n, r, a, o) {
        if (null === e) {
            var i = n.type;
            return "function" != typeof i || cZ(i) || void 0 !== i.defaultProps || null !== n.compare || void 0 !== n.defaultProps ? ((e = fZ(n.type, null, r, null, t.mode, o)).ref = t.ref,
            e.return = t,
            t.child = e) : (t.tag = 15,
            t.type = i,
            hY(e, t, i, r, a, o))
        }
        return i = e.child,
        a < o && (a = i.memoizedProps,
        (n = null !== (n = n.compare) ? n : xq)(a, r) && e.ref === t.ref) ? AY(e, t, o) : (t.effectTag |= 1,
        (e = lZ(i, r)).ref = t.ref,
        e.return = t,
        t.child = e)
    }
    function hY(e, t, n, r, a, o) {
        return null !== e && xq(e.memoizedProps, r) && e.ref === t.ref && (lY = !1,
        a < o) ? (t.expirationTime = e.expirationTime,
        AY(e, t, o)) : vY(e, t, n, r, o)
    }
    function mY(e, t) {
        var n = t.ref;
        (null === e && null !== n || null !== e && e.ref !== n) && (t.effectTag |= 128)
    }
    function vY(e, t, n, r, a) {
        var o = Yq(n) ? Xq : Kq.current;
        return o = Qq(t, o),
        PX(t, a),
        n = AQ(e, t, n, r, o, a),
        null === e || lY ? (t.effectTag |= 1,
        fY(e, t, n, a),
        t.child) : (t.updateQueue = e.updateQueue,
        t.effectTag &= -517,
        e.expirationTime <= a && (e.expirationTime = 0),
        AY(e, t, a))
    }
    function gY(e, t, n, r, a) {
        if (Yq(n)) {
            var o = !0;
            eX(t)
        } else
            o = !1;
        if (PX(t, a),
        null === t.stateNode)
            null !== e && (e.alternate = null,
            t.alternate = null,
            t.effectTag |= 2),
            ZX(t, n, r),
            eQ(t, n, r, a),
            r = !0;
        else if (null === e) {
            var i = t.stateNode
              , s = t.memoizedProps;
            i.props = s;
            var u = i.context
              , c = n.contextType;
            "object" == typeof c && null !== c ? c = LX(c) : c = Qq(t, c = Yq(n) ? Xq : Kq.current);
            var l = n.getDerivedStateFromProps
              , f = "function" == typeof l || "function" == typeof i.getSnapshotBeforeUpdate;
            f || "function" != typeof i.UNSAFE_componentWillReceiveProps && "function" != typeof i.componentWillReceiveProps || (s !== r || u !== c) && JX(t, i, r, c),
            UX = !1;
            var p = t.memoizedState;
            i.state = p,
            GX(t, r, i, a),
            u = t.memoizedState,
            s !== r || p !== u || qq.current || UX ? ("function" == typeof l && (QX(t, n, l, r),
            u = t.memoizedState),
            (s = UX || $X(t, n, s, r, p, u, c)) ? (f || "function" != typeof i.UNSAFE_componentWillMount && "function" != typeof i.componentWillMount || ("function" == typeof i.componentWillMount && i.componentWillMount(),
            "function" == typeof i.UNSAFE_componentWillMount && i.UNSAFE_componentWillMount()),
            "function" == typeof i.componentDidMount && (t.effectTag |= 4)) : ("function" == typeof i.componentDidMount && (t.effectTag |= 4),
            t.memoizedProps = r,
            t.memoizedState = u),
            i.props = r,
            i.state = u,
            i.context = c,
            r = s) : ("function" == typeof i.componentDidMount && (t.effectTag |= 4),
            r = !1)
        } else
            i = t.stateNode,
            zX(e, t),
            s = t.memoizedProps,
            i.props = t.type === t.elementType ? s : NX(t.type, s),
            u = i.context,
            "object" == typeof (c = n.contextType) && null !== c ? c = LX(c) : c = Qq(t, c = Yq(n) ? Xq : Kq.current),
            (f = "function" == typeof (l = n.getDerivedStateFromProps) || "function" == typeof i.getSnapshotBeforeUpdate) || "function" != typeof i.UNSAFE_componentWillReceiveProps && "function" != typeof i.componentWillReceiveProps || (s !== r || u !== c) && JX(t, i, r, c),
            UX = !1,
            u = t.memoizedState,
            i.state = u,
            GX(t, r, i, a),
            p = t.memoizedState,
            s !== r || u !== p || qq.current || UX ? ("function" == typeof l && (QX(t, n, l, r),
            p = t.memoizedState),
            (l = UX || $X(t, n, s, r, u, p, c)) ? (f || "function" != typeof i.UNSAFE_componentWillUpdate && "function" != typeof i.componentWillUpdate || ("function" == typeof i.componentWillUpdate && i.componentWillUpdate(r, p, c),
            "function" == typeof i.UNSAFE_componentWillUpdate && i.UNSAFE_componentWillUpdate(r, p, c)),
            "function" == typeof i.componentDidUpdate && (t.effectTag |= 4),
            "function" == typeof i.getSnapshotBeforeUpdate && (t.effectTag |= 256)) : ("function" != typeof i.componentDidUpdate || s === e.memoizedProps && u === e.memoizedState || (t.effectTag |= 4),
            "function" != typeof i.getSnapshotBeforeUpdate || s === e.memoizedProps && u === e.memoizedState || (t.effectTag |= 256),
            t.memoizedProps = r,
            t.memoizedState = p),
            i.props = r,
            i.state = p,
            i.context = c,
            r = l) : ("function" != typeof i.componentDidUpdate || s === e.memoizedProps && u === e.memoizedState || (t.effectTag |= 4),
            "function" != typeof i.getSnapshotBeforeUpdate || s === e.memoizedProps && u === e.memoizedState || (t.effectTag |= 256),
            r = !1);
        return yY(e, t, n, r, o, a)
    }
    function yY(e, t, n, r, a, o) {
        mY(e, t);
        var i = 0 != (64 & t.effectTag);
        if (!r && !i)
            return a && tX(t, n, !1),
            AY(e, t, o);
        r = t.stateNode,
        cY.current = t;
        var s = i && "function" != typeof n.getDerivedStateFromError ? null : r.render();
        return t.effectTag |= 1,
        null !== e && i ? (t.child = oQ(t, e.child, null, o),
        t.child = oQ(t, null, s, o)) : fY(e, t, s, o),
        t.memoizedState = r.state,
        a && tX(t, n, !0),
        t.child
    }
    function bY(e) {
        var t = e.stateNode;
        t.pendingContext ? Zq(0, t.pendingContext, t.pendingContext !== t.context) : t.context && Zq(0, t.context, !1),
        pQ(e, t.containerInfo)
    }
    var xY, wY, kY, CY = {
        dehydrated: null,
        retryTime: 0
    };
    function EY(e, t, n) {
        var r, a = t.mode, o = t.pendingProps, i = vQ.current, s = !1;
        if ((r = 0 != (64 & t.effectTag)) || (r = 0 != (2 & i) && (null === e || null !== e.memoizedState)),
        r ? (s = !0,
        t.effectTag &= -65) : null !== e && null === e.memoizedState || void 0 === o.fallback || !0 === o.unstable_avoidThisFallback || (i |= 1),
        Hq(vQ, 1 & i),
        null === e) {
            if (void 0 !== o.fallback && oY(t),
            s) {
                if (s = o.fallback,
                (o = pZ(null, a, 0, null)).return = t,
                0 == (2 & t.mode))
                    for (e = null !== t.memoizedState ? t.child.child : t.child,
                    o.child = e; null !== e; )
                        e.return = o,
                        e = e.sibling;
                return (n = pZ(s, a, n, null)).return = t,
                o.sibling = n,
                t.memoizedState = CY,
                t.child = o,
                n
            }
            return a = o.children,
            t.memoizedState = null,
            t.child = iQ(t, null, a, n)
        }
        if (null !== e.memoizedState) {
            if (a = (e = e.child).sibling,
            s) {
                if (o = o.fallback,
                (n = lZ(e, e.pendingProps)).return = t,
                0 == (2 & t.mode) && (s = null !== t.memoizedState ? t.child.child : t.child) !== e.child)
                    for (n.child = s; null !== s; )
                        s.return = n,
                        s = s.sibling;
                return (a = lZ(a, o)).return = t,
                n.sibling = a,
                n.childExpirationTime = 0,
                t.memoizedState = CY,
                t.child = n,
                a
            }
            return n = oQ(t, e.child, o.children, n),
            t.memoizedState = null,
            t.child = n
        }
        if (e = e.child,
        s) {
            if (s = o.fallback,
            (o = pZ(null, a, 0, null)).return = t,
            o.child = e,
            null !== e && (e.return = o),
            0 == (2 & t.mode))
                for (e = null !== t.memoizedState ? t.child.child : t.child,
                o.child = e; null !== e; )
                    e.return = o,
                    e = e.sibling;
            return (n = pZ(s, a, n, null)).return = t,
            o.sibling = n,
            n.effectTag |= 2,
            o.childExpirationTime = 0,
            t.memoizedState = CY,
            t.child = o,
            n
        }
        return t.memoizedState = null,
        t.child = oQ(t, e, o.children, n)
    }
    function SY(e, t) {
        e.expirationTime < t && (e.expirationTime = t);
        var n = e.alternate;
        null !== n && n.expirationTime < t && (n.expirationTime = t),
        MX(e.return, t)
    }
    function IY(e, t, n, r, a, o) {
        var i = e.memoizedState;
        null === i ? e.memoizedState = {
            isBackwards: t,
            rendering: null,
            renderingStartTime: 0,
            last: r,
            tail: n,
            tailExpiration: 0,
            tailMode: a,
            lastEffect: o
        } : (i.isBackwards = t,
        i.rendering = null,
        i.renderingStartTime = 0,
        i.last = r,
        i.tail = n,
        i.tailExpiration = 0,
        i.tailMode = a,
        i.lastEffect = o)
    }
    function TY(e, t, n) {
        var r = t.pendingProps
          , a = r.revealOrder
          , o = r.tail;
        if (fY(e, t, r.children, n),
        0 != (2 & (r = vQ.current)))
            r = 1 & r | 2,
            t.effectTag |= 64;
        else {
            if (null !== e && 0 != (64 & e.effectTag))
                e: for (e = t.child; null !== e; ) {
                    if (13 === e.tag)
                        null !== e.memoizedState && SY(e, n);
                    else if (19 === e.tag)
                        SY(e, n);
                    else if (null !== e.child) {
                        e.child.return = e,
                        e = e.child;
                        continue
                    }
                    if (e === t)
                        break e;
                    for (; null === e.sibling; ) {
                        if (null === e.return || e.return === t)
                            break e;
                        e = e.return
                    }
                    e.sibling.return = e.return,
                    e = e.sibling
                }
            r &= 1
        }
        if (Hq(vQ, r),
        0 == (2 & t.mode))
            t.memoizedState = null;
        else
            switch (a) {
            case "forwards":
                for (n = t.child,
                a = null; null !== n; )
                    null !== (e = n.alternate) && null === gQ(e) && (a = n),
                    n = n.sibling;
                null === (n = a) ? (a = t.child,
                t.child = null) : (a = n.sibling,
                n.sibling = null),
                IY(t, !1, a, n, o, t.lastEffect);
                break;
            case "backwards":
                for (n = null,
                a = t.child,
                t.child = null; null !== a; ) {
                    if (null !== (e = a.alternate) && null === gQ(e)) {
                        t.child = a;
                        break
                    }
                    e = a.sibling,
                    a.sibling = n,
                    n = a,
                    a = e
                }
                IY(t, !0, n, null, o, t.lastEffect);
                break;
            case "together":
                IY(t, !1, null, null, void 0, t.lastEffect);
                break;
            default:
                t.memoizedState = null
            }
        return t.child
    }
    function AY(e, t, n) {
        null !== e && (t.dependencies = e.dependencies);
        var r = t.expirationTime;
        if (0 !== r && H$(r),
        t.childExpirationTime < n)
            return null;
        if (null !== e && t.child !== e.child)
            throw Error(UW(153));
        if (null !== t.child) {
            for (n = lZ(e = t.child, e.pendingProps),
            t.child = n,
            n.return = t; null !== e.sibling; )
                e = e.sibling,
                (n = n.sibling = lZ(e, e.pendingProps)).return = t;
            n.sibling = null
        }
        return t.child
    }
    function NY(e, t) {
        switch (e.tailMode) {
        case "hidden":
            t = e.tail;
            for (var n = null; null !== t; )
                null !== t.alternate && (n = t),
                t = t.sibling;
            null === n ? e.tail = null : n.sibling = null;
            break;
        case "collapsed":
            n = e.tail;
            for (var r = null; null !== n; )
                null !== n.alternate && (r = n),
                n = n.sibling;
            null === r ? t || null === e.tail ? e.tail = null : e.tail.sibling = null : r.sibling = null
        }
    }
    function _Y(e, t, n) {
        var r = t.pendingProps;
        switch (t.tag) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
            return null;
        case 1:
            return Yq(t.type) && $q(),
            null;
        case 3:
            return dQ(),
            jq(qq),
            jq(Kq),
            (n = t.stateNode).pendingContext && (n.context = n.pendingContext,
            n.pendingContext = null),
            null !== e && null !== e.child || !sY(t) || (t.effectTag |= 4),
            null;
        case 5:
            mQ(t),
            n = fQ(lQ.current);
            var a = t.type;
            if (null !== e && null != t.stateNode)
                wY(e, t, a, r, n),
                e.ref !== t.ref && (t.effectTag |= 128);
            else {
                if (!r) {
                    if (null === t.stateNode)
                        throw Error(UW(166));
                    return null
                }
                if (e = fQ(uQ.current),
                sY(t)) {
                    r = t.stateNode,
                    a = t.type;
                    var o = t.memoizedProps;
                    switch (r[oK] = t,
                    r[iK] = o,
                    a) {
                    case "iframe":
                    case "object":
                    case "embed":
                        IG("load", r);
                        break;
                    case "video":
                    case "audio":
                        for (e = 0; e < NH.length; e++)
                            IG(NH[e], r);
                        break;
                    case "source":
                        IG("error", r);
                        break;
                    case "img":
                    case "image":
                    case "link":
                        IG("error", r),
                        IG("load", r);
                        break;
                    case "form":
                        IG("reset", r),
                        IG("submit", r);
                        break;
                    case "details":
                        IG("toggle", r);
                        break;
                    case "input":
                        nH(r, o),
                        IG("invalid", r),
                        VG(n, "onChange");
                        break;
                    case "select":
                        r._wrapperState = {
                            wasMultiple: !!o.multiple
                        },
                        IG("invalid", r),
                        VG(n, "onChange");
                        break;
                    case "textarea":
                        lH(r, o),
                        IG("invalid", r),
                        VG(n, "onChange")
                    }
                    for (var i in PG(a, o),
                    e = null,
                    o)
                        if (o.hasOwnProperty(i)) {
                            var s = o[i];
                            "children" === i ? "string" == typeof s ? r.textContent !== s && (e = ["children", s]) : "number" == typeof s && r.textContent !== "" + s && (e = ["children", "" + s]) : rj.hasOwnProperty(i) && null != s && VG(n, i)
                        }
                    switch (a) {
                    case "input":
                        Jj(r),
                        oH(r, o, !0);
                        break;
                    case "textarea":
                        Jj(r),
                        pH(r);
                        break;
                    case "select":
                    case "option":
                        break;
                    default:
                        "function" == typeof o.onClick && (r.onclick = zG)
                    }
                    n = e,
                    t.updateQueue = n,
                    null !== n && (t.effectTag |= 4)
                } else {
                    switch (i = 9 === n.nodeType ? n : n.ownerDocument,
                    e === UG && (e = mH(a)),
                    e === UG ? "script" === a ? ((e = i.createElement("div")).innerHTML = "<script><\/script>",
                    e = e.removeChild(e.firstChild)) : "string" == typeof r.is ? e = i.createElement(a, {
                        is: r.is
                    }) : (e = i.createElement(a),
                    "select" === a && (i = e,
                    r.multiple ? i.multiple = !0 : r.size && (i.size = r.size))) : e = i.createElementNS(e, a),
                    e[oK] = t,
                    e[iK] = r,
                    xY(e, t),
                    t.stateNode = e,
                    i = LG(a, r),
                    a) {
                    case "iframe":
                    case "object":
                    case "embed":
                        IG("load", e),
                        s = r;
                        break;
                    case "video":
                    case "audio":
                        for (s = 0; s < NH.length; s++)
                            IG(NH[s], e);
                        s = r;
                        break;
                    case "source":
                        IG("error", e),
                        s = r;
                        break;
                    case "img":
                    case "image":
                    case "link":
                        IG("error", e),
                        IG("load", e),
                        s = r;
                        break;
                    case "form":
                        IG("reset", e),
                        IG("submit", e),
                        s = r;
                        break;
                    case "details":
                        IG("toggle", e),
                        s = r;
                        break;
                    case "input":
                        nH(e, r),
                        s = tH(e, r),
                        IG("invalid", e),
                        VG(n, "onChange");
                        break;
                    case "option":
                        s = sH(e, r);
                        break;
                    case "select":
                        e._wrapperState = {
                            wasMultiple: !!r.multiple
                        },
                        s = Pv({}, r, {
                            value: void 0
                        }),
                        IG("invalid", e),
                        VG(n, "onChange");
                        break;
                    case "textarea":
                        lH(e, r),
                        s = cH(e, r),
                        IG("invalid", e),
                        VG(n, "onChange");
                        break;
                    default:
                        s = r
                    }
                    PG(a, s);
                    var u = s;
                    for (o in u)
                        if (u.hasOwnProperty(o)) {
                            var c = u[o];
                            "style" === o ? FG(e, c) : "dangerouslySetInnerHTML" === o ? null != (c = c ? c.__html : void 0) && yH(e, c) : "children" === o ? "string" == typeof c ? ("textarea" !== a || "" !== c) && bH(e, c) : "number" == typeof c && bH(e, "" + c) : "suppressContentEditableWarning" !== o && "suppressHydrationWarning" !== o && "autoFocus" !== o && (rj.hasOwnProperty(o) ? null != c && VG(n, o) : null != c && _j(e, o, c, i))
                        }
                    switch (a) {
                    case "input":
                        Jj(e),
                        oH(e, r, !1);
                        break;
                    case "textarea":
                        Jj(e),
                        pH(e);
                        break;
                    case "option":
                        null != r.value && e.setAttribute("value", "" + $j(r.value));
                        break;
                    case "select":
                        e.multiple = !!r.multiple,
                        null != (n = r.value) ? uH(e, !!r.multiple, n, !1) : null != r.defaultValue && uH(e, !!r.multiple, r.defaultValue, !0);
                        break;
                    default:
                        "function" == typeof s.onClick && (e.onclick = zG)
                    }
                    ZG(a, r) && (t.effectTag |= 4)
                }
                null !== t.ref && (t.effectTag |= 128)
            }
            return null;
        case 6:
            if (e && null != t.stateNode)
                kY(0, t, e.memoizedProps, r);
            else {
                if ("string" != typeof r && null === t.stateNode)
                    throw Error(UW(166));
                n = fQ(lQ.current),
                fQ(uQ.current),
                sY(t) ? (n = t.stateNode,
                r = t.memoizedProps,
                n[oK] = t,
                n.nodeValue !== r && (t.effectTag |= 4)) : ((n = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(r))[oK] = t,
                t.stateNode = n)
            }
            return null;
        case 13:
            return jq(vQ),
            r = t.memoizedState,
            0 != (64 & t.effectTag) ? (t.expirationTime = n,
            t) : (n = null !== r,
            r = !1,
            null === e ? void 0 !== t.memoizedProps.fallback && sY(t) : (r = null !== (a = e.memoizedState),
            n || null === a || null !== (a = e.child.sibling) && (null !== (o = t.firstEffect) ? (t.firstEffect = a,
            a.nextEffect = o) : (t.firstEffect = t.lastEffect = a,
            a.nextEffect = null),
            a.effectTag = 8)),
            n && !r && 0 != (2 & t.mode) && (null === e && !0 !== t.memoizedProps.unstable_avoidThisFallback || 0 != (1 & vQ.current) ? f$ === a$ && (f$ = o$) : (f$ !== a$ && f$ !== o$ || (f$ = i$),
            0 !== v$ && null !== u$ && (gZ(u$, l$),
            yZ(u$, v$)))),
            (n || r) && (t.effectTag |= 4),
            null);
        case 4:
            return dQ(),
            null;
        case 10:
            return FX(t),
            null;
        case 17:
            return Yq(t.type) && $q(),
            null;
        case 19:
            if (jq(vQ),
            null === (r = t.memoizedState))
                return null;
            if (a = 0 != (64 & t.effectTag),
            null === (o = r.rendering)) {
                if (a)
                    NY(r, !1);
                else if (f$ !== a$ || null !== e && 0 != (64 & e.effectTag))
                    for (o = t.child; null !== o; ) {
                        if (null !== (e = gQ(o))) {
                            for (t.effectTag |= 64,
                            NY(r, !1),
                            null !== (a = e.updateQueue) && (t.updateQueue = a,
                            t.effectTag |= 4),
                            null === r.lastEffect && (t.firstEffect = null),
                            t.lastEffect = r.lastEffect,
                            r = t.child; null !== r; )
                                o = n,
                                (a = r).effectTag &= 2,
                                a.nextEffect = null,
                                a.firstEffect = null,
                                a.lastEffect = null,
                                null === (e = a.alternate) ? (a.childExpirationTime = 0,
                                a.expirationTime = o,
                                a.child = null,
                                a.memoizedProps = null,
                                a.memoizedState = null,
                                a.updateQueue = null,
                                a.dependencies = null) : (a.childExpirationTime = e.childExpirationTime,
                                a.expirationTime = e.expirationTime,
                                a.child = e.child,
                                a.memoizedProps = e.memoizedProps,
                                a.memoizedState = e.memoizedState,
                                a.updateQueue = e.updateQueue,
                                o = e.dependencies,
                                a.dependencies = null === o ? null : {
                                    expirationTime: o.expirationTime,
                                    firstContext: o.firstContext,
                                    responders: o.responders
                                }),
                                r = r.sibling;
                            return Hq(vQ, 1 & vQ.current | 2),
                            t.child
                        }
                        o = o.sibling
                    }
            } else {
                if (!a)
                    if (null !== (e = gQ(o))) {
                        if (t.effectTag |= 64,
                        a = !0,
                        null !== (n = e.updateQueue) && (t.updateQueue = n,
                        t.effectTag |= 4),
                        NY(r, !0),
                        null === r.tail && "hidden" === r.tailMode && !o.alternate)
                            return null !== (t = t.lastEffect = r.lastEffect) && (t.nextEffect = null),
                            null
                    } else
                        2 * xX() - r.renderingStartTime > r.tailExpiration && 1 < n && (t.effectTag |= 64,
                        a = !0,
                        NY(r, !1),
                        t.expirationTime = t.childExpirationTime = n - 1);
                r.isBackwards ? (o.sibling = t.child,
                t.child = o) : (null !== (n = r.last) ? n.sibling = o : t.child = o,
                r.last = o)
            }
            return null !== r.tail ? (0 === r.tailExpiration && (r.tailExpiration = xX() + 500),
            n = r.tail,
            r.rendering = n,
            r.tail = n.sibling,
            r.lastEffect = t.lastEffect,
            r.renderingStartTime = xX(),
            n.sibling = null,
            t = vQ.current,
            Hq(vQ, a ? 1 & t | 2 : 1 & t),
            n) : null
        }
        throw Error(UW(156, t.tag))
    }
    function RY(e) {
        switch (e.tag) {
        case 1:
            Yq(e.type) && $q();
            var t = e.effectTag;
            return 4096 & t ? (e.effectTag = -4097 & t | 64,
            e) : null;
        case 3:
            if (dQ(),
            jq(qq),
            jq(Kq),
            0 != (64 & (t = e.effectTag)))
                throw Error(UW(285));
            return e.effectTag = -4097 & t | 64,
            e;
        case 5:
            return mQ(e),
            null;
        case 13:
            return jq(vQ),
            4096 & (t = e.effectTag) ? (e.effectTag = -4097 & t | 64,
            e) : null;
        case 19:
            return jq(vQ),
            null;
        case 4:
            return dQ(),
            null;
        case 10:
            return FX(e),
            null;
        default:
            return null
        }
    }
    function OY(e, t) {
        return {
            value: e,
            source: t,
            stack: Yj(t)
        }
    }
    xY = function(e, t) {
        for (var n = t.child; null !== n; ) {
            if (5 === n.tag || 6 === n.tag)
                e.appendChild(n.stateNode);
            else if (4 !== n.tag && null !== n.child) {
                n.child.return = n,
                n = n.child;
                continue
            }
            if (n === t)
                break;
            for (; null === n.sibling; ) {
                if (null === n.return || n.return === t)
                    return;
                n = n.return
            }
            n.sibling.return = n.return,
            n = n.sibling
        }
    }
    ,
    wY = function(e, t, n, r, a) {
        var o = e.memoizedProps;
        if (o !== r) {
            var i, s, u = t.stateNode;
            switch (fQ(uQ.current),
            e = null,
            n) {
            case "input":
                o = tH(u, o),
                r = tH(u, r),
                e = [];
                break;
            case "option":
                o = sH(u, o),
                r = sH(u, r),
                e = [];
                break;
            case "select":
                o = Pv({}, o, {
                    value: void 0
                }),
                r = Pv({}, r, {
                    value: void 0
                }),
                e = [];
                break;
            case "textarea":
                o = cH(u, o),
                r = cH(u, r),
                e = [];
                break;
            default:
                "function" != typeof o.onClick && "function" == typeof r.onClick && (u.onclick = zG)
            }
            for (i in PG(n, r),
            n = null,
            o)
                if (!r.hasOwnProperty(i) && o.hasOwnProperty(i) && null != o[i])
                    if ("style" === i)
                        for (s in u = o[i])
                            u.hasOwnProperty(s) && (n || (n = {}),
                            n[s] = "");
                    else
                        "dangerouslySetInnerHTML" !== i && "children" !== i && "suppressContentEditableWarning" !== i && "suppressHydrationWarning" !== i && "autoFocus" !== i && (rj.hasOwnProperty(i) ? e || (e = []) : (e = e || []).push(i, null));
            for (i in r) {
                var c = r[i];
                if (u = null != o ? o[i] : void 0,
                r.hasOwnProperty(i) && c !== u && (null != c || null != u))
                    if ("style" === i)
                        if (u) {
                            for (s in u)
                                !u.hasOwnProperty(s) || c && c.hasOwnProperty(s) || (n || (n = {}),
                                n[s] = "");
                            for (s in c)
                                c.hasOwnProperty(s) && u[s] !== c[s] && (n || (n = {}),
                                n[s] = c[s])
                        } else
                            n || (e || (e = []),
                            e.push(i, n)),
                            n = c;
                    else
                        "dangerouslySetInnerHTML" === i ? (c = c ? c.__html : void 0,
                        u = u ? u.__html : void 0,
                        null != c && u !== c && (e = e || []).push(i, c)) : "children" === i ? u === c || "string" != typeof c && "number" != typeof c || (e = e || []).push(i, "" + c) : "suppressContentEditableWarning" !== i && "suppressHydrationWarning" !== i && (rj.hasOwnProperty(i) ? (null != c && VG(a, i),
                        e || u === c || (e = [])) : (e = e || []).push(i, c))
            }
            n && (e = e || []).push("style", n),
            a = e,
            (t.updateQueue = a) && (t.effectTag |= 4)
        }
    }
    ,
    kY = function(e, t, n, r) {
        n !== r && (t.effectTag |= 4)
    }
    ;
    var DY = "function" == typeof WeakSet ? WeakSet : Set;
    function BY(e, t) {
        var n = t.source
          , r = t.stack;
        null === r && null !== n && (r = Yj(n)),
        null !== n && Qj(n.type),
        t = t.value,
        null !== e && 1 === e.tag && Qj(e.type);
        try {
            console.error(t)
        } catch (e) {
            setTimeout((function() {
                throw e
            }
            ))
        }
    }
    function FY(e) {
        var t = e.ref;
        if (null !== t)
            if ("function" == typeof t)
                try {
                    t(null)
                } catch (t) {
                    nZ(e, t)
                }
            else
                t.current = null
    }
    function MY(e, t) {
        switch (t.tag) {
        case 0:
        case 11:
        case 15:
        case 22:
            return;
        case 1:
            if (256 & t.effectTag && null !== e) {
                var n = e.memoizedProps
                  , r = e.memoizedState;
                t = (e = t.stateNode).getSnapshotBeforeUpdate(t.elementType === t.type ? n : NX(t.type, n), r),
                e.__reactInternalSnapshotBeforeUpdate = t
            }
            return;
        case 3:
        case 5:
        case 6:
        case 4:
        case 17:
            return
        }
        throw Error(UW(163))
    }
    function PY(e, t) {
        if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
            var n = t = t.next;
            do {
                if ((n.tag & e) === e) {
                    var r = n.destroy;
                    n.destroy = void 0,
                    void 0 !== r && r()
                }
                n = n.next
            } while (n !== t)
        }
    }
    function LY(e, t) {
        if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
            var n = t = t.next;
            do {
                if ((n.tag & e) === e) {
                    var r = n.create;
                    n.destroy = r()
                }
                n = n.next
            } while (n !== t)
        }
    }
    function UY(e, t, n) {
        switch (n.tag) {
        case 0:
        case 11:
        case 15:
        case 22:
            return void LY(3, n);
        case 1:
            if (e = n.stateNode,
            4 & n.effectTag)
                if (null === t)
                    e.componentDidMount();
                else {
                    var r = n.elementType === n.type ? t.memoizedProps : NX(n.type, t.memoizedProps);
                    e.componentDidUpdate(r, t.memoizedState, e.__reactInternalSnapshotBeforeUpdate)
                }
            return void (null !== (t = n.updateQueue) && KX(n, t, e));
        case 3:
            if (null !== (t = n.updateQueue)) {
                if (e = null,
                null !== n.child)
                    switch (n.child.tag) {
                    case 5:
                        e = n.child.stateNode;
                        break;
                    case 1:
                        e = n.child.stateNode
                    }
                KX(n, t, e)
            }
            return;
        case 5:
            return e = n.stateNode,
            void (null === t && 4 & n.effectTag && ZG(n.type, n.memoizedProps) && e.focus());
        case 6:
        case 4:
        case 12:
            return;
        case 13:
            return void (null === n.memoizedState && (n = n.alternate,
            null !== n && (n = n.memoizedState,
            null !== n && (n = n.dehydrated,
            null !== n && mG(n)))));
        case 19:
        case 17:
        case 20:
        case 21:
            return
        }
        throw Error(UW(163))
    }
    function VY(e, t, n) {
        switch ("function" == typeof iZ && iZ(t),
        t.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
        case 22:
            if (null !== (e = t.updateQueue) && null !== (e = e.lastEffect)) {
                var r = e.next;
                CX(97 < n ? 97 : n, (function() {
                    var e = r;
                    do {
                        var n = e.destroy;
                        if (void 0 !== n) {
                            var a = t;
                            try {
                                n()
                            } catch (e) {
                                nZ(a, e)
                            }
                        }
                        e = e.next
                    } while (e !== r)
                }
                ))
            }
            break;
        case 1:
            FY(t),
            "function" == typeof (n = t.stateNode).componentWillUnmount && function(e, t) {
                try {
                    t.props = e.memoizedProps,
                    t.state = e.memoizedState,
                    t.componentWillUnmount()
                } catch (t) {
                    nZ(e, t)
                }
            }(t, n);
            break;
        case 5:
            FY(t);
            break;
        case 4:
            KY(e, t, n)
        }
    }
    function zY(e) {
        var t = e.alternate;
        e.return = null,
        e.child = null,
        e.memoizedState = null,
        e.updateQueue = null,
        e.dependencies = null,
        e.alternate = null,
        e.firstEffect = null,
        e.lastEffect = null,
        e.pendingProps = null,
        e.memoizedProps = null,
        e.stateNode = null,
        null !== t && zY(t)
    }
    function WY(e) {
        return 5 === e.tag || 3 === e.tag || 4 === e.tag
    }
    function jY(e) {
        e: {
            for (var t = e.return; null !== t; ) {
                if (WY(t)) {
                    var n = t;
                    break e
                }
                t = t.return
            }
            throw Error(UW(160))
        }
        switch (t = n.stateNode,
        n.tag) {
        case 5:
            var r = !1;
            break;
        case 3:
        case 4:
            t = t.containerInfo,
            r = !0;
            break;
        default:
            throw Error(UW(161))
        }
        16 & n.effectTag && (bH(t, ""),
        n.effectTag &= -17);
        e: t: for (n = e; ; ) {
            for (; null === n.sibling; ) {
                if (null === n.return || WY(n.return)) {
                    n = null;
                    break e
                }
                n = n.return
            }
            for (n.sibling.return = n.return,
            n = n.sibling; 5 !== n.tag && 6 !== n.tag && 18 !== n.tag; ) {
                if (2 & n.effectTag)
                    continue t;
                if (null === n.child || 4 === n.tag)
                    continue t;
                n.child.return = n,
                n = n.child
            }
            if (!(2 & n.effectTag)) {
                n = n.stateNode;
                break e
            }
        }
        r ? HY(e, n, t) : GY(e, n, t)
    }
    function HY(e, t, n) {
        var r = e.tag
          , a = 5 === r || 6 === r;
        if (a)
            e = a ? e.stateNode : e.stateNode.instance,
            t ? 8 === n.nodeType ? n.parentNode.insertBefore(e, t) : n.insertBefore(e, t) : (8 === n.nodeType ? (t = n.parentNode).insertBefore(e, n) : (t = n).appendChild(e),
            null != (n = n._reactRootContainer) || null !== t.onclick || (t.onclick = zG));
        else if (4 !== r && null !== (e = e.child))
            for (HY(e, t, n),
            e = e.sibling; null !== e; )
                HY(e, t, n),
                e = e.sibling
    }
    function GY(e, t, n) {
        var r = e.tag
          , a = 5 === r || 6 === r;
        if (a)
            e = a ? e.stateNode : e.stateNode.instance,
            t ? n.insertBefore(e, t) : n.appendChild(e);
        else if (4 !== r && null !== (e = e.child))
            for (GY(e, t, n),
            e = e.sibling; null !== e; )
                GY(e, t, n),
                e = e.sibling
    }
    function KY(e, t, n) {
        for (var r, a, o = t, i = !1; ; ) {
            if (!i) {
                i = o.return;
                e: for (; ; ) {
                    if (null === i)
                        throw Error(UW(160));
                    switch (r = i.stateNode,
                    i.tag) {
                    case 5:
                        a = !1;
                        break e;
                    case 3:
                    case 4:
                        r = r.containerInfo,
                        a = !0;
                        break e
                    }
                    i = i.return
                }
                i = !0
            }
            if (5 === o.tag || 6 === o.tag) {
                e: for (var s = e, u = o, c = n, l = u; ; )
                    if (VY(s, l, c),
                    null !== l.child && 4 !== l.tag)
                        l.child.return = l,
                        l = l.child;
                    else {
                        if (l === u)
                            break e;
                        for (; null === l.sibling; ) {
                            if (null === l.return || l.return === u)
                                break e;
                            l = l.return
                        }
                        l.sibling.return = l.return,
                        l = l.sibling
                    }
                a ? (s = r,
                u = o.stateNode,
                8 === s.nodeType ? s.parentNode.removeChild(u) : s.removeChild(u)) : r.removeChild(o.stateNode)
            } else if (4 === o.tag) {
                if (null !== o.child) {
                    r = o.stateNode.containerInfo,
                    a = !0,
                    o.child.return = o,
                    o = o.child;
                    continue
                }
            } else if (VY(e, o, n),
            null !== o.child) {
                o.child.return = o,
                o = o.child;
                continue
            }
            if (o === t)
                break;
            for (; null === o.sibling; ) {
                if (null === o.return || o.return === t)
                    return;
                4 === (o = o.return).tag && (i = !1)
            }
            o.sibling.return = o.return,
            o = o.sibling
        }
    }
    function qY(e, t) {
        switch (t.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
        case 22:
            return void PY(3, t);
        case 1:
            return;
        case 5:
            var n = t.stateNode;
            if (null != n) {
                var r = t.memoizedProps
                  , a = null !== e ? e.memoizedProps : r;
                e = t.type;
                var o = t.updateQueue;
                if (t.updateQueue = null,
                null !== o) {
                    for (n[iK] = r,
                    "input" === e && "radio" === r.type && null != r.name && rH(n, r),
                    LG(e, a),
                    t = LG(e, r),
                    a = 0; a < o.length; a += 2) {
                        var i = o[a]
                          , s = o[a + 1];
                        "style" === i ? FG(n, s) : "dangerouslySetInnerHTML" === i ? yH(n, s) : "children" === i ? bH(n, s) : _j(n, i, s, t)
                    }
                    switch (e) {
                    case "input":
                        aH(n, r);
                        break;
                    case "textarea":
                        fH(n, r);
                        break;
                    case "select":
                        t = n._wrapperState.wasMultiple,
                        n._wrapperState.wasMultiple = !!r.multiple,
                        null != (e = r.value) ? uH(n, !!r.multiple, e, !1) : t !== !!r.multiple && (null != r.defaultValue ? uH(n, !!r.multiple, r.defaultValue, !0) : uH(n, !!r.multiple, r.multiple ? [] : "", !1))
                    }
                }
            }
            return;
        case 6:
            if (null === t.stateNode)
                throw Error(UW(162));
            return void (t.stateNode.nodeValue = t.memoizedProps);
        case 3:
            return void ((t = t.stateNode).hydrate && (t.hydrate = !1,
            mG(t.containerInfo)));
        case 12:
            return;
        case 13:
            if (n = t,
            null === t.memoizedState ? r = !1 : (r = !0,
            n = t.child,
            y$ = xX()),
            null !== n)
                e: for (e = n; ; ) {
                    if (5 === e.tag)
                        o = e.stateNode,
                        r ? "function" == typeof (o = o.style).setProperty ? o.setProperty("display", "none", "important") : o.display = "none" : (o = e.stateNode,
                        a = null != (a = e.memoizedProps.style) && a.hasOwnProperty("display") ? a.display : null,
                        o.style.display = BG("display", a));
                    else if (6 === e.tag)
                        e.stateNode.nodeValue = r ? "" : e.memoizedProps;
                    else {
                        if (13 === e.tag && null !== e.memoizedState && null === e.memoizedState.dehydrated) {
                            (o = e.child.sibling).return = e,
                            e = o;
                            continue
                        }
                        if (null !== e.child) {
                            e.child.return = e,
                            e = e.child;
                            continue
                        }
                    }
                    if (e === n)
                        break;
                    for (; null === e.sibling; ) {
                        if (null === e.return || e.return === n)
                            break e;
                        e = e.return
                    }
                    e.sibling.return = e.return,
                    e = e.sibling
                }
            return void XY(t);
        case 19:
            return void XY(t);
        case 17:
            return
        }
        throw Error(UW(163))
    }
    function XY(e) {
        var t = e.updateQueue;
        if (null !== t) {
            e.updateQueue = null;
            var n = e.stateNode;
            null === n && (n = e.stateNode = new DY),
            t.forEach((function(t) {
                var r = aZ.bind(null, e, t);
                n.has(t) || (n.add(t),
                t.then(r, r))
            }
            ))
        }
    }
    var QY = "function" == typeof WeakMap ? WeakMap : Map;
    function YY(e, t, n) {
        (n = WX(n, null)).tag = 3,
        n.payload = {
            element: null
        };
        var r = t.value;
        return n.callback = function() {
            x$ || (x$ = !0,
            w$ = r),
            BY(e, t)
        }
        ,
        n
    }
    function $Y(e, t, n) {
        (n = WX(n, null)).tag = 3;
        var r = e.type.getDerivedStateFromError;
        if ("function" == typeof r) {
            var a = t.value;
            n.payload = function() {
                return BY(e, t),
                r(a)
            }
        }
        var o = e.stateNode;
        return null !== o && "function" == typeof o.componentDidCatch && (n.callback = function() {
            "function" != typeof r && (null === k$ ? k$ = new Set([this]) : k$.add(this),
            BY(e, t));
            var n = t.stack;
            this.componentDidCatch(t.value, {
                componentStack: null !== n ? n : ""
            })
        }
        ),
        n
    }
    var ZY, JY = Math.ceil, e$ = Nj.ReactCurrentDispatcher, t$ = Nj.ReactCurrentOwner, n$ = 16, r$ = 32, a$ = 0, o$ = 3, i$ = 4, s$ = 0, u$ = null, c$ = null, l$ = 0, f$ = a$, p$ = null, d$ = 1073741823, h$ = 1073741823, m$ = null, v$ = 0, g$ = !1, y$ = 0, b$ = null, x$ = !1, w$ = null, k$ = null, C$ = !1, E$ = null, S$ = 90, I$ = null, T$ = 0, A$ = null, N$ = 0;
    function _$() {
        return 0 != (48 & s$) ? 1073741821 - (xX() / 10 | 0) : 0 !== N$ ? N$ : N$ = 1073741821 - (xX() / 10 | 0)
    }
    function R$(e, t, n) {
        if (0 == (2 & (t = t.mode)))
            return 1073741823;
        var r = wX();
        if (0 == (4 & t))
            return 99 === r ? 1073741823 : 1073741822;
        if (0 != (s$ & n$))
            return l$;
        if (null !== n)
            e = AX(e, 0 | n.timeoutMs || 5e3, 250);
        else
            switch (r) {
            case 99:
                e = 1073741823;
                break;
            case 98:
                e = AX(e, 150, 100);
                break;
            case 97:
            case 96:
                e = AX(e, 5e3, 250);
                break;
            case 95:
                e = 2;
                break;
            default:
                throw Error(UW(326))
            }
        return null !== u$ && e === l$ && --e,
        e
    }
    function O$(e, t) {
        if (50 < T$)
            throw T$ = 0,
            A$ = null,
            Error(UW(185));
        if (null !== (e = D$(e, t))) {
            var n = wX();
            1073741823 === t ? 0 != (8 & s$) && 0 == (48 & s$) ? P$(e) : (F$(e),
            0 === s$ && IX()) : F$(e),
            0 == (4 & s$) || 98 !== n && 99 !== n || (null === I$ ? I$ = new Map([[e, t]]) : (void 0 === (n = I$.get(e)) || n > t) && I$.set(e, t))
        }
    }
    function D$(e, t) {
        e.expirationTime < t && (e.expirationTime = t);
        var n = e.alternate;
        null !== n && n.expirationTime < t && (n.expirationTime = t);
        var r = e.return
          , a = null;
        if (null === r && 3 === e.tag)
            a = e.stateNode;
        else
            for (; null !== r; ) {
                if (n = r.alternate,
                r.childExpirationTime < t && (r.childExpirationTime = t),
                null !== n && n.childExpirationTime < t && (n.childExpirationTime = t),
                null === r.return && 3 === r.tag) {
                    a = r.stateNode;
                    break
                }
                r = r.return
            }
        return null !== a && (u$ === a && (H$(t),
        f$ === i$ && gZ(a, l$)),
        yZ(a, t)),
        a
    }
    function B$(e) {
        var t = e.lastExpiredTime;
        if (0 !== t)
            return t;
        if (!vZ(e, t = e.firstPendingTime))
            return t;
        var n = e.lastPingedTime;
        return 2 >= (e = n > (e = e.nextKnownPendingLevel) ? n : e) && t !== e ? 0 : e
    }
    function F$(e) {
        if (0 !== e.lastExpiredTime)
            e.callbackExpirationTime = 1073741823,
            e.callbackPriority = 99,
            e.callbackNode = SX(P$.bind(null, e));
        else {
            var t = B$(e)
              , n = e.callbackNode;
            if (0 === t)
                null !== n && (e.callbackNode = null,
                e.callbackExpirationTime = 0,
                e.callbackPriority = 90);
            else {
                var r = _$();
                if (1073741823 === t ? r = 99 : 1 === t || 2 === t ? r = 95 : r = 0 >= (r = 10 * (1073741821 - t) - 10 * (1073741821 - r)) ? 99 : 250 >= r ? 98 : 5250 >= r ? 97 : 95,
                null !== n) {
                    var a = e.callbackPriority;
                    if (e.callbackExpirationTime === t && a >= r)
                        return;
                    n !== dX && aX(n)
                }
                e.callbackExpirationTime = t,
                e.callbackPriority = r,
                t = 1073741823 === t ? SX(P$.bind(null, e)) : EX(r, M$.bind(null, e), {
                    timeout: 10 * (1073741821 - t) - xX()
                }),
                e.callbackNode = t
            }
        }
    }
    function M$(e, t) {
        if (N$ = 0,
        t)
            return bZ(e, t = _$()),
            F$(e),
            null;
        var n = B$(e);
        if (0 !== n) {
            if (t = e.callbackNode,
            0 != (48 & s$))
                throw Error(UW(327));
            if (J$(),
            e === u$ && n === l$ || V$(e, n),
            null !== c$) {
                var r = s$;
                s$ |= n$;
                for (var a = W$(); ; )
                    try {
                        K$();
                        break
                    } catch (t) {
                        z$(e, t)
                    }
                if (BX(),
                s$ = r,
                e$.current = a,
                1 === f$)
                    throw t = p$,
                    V$(e, n),
                    gZ(e, n),
                    F$(e),
                    t;
                if (null === c$)
                    switch (a = e.finishedWork = e.current.alternate,
                    e.finishedExpirationTime = n,
                    r = f$,
                    u$ = null,
                    r) {
                    case a$:
                    case 1:
                        throw Error(UW(345));
                    case 2:
                        bZ(e, 2 < n ? 2 : n);
                        break;
                    case o$:
                        if (gZ(e, n),
                        n === (r = e.lastSuspendedTime) && (e.nextKnownPendingLevel = Q$(a)),
                        1073741823 === d$ && 10 < (a = y$ + 500 - xX())) {
                            if (g$) {
                                var o = e.lastPingedTime;
                                if (0 === o || o >= n) {
                                    e.lastPingedTime = n,
                                    V$(e, n);
                                    break
                                }
                            }
                            if (0 !== (o = B$(e)) && o !== n)
                                break;
                            if (0 !== r && r !== n) {
                                e.lastPingedTime = r;
                                break
                            }
                            e.timeoutHandle = eK(Y$.bind(null, e), a);
                            break
                        }
                        Y$(e);
                        break;
                    case i$:
                        if (gZ(e, n),
                        n === (r = e.lastSuspendedTime) && (e.nextKnownPendingLevel = Q$(a)),
                        g$ && (0 === (a = e.lastPingedTime) || a >= n)) {
                            e.lastPingedTime = n,
                            V$(e, n);
                            break
                        }
                        if (0 !== (a = B$(e)) && a !== n)
                            break;
                        if (0 !== r && r !== n) {
                            e.lastPingedTime = r;
                            break
                        }
                        if (1073741823 !== h$ ? r = 10 * (1073741821 - h$) - xX() : 1073741823 === d$ ? r = 0 : (r = 10 * (1073741821 - d$) - 5e3,
                        0 > (r = (a = xX()) - r) && (r = 0),
                        (n = 10 * (1073741821 - n) - a) < (r = (120 > r ? 120 : 480 > r ? 480 : 1080 > r ? 1080 : 1920 > r ? 1920 : 3e3 > r ? 3e3 : 4320 > r ? 4320 : 1960 * JY(r / 1960)) - r) && (r = n)),
                        10 < r) {
                            e.timeoutHandle = eK(Y$.bind(null, e), r);
                            break
                        }
                        Y$(e);
                        break;
                    case 5:
                        if (1073741823 !== d$ && null !== m$) {
                            o = d$;
                            var i = m$;
                            if (0 >= (r = 0 | i.busyMinDurationMs) ? r = 0 : (a = 0 | i.busyDelayMs,
                            r = (o = xX() - (10 * (1073741821 - o) - (0 | i.timeoutMs || 5e3))) <= a ? 0 : a + r - o),
                            10 < r) {
                                gZ(e, n),
                                e.timeoutHandle = eK(Y$.bind(null, e), r);
                                break
                            }
                        }
                        Y$(e);
                        break;
                    default:
                        throw Error(UW(329))
                    }
                if (F$(e),
                e.callbackNode === t)
                    return M$.bind(null, e)
            }
        }
        return null
    }
    function P$(e) {
        var t = e.lastExpiredTime;
        if (t = 0 !== t ? t : 1073741823,
        0 != (48 & s$))
            throw Error(UW(327));
        if (J$(),
        e === u$ && t === l$ || V$(e, t),
        null !== c$) {
            var n = s$;
            s$ |= n$;
            for (var r = W$(); ; )
                try {
                    G$();
                    break
                } catch (t) {
                    z$(e, t)
                }
            if (BX(),
            s$ = n,
            e$.current = r,
            1 === f$)
                throw n = p$,
                V$(e, t),
                gZ(e, t),
                F$(e),
                n;
            if (null !== c$)
                throw Error(UW(261));
            e.finishedWork = e.current.alternate,
            e.finishedExpirationTime = t,
            u$ = null,
            Y$(e),
            F$(e)
        }
        return null
    }
    function L$(e, t) {
        var n = s$;
        s$ |= 1;
        try {
            return e(t)
        } finally {
            0 === (s$ = n) && IX()
        }
    }
    function U$(e, t) {
        var n = s$;
        s$ &= -2,
        s$ |= 8;
        try {
            return e(t)
        } finally {
            0 === (s$ = n) && IX()
        }
    }
    function V$(e, t) {
        e.finishedWork = null,
        e.finishedExpirationTime = 0;
        var n = e.timeoutHandle;
        if (-1 !== n && (e.timeoutHandle = -1,
        tK(n)),
        null !== c$)
            for (n = c$.return; null !== n; ) {
                var r = n;
                switch (r.tag) {
                case 1:
                    null != (r = r.type.childContextTypes) && $q();
                    break;
                case 3:
                    dQ(),
                    jq(qq),
                    jq(Kq);
                    break;
                case 5:
                    mQ(r);
                    break;
                case 4:
                    dQ();
                    break;
                case 13:
                case 19:
                    jq(vQ);
                    break;
                case 10:
                    FX(r)
                }
                n = n.return
            }
        u$ = e,
        c$ = lZ(e.current, null),
        l$ = t,
        f$ = a$,
        p$ = null,
        h$ = d$ = 1073741823,
        m$ = null,
        v$ = 0,
        g$ = !1
    }
    function z$(e, t) {
        for (; ; ) {
            try {
                if (BX(),
                bQ.current = YQ,
                SQ)
                    for (var n = kQ.memoizedState; null !== n; ) {
                        var r = n.queue;
                        null !== r && (r.pending = null),
                        n = n.next
                    }
                if (wQ = 0,
                EQ = CQ = kQ = null,
                SQ = !1,
                null === c$ || null === c$.return)
                    return f$ = 1,
                    p$ = t,
                    c$ = null;
                e: {
                    var a = e
                      , o = c$.return
                      , i = c$
                      , s = t;
                    if (t = l$,
                    i.effectTag |= 2048,
                    i.firstEffect = i.lastEffect = null,
                    null !== s && "object" == typeof s && "function" == typeof s.then) {
                        var u = s;
                        if (0 == (2 & i.mode)) {
                            var c = i.alternate;
                            c ? (i.updateQueue = c.updateQueue,
                            i.memoizedState = c.memoizedState,
                            i.expirationTime = c.expirationTime) : (i.updateQueue = null,
                            i.memoizedState = null)
                        }
                        var l = 0 != (1 & vQ.current)
                          , f = o;
                        do {
                            var p;
                            if (p = 13 === f.tag) {
                                var d = f.memoizedState;
                                if (null !== d)
                                    p = null !== d.dehydrated;
                                else {
                                    var h = f.memoizedProps;
                                    p = void 0 !== h.fallback && (!0 !== h.unstable_avoidThisFallback || !l)
                                }
                            }
                            if (p) {
                                var m = f.updateQueue;
                                if (null === m) {
                                    var v = new Set;
                                    v.add(u),
                                    f.updateQueue = v
                                } else
                                    m.add(u);
                                if (0 == (2 & f.mode)) {
                                    if (f.effectTag |= 64,
                                    i.effectTag &= -2981,
                                    1 === i.tag)
                                        if (null === i.alternate)
                                            i.tag = 17;
                                        else {
                                            var g = WX(1073741823, null);
                                            g.tag = 2,
                                            jX(i, g)
                                        }
                                    i.expirationTime = 1073741823;
                                    break e
                                }
                                s = void 0,
                                i = t;
                                var y = a.pingCache;
                                if (null === y ? (y = a.pingCache = new QY,
                                s = new Set,
                                y.set(u, s)) : void 0 === (s = y.get(u)) && (s = new Set,
                                y.set(u, s)),
                                !s.has(i)) {
                                    s.add(i);
                                    var b = rZ.bind(null, a, u, i);
                                    u.then(b, b)
                                }
                                f.effectTag |= 4096,
                                f.expirationTime = t;
                                break e
                            }
                            f = f.return
                        } while (null !== f);s = Error((Qj(i.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + Yj(i))
                    }
                    5 !== f$ && (f$ = 2),
                    s = OY(s, i),
                    f = o;
                    do {
                        switch (f.tag) {
                        case 3:
                            u = s,
                            f.effectTag |= 4096,
                            f.expirationTime = t,
                            HX(f, YY(f, u, t));
                            break e;
                        case 1:
                            u = s;
                            var x = f.type
                              , w = f.stateNode;
                            if (0 == (64 & f.effectTag) && ("function" == typeof x.getDerivedStateFromError || null !== w && "function" == typeof w.componentDidCatch && (null === k$ || !k$.has(w)))) {
                                f.effectTag |= 4096,
                                f.expirationTime = t,
                                HX(f, $Y(f, u, t));
                                break e
                            }
                        }
                        f = f.return
                    } while (null !== f)
                }
                c$ = X$(c$)
            } catch (e) {
                t = e;
                continue
            }
            break
        }
    }
    function W$() {
        var e = e$.current;
        return e$.current = YQ,
        null === e ? YQ : e
    }
    function j$(e, t) {
        e < d$ && 2 < e && (d$ = e),
        null !== t && e < h$ && 2 < e && (h$ = e,
        m$ = t)
    }
    function H$(e) {
        e > v$ && (v$ = e)
    }
    function G$() {
        for (; null !== c$; )
            c$ = q$(c$)
    }
    function K$() {
        for (; null !== c$ && !hX(); )
            c$ = q$(c$)
    }
    function q$(e) {
        var t = ZY(e.alternate, e, l$);
        return e.memoizedProps = e.pendingProps,
        null === t && (t = X$(e)),
        t$.current = null,
        t
    }
    function X$(e) {
        c$ = e;
        do {
            var t = c$.alternate;
            if (e = c$.return,
            0 == (2048 & c$.effectTag)) {
                if (t = _Y(t, c$, l$),
                1 === l$ || 1 !== c$.childExpirationTime) {
                    for (var n = 0, r = c$.child; null !== r; ) {
                        var a = r.expirationTime
                          , o = r.childExpirationTime;
                        a > n && (n = a),
                        o > n && (n = o),
                        r = r.sibling
                    }
                    c$.childExpirationTime = n
                }
                if (null !== t)
                    return t;
                null !== e && 0 == (2048 & e.effectTag) && (null === e.firstEffect && (e.firstEffect = c$.firstEffect),
                null !== c$.lastEffect && (null !== e.lastEffect && (e.lastEffect.nextEffect = c$.firstEffect),
                e.lastEffect = c$.lastEffect),
                1 < c$.effectTag && (null !== e.lastEffect ? e.lastEffect.nextEffect = c$ : e.firstEffect = c$,
                e.lastEffect = c$))
            } else {
                if (null !== (t = RY(c$)))
                    return t.effectTag &= 2047,
                    t;
                null !== e && (e.firstEffect = e.lastEffect = null,
                e.effectTag |= 2048)
            }
            if (null !== (t = c$.sibling))
                return t;
            c$ = e
        } while (null !== c$);return f$ === a$ && (f$ = 5),
        null
    }
    function Q$(e) {
        var t = e.expirationTime;
        return t > (e = e.childExpirationTime) ? t : e
    }
    function Y$(e) {
        var t = wX();
        return CX(99, $$.bind(null, e, t)),
        null
    }
    function $$(e, t) {
        do {
            J$()
        } while (null !== E$);if (0 != (48 & s$))
            throw Error(UW(327));
        var n = e.finishedWork
          , r = e.finishedExpirationTime;
        if (null === n)
            return null;
        if (e.finishedWork = null,
        e.finishedExpirationTime = 0,
        n === e.current)
            throw Error(UW(177));
        e.callbackNode = null,
        e.callbackExpirationTime = 0,
        e.callbackPriority = 90,
        e.nextKnownPendingLevel = 0;
        var a = Q$(n);
        if (e.firstPendingTime = a,
        r <= e.lastSuspendedTime ? e.firstSuspendedTime = e.lastSuspendedTime = e.nextKnownPendingLevel = 0 : r <= e.firstSuspendedTime && (e.firstSuspendedTime = r - 1),
        r <= e.lastPingedTime && (e.lastPingedTime = 0),
        r <= e.lastExpiredTime && (e.lastExpiredTime = 0),
        e === u$ && (c$ = u$ = null,
        l$ = 0),
        1 < n.effectTag ? null !== n.lastEffect ? (n.lastEffect.nextEffect = n,
        a = n.firstEffect) : a = n : a = n.firstEffect,
        null !== a) {
            var o = s$;
            s$ |= r$,
            t$.current = null,
            YG = SG;
            var i = KG();
            if (qG(i)) {
                if ("selectionStart"in i)
                    var s = {
                        start: i.selectionStart,
                        end: i.selectionEnd
                    };
                else
                    e: {
                        var u = (s = (s = i.ownerDocument) && s.defaultView || window).getSelection && s.getSelection();
                        if (u && 0 !== u.rangeCount) {
                            s = u.anchorNode;
                            var c = u.anchorOffset
                              , l = u.focusNode;
                            u = u.focusOffset;
                            try {
                                s.nodeType,
                                l.nodeType
                            } catch (e) {
                                s = null;
                                break e
                            }
                            var f = 0
                              , p = -1
                              , d = -1
                              , h = 0
                              , m = 0
                              , v = i
                              , g = null;
                            t: for (; ; ) {
                                for (var y; v !== s || 0 !== c && 3 !== v.nodeType || (p = f + c),
                                v !== l || 0 !== u && 3 !== v.nodeType || (d = f + u),
                                3 === v.nodeType && (f += v.nodeValue.length),
                                null !== (y = v.firstChild); )
                                    g = v,
                                    v = y;
                                for (; ; ) {
                                    if (v === i)
                                        break t;
                                    if (g === s && ++h === c && (p = f),
                                    g === l && ++m === u && (d = f),
                                    null !== (y = v.nextSibling))
                                        break;
                                    g = (v = g).parentNode
                                }
                                v = y
                            }
                            s = -1 === p || -1 === d ? null : {
                                start: p,
                                end: d
                            }
                        } else
                            s = null
                    }
                s = s || {
                    start: 0,
                    end: 0
                }
            } else
                s = null;
            $G = {
                activeElementDetached: null,
                focusedElem: i,
                selectionRange: s
            },
            SG = !1,
            b$ = a;
            do {
                try {
                    Z$()
                } catch (e) {
                    if (null === b$)
                        throw Error(UW(330));
                    nZ(b$, e),
                    b$ = b$.nextEffect
                }
            } while (null !== b$);b$ = a;
            do {
                try {
                    for (i = e,
                    s = t; null !== b$; ) {
                        var b = b$.effectTag;
                        if (16 & b && bH(b$.stateNode, ""),
                        128 & b) {
                            var x = b$.alternate;
                            if (null !== x) {
                                var w = x.ref;
                                null !== w && ("function" == typeof w ? w(null) : w.current = null)
                            }
                        }
                        switch (1038 & b) {
                        case 2:
                            jY(b$),
                            b$.effectTag &= -3;
                            break;
                        case 6:
                            jY(b$),
                            b$.effectTag &= -3,
                            qY(b$.alternate, b$);
                            break;
                        case 1024:
                            b$.effectTag &= -1025;
                            break;
                        case 1028:
                            b$.effectTag &= -1025,
                            qY(b$.alternate, b$);
                            break;
                        case 4:
                            qY(b$.alternate, b$);
                            break;
                        case 8:
                            KY(i, c = b$, s),
                            zY(c)
                        }
                        b$ = b$.nextEffect
                    }
                } catch (e) {
                    if (null === b$)
                        throw Error(UW(330));
                    nZ(b$, e),
                    b$ = b$.nextEffect
                }
            } while (null !== b$);if (w = $G,
            x = KG(),
            b = w.focusedElem,
            s = w.selectionRange,
            x !== b && b && b.ownerDocument && GG(b.ownerDocument.documentElement, b)) {
                null !== s && qG(b) && (x = s.start,
                void 0 === (w = s.end) && (w = x),
                "selectionStart"in b ? (b.selectionStart = x,
                b.selectionEnd = Math.min(w, b.value.length)) : (w = (x = b.ownerDocument || document) && x.defaultView || window).getSelection && (w = w.getSelection(),
                c = b.textContent.length,
                i = Math.min(s.start, c),
                s = void 0 === s.end ? i : Math.min(s.end, c),
                !w.extend && i > s && (c = s,
                s = i,
                i = c),
                c = HG(b, i),
                l = HG(b, s),
                c && l && (1 !== w.rangeCount || w.anchorNode !== c.node || w.anchorOffset !== c.offset || w.focusNode !== l.node || w.focusOffset !== l.offset) && ((x = x.createRange()).setStart(c.node, c.offset),
                w.removeAllRanges(),
                i > s ? (w.addRange(x),
                w.extend(l.node, l.offset)) : (x.setEnd(l.node, l.offset),
                w.addRange(x))))),
                x = [];
                for (w = b; w = w.parentNode; )
                    1 === w.nodeType && x.push({
                        element: w,
                        left: w.scrollLeft,
                        top: w.scrollTop
                    });
                for ("function" == typeof b.focus && b.focus(),
                b = 0; b < x.length; b++)
                    (w = x[b]).element.scrollLeft = w.left,
                    w.element.scrollTop = w.top
            }
            SG = !!YG,
            $G = YG = null,
            e.current = n,
            b$ = a;
            do {
                try {
                    for (b = e; null !== b$; ) {
                        var k = b$.effectTag;
                        if (36 & k && UY(b, b$.alternate, b$),
                        128 & k) {
                            x = void 0;
                            var C = b$.ref;
                            if (null !== C) {
                                var E = b$.stateNode;
                                switch (b$.tag) {
                                case 5:
                                    x = E;
                                    break;
                                default:
                                    x = E
                                }
                                "function" == typeof C ? C(x) : C.current = x
                            }
                        }
                        b$ = b$.nextEffect
                    }
                } catch (e) {
                    if (null === b$)
                        throw Error(UW(330));
                    nZ(b$, e),
                    b$ = b$.nextEffect
                }
            } while (null !== b$);b$ = null,
            mX(),
            s$ = o
        } else
            e.current = n;
        if (C$)
            C$ = !1,
            E$ = e,
            S$ = t;
        else
            for (b$ = a; null !== b$; )
                t = b$.nextEffect,
                b$.nextEffect = null,
                b$ = t;
        if (0 === (t = e.firstPendingTime) && (k$ = null),
        1073741823 === t ? e === A$ ? T$++ : (T$ = 0,
        A$ = e) : T$ = 0,
        "function" == typeof oZ && oZ(n.stateNode, r),
        F$(e),
        x$)
            throw x$ = !1,
            e = w$,
            w$ = null,
            e;
        return 0 != (8 & s$) || IX(),
        null
    }
    function Z$() {
        for (; null !== b$; ) {
            var e = b$.effectTag;
            0 != (256 & e) && MY(b$.alternate, b$),
            0 == (512 & e) || C$ || (C$ = !0,
            EX(97, (function() {
                return J$(),
                null
            }
            ))),
            b$ = b$.nextEffect
        }
    }
    function J$() {
        if (90 !== S$) {
            var e = 97 < S$ ? 97 : S$;
            return S$ = 90,
            CX(e, eZ)
        }
    }
    function eZ() {
        if (null === E$)
            return !1;
        var e = E$;
        if (E$ = null,
        0 != (48 & s$))
            throw Error(UW(331));
        var t = s$;
        for (s$ |= r$,
        e = e.current.firstEffect; null !== e; ) {
            try {
                var n = e;
                if (0 != (512 & n.effectTag))
                    switch (n.tag) {
                    case 0:
                    case 11:
                    case 15:
                    case 22:
                        PY(5, n),
                        LY(5, n)
                    }
            } catch (t) {
                if (null === e)
                    throw Error(UW(330));
                nZ(e, t)
            }
            n = e.nextEffect,
            e.nextEffect = null,
            e = n
        }
        return s$ = t,
        IX(),
        !0
    }
    function tZ(e, t, n) {
        jX(e, t = YY(e, t = OY(n, t), 1073741823)),
        null !== (e = D$(e, 1073741823)) && F$(e)
    }
    function nZ(e, t) {
        if (3 === e.tag)
            tZ(e, e, t);
        else
            for (var n = e.return; null !== n; ) {
                if (3 === n.tag) {
                    tZ(n, e, t);
                    break
                }
                if (1 === n.tag) {
                    var r = n.stateNode;
                    if ("function" == typeof n.type.getDerivedStateFromError || "function" == typeof r.componentDidCatch && (null === k$ || !k$.has(r))) {
                        jX(n, e = $Y(n, e = OY(t, e), 1073741823)),
                        null !== (n = D$(n, 1073741823)) && F$(n);
                        break
                    }
                }
                n = n.return
            }
    }
    function rZ(e, t, n) {
        var r = e.pingCache;
        null !== r && r.delete(t),
        u$ === e && l$ === n ? f$ === i$ || f$ === o$ && 1073741823 === d$ && xX() - y$ < 500 ? V$(e, l$) : g$ = !0 : vZ(e, n) && (0 !== (t = e.lastPingedTime) && t < n || (e.lastPingedTime = n,
        F$(e)))
    }
    function aZ(e, t) {
        var n = e.stateNode;
        null !== n && n.delete(t),
        0 === (t = 0) && (t = R$(t = _$(), e, null)),
        null !== (e = D$(e, t)) && F$(e)
    }
    ZY = function(e, t, n) {
        var r = t.expirationTime;
        if (null !== e) {
            var a = t.pendingProps;
            if (e.memoizedProps !== a || qq.current)
                lY = !0;
            else {
                if (r < n) {
                    switch (lY = !1,
                    t.tag) {
                    case 3:
                        bY(t),
                        uY();
                        break;
                    case 5:
                        if (hQ(t),
                        4 & t.mode && 1 !== n && a.hidden)
                            return t.expirationTime = t.childExpirationTime = 1,
                            null;
                        break;
                    case 1:
                        Yq(t.type) && eX(t);
                        break;
                    case 4:
                        pQ(t, t.stateNode.containerInfo);
                        break;
                    case 10:
                        r = t.memoizedProps.value,
                        a = t.type._context,
                        Hq(_X, a._currentValue),
                        a._currentValue = r;
                        break;
                    case 13:
                        if (null !== t.memoizedState)
                            return 0 !== (r = t.child.childExpirationTime) && r >= n ? EY(e, t, n) : (Hq(vQ, 1 & vQ.current),
                            null !== (t = AY(e, t, n)) ? t.sibling : null);
                        Hq(vQ, 1 & vQ.current);
                        break;
                    case 19:
                        if (r = t.childExpirationTime >= n,
                        0 != (64 & e.effectTag)) {
                            if (r)
                                return TY(e, t, n);
                            t.effectTag |= 64
                        }
                        if (null !== (a = t.memoizedState) && (a.rendering = null,
                        a.tail = null),
                        Hq(vQ, vQ.current),
                        !r)
                            return null
                    }
                    return AY(e, t, n)
                }
                lY = !1
            }
        } else
            lY = !1;
        switch (t.expirationTime = 0,
        t.tag) {
        case 2:
            if (r = t.type,
            null !== e && (e.alternate = null,
            t.alternate = null,
            t.effectTag |= 2),
            e = t.pendingProps,
            a = Qq(t, Kq.current),
            PX(t, n),
            a = AQ(null, t, r, e, a, n),
            t.effectTag |= 1,
            "object" == typeof a && null !== a && "function" == typeof a.render && void 0 === a.$$typeof) {
                if (t.tag = 1,
                t.memoizedState = null,
                t.updateQueue = null,
                Yq(r)) {
                    var o = !0;
                    eX(t)
                } else
                    o = !1;
                t.memoizedState = null !== a.state && void 0 !== a.state ? a.state : null,
                VX(t);
                var i = r.getDerivedStateFromProps;
                "function" == typeof i && QX(t, r, i, e),
                a.updater = YX,
                t.stateNode = a,
                a._reactInternalFiber = t,
                eQ(t, r, e, n),
                t = yY(null, t, r, !0, o, n)
            } else
                t.tag = 0,
                fY(null, t, a, n),
                t = t.child;
            return t;
        case 16:
            e: {
                if (a = t.elementType,
                null !== e && (e.alternate = null,
                t.alternate = null,
                t.effectTag |= 2),
                e = t.pendingProps,
                function(e) {
                    if (-1 === e._status) {
                        e._status = 0;
                        var t = e._ctor;
                        t = t(),
                        e._result = t,
                        t.then((function(t) {
                            0 === e._status && (t = t.default,
                            e._status = 1,
                            e._result = t)
                        }
                        ), (function(t) {
                            0 === e._status && (e._status = 2,
                            e._result = t)
                        }
                        ))
                    }
                }(a),
                1 !== a._status)
                    throw a._result;
                switch (a = a._result,
                t.type = a,
                o = t.tag = function(e) {
                    if ("function" == typeof e)
                        return cZ(e) ? 1 : 0;
                    if (null != e) {
                        if ((e = e.$$typeof) === zj)
                            return 11;
                        if (e === Hj)
                            return 14
                    }
                    return 2
                }(a),
                e = NX(a, e),
                o) {
                case 0:
                    t = vY(null, t, a, e, n);
                    break e;
                case 1:
                    t = gY(null, t, a, e, n);
                    break e;
                case 11:
                    t = pY(null, t, a, e, n);
                    break e;
                case 14:
                    t = dY(null, t, a, NX(a.type, e), r, n);
                    break e
                }
                throw Error(UW(306, a, ""))
            }
            return t;
        case 0:
            return r = t.type,
            a = t.pendingProps,
            vY(e, t, r, a = t.elementType === r ? a : NX(r, a), n);
        case 1:
            return r = t.type,
            a = t.pendingProps,
            gY(e, t, r, a = t.elementType === r ? a : NX(r, a), n);
        case 3:
            if (bY(t),
            r = t.updateQueue,
            null === e || null === r)
                throw Error(UW(282));
            if (r = t.pendingProps,
            a = null !== (a = t.memoizedState) ? a.element : null,
            zX(e, t),
            GX(t, r, null, n),
            (r = t.memoizedState.element) === a)
                uY(),
                t = AY(e, t, n);
            else {
                if ((a = t.stateNode.hydrate) && (tY = nK(t.stateNode.containerInfo.firstChild),
                eY = t,
                a = nY = !0),
                a)
                    for (n = iQ(t, null, r, n),
                    t.child = n; n; )
                        n.effectTag = -3 & n.effectTag | 1024,
                        n = n.sibling;
                else
                    fY(e, t, r, n),
                    uY();
                t = t.child
            }
            return t;
        case 5:
            return hQ(t),
            null === e && oY(t),
            r = t.type,
            a = t.pendingProps,
            o = null !== e ? e.memoizedProps : null,
            i = a.children,
            JG(r, a) ? i = null : null !== o && JG(r, o) && (t.effectTag |= 16),
            mY(e, t),
            4 & t.mode && 1 !== n && a.hidden ? (t.expirationTime = t.childExpirationTime = 1,
            t = null) : (fY(e, t, i, n),
            t = t.child),
            t;
        case 6:
            return null === e && oY(t),
            null;
        case 13:
            return EY(e, t, n);
        case 4:
            return pQ(t, t.stateNode.containerInfo),
            r = t.pendingProps,
            null === e ? t.child = oQ(t, null, r, n) : fY(e, t, r, n),
            t.child;
        case 11:
            return r = t.type,
            a = t.pendingProps,
            pY(e, t, r, a = t.elementType === r ? a : NX(r, a), n);
        case 7:
            return fY(e, t, t.pendingProps, n),
            t.child;
        case 8:
        case 12:
            return fY(e, t, t.pendingProps.children, n),
            t.child;
        case 10:
            e: {
                r = t.type._context,
                a = t.pendingProps,
                i = t.memoizedProps,
                o = a.value;
                var s = t.type._context;
                if (Hq(_X, s._currentValue),
                s._currentValue = o,
                null !== i)
                    if (s = i.value,
                    0 === (o = yq(s, o) ? 0 : 0 | ("function" == typeof r._calculateChangedBits ? r._calculateChangedBits(s, o) : 1073741823))) {
                        if (i.children === a.children && !qq.current) {
                            t = AY(e, t, n);
                            break e
                        }
                    } else
                        for (null !== (s = t.child) && (s.return = t); null !== s; ) {
                            var u = s.dependencies;
                            if (null !== u) {
                                i = s.child;
                                for (var c = u.firstContext; null !== c; ) {
                                    if (c.context === r && 0 != (c.observedBits & o)) {
                                        1 === s.tag && ((c = WX(n, null)).tag = 2,
                                        jX(s, c)),
                                        s.expirationTime < n && (s.expirationTime = n),
                                        null !== (c = s.alternate) && c.expirationTime < n && (c.expirationTime = n),
                                        MX(s.return, n),
                                        u.expirationTime < n && (u.expirationTime = n);
                                        break
                                    }
                                    c = c.next
                                }
                            } else
                                i = 10 === s.tag && s.type === t.type ? null : s.child;
                            if (null !== i)
                                i.return = s;
                            else
                                for (i = s; null !== i; ) {
                                    if (i === t) {
                                        i = null;
                                        break
                                    }
                                    if (null !== (s = i.sibling)) {
                                        s.return = i.return,
                                        i = s;
                                        break
                                    }
                                    i = i.return
                                }
                            s = i
                        }
                fY(e, t, a.children, n),
                t = t.child
            }
            return t;
        case 9:
            return a = t.type,
            r = (o = t.pendingProps).children,
            PX(t, n),
            r = r(a = LX(a, o.unstable_observedBits)),
            t.effectTag |= 1,
            fY(e, t, r, n),
            t.child;
        case 14:
            return o = NX(a = t.type, t.pendingProps),
            dY(e, t, a, o = NX(a.type, o), r, n);
        case 15:
            return hY(e, t, t.type, t.pendingProps, r, n);
        case 17:
            return r = t.type,
            a = t.pendingProps,
            a = t.elementType === r ? a : NX(r, a),
            null !== e && (e.alternate = null,
            t.alternate = null,
            t.effectTag |= 2),
            t.tag = 1,
            Yq(r) ? (e = !0,
            eX(t)) : e = !1,
            PX(t, n),
            ZX(t, r, a),
            eQ(t, r, a, n),
            yY(null, t, r, !0, e, n);
        case 19:
            return TY(e, t, n)
        }
        throw Error(UW(156, t.tag))
    }
    ;
    var oZ = null
      , iZ = null;
    function sZ(e, t, n, r) {
        this.tag = e,
        this.key = n,
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null,
        this.index = 0,
        this.ref = null,
        this.pendingProps = t,
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null,
        this.mode = r,
        this.effectTag = 0,
        this.lastEffect = this.firstEffect = this.nextEffect = null,
        this.childExpirationTime = this.expirationTime = 0,
        this.alternate = null
    }
    function uZ(e, t, n, r) {
        return new sZ(e,t,n,r)
    }
    function cZ(e) {
        return !(!(e = e.prototype) || !e.isReactComponent)
    }
    function lZ(e, t) {
        var n = e.alternate;
        return null === n ? ((n = uZ(e.tag, t, e.key, e.mode)).elementType = e.elementType,
        n.type = e.type,
        n.stateNode = e.stateNode,
        n.alternate = e,
        e.alternate = n) : (n.pendingProps = t,
        n.effectTag = 0,
        n.nextEffect = null,
        n.firstEffect = null,
        n.lastEffect = null),
        n.childExpirationTime = e.childExpirationTime,
        n.expirationTime = e.expirationTime,
        n.child = e.child,
        n.memoizedProps = e.memoizedProps,
        n.memoizedState = e.memoizedState,
        n.updateQueue = e.updateQueue,
        t = e.dependencies,
        n.dependencies = null === t ? null : {
            expirationTime: t.expirationTime,
            firstContext: t.firstContext,
            responders: t.responders
        },
        n.sibling = e.sibling,
        n.index = e.index,
        n.ref = e.ref,
        n
    }
    function fZ(e, t, n, r, a, o) {
        var i = 2;
        if (r = e,
        "function" == typeof e)
            cZ(e) && (i = 1);
        else if ("string" == typeof e)
            i = 5;
        else
            e: switch (e) {
            case Fj:
                return pZ(n.children, a, o, t);
            case Vj:
                i = 8,
                a |= 7;
                break;
            case Mj:
                i = 8,
                a |= 1;
                break;
            case Pj:
                return (e = uZ(12, n, t, 8 | a)).elementType = Pj,
                e.type = Pj,
                e.expirationTime = o,
                e;
            case Wj:
                return (e = uZ(13, n, t, a)).type = Wj,
                e.elementType = Wj,
                e.expirationTime = o,
                e;
            case jj:
                return (e = uZ(19, n, t, a)).elementType = jj,
                e.expirationTime = o,
                e;
            default:
                if ("object" == typeof e && null !== e)
                    switch (e.$$typeof) {
                    case Lj:
                        i = 10;
                        break e;
                    case Uj:
                        i = 9;
                        break e;
                    case zj:
                        i = 11;
                        break e;
                    case Hj:
                        i = 14;
                        break e;
                    case Gj:
                        i = 16,
                        r = null;
                        break e;
                    case Kj:
                        i = 22;
                        break e
                    }
                throw Error(UW(130, null == e ? e : typeof e, ""))
            }
        return (t = uZ(i, n, t, a)).elementType = e,
        t.type = r,
        t.expirationTime = o,
        t
    }
    function pZ(e, t, n, r) {
        return (e = uZ(7, e, r, t)).expirationTime = n,
        e
    }
    function dZ(e, t, n) {
        return (e = uZ(6, e, null, t)).expirationTime = n,
        e
    }
    function hZ(e, t, n) {
        return (t = uZ(4, null !== e.children ? e.children : [], e.key, t)).expirationTime = n,
        t.stateNode = {
            containerInfo: e.containerInfo,
            pendingChildren: null,
            implementation: e.implementation
        },
        t
    }
    function mZ(e, t, n) {
        this.tag = t,
        this.current = null,
        this.containerInfo = e,
        this.pingCache = this.pendingChildren = null,
        this.finishedExpirationTime = 0,
        this.finishedWork = null,
        this.timeoutHandle = -1,
        this.pendingContext = this.context = null,
        this.hydrate = n,
        this.callbackNode = null,
        this.callbackPriority = 90,
        this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0
    }
    function vZ(e, t) {
        var n = e.firstSuspendedTime;
        return e = e.lastSuspendedTime,
        0 !== n && n >= t && e <= t
    }
    function gZ(e, t) {
        var n = e.firstSuspendedTime
          , r = e.lastSuspendedTime;
        n < t && (e.firstSuspendedTime = t),
        (r > t || 0 === n) && (e.lastSuspendedTime = t),
        t <= e.lastPingedTime && (e.lastPingedTime = 0),
        t <= e.lastExpiredTime && (e.lastExpiredTime = 0)
    }
    function yZ(e, t) {
        t > e.firstPendingTime && (e.firstPendingTime = t);
        var n = e.firstSuspendedTime;
        0 !== n && (t >= n ? e.firstSuspendedTime = e.lastSuspendedTime = e.nextKnownPendingLevel = 0 : t >= e.lastSuspendedTime && (e.lastSuspendedTime = t + 1),
        t > e.nextKnownPendingLevel && (e.nextKnownPendingLevel = t))
    }
    function bZ(e, t) {
        var n = e.lastExpiredTime;
        (0 === n || n > t) && (e.lastExpiredTime = t)
    }
    function xZ(e, t, n, r) {
        var a = t.current
          , o = _$()
          , i = qX.suspense;
        o = R$(o, a, i);
        e: if (n) {
            t: {
                if (OH(n = n._reactInternalFiber) !== n || 1 !== n.tag)
                    throw Error(UW(170));
                var s = n;
                do {
                    switch (s.tag) {
                    case 3:
                        s = s.stateNode.context;
                        break t;
                    case 1:
                        if (Yq(s.type)) {
                            s = s.stateNode.__reactInternalMemoizedMergedChildContext;
                            break t
                        }
                    }
                    s = s.return
                } while (null !== s);throw Error(UW(171))
            }
            if (1 === n.tag) {
                var u = n.type;
                if (Yq(u)) {
                    n = Jq(n, u, s);
                    break e
                }
            }
            n = s
        } else
            n = Gq;
        return null === t.context ? t.context = n : t.pendingContext = n,
        (t = WX(o, i)).payload = {
            element: e
        },
        null !== (r = void 0 === r ? null : r) && (t.callback = r),
        jX(a, t),
        O$(a, o),
        o
    }
    function wZ(e) {
        if (!(e = e.current).child)
            return null;
        switch (e.child.tag) {
        case 5:
        default:
            return e.child.stateNode
        }
    }
    function kZ(e, t) {
        null !== (e = e.memoizedState) && null !== e.dehydrated && e.retryTime < t && (e.retryTime = t)
    }
    function CZ(e, t) {
        kZ(e, t),
        (e = e.alternate) && kZ(e, t)
    }
    function EZ(e, t, n) {
        var r = new mZ(e,t,n = null != n && !0 === n.hydrate)
          , a = uZ(3, null, null, 2 === t ? 7 : 1 === t ? 3 : 0);
        r.current = a,
        a.stateNode = r,
        VX(a),
        e[sK] = r.current,
        n && 0 !== t && function(e, t) {
            var n = RH(t);
            oG.forEach((function(e) {
                qH(e, t, n)
            }
            )),
            iG.forEach((function(e) {
                qH(e, t, n)
            }
            ))
        }(0, 9 === e.nodeType ? e : e.ownerDocument),
        this._internalRoot = r
    }
    function SZ(e) {
        return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType && (8 !== e.nodeType || " react-mount-point-unstable " !== e.nodeValue))
    }
    function IZ(e, t, n, r, a) {
        var o = n._reactRootContainer;
        if (o) {
            var i = o._internalRoot;
            if ("function" == typeof a) {
                var s = a;
                a = function() {
                    var e = wZ(i);
                    s.call(e)
                }
            }
            xZ(t, i, e, a)
        } else {
            if (o = n._reactRootContainer = function(e, t) {
                if (t || (t = !(!(t = e ? 9 === e.nodeType ? e.documentElement : e.firstChild : null) || 1 !== t.nodeType || !t.hasAttribute("data-reactroot"))),
                !t)
                    for (var n; n = e.lastChild; )
                        e.removeChild(n);
                return new EZ(e,0,t ? {
                    hydrate: !0
                } : void 0)
            }(n, r),
            i = o._internalRoot,
            "function" == typeof a) {
                var u = a;
                a = function() {
                    var e = wZ(i);
                    u.call(e)
                }
            }
            U$((function() {
                xZ(t, i, e, a)
            }
            ))
        }
        return wZ(i)
    }
    function TZ(e, t, n) {
        var r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
        return {
            $$typeof: Bj,
            key: null == r ? null : "" + r,
            children: e,
            containerInfo: t,
            implementation: n
        }
    }
    function AZ(e, t) {
        var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        if (!SZ(t))
            throw Error(UW(200));
        return TZ(e, t, null, n)
    }
    EZ.prototype.render = function(e) {
        xZ(e, this._internalRoot, null, null)
    }
    ,
    EZ.prototype.unmount = function() {
        var e = this._internalRoot
          , t = e.containerInfo;
        xZ(null, e, null, (function() {
            t[sK] = null
        }
        ))
    }
    ,
    XH = function(e) {
        if (13 === e.tag) {
            var t = AX(_$(), 150, 100);
            O$(e, t),
            CZ(e, t)
        }
    }
    ,
    QH = function(e) {
        13 === e.tag && (O$(e, 3),
        CZ(e, 3))
    }
    ,
    YH = function(e) {
        if (13 === e.tag) {
            var t = _$();
            O$(e, t = R$(t, e, null)),
            CZ(e, t)
        }
    }
    ,
    sj = function(e, t, n) {
        switch (t) {
        case "input":
            if (aH(e, n),
            t = n.name,
            "radio" === n.type && null != t) {
                for (n = e; n.parentNode; )
                    n = n.parentNode;
                for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'),
                t = 0; t < n.length; t++) {
                    var r = n[t];
                    if (r !== e && r.form === e.form) {
                        var a = fK(r);
                        if (!a)
                            throw Error(UW(90));
                        eH(r),
                        aH(r, a)
                    }
                }
            }
            break;
        case "textarea":
            fH(e, n);
            break;
        case "select":
            null != (t = n.value) && uH(e, !!n.multiple, t, !1)
        }
    }
    ,
    dj = L$,
    hj = function(e, t, n, r, a) {
        var o = s$;
        s$ |= 4;
        try {
            return CX(98, e.bind(null, t, n, r, a))
        } finally {
            0 === (s$ = o) && IX()
        }
    }
    ,
    mj = function() {
        0 == (49 & s$) && (function() {
            if (null !== I$) {
                var e = I$;
                I$ = null,
                e.forEach((function(e, t) {
                    bZ(t, e),
                    F$(t)
                }
                )),
                IX()
            }
        }(),
        J$())
    }
    ,
    vj = function(e, t) {
        var n = s$;
        s$ |= 2;
        try {
            return e(t)
        } finally {
            0 === (s$ = n) && IX()
        }
    }
    ;
    var NZ = {
        Events: [cK, lK, fK, oj, nj, yK, function(e) {
            PH(e, gK)
        }
        , fj, pj, _G, VH, J$, {
            current: !1
        }]
    };
    !function(e) {
        var t = e.findFiberByHostInstance;
        (function(e) {
            if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)
                return !1;
            var t = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (t.isDisabled || !t.supportsFiber)
                return !0;
            try {
                var n = t.inject(e);
                oZ = function(e) {
                    try {
                        t.onCommitFiberRoot(n, e, void 0, 64 == (64 & e.current.effectTag))
                    } catch (e) {}
                }
                ,
                iZ = function(e) {
                    try {
                        t.onCommitFiberUnmount(n, e)
                    } catch (e) {}
                }
            } catch (e) {}
        }
        )(Pv({}, e, {
            overrideHookState: null,
            overrideProps: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: Nj.ReactCurrentDispatcher,
            findHostInstanceByFiber: function(e) {
                return null === (e = FH(e)) ? null : e.stateNode
            },
            findFiberByHostInstance: function(e) {
                return t ? t(e) : null
            },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null
        }))
    }({
        findFiberByHostInstance: uK,
        bundleType: 0,
        version: "16.14.0",
        rendererPackageName: "react-dom"
    });
    var _Z = {
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: NZ,
        createPortal: AZ,
        findDOMNode: function(e) {
            if (null == e)
                return null;
            if (1 === e.nodeType)
                return e;
            var t = e._reactInternalFiber;
            if (void 0 === t) {
                if ("function" == typeof e.render)
                    throw Error(UW(188));
                throw Error(UW(268, Object.keys(e)))
            }
            return e = null === (e = FH(t)) ? null : e.stateNode
        },
        flushSync: function(e, t) {
            if (0 != (48 & s$))
                throw Error(UW(187));
            var n = s$;
            s$ |= 1;
            try {
                return CX(99, e.bind(null, t))
            } finally {
                s$ = n,
                IX()
            }
        },
        hydrate: function(e, t, n) {
            if (!SZ(t))
                throw Error(UW(200));
            return IZ(null, e, t, !0, n)
        },
        render: function(e, t, n) {
            if (!SZ(t))
                throw Error(UW(200));
            return IZ(null, e, t, !1, n)
        },
        unmountComponentAtNode: function(e) {
            if (!SZ(e))
                throw Error(UW(40));
            return !!e._reactRootContainer && (U$((function() {
                IZ(null, null, e, !1, (function() {
                    e._reactRootContainer = null,
                    e[sK] = null
                }
                ))
            }
            )),
            !0)
        },
        unstable_batchedUpdates: L$,
        unstable_createPortal: function(e, t) {
            return AZ(e, t, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null)
        },
        unstable_renderSubtreeIntoContainer: function(e, t, n, r) {
            if (!SZ(n))
                throw Error(UW(200));
            if (null == e || void 0 === e._reactInternalFiber)
                throw Error(UW(38));
            return IZ(e, t, n, !1, r)
        },
        version: "16.14.0"
    }
      , RZ = 0
      , OZ = {
        __interactionsRef: null,
        __subscriberRef: null,
        unstable_clear: function(e) {
            return e()
        },
        unstable_getCurrent: function() {
            return null
        },
        unstable_getThreadID: function() {
            return ++RZ
        },
        unstable_subscribe: function() {},
        unstable_trace: function(e, t, n) {
            return n()
        },
        unstable_unsubscribe: function() {},
        unstable_wrap: function(e) {
            return e
        }
    }
      , DZ = (i((function(e, t) {}
    )),
    i((function(e) {
        e.exports = OZ
    }
    )),
    i((function(e, t) {}
    )),
    i((function(e) {
        !function e() {
            if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)
                try {
                    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)
                } catch (e) {
                    console.error(e)
                }
        }(),
        e.exports = _Z
    }
    )))
      , BZ = function(e, t, n, r, a, o, i, s) {
        if (!e) {
            var u;
            if (void 0 === t)
                u = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
            else {
                var c = [n, r, a, o, i, s]
                  , l = 0;
                (u = new Error(t.replace(/%s/g, (function() {
                    return c[l++]
                }
                )))).name = "Invariant Violation"
            }
            throw u.framesToPop = 1,
            u
        }
    }
      , FZ = o(i((function(e, t) {
        !function(e, t) {
            t = t && t.hasOwnProperty("default") ? t.default : t;
            var n = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.request = function(e, t) {
                    return this.httpClient.post("/v1/read_id_card_info_sync", e, t)
                }
                ,
                e
            }()
              , r = function() {
                return (r = Object.assign || function(e) {
                    for (var t, n = 1, r = arguments.length; n < r; n++)
                        for (var a in t = arguments[n])
                            Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);
                    return e
                }
                ).apply(this, arguments)
            };
            /*! *****************************************************************************
	  Copyright (c) Microsoft Corporation. All rights reserved.
	  Licensed under the Apache License, Version 2.0 (the "License"); you may not use
	  this file except in compliance with the License. You may obtain a copy of the
	  License at http://www.apache.org/licenses/LICENSE-2.0

	  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
	  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
	  MERCHANTABLITY OR NON-INFRINGEMENT.

	  See the Apache Version 2.0 License for specific language governing permissions
	  and limitations under the License.
	  ***************************************************************************** */
            function o(e, t, n, r) {
                var a, o = arguments.length, i = o < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
                    i = Reflect.decorate(e, t, n, r);
                else
                    for (var s = e.length - 1; s >= 0; s--)
                        (a = e[s]) && (i = (o < 3 ? a(i) : o > 3 ? a(t, n, i) : a(t, n)) || i);
                return o > 3 && i && Object.defineProperty(t, n, i),
                i
            }
            function i(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata)
                    return Reflect.metadata(e, t)
            }
            function s(e, t, n, r) {
                return new (n || (n = Promise))((function(a, o) {
                    function i(e) {
                        try {
                            u(r.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }
                    function s(e) {
                        try {
                            u(r.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }
                    function u(e) {
                        var t;
                        e.done ? a(e.value) : (t = e.value,
                        t instanceof n ? t : new n((function(e) {
                            e(t)
                        }
                        ))).then(i, s)
                    }
                    u((r = r.apply(e, t || [])).next())
                }
                ))
            }
            function u(e, t) {
                var n, r, a, o, i = {
                    label: 0,
                    sent: function() {
                        if (1 & a[0])
                            throw a[1];
                        return a[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: s(0),
                    throw: s(1),
                    return: s(2)
                },
                "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this
                }
                ),
                o;
                function s(o) {
                    return function(s) {
                        return function(o) {
                            if (n)
                                throw new TypeError("Generator is already executing.");
                            for (; i; )
                                try {
                                    if (n = 1,
                                    r && (a = 2 & o[0] ? r.return : o[0] ? r.throw || ((a = r.return) && a.call(r),
                                    0) : r.next) && !(a = a.call(r, o[1])).done)
                                        return a;
                                    switch (r = 0,
                                    a && (o = [2 & o[0], a.value]),
                                    o[0]) {
                                    case 0:
                                    case 1:
                                        a = o;
                                        break;
                                    case 4:
                                        return i.label++,
                                        {
                                            value: o[1],
                                            done: !1
                                        };
                                    case 5:
                                        i.label++,
                                        r = o[1],
                                        o = [0];
                                        continue;
                                    case 7:
                                        o = i.ops.pop(),
                                        i.trys.pop();
                                        continue;
                                    default:
                                        if (!(a = (a = i.trys).length > 0 && a[a.length - 1]) && (6 === o[0] || 2 === o[0])) {
                                            i = 0;
                                            continue
                                        }
                                        if (3 === o[0] && (!a || o[1] > a[0] && o[1] < a[3])) {
                                            i.label = o[1];
                                            break
                                        }
                                        if (6 === o[0] && i.label < a[1]) {
                                            i.label = a[1],
                                            a = o;
                                            break
                                        }
                                        if (a && i.label < a[2]) {
                                            i.label = a[2],
                                            i.ops.push(o);
                                            break
                                        }
                                        a[2] && i.ops.pop(),
                                        i.trys.pop();
                                        continue
                                    }
                                    o = t.call(e, i)
                                } catch (e) {
                                    o = [6, e],
                                    r = 0
                                } finally {
                                    n = a = 0
                                }
                            if (5 & o[0])
                                throw o[1];
                            return {
                                value: o[0] ? o[1] : void 0,
                                done: !0
                            }
                        }([o, s])
                    }
                }
            }
            var c = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.uploadImage = function(e) {
                    return this.httpClient.postFormData("/v1/images", e)
                }
                ,
                e.prototype.request = function(e) {
                    var t = "application/pdf" === e.file.type;
                    return this.httpClient.postFormData(t ? "/v1/files" : "/v1/images", e)
                }
                ,
                e.prototype.requestWithHeaders = function(e, t) {
                    return this.httpClient.postFormData("/v1/images", e, t)
                }
                ,
                e.prototype.download = function(e) {
                    return s(this, void 0, void 0, (function() {
                        var t;
                        return u(this, (function(n) {
                            switch (n.label) {
                            case 0:
                                return [4, this.httpClient.downloadFile("/v1/images/" + e)];
                            case 1:
                                return t = n.sent(),
                                [4, URL.createObjectURL(t)];
                            case 2:
                                return [2, n.sent()]
                            }
                        }
                        ))
                    }
                    ))
                }
                ,
                e.prototype.updateMetadata = function(e, t) {
                    return this.httpClient.patch("/v1/images/" + e, t)
                }
                ,
                e
            }()
              , l = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.request = function(e, t) {
                    return this.httpClient.post("/v1/compare_faces_sync", e, t)
                }
                ,
                e
            }()
              , f = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.getClientSettings = function() {
                    return this.httpClient.get("/v1/client_settings")
                }
                ,
                e.prototype.request = function() {
                    return this.httpClient.get("/v1/client_settings")
                }
                ,
                e
            }()
              , p = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.request = function(e, t) {
                    return this.httpClient.post("/v1/verify_face_liveness_sync", e, t)
                }
                ,
                e
            }()
              , d = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.request = function(e, t) {
                    return this.httpClient.post("/v1/verify_id_card_sanity_sync", e, t)
                }
                ,
                e
            }()
              , h = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.request = function(e, t) {
                    return this.httpClient.post("/v1/verify_portrait_sanity_sync", e, t)
                }
                ,
                e
            }()
              , m = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.request = function(e, t) {
                    return this.httpClient.post("/v1/detect_id_card_tampering_sync", e, t)
                }
                ,
                e.prototype.requestWithAuthHeaders = function(e, t) {
                    return this.httpClient.post("/v1/detect_id_card_tampering_sync", e, t)
                }
                ,
                e
            }()
              , v = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.request = function(e, t) {
                    return this.httpClient.post("/v1/search_faces_sync", e, t)
                }
                ,
                e.prototype.indexFaces = function(e, t) {
                    return this.httpClient.post("/v1/index_faces_sync", e, t)
                }
                ,
                e.prototype.deleteFaces = function(e, t) {
                    return this.httpClient.post("/v1/delete_faces", e, t)
                }
                ,
                e.prototype.downloadFaceImage = function(e) {
                    return s(this, void 0, void 0, (function() {
                        var t;
                        return u(this, (function(n) {
                            switch (n.label) {
                            case 0:
                                return [4, this.httpClient.downloadFile("/v1/face_images/" + e)];
                            case 1:
                                return t = n.sent(),
                                [2, URL.createObjectURL(t)]
                            }
                        }
                        ))
                    }
                    ))
                }
                ,
                e
            }()
              , g = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.request = function(e, t) {
                    return this.httpClient.postFormData("/v1/convert_pdf_sync", e, t)
                }
                ,
                e
            }()
              , y = function() {
                function e(e) {
                    this.httpClient = e
                }
                return e.prototype.request = function(e, t) {
                    return this.httpClient.post("/v1/ekyc_pdf", e, t)
                }
                ,
                e
            }()
              , b = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== a ? a : "undefined" != typeof self ? self : {};
            function x(e, t) {
                return e(t = {
                    exports: {}
                }, t.exports),
                t.exports
            }
            var w = x((function(e) {
                var t, n;
                t = b,
                n = function() {
                    function e(e) {
                        var t = [];
                        if (0 === e.length)
                            return "";
                        if ("string" != typeof e[0])
                            throw new TypeError("Url must be a string. Received " + e[0]);
                        if (e[0].match(/^[^/:]+:\/*$/) && e.length > 1) {
                            var n = e.shift();
                            e[0] = n + e[0]
                        }
                        e[0].match(/^file:\/\/\//) ? e[0] = e[0].replace(/^([^/:]+):\/*/, "$1:///") : e[0] = e[0].replace(/^([^/:]+):\/*/, "$1://");
                        for (var r = 0; r < e.length; r++) {
                            var a = e[r];
                            if ("string" != typeof a)
                                throw new TypeError("Url must be a string. Received " + a);
                            "" !== a && (r > 0 && (a = a.replace(/^[\/]+/, "")),
                            a = r < e.length - 1 ? a.replace(/[\/]+$/, "") : a.replace(/[\/]+$/, "/"),
                            t.push(a))
                        }
                        var o = t.join("/")
                          , i = (o = o.replace(/\/(\?|&|#[^!])/g, "$1")).split("?");
                        return i.shift() + (i.length > 0 ? "?" : "") + i.join("&")
                    }
                    return function() {
                        return e("object" == typeof arguments[0] ? arguments[0] : [].slice.call(arguments))
                    }
                }
                ,
                e.exports ? e.exports = n() : t.urljoin = n()
            }
            ));
            function k(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
            var C = function(e, t, n, r) {
                t = t || "&",
                n = n || "=";
                var a = {};
                if ("string" != typeof e || 0 === e.length)
                    return a;
                var o = /\+/g;
                e = e.split(t);
                var i = 1e3;
                r && "number" == typeof r.maxKeys && (i = r.maxKeys);
                var s = e.length;
                i > 0 && s > i && (s = i);
                for (var u = 0; u < s; ++u) {
                    var c, l, f, p, d = e[u].replace(o, "%20"), h = d.indexOf(n);
                    h >= 0 ? (c = d.substr(0, h),
                    l = d.substr(h + 1)) : (c = d,
                    l = ""),
                    f = decodeURIComponent(c),
                    p = decodeURIComponent(l),
                    k(a, f) ? Array.isArray(a[f]) ? a[f].push(p) : a[f] = [a[f], p] : a[f] = p
                }
                return a
            }
              , E = function(e) {
                switch (typeof e) {
                case "string":
                    return e;
                case "boolean":
                    return e ? "true" : "false";
                case "number":
                    return isFinite(e) ? e : "";
                default:
                    return ""
                }
            }
              , S = function(e, t, n, r) {
                return t = t || "&",
                n = n || "=",
                null === e && (e = void 0),
                "object" == typeof e ? Object.keys(e).map((function(r) {
                    var a = encodeURIComponent(E(r)) + n;
                    return Array.isArray(e[r]) ? e[r].map((function(e) {
                        return a + encodeURIComponent(E(e))
                    }
                    )).join(t) : a + encodeURIComponent(E(e[r]))
                }
                )).join(t) : r ? encodeURIComponent(E(r)) + n + encodeURIComponent(E(e)) : ""
            }
              , I = x((function(e, t) {
                t.decode = t.parse = C,
                t.encode = t.stringify = S
            }
            ))
              , T = (I.decode,
            I.parse,
            I.encode,
            I.stringify)
              , A = function() {
                function e(e) {
                    this.authorizer = e.authorizer,
                    this.domain = e.domain,
                    this.onError = e.onError
                }
                return e.prototype.get = function(e, t, n) {
                    var r = new URL(this.resolveUrl(e));
                    return t && (r.search = T(t)),
                    this.request(r.toString(), {
                        requestPath: e,
                        method: "GET",
                        headers: n
                    })
                }
                ,
                e.prototype.post = function(e, t, n) {
                    var a = this.resolveUrl(e);
                    return this.request(a, {
                        requestPath: e,
                        method: "POST",
                        body: JSON.stringify(t),
                        headers: r({
                            "Content-Type": "application/json"
                        }, n)
                    })
                }
                ,
                e.prototype.postFormData = function(e, t, n) {
                    var r, a = t instanceof FormData ? t : (r = t,
                    Object.entries(r).reduce((function(e, t) {
                        var n = t[0]
                          , r = t[1];
                        return Array.isArray(r) ? r.forEach((function(t, a) {
                            return e.append(n + "[" + a + "]", r)
                        }
                        )) : !(r instanceof Object) || r instanceof File || r instanceof Date || r instanceof Blob ? e.append(n, r) : Object.entries(r).forEach((function(t, a) {
                            return e.append(n + "[" + a + "]", r[a])
                        }
                        )),
                        e
                    }
                    ), new FormData)), o = this.resolveUrl(e);
                    return this.request(o, {
                        requestPath: e,
                        method: "POST",
                        body: a,
                        headers: n
                    })
                }
                ,
                e.prototype.patch = function(e, t, n) {
                    var a = this.resolveUrl(e);
                    return this.request(a, {
                        requestPath: e,
                        method: "PATCH",
                        body: JSON.stringify(t),
                        headers: r({
                            "Content-Type": "application/json"
                        }, n)
                    })
                }
                ,
                e.prototype.delete = function(e, t, n) {
                    var a = this.resolveUrl(e);
                    return this.request(a, {
                        requestPath: e,
                        method: "DELETE",
                        body: JSON.stringify(t),
                        headers: r({
                            "Content-Type": "application/json"
                        }, n)
                    })
                }
                ,
                e.prototype.downloadFile = function(e) {
                    var t = this.resolveUrl(e);
                    return this.request(t, {
                        requestPath: e,
                        method: "GET"
                    }, "blob")
                }
                ,
                e.prototype.request = function(e, t, n) {
                    return void 0 === n && (n = "json"),
                    s(this, void 0, void 0, (function() {
                        var a, o, i;
                        return u(this, (function(s) {
                            switch (s.label) {
                            case 0:
                                return a = {},
                                this.authorizer && (a = this.authorizer.getHeaders(t)),
                                t.headers = r(r({}, t.headers), a),
                                [4, fetch(e, t)];
                            case 1:
                                return o = s.sent(),
                                [4, "blob" === n ? o.blob() : o.json()];
                            case 2:
                                if ((i = s.sent()).errors && this.onError)
                                    throw this.onError(i.errors),
                                    i;
                                return [2, i]
                            }
                        }
                        ))
                    }
                    ))
                }
                ,
                e.prototype.resolveUrl = function(e) {
                    return w(this.domain, e)
                }
                ,
                e
            }()
              , N = function() {
                function e(e) {
                    this.mocks = e
                }
                return e.prototype.get = function(e, t) {
                    return this.findInMocks(e, t)
                }
                ,
                e.prototype.post = function(e, t) {
                    return this.findInMocks(e)
                }
                ,
                e.prototype.postFormData = function(e, t) {
                    return this.findInMocks(e)
                }
                ,
                e.prototype.patch = function(e, t) {
                    return this.findInMocks(e)
                }
                ,
                e.prototype.delete = function(e, t) {
                    return this.findInMocks(e)
                }
                ,
                e.prototype.downloadFile = function(e) {
                    return this.findInMocks(e)
                }
                ,
                e.prototype.resolveUrl = function(e) {
                    return this.mocks.resolveUrl ? this.mocks.resolveUrl(e) : e
                }
                ,
                e.prototype.findInMocks = function(e, t) {
                    return s(this, void 0, void 0, (function() {
                        return u(this, (function(n) {
                            return this.mocks[e] ? "function" == typeof this.mocks[e] ? [2, Promise.resolve(this.mocks[e](t))] : [2, Promise.resolve(this.mocks[e])] : [2, Promise.reject(new Error(e + " is not presented in mocks"))]
                        }
                        ))
                    }
                    ))
                }
                ,
                e
            }()
              , _ = x((function(e, t) {
                var n;
                e.exports = n = n || function(e, t) {
                    var n = Object.create || function() {
                        function e() {}
                        return function(t) {
                            var n;
                            return e.prototype = t,
                            n = new e,
                            e.prototype = null,
                            n
                        }
                    }()
                      , r = {}
                      , a = r.lib = {}
                      , o = a.Base = {
                        extend: function(e) {
                            var t = n(this);
                            return e && t.mixIn(e),
                            t.hasOwnProperty("init") && this.init !== t.init || (t.init = function() {
                                t.$super.init.apply(this, arguments)
                            }
                            ),
                            t.init.prototype = t,
                            t.$super = this,
                            t
                        },
                        create: function() {
                            var e = this.extend();
                            return e.init.apply(e, arguments),
                            e
                        },
                        init: function() {},
                        mixIn: function(e) {
                            for (var t in e)
                                e.hasOwnProperty(t) && (this[t] = e[t]);
                            e.hasOwnProperty("toString") && (this.toString = e.toString)
                        },
                        clone: function() {
                            return this.init.prototype.extend(this)
                        }
                    }
                      , i = a.WordArray = o.extend({
                        init: function(e, t) {
                            e = this.words = e || [],
                            this.sigBytes = null != t ? t : 4 * e.length
                        },
                        toString: function(e) {
                            return (e || u).stringify(this)
                        },
                        concat: function(e) {
                            var t = this.words
                              , n = e.words
                              , r = this.sigBytes
                              , a = e.sigBytes;
                            if (this.clamp(),
                            r % 4)
                                for (var o = 0; o < a; o++) {
                                    var i = n[o >>> 2] >>> 24 - o % 4 * 8 & 255;
                                    t[r + o >>> 2] |= i << 24 - (r + o) % 4 * 8
                                }
                            else
                                for (o = 0; o < a; o += 4)
                                    t[r + o >>> 2] = n[o >>> 2];
                            return this.sigBytes += a,
                            this
                        },
                        clamp: function() {
                            var t = this.words
                              , n = this.sigBytes;
                            t[n >>> 2] &= 4294967295 << 32 - n % 4 * 8,
                            t.length = e.ceil(n / 4)
                        },
                        clone: function() {
                            var e = o.clone.call(this);
                            return e.words = this.words.slice(0),
                            e
                        },
                        random: function(t) {
                            for (var n, r = [], a = function(t) {
                                t = t;
                                var n = 987654321
                                  , r = 4294967295;
                                return function() {
                                    var a = ((n = 36969 * (65535 & n) + (n >> 16) & r) << 16) + (t = 18e3 * (65535 & t) + (t >> 16) & r) & r;
                                    return a /= 4294967296,
                                    (a += .5) * (e.random() > .5 ? 1 : -1)
                                }
                            }, o = 0; o < t; o += 4) {
                                var s = a(4294967296 * (n || e.random()));
                                n = 987654071 * s(),
                                r.push(4294967296 * s() | 0)
                            }
                            return new i.init(r,t)
                        }
                    })
                      , s = r.enc = {}
                      , u = s.Hex = {
                        stringify: function(e) {
                            for (var t = e.words, n = e.sigBytes, r = [], a = 0; a < n; a++) {
                                var o = t[a >>> 2] >>> 24 - a % 4 * 8 & 255;
                                r.push((o >>> 4).toString(16)),
                                r.push((15 & o).toString(16))
                            }
                            return r.join("")
                        },
                        parse: function(e) {
                            for (var t = e.length, n = [], r = 0; r < t; r += 2)
                                n[r >>> 3] |= parseInt(e.substr(r, 2), 16) << 24 - r % 8 * 4;
                            return new i.init(n,t / 2)
                        }
                    }
                      , c = s.Latin1 = {
                        stringify: function(e) {
                            for (var t = e.words, n = e.sigBytes, r = [], a = 0; a < n; a++) {
                                var o = t[a >>> 2] >>> 24 - a % 4 * 8 & 255;
                                r.push(String.fromCharCode(o))
                            }
                            return r.join("")
                        },
                        parse: function(e) {
                            for (var t = e.length, n = [], r = 0; r < t; r++)
                                n[r >>> 2] |= (255 & e.charCodeAt(r)) << 24 - r % 4 * 8;
                            return new i.init(n,t)
                        }
                    }
                      , l = s.Utf8 = {
                        stringify: function(e) {
                            try {
                                return decodeURIComponent(escape(c.stringify(e)))
                            } catch (e) {
                                throw new Error("Malformed UTF-8 data")
                            }
                        },
                        parse: function(e) {
                            return c.parse(unescape(encodeURIComponent(e)))
                        }
                    }
                      , f = a.BufferedBlockAlgorithm = o.extend({
                        reset: function() {
                            this._data = new i.init,
                            this._nDataBytes = 0
                        },
                        _append: function(e) {
                            "string" == typeof e && (e = l.parse(e)),
                            this._data.concat(e),
                            this._nDataBytes += e.sigBytes
                        },
                        _process: function(t) {
                            var n = this._data
                              , r = n.words
                              , a = n.sigBytes
                              , o = this.blockSize
                              , s = a / (4 * o)
                              , u = (s = t ? e.ceil(s) : e.max((0 | s) - this._minBufferSize, 0)) * o
                              , c = e.min(4 * u, a);
                            if (u) {
                                for (var l = 0; l < u; l += o)
                                    this._doProcessBlock(r, l);
                                var f = r.splice(0, u);
                                n.sigBytes -= c
                            }
                            return new i.init(f,c)
                        },
                        clone: function() {
                            var e = o.clone.call(this);
                            return e._data = this._data.clone(),
                            e
                        },
                        _minBufferSize: 0
                    })
                      , p = (a.Hasher = f.extend({
                        cfg: o.extend(),
                        init: function(e) {
                            this.cfg = this.cfg.extend(e),
                            this.reset()
                        },
                        reset: function() {
                            f.reset.call(this),
                            this._doReset()
                        },
                        update: function(e) {
                            return this._append(e),
                            this._process(),
                            this
                        },
                        finalize: function(e) {
                            return e && this._append(e),
                            this._doFinalize()
                        },
                        blockSize: 16,
                        _createHelper: function(e) {
                            return function(t, n) {
                                return new e.init(n).finalize(t)
                            }
                        },
                        _createHmacHelper: function(e) {
                            return function(t, n) {
                                return new p.HMAC.init(e,n).finalize(t)
                            }
                        }
                    }),
                    r.algo = {});
                    return r
                }(Math)
            }
            ))
              , R = x((function(e, t) {
                var n, r, a;
                e.exports = (r = (n = a = _).lib.WordArray,
                n.enc.Base64 = {
                    stringify: function(e) {
                        var t = e.words
                          , n = e.sigBytes
                          , r = this._map;
                        e.clamp();
                        for (var a = [], o = 0; o < n; o += 3)
                            for (var i = (t[o >>> 2] >>> 24 - o % 4 * 8 & 255) << 16 | (t[o + 1 >>> 2] >>> 24 - (o + 1) % 4 * 8 & 255) << 8 | t[o + 2 >>> 2] >>> 24 - (o + 2) % 4 * 8 & 255, s = 0; s < 4 && o + .75 * s < n; s++)
                                a.push(r.charAt(i >>> 6 * (3 - s) & 63));
                        var u = r.charAt(64);
                        if (u)
                            for (; a.length % 4; )
                                a.push(u);
                        return a.join("")
                    },
                    parse: function(e) {
                        var t = e.length
                          , n = this._map
                          , a = this._reverseMap;
                        if (!a) {
                            a = this._reverseMap = [];
                            for (var o = 0; o < n.length; o++)
                                a[n.charCodeAt(o)] = o
                        }
                        var i = n.charAt(64);
                        if (i) {
                            var s = e.indexOf(i);
                            -1 !== s && (t = s)
                        }
                        return function(e, t, n) {
                            for (var a = [], o = 0, i = 0; i < t; i++)
                                if (i % 4) {
                                    var s = n[e.charCodeAt(i - 1)] << i % 4 * 2
                                      , u = n[e.charCodeAt(i)] >>> 6 - i % 4 * 2;
                                    a[o >>> 2] |= (s | u) << 24 - o % 4 * 8,
                                    o++
                                }
                            return r.create(a, o)
                        }(e, t, a)
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                },
                a.enc.Base64)
            }
            ))
              , O = (x((function(e, t) {
                var n;
                e.exports = (n = _,
                function(e) {
                    var t = n
                      , r = t.lib
                      , a = r.WordArray
                      , o = r.Hasher
                      , i = t.algo
                      , s = []
                      , u = [];
                    !function() {
                        function t(t) {
                            for (var n = e.sqrt(t), r = 2; r <= n; r++)
                                if (!(t % r))
                                    return !1;
                            return !0
                        }
                        function n(e) {
                            return 4294967296 * (e - (0 | e)) | 0
                        }
                        for (var r = 2, a = 0; a < 64; )
                            t(r) && (a < 8 && (s[a] = n(e.pow(r, .5))),
                            u[a] = n(e.pow(r, 1 / 3)),
                            a++),
                            r++
                    }();
                    var c = []
                      , l = i.SHA256 = o.extend({
                        _doReset: function() {
                            this._hash = new a.init(s.slice(0))
                        },
                        _doProcessBlock: function(e, t) {
                            for (var n = this._hash.words, r = n[0], a = n[1], o = n[2], i = n[3], s = n[4], l = n[5], f = n[6], p = n[7], d = 0; d < 64; d++) {
                                if (d < 16)
                                    c[d] = 0 | e[t + d];
                                else {
                                    var h = c[d - 15]
                                      , m = (h << 25 | h >>> 7) ^ (h << 14 | h >>> 18) ^ h >>> 3
                                      , v = c[d - 2]
                                      , g = (v << 15 | v >>> 17) ^ (v << 13 | v >>> 19) ^ v >>> 10;
                                    c[d] = m + c[d - 7] + g + c[d - 16]
                                }
                                var y = r & a ^ r & o ^ a & o
                                  , b = (r << 30 | r >>> 2) ^ (r << 19 | r >>> 13) ^ (r << 10 | r >>> 22)
                                  , x = p + ((s << 26 | s >>> 6) ^ (s << 21 | s >>> 11) ^ (s << 7 | s >>> 25)) + (s & l ^ ~s & f) + u[d] + c[d];
                                p = f,
                                f = l,
                                l = s,
                                s = i + x | 0,
                                i = o,
                                o = a,
                                a = r,
                                r = x + (b + y) | 0
                            }
                            n[0] = n[0] + r | 0,
                            n[1] = n[1] + a | 0,
                            n[2] = n[2] + o | 0,
                            n[3] = n[3] + i | 0,
                            n[4] = n[4] + s | 0,
                            n[5] = n[5] + l | 0,
                            n[6] = n[6] + f | 0,
                            n[7] = n[7] + p | 0
                        },
                        _doFinalize: function() {
                            var t = this._data
                              , n = t.words
                              , r = 8 * this._nDataBytes
                              , a = 8 * t.sigBytes;
                            return n[a >>> 5] |= 128 << 24 - a % 32,
                            n[14 + (a + 64 >>> 9 << 4)] = e.floor(r / 4294967296),
                            n[15 + (a + 64 >>> 9 << 4)] = r,
                            t.sigBytes = 4 * n.length,
                            this._process(),
                            this._hash
                        },
                        clone: function() {
                            var e = o.clone.call(this);
                            return e._hash = this._hash.clone(),
                            e
                        }
                    });
                    t.SHA256 = o._createHelper(l),
                    t.HmacSHA256 = o._createHmacHelper(l)
                }(Math),
                n.SHA256)
            }
            )),
            x((function(e, t) {
                var n, r, a;
                e.exports = (r = (n = _).lib.Base,
                a = n.enc.Utf8,
                void (n.algo.HMAC = r.extend({
                    init: function(e, t) {
                        e = this._hasher = new e.init,
                        "string" == typeof t && (t = a.parse(t));
                        var n = e.blockSize
                          , r = 4 * n;
                        t.sigBytes > r && (t = e.finalize(t)),
                        t.clamp();
                        for (var o = this._oKey = t.clone(), i = this._iKey = t.clone(), s = o.words, u = i.words, c = 0; c < n; c++)
                            s[c] ^= 1549556828,
                            u[c] ^= 909522486;
                        o.sigBytes = i.sigBytes = r,
                        this.reset()
                    },
                    reset: function() {
                        var e = this._hasher;
                        e.reset(),
                        e.update(this._iKey)
                    },
                    update: function(e) {
                        return this._hasher.update(e),
                        this
                    },
                    finalize: function(e) {
                        var t = this._hasher
                          , n = t.finalize(e);
                        return t.reset(),
                        t.finalize(this._oKey.clone().concat(n))
                    }
                })))
            }
            )),
            x((function(e, t) {
                e.exports = _.HmacSHA256
            }
            )))
              , D = function() {
                function e(e, t) {
                    this.accessKey = e,
                    this.keySecret = t
                }
                return e.prototype.getHeaders = function(e) {
                    var t = function(e) {
                        function t(e) {
                            return e < 10 ? "0" + e : e
                        }
                        return e.getFullYear() + "-" + t(e.getMonth() + 1) + "-" + t(e.getDate()) + "T" + t(e.getHours()) + ":" + t(e.getMinutes()) + ":" + t(e.getSeconds()) + (0 === (n = e.getTimezoneOffset()) ? "Z" : (r = n > 0 ? "-" : "+",
                        n = Math.abs(n),
                        r + t(Math.floor(n / 60)) + ":" + t(n % 60)));
                        var n, r
                    }(new Date);
                    return {
                        Authorization: this.generateAuthorization(e.requestPath, e.method, t),
                        "X-TV-Timestamp": t
                    }
                }
                ,
                e.prototype.generateAuthorization = function(e, t, n) {
                    var r = this.computeStringToSign(e, t, n)
                      , a = R.stringify(this.computeSignature(r));
                    return this.formatAuthToken("TV", a)
                }
                ,
                e.prototype.formatAuthToken = function(e, t) {
                    return e + " " + this.accessKey + ":" + t
                }
                ,
                e.prototype.computeStringToSign = function(e, t, n) {
                    return t + "\n" + e + "\n" + n
                }
                ,
                e.prototype.computeSignature = function(e) {
                    return O(e, this.keySecret)
                }
                ,
                e
            }();
            function B(e) {
                switch (e) {
                case "testing":
                    return "https://tv-testing.trustingsocial.com/api";
                case "staging":
                    return "https://tv-staging.trustingsocial.com/api";
                case "production":
                    return "https://vn-vision.trustingsocial.com/api";
                default:
                    return e
                }
            }
            function F(e, t, n) {
                void 0 === n && (n = "production");
                var r = new D(e,t)
                  , a = B(n);
                return new A({
                    authorizer: r,
                    domain: a
                })
            }
            var M = function() {
                function e(e) {
                    void 0 === e && (e = "production");
                    var t = new A({
                        domain: B(e)
                    });
                    this.imagesService = new c(t),
                    this.detectIDTamperingService = new m(t)
                }
                return e.prototype.uploadImage = function(e, t) {
                    return this.imagesService.requestWithHeaders(e, t)
                }
                ,
                e.prototype.detectTampering = function(e, t) {
                    return this.detectIDTamperingService.requestWithAuthHeaders(e, t)
                }
                ,
                e
            }();
            function P(e) {
                var t = e.headerIndex;
                return function(e, n, a) {
                    var o = a.value
                      , i = r({}, a);
                    return i.value = function() {
                        for (var e = [], n = 0; n < arguments.length; n++)
                            e[n] = arguments[n];
                        return s(this, void 0, void 0, (function() {
                            var n, a, i, s;
                            return u(this, (function(u) {
                                switch (u.label) {
                                case 0:
                                    return this.transactionEnabled ? [4, this.transactionManager.begin()] : [3, 4];
                                case 1:
                                    return n = u.sent(),
                                    a = function() {
                                        for (var e = 0, t = 0, n = arguments.length; t < n; t++)
                                            e += arguments[t].length;
                                        var r = Array(e)
                                          , a = 0;
                                        for (t = 0; t < n; t++)
                                            for (var o = arguments[t], i = 0, s = o.length; i < s; i++,
                                            a++)
                                                r[a] = o[i];
                                        return r
                                    }(e),
                                    (i = r({}, a[t]))["X-TV-Transaction"] = n,
                                    a[t] = i,
                                    [4, o.apply(this, a)];
                                case 2:
                                    return s = u.sent(),
                                    [4, this.transactionManager.end()];
                                case 3:
                                    return u.sent(),
                                    [2, s];
                                case 4:
                                    return [4, o.apply(this, e)];
                                case 5:
                                    return [2, u.sent()]
                                }
                            }
                            ))
                        }
                        ))
                    }
                    ,
                    i
                }
            }
            function L(e) {
                return void 0 === e && (e = {
                    encryptedField: "data"
                }),
                function(t, n, a) {
                    var o = a.value
                      , i = r({}, a);
                    return i.value = function() {
                        for (var t = [], n = 0; n < arguments.length; n++)
                            t[n] = arguments[n];
                        return s(this, void 0, void 0, (function() {
                            var n, r;
                            return u(this, (function(a) {
                                switch (a.label) {
                                case 0:
                                    return [4, o.apply(this, t)];
                                case 1:
                                    return n = a.sent(),
                                    this.encryptionEnabled && "string" == typeof n[e.encryptedField] ? (r = this.encryptionService.decrypt(n[e.encryptedField], {
                                        transactionID: this.transactionManager.currentTransactionID
                                    }),
                                    [2, JSON.parse(r)]) : [2, n]
                                }
                            }
                            ))
                        }
                        ))
                    }
                    ,
                    i
                }
            }
            var U = function() {
                function e(e) {
                    this.httpClient = e,
                    this.transactionID = "",
                    this.totalTransactions = 0,
                    this.currentTransaction = 0
                }
                return Object.defineProperty(e.prototype, "currentTransactionID", {
                    get: function() {
                        return this.transactionID
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                e.prototype.begin = function() {
                    return s(this, void 0, void 0, (function() {
                        var e, t, n = this;
                        return u(this, (function(r) {
                            switch (r.label) {
                            case 0:
                                return e = this.totalTransactions++,
                                [4, new Promise((function(t, r) {
                                    var a = window.performance.now()
                                      , o = setInterval((function() {
                                        e === n.currentTransaction && (clearInterval(o),
                                        t(!0)),
                                        window.performance.now() - a >= 3e3 && (clearInterval(o),
                                        r(new Error("Transaction timeout")))
                                    }
                                    ), 100)
                                }
                                ))];
                            case 1:
                                return r.sent(),
                                [4, this.httpClient.post("/v1/transactions", {})];
                            case 2:
                                return t = r.sent().data,
                                this.transactionID = t.id,
                                [2, t.id]
                            }
                        }
                        ))
                    }
                    ))
                }
                ,
                e.prototype.end = function() {
                    return s(this, void 0, void 0, (function() {
                        var e;
                        return u(this, (function(t) {
                            switch (t.label) {
                            case 0:
                                return [4, this.httpClient.post("/v1/transactions/" + this.transactionID + "/finish")];
                            case 1:
                                return e = t.sent(),
                                this.transactionID = "",
                                this.currentTransaction++,
                                [2, e]
                            }
                        }
                        ))
                    }
                    ))
                }
                ,
                e
            }()
              , V = {
                options: {
                    usePureJavaScript: !1
                }
            }
              , z = {}
              , W = z
              , j = {};
            z.encode = function(e, t, n) {
                if ("string" != typeof t)
                    throw new TypeError('"alphabet" must be a string.');
                if (void 0 !== n && "number" != typeof n)
                    throw new TypeError('"maxline" must be a number.');
                var r = "";
                if (e instanceof Uint8Array) {
                    var a = 0
                      , o = t.length
                      , i = t.charAt(0)
                      , s = [0];
                    for (a = 0; a < e.length; ++a) {
                        for (var u = 0, c = e[a]; u < s.length; ++u)
                            c += s[u] << 8,
                            s[u] = c % o,
                            c = c / o | 0;
                        for (; c > 0; )
                            s.push(c % o),
                            c = c / o | 0
                    }
                    for (a = 0; 0 === e[a] && a < e.length - 1; ++a)
                        r += i;
                    for (a = s.length - 1; a >= 0; --a)
                        r += t[s[a]]
                } else
                    r = function(e, t) {
                        var n = 0
                          , r = t.length
                          , a = t.charAt(0)
                          , o = [0];
                        for (n = 0; n < e.length(); ++n) {
                            for (var i = 0, s = e.at(n); i < o.length; ++i)
                                s += o[i] << 8,
                                o[i] = s % r,
                                s = s / r | 0;
                            for (; s > 0; )
                                o.push(s % r),
                                s = s / r | 0
                        }
                        var u = "";
                        for (n = 0; 0 === e.at(n) && n < e.length() - 1; ++n)
                            u += a;
                        for (n = o.length - 1; n >= 0; --n)
                            u += t[o[n]];
                        return u
                    }(e, t);
                if (n) {
                    var l = new RegExp(".{1," + n + "}","g");
                    r = r.match(l).join("\r\n")
                }
                return r
            }
            ,
            z.decode = function(e, t) {
                if ("string" != typeof e)
                    throw new TypeError('"input" must be a string.');
                if ("string" != typeof t)
                    throw new TypeError('"alphabet" must be a string.');
                var n = j[t];
                if (!n) {
                    n = j[t] = [];
                    for (var r = 0; r < t.length; ++r)
                        n[t.charCodeAt(r)] = r
                }
                e = e.replace(/\s/g, "");
                var a = t.length
                  , o = t.charAt(0)
                  , i = [0];
                for (r = 0; r < e.length; r++) {
                    var s = n[e.charCodeAt(r)];
                    if (void 0 === s)
                        return;
                    for (var u = 0, c = s; u < i.length; ++u)
                        c += i[u] * a,
                        i[u] = 255 & c,
                        c >>= 8;
                    for (; c > 0; )
                        i.push(255 & c),
                        c >>= 8
                }
                for (var l = 0; e[l] === o && l < e.length - 1; ++l)
                    i.push(0);
                return "undefined" != typeof Buffer ? Buffer.from(i.reverse()) : new Uint8Array(i.reverse())
            }
            ,
            x((function(e) {
                var t = e.exports = V.util = V.util || {};
                function n(e) {
                    if (8 !== e && 16 !== e && 24 !== e && 32 !== e)
                        throw new Error("Only 8, 16, 24, or 32 bits supported: " + e)
                }
                function r(e) {
                    if (this.data = "",
                    this.read = 0,
                    "string" == typeof e)
                        this.data = e;
                    else if (t.isArrayBuffer(e) || t.isArrayBufferView(e))
                        if ("undefined" != typeof Buffer && e instanceof Buffer)
                            this.data = e.toString("binary");
                        else {
                            var n = new Uint8Array(e);
                            try {
                                this.data = String.fromCharCode.apply(null, n)
                            } catch (e) {
                                for (var a = 0; a < n.length; ++a)
                                    this.putByte(n[a])
                            }
                        }
                    else
                        (e instanceof r || "object" == typeof e && "string" == typeof e.data && "number" == typeof e.read) && (this.data = e.data,
                        this.read = e.read);
                    this._constructedStringLength = 0
                }
                !function() {
                    if ("undefined" != typeof process && process.nextTick && !process.browser)
                        return t.nextTick = process.nextTick,
                        void ("function" == typeof setImmediate ? t.setImmediate = setImmediate : t.setImmediate = t.nextTick);
                    if ("function" == typeof setImmediate)
                        return t.setImmediate = function() {
                            return setImmediate.apply(void 0, arguments)
                        }
                        ,
                        void (t.nextTick = function(e) {
                            return setImmediate(e)
                        }
                        );
                    if (t.setImmediate = function(e) {
                        setTimeout(e, 0)
                    }
                    ,
                    "undefined" != typeof window && "function" == typeof window.postMessage) {
                        var e = "forge.setImmediate"
                          , n = [];
                        t.setImmediate = function(t) {
                            n.push(t),
                            1 === n.length && window.postMessage(e, "*")
                        }
                        ,
                        window.addEventListener("message", (function(t) {
                            if (t.source === window && t.data === e) {
                                t.stopPropagation();
                                var r = n.slice();
                                n.length = 0,
                                r.forEach((function(e) {
                                    e()
                                }
                                ))
                            }
                        }
                        ), !0)
                    }
                    if ("undefined" != typeof MutationObserver) {
                        var r = Date.now()
                          , a = !0
                          , o = document.createElement("div");
                        n = [],
                        new MutationObserver((function() {
                            var e = n.slice();
                            n.length = 0,
                            e.forEach((function(e) {
                                e()
                            }
                            ))
                        }
                        )).observe(o, {
                            attributes: !0
                        });
                        var i = t.setImmediate;
                        t.setImmediate = function(e) {
                            Date.now() - r > 15 ? (r = Date.now(),
                            i(e)) : (n.push(e),
                            1 === n.length && o.setAttribute("a", a = !a))
                        }
                    }
                    t.nextTick = t.setImmediate
                }(),
                t.isNodejs = "undefined" != typeof process && process.versions && process.versions.node,
                t.globalScope = t.isNodejs ? b : "undefined" == typeof self ? window : self,
                t.isArray = Array.isArray || function(e) {
                    return "[object Array]" === Object.prototype.toString.call(e)
                }
                ,
                t.isArrayBuffer = function(e) {
                    return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer
                }
                ,
                t.isArrayBufferView = function(e) {
                    return e && t.isArrayBuffer(e.buffer) && void 0 !== e.byteLength
                }
                ,
                t.ByteBuffer = r,
                t.ByteStringBuffer = r,
                t.ByteStringBuffer.prototype._optimizeConstructedString = function(e) {
                    this._constructedStringLength += e,
                    this._constructedStringLength > 4096 && (this.data.substr(0, 1),
                    this._constructedStringLength = 0)
                }
                ,
                t.ByteStringBuffer.prototype.length = function() {
                    return this.data.length - this.read
                }
                ,
                t.ByteStringBuffer.prototype.isEmpty = function() {
                    return this.length() <= 0
                }
                ,
                t.ByteStringBuffer.prototype.putByte = function(e) {
                    return this.putBytes(String.fromCharCode(e))
                }
                ,
                t.ByteStringBuffer.prototype.fillWithByte = function(e, t) {
                    e = String.fromCharCode(e);
                    for (var n = this.data; t > 0; )
                        1 & t && (n += e),
                        (t >>>= 1) > 0 && (e += e);
                    return this.data = n,
                    this._optimizeConstructedString(t),
                    this
                }
                ,
                t.ByteStringBuffer.prototype.putBytes = function(e) {
                    return this.data += e,
                    this._optimizeConstructedString(e.length),
                    this
                }
                ,
                t.ByteStringBuffer.prototype.putString = function(e) {
                    return this.putBytes(t.encodeUtf8(e))
                }
                ,
                t.ByteStringBuffer.prototype.putInt16 = function(e) {
                    return this.putBytes(String.fromCharCode(e >> 8 & 255) + String.fromCharCode(255 & e))
                }
                ,
                t.ByteStringBuffer.prototype.putInt24 = function(e) {
                    return this.putBytes(String.fromCharCode(e >> 16 & 255) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(255 & e))
                }
                ,
                t.ByteStringBuffer.prototype.putInt32 = function(e) {
                    return this.putBytes(String.fromCharCode(e >> 24 & 255) + String.fromCharCode(e >> 16 & 255) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(255 & e))
                }
                ,
                t.ByteStringBuffer.prototype.putInt16Le = function(e) {
                    return this.putBytes(String.fromCharCode(255 & e) + String.fromCharCode(e >> 8 & 255))
                }
                ,
                t.ByteStringBuffer.prototype.putInt24Le = function(e) {
                    return this.putBytes(String.fromCharCode(255 & e) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(e >> 16 & 255))
                }
                ,
                t.ByteStringBuffer.prototype.putInt32Le = function(e) {
                    return this.putBytes(String.fromCharCode(255 & e) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(e >> 16 & 255) + String.fromCharCode(e >> 24 & 255))
                }
                ,
                t.ByteStringBuffer.prototype.putInt = function(e, t) {
                    n(t);
                    var r = "";
                    do {
                        t -= 8,
                        r += String.fromCharCode(e >> t & 255)
                    } while (t > 0);return this.putBytes(r)
                }
                ,
                t.ByteStringBuffer.prototype.putSignedInt = function(e, t) {
                    return e < 0 && (e += 2 << t - 1),
                    this.putInt(e, t)
                }
                ,
                t.ByteStringBuffer.prototype.putBuffer = function(e) {
                    return this.putBytes(e.getBytes())
                }
                ,
                t.ByteStringBuffer.prototype.getByte = function() {
                    return this.data.charCodeAt(this.read++)
                }
                ,
                t.ByteStringBuffer.prototype.getInt16 = function() {
                    var e = this.data.charCodeAt(this.read) << 8 ^ this.data.charCodeAt(this.read + 1);
                    return this.read += 2,
                    e
                }
                ,
                t.ByteStringBuffer.prototype.getInt24 = function() {
                    var e = this.data.charCodeAt(this.read) << 16 ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2);
                    return this.read += 3,
                    e
                }
                ,
                t.ByteStringBuffer.prototype.getInt32 = function() {
                    var e = this.data.charCodeAt(this.read) << 24 ^ this.data.charCodeAt(this.read + 1) << 16 ^ this.data.charCodeAt(this.read + 2) << 8 ^ this.data.charCodeAt(this.read + 3);
                    return this.read += 4,
                    e
                }
                ,
                t.ByteStringBuffer.prototype.getInt16Le = function() {
                    var e = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8;
                    return this.read += 2,
                    e
                }
                ,
                t.ByteStringBuffer.prototype.getInt24Le = function() {
                    var e = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2) << 16;
                    return this.read += 3,
                    e
                }
                ,
                t.ByteStringBuffer.prototype.getInt32Le = function() {
                    var e = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2) << 16 ^ this.data.charCodeAt(this.read + 3) << 24;
                    return this.read += 4,
                    e
                }
                ,
                t.ByteStringBuffer.prototype.getInt = function(e) {
                    n(e);
                    var t = 0;
                    do {
                        t = (t << 8) + this.data.charCodeAt(this.read++),
                        e -= 8
                    } while (e > 0);return t
                }
                ,
                t.ByteStringBuffer.prototype.getSignedInt = function(e) {
                    var t = this.getInt(e)
                      , n = 2 << e - 2;
                    return t >= n && (t -= n << 1),
                    t
                }
                ,
                t.ByteStringBuffer.prototype.getBytes = function(e) {
                    var t;
                    return e ? (e = Math.min(this.length(), e),
                    t = this.data.slice(this.read, this.read + e),
                    this.read += e) : 0 === e ? t = "" : (t = 0 === this.read ? this.data : this.data.slice(this.read),
                    this.clear()),
                    t
                }
                ,
                t.ByteStringBuffer.prototype.bytes = function(e) {
                    return void 0 === e ? this.data.slice(this.read) : this.data.slice(this.read, this.read + e)
                }
                ,
                t.ByteStringBuffer.prototype.at = function(e) {
                    return this.data.charCodeAt(this.read + e)
                }
                ,
                t.ByteStringBuffer.prototype.setAt = function(e, t) {
                    return this.data = this.data.substr(0, this.read + e) + String.fromCharCode(t) + this.data.substr(this.read + e + 1),
                    this
                }
                ,
                t.ByteStringBuffer.prototype.last = function() {
                    return this.data.charCodeAt(this.data.length - 1)
                }
                ,
                t.ByteStringBuffer.prototype.copy = function() {
                    var e = t.createBuffer(this.data);
                    return e.read = this.read,
                    e
                }
                ,
                t.ByteStringBuffer.prototype.compact = function() {
                    return this.read > 0 && (this.data = this.data.slice(this.read),
                    this.read = 0),
                    this
                }
                ,
                t.ByteStringBuffer.prototype.clear = function() {
                    return this.data = "",
                    this.read = 0,
                    this
                }
                ,
                t.ByteStringBuffer.prototype.truncate = function(e) {
                    var t = Math.max(0, this.length() - e);
                    return this.data = this.data.substr(this.read, t),
                    this.read = 0,
                    this
                }
                ,
                t.ByteStringBuffer.prototype.toHex = function() {
                    for (var e = "", t = this.read; t < this.data.length; ++t) {
                        var n = this.data.charCodeAt(t);
                        n < 16 && (e += "0"),
                        e += n.toString(16)
                    }
                    return e
                }
                ,
                t.ByteStringBuffer.prototype.toString = function() {
                    return t.decodeUtf8(this.bytes())
                }
                ,
                t.DataBuffer = function(e, n) {
                    n = n || {},
                    this.read = n.readOffset || 0,
                    this.growSize = n.growSize || 1024;
                    var r = t.isArrayBuffer(e)
                      , a = t.isArrayBufferView(e);
                    if (r || a)
                        return this.data = r ? new DataView(e) : new DataView(e.buffer,e.byteOffset,e.byteLength),
                        void (this.write = "writeOffset"in n ? n.writeOffset : this.data.byteLength);
                    this.data = new DataView(new ArrayBuffer(0)),
                    this.write = 0,
                    null != e && this.putBytes(e),
                    "writeOffset"in n && (this.write = n.writeOffset)
                }
                ,
                t.DataBuffer.prototype.length = function() {
                    return this.write - this.read
                }
                ,
                t.DataBuffer.prototype.isEmpty = function() {
                    return this.length() <= 0
                }
                ,
                t.DataBuffer.prototype.accommodate = function(e, t) {
                    if (this.length() >= e)
                        return this;
                    t = Math.max(t || this.growSize, e);
                    var n = new Uint8Array(this.data.buffer,this.data.byteOffset,this.data.byteLength)
                      , r = new Uint8Array(this.length() + t);
                    return r.set(n),
                    this.data = new DataView(r.buffer),
                    this
                }
                ,
                t.DataBuffer.prototype.putByte = function(e) {
                    return this.accommodate(1),
                    this.data.setUint8(this.write++, e),
                    this
                }
                ,
                t.DataBuffer.prototype.fillWithByte = function(e, t) {
                    this.accommodate(t);
                    for (var n = 0; n < t; ++n)
                        this.data.setUint8(e);
                    return this
                }
                ,
                t.DataBuffer.prototype.putBytes = function(e, n) {
                    if (t.isArrayBufferView(e)) {
                        var r = (a = new Uint8Array(e.buffer,e.byteOffset,e.byteLength)).byteLength - a.byteOffset;
                        return this.accommodate(r),
                        new Uint8Array(this.data.buffer,this.write).set(a),
                        this.write += r,
                        this
                    }
                    if (t.isArrayBuffer(e)) {
                        var a = new Uint8Array(e);
                        return this.accommodate(a.byteLength),
                        new Uint8Array(this.data.buffer).set(a, this.write),
                        this.write += a.byteLength,
                        this
                    }
                    if (e instanceof t.DataBuffer || "object" == typeof e && "number" == typeof e.read && "number" == typeof e.write && t.isArrayBufferView(e.data))
                        return a = new Uint8Array(e.data.byteLength,e.read,e.length()),
                        this.accommodate(a.byteLength),
                        new Uint8Array(e.data.byteLength,this.write).set(a),
                        this.write += a.byteLength,
                        this;
                    if (e instanceof t.ByteStringBuffer && (e = e.data,
                    n = "binary"),
                    n = n || "binary",
                    "string" == typeof e) {
                        var o;
                        if ("hex" === n)
                            return this.accommodate(Math.ceil(e.length / 2)),
                            o = new Uint8Array(this.data.buffer,this.write),
                            this.write += t.binary.hex.decode(e, o, this.write),
                            this;
                        if ("base64" === n)
                            return this.accommodate(3 * Math.ceil(e.length / 4)),
                            o = new Uint8Array(this.data.buffer,this.write),
                            this.write += t.binary.base64.decode(e, o, this.write),
                            this;
                        if ("utf8" === n && (e = t.encodeUtf8(e),
                        n = "binary"),
                        "binary" === n || "raw" === n)
                            return this.accommodate(e.length),
                            o = new Uint8Array(this.data.buffer,this.write),
                            this.write += t.binary.raw.decode(o),
                            this;
                        if ("utf16" === n)
                            return this.accommodate(2 * e.length),
                            o = new Uint16Array(this.data.buffer,this.write),
                            this.write += t.text.utf16.encode(o),
                            this;
                        throw new Error("Invalid encoding: " + n)
                    }
                    throw Error("Invalid parameter: " + e)
                }
                ,
                t.DataBuffer.prototype.putBuffer = function(e) {
                    return this.putBytes(e),
                    e.clear(),
                    this
                }
                ,
                t.DataBuffer.prototype.putString = function(e) {
                    return this.putBytes(e, "utf16")
                }
                ,
                t.DataBuffer.prototype.putInt16 = function(e) {
                    return this.accommodate(2),
                    this.data.setInt16(this.write, e),
                    this.write += 2,
                    this
                }
                ,
                t.DataBuffer.prototype.putInt24 = function(e) {
                    return this.accommodate(3),
                    this.data.setInt16(this.write, e >> 8 & 65535),
                    this.data.setInt8(this.write, e >> 16 & 255),
                    this.write += 3,
                    this
                }
                ,
                t.DataBuffer.prototype.putInt32 = function(e) {
                    return this.accommodate(4),
                    this.data.setInt32(this.write, e),
                    this.write += 4,
                    this
                }
                ,
                t.DataBuffer.prototype.putInt16Le = function(e) {
                    return this.accommodate(2),
                    this.data.setInt16(this.write, e, !0),
                    this.write += 2,
                    this
                }
                ,
                t.DataBuffer.prototype.putInt24Le = function(e) {
                    return this.accommodate(3),
                    this.data.setInt8(this.write, e >> 16 & 255),
                    this.data.setInt16(this.write, e >> 8 & 65535, !0),
                    this.write += 3,
                    this
                }
                ,
                t.DataBuffer.prototype.putInt32Le = function(e) {
                    return this.accommodate(4),
                    this.data.setInt32(this.write, e, !0),
                    this.write += 4,
                    this
                }
                ,
                t.DataBuffer.prototype.putInt = function(e, t) {
                    n(t),
                    this.accommodate(t / 8);
                    do {
                        t -= 8,
                        this.data.setInt8(this.write++, e >> t & 255)
                    } while (t > 0);return this
                }
                ,
                t.DataBuffer.prototype.putSignedInt = function(e, t) {
                    return n(t),
                    this.accommodate(t / 8),
                    e < 0 && (e += 2 << t - 1),
                    this.putInt(e, t)
                }
                ,
                t.DataBuffer.prototype.getByte = function() {
                    return this.data.getInt8(this.read++)
                }
                ,
                t.DataBuffer.prototype.getInt16 = function() {
                    var e = this.data.getInt16(this.read);
                    return this.read += 2,
                    e
                }
                ,
                t.DataBuffer.prototype.getInt24 = function() {
                    var e = this.data.getInt16(this.read) << 8 ^ this.data.getInt8(this.read + 2);
                    return this.read += 3,
                    e
                }
                ,
                t.DataBuffer.prototype.getInt32 = function() {
                    var e = this.data.getInt32(this.read);
                    return this.read += 4,
                    e
                }
                ,
                t.DataBuffer.prototype.getInt16Le = function() {
                    var e = this.data.getInt16(this.read, !0);
                    return this.read += 2,
                    e
                }
                ,
                t.DataBuffer.prototype.getInt24Le = function() {
                    var e = this.data.getInt8(this.read) ^ this.data.getInt16(this.read + 1, !0) << 8;
                    return this.read += 3,
                    e
                }
                ,
                t.DataBuffer.prototype.getInt32Le = function() {
                    var e = this.data.getInt32(this.read, !0);
                    return this.read += 4,
                    e
                }
                ,
                t.DataBuffer.prototype.getInt = function(e) {
                    n(e);
                    var t = 0;
                    do {
                        t = (t << 8) + this.data.getInt8(this.read++),
                        e -= 8
                    } while (e > 0);return t
                }
                ,
                t.DataBuffer.prototype.getSignedInt = function(e) {
                    var t = this.getInt(e)
                      , n = 2 << e - 2;
                    return t >= n && (t -= n << 1),
                    t
                }
                ,
                t.DataBuffer.prototype.getBytes = function(e) {
                    var t;
                    return e ? (e = Math.min(this.length(), e),
                    t = this.data.slice(this.read, this.read + e),
                    this.read += e) : 0 === e ? t = "" : (t = 0 === this.read ? this.data : this.data.slice(this.read),
                    this.clear()),
                    t
                }
                ,
                t.DataBuffer.prototype.bytes = function(e) {
                    return void 0 === e ? this.data.slice(this.read) : this.data.slice(this.read, this.read + e)
                }
                ,
                t.DataBuffer.prototype.at = function(e) {
                    return this.data.getUint8(this.read + e)
                }
                ,
                t.DataBuffer.prototype.setAt = function(e, t) {
                    return this.data.setUint8(e, t),
                    this
                }
                ,
                t.DataBuffer.prototype.last = function() {
                    return this.data.getUint8(this.write - 1)
                }
                ,
                t.DataBuffer.prototype.copy = function() {
                    return new t.DataBuffer(this)
                }
                ,
                t.DataBuffer.prototype.compact = function() {
                    if (this.read > 0) {
                        var e = new Uint8Array(this.data.buffer,this.read)
                          , t = new Uint8Array(e.byteLength);
                        t.set(e),
                        this.data = new DataView(t),
                        this.write -= this.read,
                        this.read = 0
                    }
                    return this
                }
                ,
                t.DataBuffer.prototype.clear = function() {
                    return this.data = new DataView(new ArrayBuffer(0)),
                    this.read = this.write = 0,
                    this
                }
                ,
                t.DataBuffer.prototype.truncate = function(e) {
                    return this.write = Math.max(0, this.length() - e),
                    this.read = Math.min(this.read, this.write),
                    this
                }
                ,
                t.DataBuffer.prototype.toHex = function() {
                    for (var e = "", t = this.read; t < this.data.byteLength; ++t) {
                        var n = this.data.getUint8(t);
                        n < 16 && (e += "0"),
                        e += n.toString(16)
                    }
                    return e
                }
                ,
                t.DataBuffer.prototype.toString = function(e) {
                    var n = new Uint8Array(this.data,this.read,this.length());
                    if ("binary" === (e = e || "utf8") || "raw" === e)
                        return t.binary.raw.encode(n);
                    if ("hex" === e)
                        return t.binary.hex.encode(n);
                    if ("base64" === e)
                        return t.binary.base64.encode(n);
                    if ("utf8" === e)
                        return t.text.utf8.decode(n);
                    if ("utf16" === e)
                        return t.text.utf16.decode(n);
                    throw new Error("Invalid encoding: " + e)
                }
                ,
                t.createBuffer = function(e, n) {
                    return n = n || "raw",
                    void 0 !== e && "utf8" === n && (e = t.encodeUtf8(e)),
                    new t.ByteBuffer(e)
                }
                ,
                t.fillString = function(e, t) {
                    for (var n = ""; t > 0; )
                        1 & t && (n += e),
                        (t >>>= 1) > 0 && (e += e);
                    return n
                }
                ,
                t.xorBytes = function(e, t, n) {
                    for (var r = "", a = "", o = "", i = 0, s = 0; n > 0; --n,
                    ++i)
                        a = e.charCodeAt(i) ^ t.charCodeAt(i),
                        s >= 10 && (r += o,
                        o = "",
                        s = 0),
                        o += String.fromCharCode(a),
                        ++s;
                    return r + o
                }
                ,
                t.hexToBytes = function(e) {
                    var t = ""
                      , n = 0;
                    for (!0 & e.length && (n = 1,
                    t += String.fromCharCode(parseInt(e[0], 16))); n < e.length; n += 2)
                        t += String.fromCharCode(parseInt(e.substr(n, 2), 16));
                    return t
                }
                ,
                t.bytesToHex = function(e) {
                    return t.createBuffer(e).toHex()
                }
                ,
                t.int32ToBytes = function(e) {
                    return String.fromCharCode(e >> 24 & 255) + String.fromCharCode(e >> 16 & 255) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(255 & e)
                }
                ;
                var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                  , o = [62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, 64, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]
                  , i = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
                t.encode64 = function(e, t) {
                    for (var n, r, o, i = "", s = "", u = 0; u < e.length; )
                        n = e.charCodeAt(u++),
                        r = e.charCodeAt(u++),
                        o = e.charCodeAt(u++),
                        i += a.charAt(n >> 2),
                        i += a.charAt((3 & n) << 4 | r >> 4),
                        isNaN(r) ? i += "==" : (i += a.charAt((15 & r) << 2 | o >> 6),
                        i += isNaN(o) ? "=" : a.charAt(63 & o)),
                        t && i.length > t && (s += i.substr(0, t) + "\r\n",
                        i = i.substr(t));
                    return s + i
                }
                ,
                t.decode64 = function(e) {
                    e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                    for (var t, n, r, a, i = "", s = 0; s < e.length; )
                        t = o[e.charCodeAt(s++) - 43],
                        n = o[e.charCodeAt(s++) - 43],
                        r = o[e.charCodeAt(s++) - 43],
                        a = o[e.charCodeAt(s++) - 43],
                        i += String.fromCharCode(t << 2 | n >> 4),
                        64 !== r && (i += String.fromCharCode((15 & n) << 4 | r >> 2),
                        64 !== a && (i += String.fromCharCode((3 & r) << 6 | a)));
                    return i
                }
                ,
                t.encodeUtf8 = function(e) {
                    return unescape(encodeURIComponent(e))
                }
                ,
                t.decodeUtf8 = function(e) {
                    return decodeURIComponent(escape(e))
                }
                ,
                t.binary = {
                    raw: {},
                    hex: {},
                    base64: {},
                    base58: {},
                    baseN: {
                        encode: W.encode,
                        decode: W.decode
                    }
                },
                t.binary.raw.encode = function(e) {
                    return String.fromCharCode.apply(null, e)
                }
                ,
                t.binary.raw.decode = function(e, t, n) {
                    var r = t;
                    r || (r = new Uint8Array(e.length));
                    for (var a = n = n || 0, o = 0; o < e.length; ++o)
                        r[a++] = e.charCodeAt(o);
                    return t ? a - n : r
                }
                ,
                t.binary.hex.encode = t.bytesToHex,
                t.binary.hex.decode = function(e, t, n) {
                    var r = t;
                    r || (r = new Uint8Array(Math.ceil(e.length / 2)));
                    var a = 0
                      , o = n = n || 0;
                    for (1 & e.length && (a = 1,
                    r[o++] = parseInt(e[0], 16)); a < e.length; a += 2)
                        r[o++] = parseInt(e.substr(a, 2), 16);
                    return t ? o - n : r
                }
                ,
                t.binary.base64.encode = function(e, t) {
                    for (var n, r, o, i = "", s = "", u = 0; u < e.byteLength; )
                        n = e[u++],
                        r = e[u++],
                        o = e[u++],
                        i += a.charAt(n >> 2),
                        i += a.charAt((3 & n) << 4 | r >> 4),
                        isNaN(r) ? i += "==" : (i += a.charAt((15 & r) << 2 | o >> 6),
                        i += isNaN(o) ? "=" : a.charAt(63 & o)),
                        t && i.length > t && (s += i.substr(0, t) + "\r\n",
                        i = i.substr(t));
                    return s + i
                }
                ,
                t.binary.base64.decode = function(e, t, n) {
                    var r, a, i, s, u = t;
                    u || (u = new Uint8Array(3 * Math.ceil(e.length / 4))),
                    e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                    for (var c = 0, l = n = n || 0; c < e.length; )
                        r = o[e.charCodeAt(c++) - 43],
                        a = o[e.charCodeAt(c++) - 43],
                        i = o[e.charCodeAt(c++) - 43],
                        s = o[e.charCodeAt(c++) - 43],
                        u[l++] = r << 2 | a >> 4,
                        64 !== i && (u[l++] = (15 & a) << 4 | i >> 2,
                        64 !== s && (u[l++] = (3 & i) << 6 | s));
                    return t ? l - n : u.subarray(0, l)
                }
                ,
                t.binary.base58.encode = function(e, n) {
                    return t.binary.baseN.encode(e, i, n)
                }
                ,
                t.binary.base58.decode = function(e, n) {
                    return t.binary.baseN.decode(e, i, n)
                }
                ,
                t.text = {
                    utf8: {},
                    utf16: {}
                },
                t.text.utf8.encode = function(e, n, r) {
                    e = t.encodeUtf8(e);
                    var a = n;
                    a || (a = new Uint8Array(e.length));
                    for (var o = r = r || 0, i = 0; i < e.length; ++i)
                        a[o++] = e.charCodeAt(i);
                    return n ? o - r : a
                }
                ,
                t.text.utf8.decode = function(e) {
                    return t.decodeUtf8(String.fromCharCode.apply(null, e))
                }
                ,
                t.text.utf16.encode = function(e, t, n) {
                    var r = t;
                    r || (r = new Uint8Array(2 * e.length));
                    for (var a = new Uint16Array(r.buffer), o = n = n || 0, i = n, s = 0; s < e.length; ++s)
                        a[i++] = e.charCodeAt(s),
                        o += 2;
                    return t ? o - n : r
                }
                ,
                t.text.utf16.decode = function(e) {
                    return String.fromCharCode.apply(null, new Uint16Array(e.buffer))
                }
                ,
                t.deflate = function(e, n, r) {
                    if (n = t.decode64(e.deflate(t.encode64(n)).rval),
                    r) {
                        var a = 2;
                        32 & n.charCodeAt(1) && (a = 6),
                        n = n.substring(a, n.length - 4)
                    }
                    return n
                }
                ,
                t.inflate = function(e, n, r) {
                    var a = e.inflate(t.encode64(n)).rval;
                    return null === a ? null : t.decode64(a)
                }
                ;
                var s = function(e, n, r) {
                    if (!e)
                        throw new Error("WebStorage not available.");
                    var a;
                    if (null === r ? a = e.removeItem(n) : (r = t.encode64(JSON.stringify(r)),
                    a = e.setItem(n, r)),
                    void 0 !== a && !0 !== a.rval) {
                        var o = new Error(a.error.message);
                        throw o.id = a.error.id,
                        o.name = a.error.name,
                        o
                    }
                }
                  , u = function(e, n) {
                    if (!e)
                        throw new Error("WebStorage not available.");
                    var r = e.getItem(n);
                    if (e.init)
                        if (null === r.rval) {
                            if (r.error) {
                                var a = new Error(r.error.message);
                                throw a.id = r.error.id,
                                a.name = r.error.name,
                                a
                            }
                            r = null
                        } else
                            r = r.rval;
                    return null !== r && (r = JSON.parse(t.decode64(r))),
                    r
                }
                  , c = function(e, t, n, r) {
                    var a = u(e, t);
                    null === a && (a = {}),
                    a[n] = r,
                    s(e, t, a)
                }
                  , l = function(e, t, n) {
                    var r = u(e, t);
                    return null !== r && (r = n in r ? r[n] : null),
                    r
                }
                  , f = function(e, t, n) {
                    var r = u(e, t);
                    if (null !== r && n in r) {
                        delete r[n];
                        var a = !0;
                        for (var o in r) {
                            a = !1;
                            break
                        }
                        a && (r = null),
                        s(e, t, r)
                    }
                }
                  , p = function(e, t) {
                    s(e, t, null)
                }
                  , d = function(e, t, n) {
                    var r, a = null;
                    void 0 === n && (n = ["web", "flash"]);
                    var o = !1
                      , i = null;
                    for (var s in n) {
                        r = n[s];
                        try {
                            if ("flash" === r || "both" === r) {
                                if (null === t[0])
                                    throw new Error("Flash local storage not available.");
                                a = e.apply(this, t),
                                o = "flash" === r
                            }
                            "web" !== r && "both" !== r || (t[0] = localStorage,
                            a = e.apply(this, t),
                            o = !0)
                        } catch (e) {
                            i = e
                        }
                        if (o)
                            break
                    }
                    if (!o)
                        throw i;
                    return a
                };
                t.setItem = function(e, t, n, r, a) {
                    d(c, arguments, a)
                }
                ,
                t.getItem = function(e, t, n, r) {
                    return d(l, arguments, r)
                }
                ,
                t.removeItem = function(e, t, n, r) {
                    d(f, arguments, r)
                }
                ,
                t.clearItems = function(e, t, n) {
                    d(p, arguments, n)
                }
                ,
                t.parseUrl = function(e) {
                    var t = /^(https?):\/\/([^:&^\/]*):?(\d*)(.*)$/g;
                    t.lastIndex = 0;
                    var n = t.exec(e)
                      , r = null === n ? null : {
                        full: e,
                        scheme: n[1],
                        host: n[2],
                        port: n[3],
                        path: n[4]
                    };
                    return r && (r.fullHost = r.host,
                    r.port ? (80 !== r.port && "http" === r.scheme || 443 !== r.port && "https" === r.scheme) && (r.fullHost += ":" + r.port) : "http" === r.scheme ? r.port = 80 : "https" === r.scheme && (r.port = 443),
                    r.full = r.scheme + "://" + r.fullHost),
                    r
                }
                ;
                var h = null;
                t.getQueryVariables = function(e) {
                    var t, n = function(e) {
                        for (var t = {}, n = e.split("&"), r = 0; r < n.length; r++) {
                            var a, o, i = n[r].indexOf("=");
                            i > 0 ? (a = n[r].substring(0, i),
                            o = n[r].substring(i + 1)) : (a = n[r],
                            o = null),
                            a in t || (t[a] = []),
                            a in Object.prototype || null === o || t[a].push(unescape(o))
                        }
                        return t
                    };
                    return void 0 === e ? (null === h && (h = "undefined" != typeof window && window.location && window.location.search ? n(window.location.search.substring(1)) : {}),
                    t = h) : t = n(e),
                    t
                }
                ,
                t.parseFragment = function(e) {
                    var n = e
                      , r = ""
                      , a = e.indexOf("?");
                    a > 0 && (n = e.substring(0, a),
                    r = e.substring(a + 1));
                    var o = n.split("/");
                    return o.length > 0 && "" === o[0] && o.shift(),
                    {
                        pathString: n,
                        queryString: r,
                        path: o,
                        query: "" === r ? {} : t.getQueryVariables(r)
                    }
                }
                ,
                t.makeRequest = function(e) {
                    var n = t.parseFragment(e)
                      , r = {
                        path: n.pathString,
                        query: n.queryString,
                        getPath: function(e) {
                            return void 0 === e ? n.path : n.path[e]
                        },
                        getQuery: function(e, t) {
                            var r;
                            return void 0 === e ? r = n.query : (r = n.query[e]) && void 0 !== t && (r = r[t]),
                            r
                        },
                        getQueryLast: function(e, t) {
                            var n = r.getQuery(e);
                            return n ? n[n.length - 1] : t
                        }
                    };
                    return r
                }
                ,
                t.makeLink = function(e, t, n) {
                    e = jQuery.isArray(e) ? e.join("/") : e;
                    var r = jQuery.param(t || {});
                    return n = n || "",
                    e + (r.length > 0 ? "?" + r : "") + (n.length > 0 ? "#" + n : "")
                }
                ,
                t.setPath = function(e, t, n) {
                    if ("object" == typeof e && null !== e)
                        for (var r = 0, a = t.length; r < a; ) {
                            var o = t[r++];
                            if (r == a)
                                e[o] = n;
                            else {
                                var i = o in e;
                                (!i || i && "object" != typeof e[o] || i && null === e[o]) && (e[o] = {}),
                                e = e[o]
                            }
                        }
                }
                ,
                t.getPath = function(e, t, n) {
                    for (var r = 0, a = t.length, o = !0; o && r < a && "object" == typeof e && null !== e; ) {
                        var i = t[r++];
                        (o = i in e) && (e = e[i])
                    }
                    return o ? e : n
                }
                ,
                t.deletePath = function(e, t) {
                    if ("object" == typeof e && null !== e)
                        for (var n = 0, r = t.length; n < r; ) {
                            var a = t[n++];
                            if (n == r)
                                delete e[a];
                            else {
                                if (!(a in e) || "object" != typeof e[a] || null === e[a])
                                    break;
                                e = e[a]
                            }
                        }
                }
                ,
                t.isEmpty = function(e) {
                    for (var t in e)
                        if (e.hasOwnProperty(t))
                            return !1;
                    return !0
                }
                ,
                t.format = function(e) {
                    for (var t, n, r = /%./g, a = 0, o = [], i = 0; t = r.exec(e); ) {
                        (n = e.substring(i, r.lastIndex - 2)).length > 0 && o.push(n),
                        i = r.lastIndex;
                        var s = t[0][1];
                        switch (s) {
                        case "s":
                        case "o":
                            a < arguments.length ? o.push(arguments[1 + a++]) : o.push("<?>");
                            break;
                        case "%":
                            o.push("%");
                            break;
                        default:
                            o.push("<%" + s + "?>")
                        }
                    }
                    return o.push(e.substring(i)),
                    o.join("")
                }
                ,
                t.formatNumber = function(e, t, n, r) {
                    var a = e
                      , o = isNaN(t = Math.abs(t)) ? 2 : t
                      , i = void 0 === n ? "," : n
                      , s = void 0 === r ? "." : r
                      , u = a < 0 ? "-" : ""
                      , c = parseInt(a = Math.abs(+a || 0).toFixed(o), 10) + ""
                      , l = c.length > 3 ? c.length % 3 : 0;
                    return u + (l ? c.substr(0, l) + s : "") + c.substr(l).replace(/(\d{3})(?=\d)/g, "$1" + s) + (o ? i + Math.abs(a - c).toFixed(o).slice(2) : "")
                }
                ,
                t.formatSize = function(e) {
                    return e >= 1073741824 ? t.formatNumber(e / 1073741824, 2, ".", "") + " GiB" : e >= 1048576 ? t.formatNumber(e / 1048576, 2, ".", "") + " MiB" : e >= 1024 ? t.formatNumber(e / 1024, 0) + " KiB" : t.formatNumber(e, 0) + " bytes"
                }
                ,
                t.bytesFromIP = function(e) {
                    return -1 !== e.indexOf(".") ? t.bytesFromIPv4(e) : -1 !== e.indexOf(":") ? t.bytesFromIPv6(e) : null
                }
                ,
                t.bytesFromIPv4 = function(e) {
                    if (4 !== (e = e.split(".")).length)
                        return null;
                    for (var n = t.createBuffer(), r = 0; r < e.length; ++r) {
                        var a = parseInt(e[r], 10);
                        if (isNaN(a))
                            return null;
                        n.putByte(a)
                    }
                    return n.getBytes()
                }
                ,
                t.bytesFromIPv6 = function(e) {
                    for (var n = 0, r = 2 * (8 - (e = e.split(":").filter((function(e) {
                        return 0 === e.length && ++n,
                        !0
                    }
                    ))).length + n), a = t.createBuffer(), o = 0; o < 8; ++o)
                        if (e[o] && 0 !== e[o].length) {
                            var i = t.hexToBytes(e[o]);
                            i.length < 2 && a.putByte(0),
                            a.putBytes(i)
                        } else
                            a.fillWithByte(0, r),
                            r = 0;
                    return a.getBytes()
                }
                ,
                t.bytesToIP = function(e) {
                    return 4 === e.length ? t.bytesToIPv4(e) : 16 === e.length ? t.bytesToIPv6(e) : null
                }
                ,
                t.bytesToIPv4 = function(e) {
                    if (4 !== e.length)
                        return null;
                    for (var t = [], n = 0; n < e.length; ++n)
                        t.push(e.charCodeAt(n));
                    return t.join(".")
                }
                ,
                t.bytesToIPv6 = function(e) {
                    if (16 !== e.length)
                        return null;
                    for (var n = [], r = [], a = 0, o = 0; o < e.length; o += 2) {
                        for (var i = t.bytesToHex(e[o] + e[o + 1]); "0" === i[0] && "0" !== i; )
                            i = i.substr(1);
                        if ("0" === i) {
                            var s = r[r.length - 1]
                              , u = n.length;
                            s && u === s.end + 1 ? (s.end = u,
                            s.end - s.start > r[a].end - r[a].start && (a = r.length - 1)) : r.push({
                                start: u,
                                end: u
                            })
                        }
                        n.push(i)
                    }
                    if (r.length > 0) {
                        var c = r[a];
                        c.end - c.start > 0 && (n.splice(c.start, c.end - c.start + 1, ""),
                        0 === c.start && n.unshift(""),
                        7 === c.end && n.push(""))
                    }
                    return n.join(":")
                }
                ,
                t.estimateCores = function(e, n) {
                    if ("function" == typeof e && (n = e,
                    e = {}),
                    e = e || {},
                    "cores"in t && !e.update)
                        return n(null, t.cores);
                    if ("undefined" != typeof navigator && "hardwareConcurrency"in navigator && navigator.hardwareConcurrency > 0)
                        return t.cores = navigator.hardwareConcurrency,
                        n(null, t.cores);
                    if ("undefined" == typeof Worker)
                        return t.cores = 1,
                        n(null, t.cores);
                    if ("undefined" == typeof Blob)
                        return t.cores = 2,
                        n(null, t.cores);
                    var r = URL.createObjectURL(new Blob(["(", function() {
                        self.addEventListener("message", (function(e) {
                            var t = Date.now()
                              , n = t + 4;
                            self.postMessage({
                                st: t,
                                et: n
                            })
                        }
                        ))
                    }
                    .toString(), ")()"],{
                        type: "application/javascript"
                    }));
                    !function e(a, o, i) {
                        if (0 === o) {
                            var s = Math.floor(a.reduce((function(e, t) {
                                return e + t
                            }
                            ), 0) / a.length);
                            return t.cores = Math.max(1, s),
                            URL.revokeObjectURL(r),
                            n(null, t.cores)
                        }
                        !function(e, t) {
                            for (var n = [], a = [], o = 0; o < e; ++o) {
                                var i = new Worker(r);
                                i.addEventListener("message", (function(r) {
                                    if (a.push(r.data),
                                    a.length === e) {
                                        for (var o = 0; o < e; ++o)
                                            n[o].terminate();
                                        t(null, a)
                                    }
                                }
                                )),
                                n.push(i)
                            }
                            for (o = 0; o < e; ++o)
                                n[o].postMessage(o)
                        }(i, (function(t, n) {
                            a.push(function(e, t) {
                                for (var n = [], r = 0; r < e; ++r)
                                    for (var a = t[r], o = n[r] = [], i = 0; i < e; ++i)
                                        if (r !== i) {
                                            var s = t[i];
                                            (a.st > s.st && a.st < s.et || s.st > a.st && s.st < a.et) && o.push(i)
                                        }
                                return n.reduce((function(e, t) {
                                    return Math.max(e, t.length)
                                }
                                ), 0)
                            }(i, n)),
                            e(a, o - 1, i)
                        }
                        ))
                    }([], 5, 16)
                }
            }
            )),
            V.cipher = V.cipher || {},
            V.cipher.algorithms = V.cipher.algorithms || {},
            V.cipher.createCipher = function(e, t) {
                var n = e;
                if ("string" == typeof n && (n = V.cipher.getAlgorithm(n)) && (n = n()),
                !n)
                    throw new Error("Unsupported algorithm: " + e);
                return new V.cipher.BlockCipher({
                    algorithm: n,
                    key: t,
                    decrypt: !1
                })
            }
            ,
            V.cipher.createDecipher = function(e, t) {
                var n = e;
                if ("string" == typeof n && (n = V.cipher.getAlgorithm(n)) && (n = n()),
                !n)
                    throw new Error("Unsupported algorithm: " + e);
                return new V.cipher.BlockCipher({
                    algorithm: n,
                    key: t,
                    decrypt: !0
                })
            }
            ,
            V.cipher.registerAlgorithm = function(e, t) {
                e = e.toUpperCase(),
                V.cipher.algorithms[e] = t
            }
            ,
            V.cipher.getAlgorithm = function(e) {
                return (e = e.toUpperCase())in V.cipher.algorithms ? V.cipher.algorithms[e] : null
            }
            ;
            var H = V.cipher.BlockCipher = function(e) {
                this.algorithm = e.algorithm,
                this.mode = this.algorithm.mode,
                this.blockSize = this.mode.blockSize,
                this._finish = !1,
                this._input = null,
                this.output = null,
                this._op = e.decrypt ? this.mode.decrypt : this.mode.encrypt,
                this._decrypt = e.decrypt,
                this.algorithm.initialize(e)
            }
            ;
            function G(e, t) {
                V.cipher.registerAlgorithm(e, (function() {
                    return new V.aes.Algorithm(e,t)
                }
                ))
            }
            H.prototype.start = function(e) {
                e = e || {};
                var t = {};
                for (var n in e)
                    t[n] = e[n];
                t.decrypt = this._decrypt,
                this._finish = !1,
                this._input = V.util.createBuffer(),
                this.output = e.output || V.util.createBuffer(),
                this.mode.start(t)
            }
            ,
            H.prototype.update = function(e) {
                for (e && this._input.putBuffer(e); !this._op.call(this.mode, this._input, this.output, this._finish) && !this._finish; )
                    ;
                this._input.compact()
            }
            ,
            H.prototype.finish = function(e) {
                !e || "ECB" !== this.mode.name && "CBC" !== this.mode.name || (this.mode.pad = function(t) {
                    return e(this.blockSize, t, !1)
                }
                ,
                this.mode.unpad = function(t) {
                    return e(this.blockSize, t, !0)
                }
                );
                var t = {};
                return t.decrypt = this._decrypt,
                t.overflow = this._input.length() % this.blockSize,
                !(!this._decrypt && this.mode.pad && !this.mode.pad(this._input, t) || (this._finish = !0,
                this.update(),
                this._decrypt && this.mode.unpad && !this.mode.unpad(this.output, t) || this.mode.afterFinish && !this.mode.afterFinish(this.output, t)))
            }
            ,
            x((function(e) {
                V.cipher = V.cipher || {};
                var t = e.exports = V.cipher.modes = V.cipher.modes || {};
                function n(e, t) {
                    if ("string" == typeof e && (e = V.util.createBuffer(e)),
                    V.util.isArray(e) && e.length > 4) {
                        var n = e;
                        e = V.util.createBuffer();
                        for (var r = 0; r < n.length; ++r)
                            e.putByte(n[r])
                    }
                    if (e.length() < t)
                        throw new Error("Invalid IV length; got " + e.length() + " bytes and expected " + t + " bytes.");
                    if (!V.util.isArray(e)) {
                        var a = []
                          , o = t / 4;
                        for (r = 0; r < o; ++r)
                            a.push(e.getInt32());
                        e = a
                    }
                    return e
                }
                function r(e) {
                    e[e.length - 1] = e[e.length - 1] + 1 & 4294967295
                }
                function a(e) {
                    return [e / 4294967296 | 0, 4294967295 & e]
                }
                t.ecb = function(e) {
                    e = e || {},
                    this.name = "ECB",
                    this.cipher = e.cipher,
                    this.blockSize = e.blockSize || 16,
                    this._ints = this.blockSize / 4,
                    this._inBlock = new Array(this._ints),
                    this._outBlock = new Array(this._ints)
                }
                ,
                t.ecb.prototype.start = function(e) {}
                ,
                t.ecb.prototype.encrypt = function(e, t, n) {
                    if (e.length() < this.blockSize && !(n && e.length() > 0))
                        return !0;
                    for (var r = 0; r < this._ints; ++r)
                        this._inBlock[r] = e.getInt32();
                    for (this.cipher.encrypt(this._inBlock, this._outBlock),
                    r = 0; r < this._ints; ++r)
                        t.putInt32(this._outBlock[r])
                }
                ,
                t.ecb.prototype.decrypt = function(e, t, n) {
                    if (e.length() < this.blockSize && !(n && e.length() > 0))
                        return !0;
                    for (var r = 0; r < this._ints; ++r)
                        this._inBlock[r] = e.getInt32();
                    for (this.cipher.decrypt(this._inBlock, this._outBlock),
                    r = 0; r < this._ints; ++r)
                        t.putInt32(this._outBlock[r])
                }
                ,
                t.ecb.prototype.pad = function(e, t) {
                    var n = e.length() === this.blockSize ? this.blockSize : this.blockSize - e.length();
                    return e.fillWithByte(n, n),
                    !0
                }
                ,
                t.ecb.prototype.unpad = function(e, t) {
                    if (t.overflow > 0)
                        return !1;
                    var n = e.length()
                      , r = e.at(n - 1);
                    return !(r > this.blockSize << 2 || (e.truncate(r),
                    0))
                }
                ,
                t.cbc = function(e) {
                    e = e || {},
                    this.name = "CBC",
                    this.cipher = e.cipher,
                    this.blockSize = e.blockSize || 16,
                    this._ints = this.blockSize / 4,
                    this._inBlock = new Array(this._ints),
                    this._outBlock = new Array(this._ints)
                }
                ,
                t.cbc.prototype.start = function(e) {
                    if (null === e.iv) {
                        if (!this._prev)
                            throw new Error("Invalid IV parameter.");
                        this._iv = this._prev.slice(0)
                    } else {
                        if (!("iv"in e))
                            throw new Error("Invalid IV parameter.");
                        this._iv = n(e.iv, this.blockSize),
                        this._prev = this._iv.slice(0)
                    }
                }
                ,
                t.cbc.prototype.encrypt = function(e, t, n) {
                    if (e.length() < this.blockSize && !(n && e.length() > 0))
                        return !0;
                    for (var r = 0; r < this._ints; ++r)
                        this._inBlock[r] = this._prev[r] ^ e.getInt32();
                    for (this.cipher.encrypt(this._inBlock, this._outBlock),
                    r = 0; r < this._ints; ++r)
                        t.putInt32(this._outBlock[r]);
                    this._prev = this._outBlock
                }
                ,
                t.cbc.prototype.decrypt = function(e, t, n) {
                    if (e.length() < this.blockSize && !(n && e.length() > 0))
                        return !0;
                    for (var r = 0; r < this._ints; ++r)
                        this._inBlock[r] = e.getInt32();
                    for (this.cipher.decrypt(this._inBlock, this._outBlock),
                    r = 0; r < this._ints; ++r)
                        t.putInt32(this._prev[r] ^ this._outBlock[r]);
                    this._prev = this._inBlock.slice(0)
                }
                ,
                t.cbc.prototype.pad = function(e, t) {
                    var n = e.length() === this.blockSize ? this.blockSize : this.blockSize - e.length();
                    return e.fillWithByte(n, n),
                    !0
                }
                ,
                t.cbc.prototype.unpad = function(e, t) {
                    if (t.overflow > 0)
                        return !1;
                    var n = e.length()
                      , r = e.at(n - 1);
                    return !(r > this.blockSize << 2 || (e.truncate(r),
                    0))
                }
                ,
                t.cfb = function(e) {
                    e = e || {},
                    this.name = "CFB",
                    this.cipher = e.cipher,
                    this.blockSize = e.blockSize || 16,
                    this._ints = this.blockSize / 4,
                    this._inBlock = null,
                    this._outBlock = new Array(this._ints),
                    this._partialBlock = new Array(this._ints),
                    this._partialOutput = V.util.createBuffer(),
                    this._partialBytes = 0
                }
                ,
                t.cfb.prototype.start = function(e) {
                    if (!("iv"in e))
                        throw new Error("Invalid IV parameter.");
                    this._iv = n(e.iv, this.blockSize),
                    this._inBlock = this._iv.slice(0),
                    this._partialBytes = 0
                }
                ,
                t.cfb.prototype.encrypt = function(e, t, n) {
                    var r = e.length();
                    if (0 === r)
                        return !0;
                    if (this.cipher.encrypt(this._inBlock, this._outBlock),
                    0 === this._partialBytes && r >= this.blockSize)
                        for (var a = 0; a < this._ints; ++a)
                            this._inBlock[a] = e.getInt32() ^ this._outBlock[a],
                            t.putInt32(this._inBlock[a]);
                    else {
                        var o = (this.blockSize - r) % this.blockSize;
                        for (o > 0 && (o = this.blockSize - o),
                        this._partialOutput.clear(),
                        a = 0; a < this._ints; ++a)
                            this._partialBlock[a] = e.getInt32() ^ this._outBlock[a],
                            this._partialOutput.putInt32(this._partialBlock[a]);
                        if (o > 0)
                            e.read -= this.blockSize;
                        else
                            for (a = 0; a < this._ints; ++a)
                                this._inBlock[a] = this._partialBlock[a];
                        if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes),
                        o > 0 && !n)
                            return t.putBytes(this._partialOutput.getBytes(o - this._partialBytes)),
                            this._partialBytes = o,
                            !0;
                        t.putBytes(this._partialOutput.getBytes(r - this._partialBytes)),
                        this._partialBytes = 0
                    }
                }
                ,
                t.cfb.prototype.decrypt = function(e, t, n) {
                    var r = e.length();
                    if (0 === r)
                        return !0;
                    if (this.cipher.encrypt(this._inBlock, this._outBlock),
                    0 === this._partialBytes && r >= this.blockSize)
                        for (var a = 0; a < this._ints; ++a)
                            this._inBlock[a] = e.getInt32(),
                            t.putInt32(this._inBlock[a] ^ this._outBlock[a]);
                    else {
                        var o = (this.blockSize - r) % this.blockSize;
                        for (o > 0 && (o = this.blockSize - o),
                        this._partialOutput.clear(),
                        a = 0; a < this._ints; ++a)
                            this._partialBlock[a] = e.getInt32(),
                            this._partialOutput.putInt32(this._partialBlock[a] ^ this._outBlock[a]);
                        if (o > 0)
                            e.read -= this.blockSize;
                        else
                            for (a = 0; a < this._ints; ++a)
                                this._inBlock[a] = this._partialBlock[a];
                        if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes),
                        o > 0 && !n)
                            return t.putBytes(this._partialOutput.getBytes(o - this._partialBytes)),
                            this._partialBytes = o,
                            !0;
                        t.putBytes(this._partialOutput.getBytes(r - this._partialBytes)),
                        this._partialBytes = 0
                    }
                }
                ,
                t.ofb = function(e) {
                    e = e || {},
                    this.name = "OFB",
                    this.cipher = e.cipher,
                    this.blockSize = e.blockSize || 16,
                    this._ints = this.blockSize / 4,
                    this._inBlock = null,
                    this._outBlock = new Array(this._ints),
                    this._partialOutput = V.util.createBuffer(),
                    this._partialBytes = 0
                }
                ,
                t.ofb.prototype.start = function(e) {
                    if (!("iv"in e))
                        throw new Error("Invalid IV parameter.");
                    this._iv = n(e.iv, this.blockSize),
                    this._inBlock = this._iv.slice(0),
                    this._partialBytes = 0
                }
                ,
                t.ofb.prototype.encrypt = function(e, t, n) {
                    var r = e.length();
                    if (0 === e.length())
                        return !0;
                    if (this.cipher.encrypt(this._inBlock, this._outBlock),
                    0 === this._partialBytes && r >= this.blockSize)
                        for (var a = 0; a < this._ints; ++a)
                            t.putInt32(e.getInt32() ^ this._outBlock[a]),
                            this._inBlock[a] = this._outBlock[a];
                    else {
                        var o = (this.blockSize - r) % this.blockSize;
                        for (o > 0 && (o = this.blockSize - o),
                        this._partialOutput.clear(),
                        a = 0; a < this._ints; ++a)
                            this._partialOutput.putInt32(e.getInt32() ^ this._outBlock[a]);
                        if (o > 0)
                            e.read -= this.blockSize;
                        else
                            for (a = 0; a < this._ints; ++a)
                                this._inBlock[a] = this._outBlock[a];
                        if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes),
                        o > 0 && !n)
                            return t.putBytes(this._partialOutput.getBytes(o - this._partialBytes)),
                            this._partialBytes = o,
                            !0;
                        t.putBytes(this._partialOutput.getBytes(r - this._partialBytes)),
                        this._partialBytes = 0
                    }
                }
                ,
                t.ofb.prototype.decrypt = t.ofb.prototype.encrypt,
                t.ctr = function(e) {
                    e = e || {},
                    this.name = "CTR",
                    this.cipher = e.cipher,
                    this.blockSize = e.blockSize || 16,
                    this._ints = this.blockSize / 4,
                    this._inBlock = null,
                    this._outBlock = new Array(this._ints),
                    this._partialOutput = V.util.createBuffer(),
                    this._partialBytes = 0
                }
                ,
                t.ctr.prototype.start = function(e) {
                    if (!("iv"in e))
                        throw new Error("Invalid IV parameter.");
                    this._iv = n(e.iv, this.blockSize),
                    this._inBlock = this._iv.slice(0),
                    this._partialBytes = 0
                }
                ,
                t.ctr.prototype.encrypt = function(e, t, n) {
                    var a = e.length();
                    if (0 === a)
                        return !0;
                    if (this.cipher.encrypt(this._inBlock, this._outBlock),
                    0 === this._partialBytes && a >= this.blockSize)
                        for (var o = 0; o < this._ints; ++o)
                            t.putInt32(e.getInt32() ^ this._outBlock[o]);
                    else {
                        var i = (this.blockSize - a) % this.blockSize;
                        for (i > 0 && (i = this.blockSize - i),
                        this._partialOutput.clear(),
                        o = 0; o < this._ints; ++o)
                            this._partialOutput.putInt32(e.getInt32() ^ this._outBlock[o]);
                        if (i > 0 && (e.read -= this.blockSize),
                        this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes),
                        i > 0 && !n)
                            return t.putBytes(this._partialOutput.getBytes(i - this._partialBytes)),
                            this._partialBytes = i,
                            !0;
                        t.putBytes(this._partialOutput.getBytes(a - this._partialBytes)),
                        this._partialBytes = 0
                    }
                    r(this._inBlock)
                }
                ,
                t.ctr.prototype.decrypt = t.ctr.prototype.encrypt,
                t.gcm = function(e) {
                    e = e || {},
                    this.name = "GCM",
                    this.cipher = e.cipher,
                    this.blockSize = e.blockSize || 16,
                    this._ints = this.blockSize / 4,
                    this._inBlock = new Array(this._ints),
                    this._outBlock = new Array(this._ints),
                    this._partialOutput = V.util.createBuffer(),
                    this._partialBytes = 0,
                    this._R = 3774873600
                }
                ,
                t.gcm.prototype.start = function(e) {
                    if (!("iv"in e))
                        throw new Error("Invalid IV parameter.");
                    var t, n = V.util.createBuffer(e.iv);
                    if (this._cipherLength = 0,
                    t = "additionalData"in e ? V.util.createBuffer(e.additionalData) : V.util.createBuffer(),
                    this._tagLength = "tagLength"in e ? e.tagLength : 128,
                    this._tag = null,
                    e.decrypt && (this._tag = V.util.createBuffer(e.tag).getBytes(),
                    this._tag.length !== this._tagLength / 8))
                        throw new Error("Authentication tag does not match tag length.");
                    this._hashBlock = new Array(this._ints),
                    this.tag = null,
                    this._hashSubkey = new Array(this._ints),
                    this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey),
                    this.componentBits = 4,
                    this._m = this.generateHashTable(this._hashSubkey, this.componentBits);
                    var o = n.length();
                    if (12 === o)
                        this._j0 = [n.getInt32(), n.getInt32(), n.getInt32(), 1];
                    else {
                        for (this._j0 = [0, 0, 0, 0]; n.length() > 0; )
                            this._j0 = this.ghash(this._hashSubkey, this._j0, [n.getInt32(), n.getInt32(), n.getInt32(), n.getInt32()]);
                        this._j0 = this.ghash(this._hashSubkey, this._j0, [0, 0].concat(a(8 * o)))
                    }
                    this._inBlock = this._j0.slice(0),
                    r(this._inBlock),
                    this._partialBytes = 0,
                    t = V.util.createBuffer(t),
                    this._aDataLength = a(8 * t.length());
                    var i = t.length() % this.blockSize;
                    for (i && t.fillWithByte(0, this.blockSize - i),
                    this._s = [0, 0, 0, 0]; t.length() > 0; )
                        this._s = this.ghash(this._hashSubkey, this._s, [t.getInt32(), t.getInt32(), t.getInt32(), t.getInt32()])
                }
                ,
                t.gcm.prototype.encrypt = function(e, t, n) {
                    var a = e.length();
                    if (0 === a)
                        return !0;
                    if (this.cipher.encrypt(this._inBlock, this._outBlock),
                    0 === this._partialBytes && a >= this.blockSize) {
                        for (var o = 0; o < this._ints; ++o)
                            t.putInt32(this._outBlock[o] ^= e.getInt32());
                        this._cipherLength += this.blockSize
                    } else {
                        var i = (this.blockSize - a) % this.blockSize;
                        for (i > 0 && (i = this.blockSize - i),
                        this._partialOutput.clear(),
                        o = 0; o < this._ints; ++o)
                            this._partialOutput.putInt32(e.getInt32() ^ this._outBlock[o]);
                        if (i <= 0 || n) {
                            if (n) {
                                var s = a % this.blockSize;
                                this._cipherLength += s,
                                this._partialOutput.truncate(this.blockSize - s)
                            } else
                                this._cipherLength += this.blockSize;
                            for (o = 0; o < this._ints; ++o)
                                this._outBlock[o] = this._partialOutput.getInt32();
                            this._partialOutput.read -= this.blockSize
                        }
                        if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes),
                        i > 0 && !n)
                            return e.read -= this.blockSize,
                            t.putBytes(this._partialOutput.getBytes(i - this._partialBytes)),
                            this._partialBytes = i,
                            !0;
                        t.putBytes(this._partialOutput.getBytes(a - this._partialBytes)),
                        this._partialBytes = 0
                    }
                    this._s = this.ghash(this._hashSubkey, this._s, this._outBlock),
                    r(this._inBlock)
                }
                ,
                t.gcm.prototype.decrypt = function(e, t, n) {
                    var a = e.length();
                    if (a < this.blockSize && !(n && a > 0))
                        return !0;
                    this.cipher.encrypt(this._inBlock, this._outBlock),
                    r(this._inBlock),
                    this._hashBlock[0] = e.getInt32(),
                    this._hashBlock[1] = e.getInt32(),
                    this._hashBlock[2] = e.getInt32(),
                    this._hashBlock[3] = e.getInt32(),
                    this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);
                    for (var o = 0; o < this._ints; ++o)
                        t.putInt32(this._outBlock[o] ^ this._hashBlock[o]);
                    a < this.blockSize ? this._cipherLength += a % this.blockSize : this._cipherLength += this.blockSize
                }
                ,
                t.gcm.prototype.afterFinish = function(e, t) {
                    var n = !0;
                    t.decrypt && t.overflow && e.truncate(this.blockSize - t.overflow),
                    this.tag = V.util.createBuffer();
                    var r = this._aDataLength.concat(a(8 * this._cipherLength));
                    this._s = this.ghash(this._hashSubkey, this._s, r);
                    var o = [];
                    this.cipher.encrypt(this._j0, o);
                    for (var i = 0; i < this._ints; ++i)
                        this.tag.putInt32(this._s[i] ^ o[i]);
                    return this.tag.truncate(this.tag.length() % (this._tagLength / 8)),
                    t.decrypt && this.tag.bytes() !== this._tag && (n = !1),
                    n
                }
                ,
                t.gcm.prototype.multiply = function(e, t) {
                    for (var n = [0, 0, 0, 0], r = t.slice(0), a = 0; a < 128; ++a)
                        e[a / 32 | 0] & 1 << 31 - a % 32 && (n[0] ^= r[0],
                        n[1] ^= r[1],
                        n[2] ^= r[2],
                        n[3] ^= r[3]),
                        this.pow(r, r);
                    return n
                }
                ,
                t.gcm.prototype.pow = function(e, t) {
                    for (var n = 1 & e[3], r = 3; r > 0; --r)
                        t[r] = e[r] >>> 1 | (1 & e[r - 1]) << 31;
                    t[0] = e[0] >>> 1,
                    n && (t[0] ^= this._R)
                }
                ,
                t.gcm.prototype.tableMultiply = function(e) {
                    for (var t = [0, 0, 0, 0], n = 0; n < 32; ++n) {
                        var r = e[n / 8 | 0] >>> 4 * (7 - n % 8) & 15
                          , a = this._m[n][r];
                        t[0] ^= a[0],
                        t[1] ^= a[1],
                        t[2] ^= a[2],
                        t[3] ^= a[3]
                    }
                    return t
                }
                ,
                t.gcm.prototype.ghash = function(e, t, n) {
                    return t[0] ^= n[0],
                    t[1] ^= n[1],
                    t[2] ^= n[2],
                    t[3] ^= n[3],
                    this.tableMultiply(t)
                }
                ,
                t.gcm.prototype.generateHashTable = function(e, t) {
                    for (var n = 8 / t, r = 4 * n, a = 16 * n, o = new Array(a), i = 0; i < a; ++i) {
                        var s = [0, 0, 0, 0]
                          , u = (r - 1 - i % r) * t;
                        s[i / r | 0] = 1 << t - 1 << u,
                        o[i] = this.generateSubHashTable(this.multiply(s, e), t)
                    }
                    return o
                }
                ,
                t.gcm.prototype.generateSubHashTable = function(e, t) {
                    var n = 1 << t
                      , r = n >>> 1
                      , a = new Array(n);
                    a[r] = e.slice(0);
                    for (var o = r >>> 1; o > 0; )
                        this.pow(a[2 * o], a[o] = []),
                        o >>= 1;
                    for (o = 2; o < r; ) {
                        for (var i = 1; i < o; ++i) {
                            var s = a[o]
                              , u = a[i];
                            a[o + i] = [s[0] ^ u[0], s[1] ^ u[1], s[2] ^ u[2], s[3] ^ u[3]]
                        }
                        o *= 2
                    }
                    for (a[0] = [0, 0, 0, 0],
                    o = r + 1; o < n; ++o) {
                        var c = a[o ^ r];
                        a[o] = [e[0] ^ c[0], e[1] ^ c[1], e[2] ^ c[2], e[3] ^ c[3]]
                    }
                    return a
                }
            }
            )),
            V.aes = V.aes || {},
            V.aes.startEncrypting = function(e, t, n, r) {
                var a = ne({
                    key: e,
                    output: n,
                    decrypt: !1,
                    mode: r
                });
                return a.start(t),
                a
            }
            ,
            V.aes.createEncryptionCipher = function(e, t) {
                return ne({
                    key: e,
                    output: null,
                    decrypt: !1,
                    mode: t
                })
            }
            ,
            V.aes.startDecrypting = function(e, t, n, r) {
                var a = ne({
                    key: e,
                    output: n,
                    decrypt: !0,
                    mode: r
                });
                return a.start(t),
                a
            }
            ,
            V.aes.createDecryptionCipher = function(e, t) {
                return ne({
                    key: e,
                    output: null,
                    decrypt: !0,
                    mode: t
                })
            }
            ,
            V.aes.Algorithm = function(e, t) {
                $ || J();
                var n = this;
                n.name = e,
                n.mode = new t({
                    blockSize: 16,
                    cipher: {
                        encrypt: function(e, t) {
                            return te(n._w, e, t, !1)
                        },
                        decrypt: function(e, t) {
                            return te(n._w, e, t, !0)
                        }
                    }
                }),
                n._init = !1
            }
            ,
            V.aes.Algorithm.prototype.initialize = function(e) {
                if (!this._init) {
                    var t, n = e.key;
                    if ("string" != typeof n || 16 !== n.length && 24 !== n.length && 32 !== n.length) {
                        if (V.util.isArray(n) && (16 === n.length || 24 === n.length || 32 === n.length)) {
                            t = n,
                            n = V.util.createBuffer();
                            for (var r = 0; r < t.length; ++r)
                                n.putByte(t[r])
                        }
                    } else
                        n = V.util.createBuffer(n);
                    if (!V.util.isArray(n)) {
                        t = n,
                        n = [];
                        var a = t.length();
                        if (16 === a || 24 === a || 32 === a)
                            for (a >>>= 2,
                            r = 0; r < a; ++r)
                                n.push(t.getInt32())
                    }
                    if (!V.util.isArray(n) || 4 !== n.length && 6 !== n.length && 8 !== n.length)
                        throw new Error("Invalid key parameter.");
                    var o = this.mode.name
                      , i = -1 !== ["CFB", "OFB", "CTR", "GCM"].indexOf(o);
                    this._w = ee(n, e.decrypt && !i),
                    this._init = !0
                }
            }
            ,
            V.aes._expandKey = function(e, t) {
                return $ || J(),
                ee(e, t)
            }
            ,
            V.aes._updateBlock = te,
            G("AES-ECB", V.cipher.modes.ecb),
            G("AES-CBC", V.cipher.modes.cbc),
            G("AES-CFB", V.cipher.modes.cfb),
            G("AES-OFB", V.cipher.modes.ofb),
            G("AES-CTR", V.cipher.modes.ctr),
            G("AES-GCM", V.cipher.modes.gcm);
            var K, q, X, Q, Y, $ = !1, Z = 4;
            function J() {
                $ = !0,
                X = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
                for (var e = new Array(256), t = 0; t < 128; ++t)
                    e[t] = t << 1,
                    e[t + 128] = t + 128 << 1 ^ 283;
                for (K = new Array(256),
                q = new Array(256),
                Q = new Array(4),
                Y = new Array(4),
                t = 0; t < 4; ++t)
                    Q[t] = new Array(256),
                    Y[t] = new Array(256);
                var n, r, a, o, i, s, u, c = 0, l = 0;
                for (t = 0; t < 256; ++t) {
                    o = (o = l ^ l << 1 ^ l << 2 ^ l << 3 ^ l << 4) >> 8 ^ 255 & o ^ 99,
                    K[c] = o,
                    q[o] = c,
                    s = (i = e[o]) << 24 ^ o << 16 ^ o << 8 ^ o ^ i,
                    u = ((n = e[c]) ^ (r = e[n]) ^ (a = e[r])) << 24 ^ (c ^ a) << 16 ^ (c ^ r ^ a) << 8 ^ c ^ n ^ a;
                    for (var f = 0; f < 4; ++f)
                        Q[f][c] = s,
                        Y[f][o] = u,
                        s = s << 24 | s >>> 8,
                        u = u << 24 | u >>> 8;
                    0 === c ? c = l = 1 : (c = n ^ e[e[e[n ^ a]]],
                    l ^= e[e[l]])
                }
            }
            function ee(e, t) {
                for (var n, r = e.slice(0), a = 1, o = r.length, i = Z * (o + 6 + 1), s = o; s < i; ++s)
                    n = r[s - 1],
                    s % o == 0 ? (n = K[n >>> 16 & 255] << 24 ^ K[n >>> 8 & 255] << 16 ^ K[255 & n] << 8 ^ K[n >>> 24] ^ X[a] << 24,
                    a++) : o > 6 && s % o == 4 && (n = K[n >>> 24] << 24 ^ K[n >>> 16 & 255] << 16 ^ K[n >>> 8 & 255] << 8 ^ K[255 & n]),
                    r[s] = r[s - o] ^ n;
                if (t) {
                    for (var u, c = Y[0], l = Y[1], f = Y[2], p = Y[3], d = r.slice(0), h = (s = 0,
                    (i = r.length) - Z); s < i; s += Z,
                    h -= Z)
                        if (0 === s || s === i - Z)
                            d[s] = r[h],
                            d[s + 1] = r[h + 3],
                            d[s + 2] = r[h + 2],
                            d[s + 3] = r[h + 1];
                        else
                            for (var m = 0; m < Z; ++m)
                                u = r[h + m],
                                d[s + (3 & -m)] = c[K[u >>> 24]] ^ l[K[u >>> 16 & 255]] ^ f[K[u >>> 8 & 255]] ^ p[K[255 & u]];
                    r = d
                }
                return r
            }
            function te(e, t, n, r) {
                var a, o, i, s, u, c, l, f, p, d, h, m, v = e.length / 4 - 1;
                r ? (a = Y[0],
                o = Y[1],
                i = Y[2],
                s = Y[3],
                u = q) : (a = Q[0],
                o = Q[1],
                i = Q[2],
                s = Q[3],
                u = K),
                c = t[0] ^ e[0],
                l = t[r ? 3 : 1] ^ e[1],
                f = t[2] ^ e[2],
                p = t[r ? 1 : 3] ^ e[3];
                for (var g = 3, y = 1; y < v; ++y)
                    d = a[c >>> 24] ^ o[l >>> 16 & 255] ^ i[f >>> 8 & 255] ^ s[255 & p] ^ e[++g],
                    h = a[l >>> 24] ^ o[f >>> 16 & 255] ^ i[p >>> 8 & 255] ^ s[255 & c] ^ e[++g],
                    m = a[f >>> 24] ^ o[p >>> 16 & 255] ^ i[c >>> 8 & 255] ^ s[255 & l] ^ e[++g],
                    p = a[p >>> 24] ^ o[c >>> 16 & 255] ^ i[l >>> 8 & 255] ^ s[255 & f] ^ e[++g],
                    c = d,
                    l = h,
                    f = m;
                n[0] = u[c >>> 24] << 24 ^ u[l >>> 16 & 255] << 16 ^ u[f >>> 8 & 255] << 8 ^ u[255 & p] ^ e[++g],
                n[r ? 3 : 1] = u[l >>> 24] << 24 ^ u[f >>> 16 & 255] << 16 ^ u[p >>> 8 & 255] << 8 ^ u[255 & c] ^ e[++g],
                n[2] = u[f >>> 24] << 24 ^ u[p >>> 16 & 255] << 16 ^ u[c >>> 8 & 255] << 8 ^ u[255 & l] ^ e[++g],
                n[r ? 1 : 3] = u[p >>> 24] << 24 ^ u[c >>> 16 & 255] << 16 ^ u[l >>> 8 & 255] << 8 ^ u[255 & f] ^ e[++g]
            }
            function ne(e) {
                var t, n = "AES-" + ((e = e || {}).mode || "CBC").toUpperCase(), r = (t = e.decrypt ? V.cipher.createDecipher(n, e.key) : V.cipher.createCipher(n, e.key)).start;
                return t.start = function(e, n) {
                    var a = null;
                    n instanceof V.util.ByteBuffer && (a = n,
                    n = {}),
                    (n = n || {}).output = a,
                    n.iv = e,
                    r.call(t, n)
                }
                ,
                t
            }
            function re(e, t) {
                V.cipher.registerAlgorithm(e, (function() {
                    return new V.des.Algorithm(e,t)
                }
                ))
            }
            x((function(e) {
                V.pki = V.pki || {};
                var t = e.exports = V.pki.oids = V.oids = V.oids || {};
                function n(e, n) {
                    t[e] = n,
                    t[n] = e
                }
                function r(e, n) {
                    t[e] = n
                }
                n("1.2.840.113549.1.1.1", "rsaEncryption"),
                n("1.2.840.113549.1.1.4", "md5WithRSAEncryption"),
                n("1.2.840.113549.1.1.5", "sha1WithRSAEncryption"),
                n("1.2.840.113549.1.1.7", "RSAES-OAEP"),
                n("1.2.840.113549.1.1.8", "mgf1"),
                n("1.2.840.113549.1.1.9", "pSpecified"),
                n("1.2.840.113549.1.1.10", "RSASSA-PSS"),
                n("1.2.840.113549.1.1.11", "sha256WithRSAEncryption"),
                n("1.2.840.113549.1.1.12", "sha384WithRSAEncryption"),
                n("1.2.840.113549.1.1.13", "sha512WithRSAEncryption"),
                n("1.3.101.112", "EdDSA25519"),
                n("1.2.840.10040.4.3", "dsa-with-sha1"),
                n("1.3.14.3.2.7", "desCBC"),
                n("1.3.14.3.2.26", "sha1"),
                n("2.16.840.1.101.3.4.2.1", "sha256"),
                n("2.16.840.1.101.3.4.2.2", "sha384"),
                n("2.16.840.1.101.3.4.2.3", "sha512"),
                n("1.2.840.113549.2.5", "md5"),
                n("1.2.840.113549.1.7.1", "data"),
                n("1.2.840.113549.1.7.2", "signedData"),
                n("1.2.840.113549.1.7.3", "envelopedData"),
                n("1.2.840.113549.1.7.4", "signedAndEnvelopedData"),
                n("1.2.840.113549.1.7.5", "digestedData"),
                n("1.2.840.113549.1.7.6", "encryptedData"),
                n("1.2.840.113549.1.9.1", "emailAddress"),
                n("1.2.840.113549.1.9.2", "unstructuredName"),
                n("1.2.840.113549.1.9.3", "contentType"),
                n("1.2.840.113549.1.9.4", "messageDigest"),
                n("1.2.840.113549.1.9.5", "signingTime"),
                n("1.2.840.113549.1.9.6", "counterSignature"),
                n("1.2.840.113549.1.9.7", "challengePassword"),
                n("1.2.840.113549.1.9.8", "unstructuredAddress"),
                n("1.2.840.113549.1.9.14", "extensionRequest"),
                n("1.2.840.113549.1.9.20", "friendlyName"),
                n("1.2.840.113549.1.9.21", "localKeyId"),
                n("1.2.840.113549.1.9.22.1", "x509Certificate"),
                n("1.2.840.113549.1.12.10.1.1", "keyBag"),
                n("1.2.840.113549.1.12.10.1.2", "pkcs8ShroudedKeyBag"),
                n("1.2.840.113549.1.12.10.1.3", "certBag"),
                n("1.2.840.113549.1.12.10.1.4", "crlBag"),
                n("1.2.840.113549.1.12.10.1.5", "secretBag"),
                n("1.2.840.113549.1.12.10.1.6", "safeContentsBag"),
                n("1.2.840.113549.1.5.13", "pkcs5PBES2"),
                n("1.2.840.113549.1.5.12", "pkcs5PBKDF2"),
                n("1.2.840.113549.1.12.1.1", "pbeWithSHAAnd128BitRC4"),
                n("1.2.840.113549.1.12.1.2", "pbeWithSHAAnd40BitRC4"),
                n("1.2.840.113549.1.12.1.3", "pbeWithSHAAnd3-KeyTripleDES-CBC"),
                n("1.2.840.113549.1.12.1.4", "pbeWithSHAAnd2-KeyTripleDES-CBC"),
                n("1.2.840.113549.1.12.1.5", "pbeWithSHAAnd128BitRC2-CBC"),
                n("1.2.840.113549.1.12.1.6", "pbewithSHAAnd40BitRC2-CBC"),
                n("1.2.840.113549.2.7", "hmacWithSHA1"),
                n("1.2.840.113549.2.8", "hmacWithSHA224"),
                n("1.2.840.113549.2.9", "hmacWithSHA256"),
                n("1.2.840.113549.2.10", "hmacWithSHA384"),
                n("1.2.840.113549.2.11", "hmacWithSHA512"),
                n("1.2.840.113549.3.7", "des-EDE3-CBC"),
                n("2.16.840.1.101.3.4.1.2", "aes128-CBC"),
                n("2.16.840.1.101.3.4.1.22", "aes192-CBC"),
                n("2.16.840.1.101.3.4.1.42", "aes256-CBC"),
                n("2.5.4.3", "commonName"),
                n("2.5.4.5", "serialName"),
                n("2.5.4.6", "countryName"),
                n("2.5.4.7", "localityName"),
                n("2.5.4.8", "stateOrProvinceName"),
                n("2.5.4.9", "streetAddress"),
                n("2.5.4.10", "organizationName"),
                n("2.5.4.11", "organizationalUnitName"),
                n("2.5.4.13", "description"),
                n("2.5.4.15", "businessCategory"),
                n("2.5.4.17", "postalCode"),
                n("1.3.6.1.4.1.311.60.2.1.2", "jurisdictionOfIncorporationStateOrProvinceName"),
                n("1.3.6.1.4.1.311.60.2.1.3", "jurisdictionOfIncorporationCountryName"),
                n("2.16.840.1.113730.1.1", "nsCertType"),
                n("2.16.840.1.113730.1.13", "nsComment"),
                r("2.5.29.1", "authorityKeyIdentifier"),
                r("2.5.29.2", "keyAttributes"),
                r("2.5.29.3", "certificatePolicies"),
                r("2.5.29.4", "keyUsageRestriction"),
                r("2.5.29.5", "policyMapping"),
                r("2.5.29.6", "subtreesConstraint"),
                r("2.5.29.7", "subjectAltName"),
                r("2.5.29.8", "issuerAltName"),
                r("2.5.29.9", "subjectDirectoryAttributes"),
                r("2.5.29.10", "basicConstraints"),
                r("2.5.29.11", "nameConstraints"),
                r("2.5.29.12", "policyConstraints"),
                r("2.5.29.13", "basicConstraints"),
                n("2.5.29.14", "subjectKeyIdentifier"),
                n("2.5.29.15", "keyUsage"),
                r("2.5.29.16", "privateKeyUsagePeriod"),
                n("2.5.29.17", "subjectAltName"),
                n("2.5.29.18", "issuerAltName"),
                n("2.5.29.19", "basicConstraints"),
                r("2.5.29.20", "cRLNumber"),
                r("2.5.29.21", "cRLReason"),
                r("2.5.29.22", "expirationDate"),
                r("2.5.29.23", "instructionCode"),
                r("2.5.29.24", "invalidityDate"),
                r("2.5.29.25", "cRLDistributionPoints"),
                r("2.5.29.26", "issuingDistributionPoint"),
                r("2.5.29.27", "deltaCRLIndicator"),
                r("2.5.29.28", "issuingDistributionPoint"),
                r("2.5.29.29", "certificateIssuer"),
                r("2.5.29.30", "nameConstraints"),
                n("2.5.29.31", "cRLDistributionPoints"),
                n("2.5.29.32", "certificatePolicies"),
                r("2.5.29.33", "policyMappings"),
                r("2.5.29.34", "policyConstraints"),
                n("2.5.29.35", "authorityKeyIdentifier"),
                r("2.5.29.36", "policyConstraints"),
                n("2.5.29.37", "extKeyUsage"),
                r("2.5.29.46", "freshestCRL"),
                r("2.5.29.54", "inhibitAnyPolicy"),
                n("1.3.6.1.4.1.11129.2.4.2", "timestampList"),
                n("1.3.6.1.5.5.7.1.1", "authorityInfoAccess"),
                n("1.3.6.1.5.5.7.3.1", "serverAuth"),
                n("1.3.6.1.5.5.7.3.2", "clientAuth"),
                n("1.3.6.1.5.5.7.3.3", "codeSigning"),
                n("1.3.6.1.5.5.7.3.4", "emailProtection"),
                n("1.3.6.1.5.5.7.3.8", "timeStamping")
            }
            )),
            x((function(e) {
                var t = e.exports = V.asn1 = V.asn1 || {};
                function n(e, t, n) {
                    if (n > t) {
                        var r = new Error("Too few bytes to parse DER.");
                        throw r.available = e.length(),
                        r.remaining = t,
                        r.requested = n,
                        r
                    }
                }
                t.Class = {
                    UNIVERSAL: 0,
                    APPLICATION: 64,
                    CONTEXT_SPECIFIC: 128,
                    PRIVATE: 192
                },
                t.Type = {
                    NONE: 0,
                    BOOLEAN: 1,
                    INTEGER: 2,
                    BITSTRING: 3,
                    OCTETSTRING: 4,
                    NULL: 5,
                    OID: 6,
                    ODESC: 7,
                    EXTERNAL: 8,
                    REAL: 9,
                    ENUMERATED: 10,
                    EMBEDDED: 11,
                    UTF8: 12,
                    ROID: 13,
                    SEQUENCE: 16,
                    SET: 17,
                    PRINTABLESTRING: 19,
                    IA5STRING: 22,
                    UTCTIME: 23,
                    GENERALIZEDTIME: 24,
                    BMPSTRING: 30
                },
                t.create = function(e, n, r, a, o) {
                    if (V.util.isArray(a)) {
                        for (var i = [], s = 0; s < a.length; ++s)
                            void 0 !== a[s] && i.push(a[s]);
                        a = i
                    }
                    var u = {
                        tagClass: e,
                        type: n,
                        constructed: r,
                        composed: r || V.util.isArray(a),
                        value: a
                    };
                    return o && "bitStringContents"in o && (u.bitStringContents = o.bitStringContents,
                    u.original = t.copy(u)),
                    u
                }
                ,
                t.copy = function(e, n) {
                    var r;
                    if (V.util.isArray(e)) {
                        r = [];
                        for (var a = 0; a < e.length; ++a)
                            r.push(t.copy(e[a], n));
                        return r
                    }
                    return "string" == typeof e ? e : (r = {
                        tagClass: e.tagClass,
                        type: e.type,
                        constructed: e.constructed,
                        composed: e.composed,
                        value: t.copy(e.value, n)
                    },
                    n && !n.excludeBitStringContents && (r.bitStringContents = e.bitStringContents),
                    r)
                }
                ,
                t.equals = function(e, n, r) {
                    if (V.util.isArray(e)) {
                        if (!V.util.isArray(n))
                            return !1;
                        if (e.length !== n.length)
                            return !1;
                        for (var a = 0; a < e.length; ++a)
                            if (!t.equals(e[a], n[a]))
                                return !1;
                        return !0
                    }
                    if (typeof e != typeof n)
                        return !1;
                    if ("string" == typeof e)
                        return e === n;
                    var o = e.tagClass === n.tagClass && e.type === n.type && e.constructed === n.constructed && e.composed === n.composed && t.equals(e.value, n.value);
                    return r && r.includeBitStringContents && (o = o && e.bitStringContents === n.bitStringContents),
                    o
                }
                ,
                t.getBerValueLength = function(e) {
                    var t = e.getByte();
                    if (128 !== t)
                        return 128 & t ? e.getInt((127 & t) << 3) : t
                }
                ;
                var r = function(e, t) {
                    var r = e.getByte();
                    if (t--,
                    128 !== r) {
                        var a;
                        if (128 & r) {
                            var o = 127 & r;
                            n(e, t, o),
                            a = e.getInt(o << 3)
                        } else
                            a = r;
                        if (a < 0)
                            throw new Error("Negative length: " + a);
                        return a
                    }
                };
                t.fromDer = function(e, a) {
                    return void 0 === a && (a = {
                        strict: !0,
                        decodeBitStrings: !0
                    }),
                    "boolean" == typeof a && (a = {
                        strict: a,
                        decodeBitStrings: !0
                    }),
                    "strict"in a || (a.strict = !0),
                    "decodeBitStrings"in a || (a.decodeBitStrings = !0),
                    "string" == typeof e && (e = V.util.createBuffer(e)),
                    function e(a, o, i, s) {
                        var u;
                        n(a, o, 2);
                        var c = a.getByte();
                        o--;
                        var l = 192 & c
                          , f = 31 & c;
                        u = a.length();
                        var p, d, h = r(a, o);
                        if (o -= u - a.length(),
                        void 0 !== h && h > o) {
                            if (s.strict) {
                                var m = new Error("Too few bytes to read ASN.1 value.");
                                throw m.available = a.length(),
                                m.remaining = o,
                                m.requested = h,
                                m
                            }
                            h = o
                        }
                        var v = 32 == (32 & c);
                        if (v)
                            if (p = [],
                            void 0 === h)
                                for (; ; ) {
                                    if (n(a, o, 2),
                                    a.bytes(2) === String.fromCharCode(0, 0)) {
                                        a.getBytes(2),
                                        o -= 2;
                                        break
                                    }
                                    u = a.length(),
                                    p.push(e(a, o, i + 1, s)),
                                    o -= u - a.length()
                                }
                            else
                                for (; h > 0; )
                                    u = a.length(),
                                    p.push(e(a, h, i + 1, s)),
                                    o -= u - a.length(),
                                    h -= u - a.length();
                        if (void 0 === p && l === t.Class.UNIVERSAL && f === t.Type.BITSTRING && (d = a.bytes(h)),
                        void 0 === p && s.decodeBitStrings && l === t.Class.UNIVERSAL && f === t.Type.BITSTRING && h > 1) {
                            var g = a.read
                              , y = o
                              , b = 0;
                            if (f === t.Type.BITSTRING && (n(a, o, 1),
                            b = a.getByte(),
                            o--),
                            0 === b)
                                try {
                                    u = a.length();
                                    var x = e(a, o, i + 1, {
                                        verbose: s.verbose,
                                        strict: !0,
                                        decodeBitStrings: !0
                                    })
                                      , w = u - a.length();
                                    o -= w,
                                    f == t.Type.BITSTRING && w++;
                                    var k = x.tagClass;
                                    w !== h || k !== t.Class.UNIVERSAL && k !== t.Class.CONTEXT_SPECIFIC || (p = [x])
                                } catch (e) {}
                            void 0 === p && (a.read = g,
                            o = y)
                        }
                        if (void 0 === p) {
                            if (void 0 === h) {
                                if (s.strict)
                                    throw new Error("Non-constructed ASN.1 object of indefinite length.");
                                h = o
                            }
                            if (f === t.Type.BMPSTRING)
                                for (p = ""; h > 0; h -= 2)
                                    n(a, o, 2),
                                    p += String.fromCharCode(a.getInt16()),
                                    o -= 2;
                            else
                                p = a.getBytes(h)
                        }
                        var C = void 0 === d ? null : {
                            bitStringContents: d
                        };
                        return t.create(l, f, v, p, C)
                    }(e, e.length(), 0, a)
                }
                ,
                t.toDer = function(e) {
                    var n = V.util.createBuffer()
                      , r = e.tagClass | e.type
                      , a = V.util.createBuffer()
                      , o = !1;
                    if ("bitStringContents"in e && (o = !0,
                    e.original && (o = t.equals(e, e.original))),
                    o)
                        a.putBytes(e.bitStringContents);
                    else if (e.composed) {
                        e.constructed ? r |= 32 : a.putByte(0);
                        for (var i = 0; i < e.value.length; ++i)
                            void 0 !== e.value[i] && a.putBuffer(t.toDer(e.value[i]))
                    } else if (e.type === t.Type.BMPSTRING)
                        for (i = 0; i < e.value.length; ++i)
                            a.putInt16(e.value.charCodeAt(i));
                    else
                        e.type === t.Type.INTEGER && e.value.length > 1 && (0 === e.value.charCodeAt(0) && 0 == (128 & e.value.charCodeAt(1)) || 255 === e.value.charCodeAt(0) && 128 == (128 & e.value.charCodeAt(1))) ? a.putBytes(e.value.substr(1)) : a.putBytes(e.value);
                    if (n.putByte(r),
                    a.length() <= 127)
                        n.putByte(127 & a.length());
                    else {
                        var s = a.length()
                          , u = "";
                        do {
                            u += String.fromCharCode(255 & s),
                            s >>>= 8
                        } while (s > 0);for (n.putByte(128 | u.length),
                        i = u.length - 1; i >= 0; --i)
                            n.putByte(u.charCodeAt(i))
                    }
                    return n.putBuffer(a),
                    n
                }
                ,
                t.oidToDer = function(e) {
                    var t, n, r, a, o = e.split("."), i = V.util.createBuffer();
                    i.putByte(40 * parseInt(o[0], 10) + parseInt(o[1], 10));
                    for (var s = 2; s < o.length; ++s) {
                        t = !0,
                        n = [],
                        r = parseInt(o[s], 10);
                        do {
                            a = 127 & r,
                            r >>>= 7,
                            t || (a |= 128),
                            n.push(a),
                            t = !1
                        } while (r > 0);for (var u = n.length - 1; u >= 0; --u)
                            i.putByte(n[u])
                    }
                    return i
                }
                ,
                t.derToOid = function(e) {
                    var t;
                    "string" == typeof e && (e = V.util.createBuffer(e));
                    var n = e.getByte();
                    t = Math.floor(n / 40) + "." + n % 40;
                    for (var r = 0; e.length() > 0; )
                        r <<= 7,
                        128 & (n = e.getByte()) ? r += 127 & n : (t += "." + (r + n),
                        r = 0);
                    return t
                }
                ,
                t.utcTimeToDate = function(e) {
                    var t = new Date
                      , n = parseInt(e.substr(0, 2), 10);
                    n = n >= 50 ? 1900 + n : 2e3 + n;
                    var r = parseInt(e.substr(2, 2), 10) - 1
                      , a = parseInt(e.substr(4, 2), 10)
                      , o = parseInt(e.substr(6, 2), 10)
                      , i = parseInt(e.substr(8, 2), 10)
                      , s = 0;
                    if (e.length > 11) {
                        var u = e.charAt(10)
                          , c = 10;
                        "+" !== u && "-" !== u && (s = parseInt(e.substr(10, 2), 10),
                        c += 2)
                    }
                    if (t.setUTCFullYear(n, r, a),
                    t.setUTCHours(o, i, s, 0),
                    c && ("+" === (u = e.charAt(c)) || "-" === u)) {
                        var l = 60 * parseInt(e.substr(c + 1, 2), 10) + parseInt(e.substr(c + 4, 2), 10);
                        l *= 6e4,
                        "+" === u ? t.setTime(+t - l) : t.setTime(+t + l)
                    }
                    return t
                }
                ,
                t.generalizedTimeToDate = function(e) {
                    var t = new Date
                      , n = parseInt(e.substr(0, 4), 10)
                      , r = parseInt(e.substr(4, 2), 10) - 1
                      , a = parseInt(e.substr(6, 2), 10)
                      , o = parseInt(e.substr(8, 2), 10)
                      , i = parseInt(e.substr(10, 2), 10)
                      , s = parseInt(e.substr(12, 2), 10)
                      , u = 0
                      , c = 0
                      , l = !1;
                    "Z" === e.charAt(e.length - 1) && (l = !0);
                    var f = e.length - 5
                      , p = e.charAt(f);
                    return "+" !== p && "-" !== p || (c = 60 * parseInt(e.substr(f + 1, 2), 10) + parseInt(e.substr(f + 4, 2), 10),
                    c *= 6e4,
                    "+" === p && (c *= -1),
                    l = !0),
                    "." === e.charAt(14) && (u = 1e3 * parseFloat(e.substr(14), 10)),
                    l ? (t.setUTCFullYear(n, r, a),
                    t.setUTCHours(o, i, s, u),
                    t.setTime(+t + c)) : (t.setFullYear(n, r, a),
                    t.setHours(o, i, s, u)),
                    t
                }
                ,
                t.dateToUtcTime = function(e) {
                    if ("string" == typeof e)
                        return e;
                    var t = ""
                      , n = [];
                    n.push(("" + e.getUTCFullYear()).substr(2)),
                    n.push("" + (e.getUTCMonth() + 1)),
                    n.push("" + e.getUTCDate()),
                    n.push("" + e.getUTCHours()),
                    n.push("" + e.getUTCMinutes()),
                    n.push("" + e.getUTCSeconds());
                    for (var r = 0; r < n.length; ++r)
                        n[r].length < 2 && (t += "0"),
                        t += n[r];
                    return t + "Z"
                }
                ,
                t.dateToGeneralizedTime = function(e) {
                    if ("string" == typeof e)
                        return e;
                    var t = ""
                      , n = [];
                    n.push("" + e.getUTCFullYear()),
                    n.push("" + (e.getUTCMonth() + 1)),
                    n.push("" + e.getUTCDate()),
                    n.push("" + e.getUTCHours()),
                    n.push("" + e.getUTCMinutes()),
                    n.push("" + e.getUTCSeconds());
                    for (var r = 0; r < n.length; ++r)
                        n[r].length < 2 && (t += "0"),
                        t += n[r];
                    return t + "Z"
                }
                ,
                t.integerToDer = function(e) {
                    var t = V.util.createBuffer();
                    if (e >= -128 && e < 128)
                        return t.putSignedInt(e, 8);
                    if (e >= -32768 && e < 32768)
                        return t.putSignedInt(e, 16);
                    if (e >= -8388608 && e < 8388608)
                        return t.putSignedInt(e, 24);
                    if (e >= -2147483648 && e < 2147483648)
                        return t.putSignedInt(e, 32);
                    var n = new Error("Integer too large; max is 32-bits.");
                    throw n.integer = e,
                    n
                }
                ,
                t.derToInteger = function(e) {
                    "string" == typeof e && (e = V.util.createBuffer(e));
                    var t = 8 * e.length();
                    if (t > 32)
                        throw new Error("Integer too large; max is 32-bits.");
                    return e.getSignedInt(t)
                }
                ,
                t.validate = function(e, n, r, a) {
                    var o = !1;
                    if (e.tagClass !== n.tagClass && void 0 !== n.tagClass || e.type !== n.type && void 0 !== n.type)
                        a && (e.tagClass !== n.tagClass && a.push("[" + n.name + '] Expected tag class "' + n.tagClass + '", got "' + e.tagClass + '"'),
                        e.type !== n.type && a.push("[" + n.name + '] Expected type "' + n.type + '", got "' + e.type + '"'));
                    else if (e.constructed === n.constructed || void 0 === n.constructed) {
                        if (o = !0,
                        n.value && V.util.isArray(n.value))
                            for (var i = 0, s = 0; o && s < n.value.length; ++s)
                                o = n.value[s].optional || !1,
                                e.value[i] && ((o = t.validate(e.value[i], n.value[s], r, a)) ? ++i : n.value[s].optional && (o = !0)),
                                !o && a && a.push("[" + n.name + '] Tag class "' + n.tagClass + '", type "' + n.type + '" expected value length "' + n.value.length + '", got "' + e.value.length + '"');
                        if (o && r && (n.capture && (r[n.capture] = e.value),
                        n.captureAsn1 && (r[n.captureAsn1] = e),
                        n.captureBitStringContents && "bitStringContents"in e && (r[n.captureBitStringContents] = e.bitStringContents),
                        n.captureBitStringValue && "bitStringContents"in e))
                            if (e.bitStringContents.length < 2)
                                r[n.captureBitStringValue] = "";
                            else {
                                if (0 !== e.bitStringContents.charCodeAt(0))
                                    throw new Error("captureBitStringValue only supported for zero unused bits");
                                r[n.captureBitStringValue] = e.bitStringContents.slice(1)
                            }
                    } else
                        a && a.push("[" + n.name + '] Expected constructed "' + n.constructed + '", got "' + e.constructed + '"');
                    return o
                }
                ;
                var a = /[^\\u0000-\\u00ff]/;
                t.prettyPrint = function(e, n, r) {
                    var o = "";
                    r = r || 2,
                    (n = n || 0) > 0 && (o += "\n");
                    for (var i = "", s = 0; s < n * r; ++s)
                        i += " ";
                    switch (o += i + "Tag: ",
                    e.tagClass) {
                    case t.Class.UNIVERSAL:
                        o += "Universal:";
                        break;
                    case t.Class.APPLICATION:
                        o += "Application:";
                        break;
                    case t.Class.CONTEXT_SPECIFIC:
                        o += "Context-Specific:";
                        break;
                    case t.Class.PRIVATE:
                        o += "Private:"
                    }
                    if (e.tagClass === t.Class.UNIVERSAL)
                        switch (o += e.type,
                        e.type) {
                        case t.Type.NONE:
                            o += " (None)";
                            break;
                        case t.Type.BOOLEAN:
                            o += " (Boolean)";
                            break;
                        case t.Type.INTEGER:
                            o += " (Integer)";
                            break;
                        case t.Type.BITSTRING:
                            o += " (Bit string)";
                            break;
                        case t.Type.OCTETSTRING:
                            o += " (Octet string)";
                            break;
                        case t.Type.NULL:
                            o += " (Null)";
                            break;
                        case t.Type.OID:
                            o += " (Object Identifier)";
                            break;
                        case t.Type.ODESC:
                            o += " (Object Descriptor)";
                            break;
                        case t.Type.EXTERNAL:
                            o += " (External or Instance of)";
                            break;
                        case t.Type.REAL:
                            o += " (Real)";
                            break;
                        case t.Type.ENUMERATED:
                            o += " (Enumerated)";
                            break;
                        case t.Type.EMBEDDED:
                            o += " (Embedded PDV)";
                            break;
                        case t.Type.UTF8:
                            o += " (UTF8)";
                            break;
                        case t.Type.ROID:
                            o += " (Relative Object Identifier)";
                            break;
                        case t.Type.SEQUENCE:
                            o += " (Sequence)";
                            break;
                        case t.Type.SET:
                            o += " (Set)";
                            break;
                        case t.Type.PRINTABLESTRING:
                            o += " (Printable String)";
                            break;
                        case t.Type.IA5String:
                            o += " (IA5String (ASCII))";
                            break;
                        case t.Type.UTCTIME:
                            o += " (UTC time)";
                            break;
                        case t.Type.GENERALIZEDTIME:
                            o += " (Generalized time)";
                            break;
                        case t.Type.BMPSTRING:
                            o += " (BMP String)"
                        }
                    else
                        o += e.type;
                    if (o += "\n",
                    o += i + "Constructed: " + e.constructed + "\n",
                    e.composed) {
                        var u = 0
                          , c = "";
                        for (s = 0; s < e.value.length; ++s)
                            void 0 !== e.value[s] && (u += 1,
                            c += t.prettyPrint(e.value[s], n + 1, r),
                            s + 1 < e.value.length && (c += ","));
                        o += i + "Sub values: " + u + c
                    } else {
                        if (o += i + "Value: ",
                        e.type === t.Type.OID) {
                            var l = t.derToOid(e.value);
                            o += l,
                            V.pki && V.pki.oids && l in V.pki.oids && (o += " (" + V.pki.oids[l] + ") ")
                        }
                        if (e.type === t.Type.INTEGER)
                            try {
                                o += t.derToInteger(e.value)
                            } catch (t) {
                                o += "0x" + V.util.bytesToHex(e.value)
                            }
                        else if (e.type === t.Type.BITSTRING) {
                            if (e.value.length > 1 ? o += "0x" + V.util.bytesToHex(e.value.slice(1)) : o += "(none)",
                            e.value.length > 0) {
                                var f = e.value.charCodeAt(0);
                                1 == f ? o += " (1 unused bit shown)" : f > 1 && (o += " (" + f + " unused bits shown)")
                            }
                        } else
                            e.type === t.Type.OCTETSTRING ? (a.test(e.value) || (o += "(" + e.value + ") "),
                            o += "0x" + V.util.bytesToHex(e.value)) : e.type === t.Type.UTF8 ? o += V.util.decodeUtf8(e.value) : e.type === t.Type.PRINTABLESTRING || e.type === t.Type.IA5String ? o += e.value : a.test(e.value) ? o += "0x" + V.util.bytesToHex(e.value) : 0 === e.value.length ? o += "[null]" : o += e.value
                    }
                    return o
                }
            }
            )),
            V.md = V.md || {},
            V.md.algorithms = V.md.algorithms || {},
            x((function(e) {
                (e.exports = V.hmac = V.hmac || {}).create = function() {
                    var e = null
                      , t = null
                      , n = null
                      , r = null
                      , a = {
                        start: function(a, o) {
                            if (null !== a)
                                if ("string" == typeof a) {
                                    if (!((a = a.toLowerCase())in V.md.algorithms))
                                        throw new Error('Unknown hash algorithm "' + a + '"');
                                    t = V.md.algorithms[a].create()
                                } else
                                    t = a;
                            if (null === o)
                                o = e;
                            else {
                                if ("string" == typeof o)
                                    o = V.util.createBuffer(o);
                                else if (V.util.isArray(o)) {
                                    var i = o;
                                    o = V.util.createBuffer();
                                    for (var s = 0; s < i.length; ++s)
                                        o.putByte(i[s])
                                }
                                var u = o.length();
                                for (u > t.blockLength && (t.start(),
                                t.update(o.bytes()),
                                o = t.digest()),
                                n = V.util.createBuffer(),
                                r = V.util.createBuffer(),
                                u = o.length(),
                                s = 0; s < u; ++s)
                                    i = o.at(s),
                                    n.putByte(54 ^ i),
                                    r.putByte(92 ^ i);
                                if (u < t.blockLength)
                                    for (i = t.blockLength - u,
                                    s = 0; s < i; ++s)
                                        n.putByte(54),
                                        r.putByte(92);
                                e = o,
                                n = n.bytes(),
                                r = r.bytes()
                            }
                            t.start(),
                            t.update(n)
                        },
                        update: function(e) {
                            t.update(e)
                        },
                        getMac: function() {
                            var e = t.digest().bytes();
                            return t.start(),
                            t.update(r),
                            t.update(e),
                            t.digest()
                        }
                    };
                    return a.digest = a.getMac,
                    a
                }
            }
            )),
            x((function(e) {
                var t = e.exports = V.md5 = V.md5 || {};
                V.md.md5 = V.md.algorithms.md5 = t,
                t.create = function() {
                    i || function() {
                        n = String.fromCharCode(128),
                        n += V.util.fillString(String.fromCharCode(0), 64),
                        r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12, 5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2, 0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9],
                        a = [7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21],
                        o = new Array(64);
                        for (var e = 0; e < 64; ++e)
                            o[e] = Math.floor(4294967296 * Math.abs(Math.sin(e + 1)));
                        i = !0
                    }();
                    var e = null
                      , t = V.util.createBuffer()
                      , u = new Array(16)
                      , c = {
                        algorithm: "md5",
                        blockLength: 64,
                        digestLength: 16,
                        messageLength: 0,
                        fullMessageLength: null,
                        messageLengthSize: 8,
                        start: function() {
                            c.messageLength = 0,
                            c.fullMessageLength = c.messageLength64 = [];
                            for (var n = c.messageLengthSize / 4, r = 0; r < n; ++r)
                                c.fullMessageLength.push(0);
                            return t = V.util.createBuffer(),
                            e = {
                                h0: 1732584193,
                                h1: 4023233417,
                                h2: 2562383102,
                                h3: 271733878
                            },
                            c
                        }
                    };
                    return c.start(),
                    c.update = function(n, r) {
                        "utf8" === r && (n = V.util.encodeUtf8(n));
                        var a = n.length;
                        c.messageLength += a,
                        a = [a / 4294967296 >>> 0, a >>> 0];
                        for (var o = c.fullMessageLength.length - 1; o >= 0; --o)
                            c.fullMessageLength[o] += a[1],
                            a[1] = a[0] + (c.fullMessageLength[o] / 4294967296 >>> 0),
                            c.fullMessageLength[o] = c.fullMessageLength[o] >>> 0,
                            a[0] = a[1] / 4294967296 >>> 0;
                        return t.putBytes(n),
                        s(e, u, t),
                        (t.read > 2048 || 0 === t.length()) && t.compact(),
                        c
                    }
                    ,
                    c.digest = function() {
                        var r = V.util.createBuffer();
                        r.putBytes(t.bytes());
                        var a = c.fullMessageLength[c.fullMessageLength.length - 1] + c.messageLengthSize & c.blockLength - 1;
                        r.putBytes(n.substr(0, c.blockLength - a));
                        for (var o, i = 0, l = c.fullMessageLength.length - 1; l >= 0; --l)
                            i = (o = 8 * c.fullMessageLength[l] + i) / 4294967296 >>> 0,
                            r.putInt32Le(o >>> 0);
                        var f = {
                            h0: e.h0,
                            h1: e.h1,
                            h2: e.h2,
                            h3: e.h3
                        };
                        s(f, u, r);
                        var p = V.util.createBuffer();
                        return p.putInt32Le(f.h0),
                        p.putInt32Le(f.h1),
                        p.putInt32Le(f.h2),
                        p.putInt32Le(f.h3),
                        p
                    }
                    ,
                    c
                }
                ;
                var n = null
                  , r = null
                  , a = null
                  , o = null
                  , i = !1;
                function s(e, t, n) {
                    for (var i, s, u, c, l, f, p, d = n.length(); d >= 64; ) {
                        for (s = e.h0,
                        u = e.h1,
                        c = e.h2,
                        l = e.h3,
                        p = 0; p < 16; ++p)
                            t[p] = n.getInt32Le(),
                            i = s + (l ^ u & (c ^ l)) + o[p] + t[p],
                            s = l,
                            l = c,
                            c = u,
                            u += i << (f = a[p]) | i >>> 32 - f;
                        for (; p < 32; ++p)
                            i = s + (c ^ l & (u ^ c)) + o[p] + t[r[p]],
                            s = l,
                            l = c,
                            c = u,
                            u += i << (f = a[p]) | i >>> 32 - f;
                        for (; p < 48; ++p)
                            i = s + (u ^ c ^ l) + o[p] + t[r[p]],
                            s = l,
                            l = c,
                            c = u,
                            u += i << (f = a[p]) | i >>> 32 - f;
                        for (; p < 64; ++p)
                            i = s + (c ^ (u | ~l)) + o[p] + t[r[p]],
                            s = l,
                            l = c,
                            c = u,
                            u += i << (f = a[p]) | i >>> 32 - f;
                        e.h0 = e.h0 + s | 0,
                        e.h1 = e.h1 + u | 0,
                        e.h2 = e.h2 + c | 0,
                        e.h3 = e.h3 + l | 0,
                        d -= 64
                    }
                }
            }
            )),
            x((function(e) {
                var t = e.exports = V.pem = V.pem || {};
                function n(e) {
                    for (var t = e.name + ": ", n = [], r = function(e, t) {
                        return " " + t
                    }, a = 0; a < e.values.length; ++a)
                        n.push(e.values[a].replace(/^(\S+\r\n)/, r));
                    t += n.join(",") + "\r\n";
                    var o = 0
                      , i = -1;
                    for (a = 0; a < t.length; ++a,
                    ++o)
                        if (o > 65 && -1 !== i) {
                            var s = t[i];
                            "," === s ? (++i,
                            t = t.substr(0, i) + "\r\n " + t.substr(i)) : t = t.substr(0, i) + "\r\n" + s + t.substr(i + 1),
                            o = a - i - 1,
                            i = -1,
                            ++a
                        } else
                            " " !== t[a] && "\t" !== t[a] && "," !== t[a] || (i = a);
                    return t
                }
                function r(e) {
                    return e.replace(/^\s+/, "")
                }
                t.encode = function(e, t) {
                    t = t || {};
                    var r, a = "-----BEGIN " + e.type + "-----\r\n";
                    if (e.procType && (a += n(r = {
                        name: "Proc-Type",
                        values: [String(e.procType.version), e.procType.type]
                    })),
                    e.contentDomain && (a += n(r = {
                        name: "Content-Domain",
                        values: [e.contentDomain]
                    })),
                    e.dekInfo && (r = {
                        name: "DEK-Info",
                        values: [e.dekInfo.algorithm]
                    },
                    e.dekInfo.parameters && r.values.push(e.dekInfo.parameters),
                    a += n(r)),
                    e.headers)
                        for (var o = 0; o < e.headers.length; ++o)
                            a += n(e.headers[o]);
                    return e.procType && (a += "\r\n"),
                    (a += V.util.encode64(e.body, t.maxline || 64) + "\r\n") + "-----END " + e.type + "-----\r\n"
                }
                ,
                t.decode = function(e) {
                    for (var t, n = [], a = /\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g, o = /([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/, i = /\r?\n/; t = a.exec(e); ) {
                        var s = {
                            type: t[1],
                            procType: null,
                            contentDomain: null,
                            dekInfo: null,
                            headers: [],
                            body: V.util.decode64(t[3])
                        };
                        if (n.push(s),
                        t[2]) {
                            for (var u = t[2].split(i), c = 0; t && c < u.length; ) {
                                for (var l = u[c].replace(/\s+$/, ""), f = c + 1; f < u.length; ++f) {
                                    var p = u[f];
                                    if (!/\s/.test(p[0]))
                                        break;
                                    l += p,
                                    c = f
                                }
                                if (t = l.match(o)) {
                                    for (var d = {
                                        name: t[1],
                                        values: []
                                    }, h = t[2].split(","), m = 0; m < h.length; ++m)
                                        d.values.push(r(h[m]));
                                    if (s.procType)
                                        if (s.contentDomain || "Content-Domain" !== d.name)
                                            if (s.dekInfo || "DEK-Info" !== d.name)
                                                s.headers.push(d);
                                            else {
                                                if (0 === d.values.length)
                                                    throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');
                                                s.dekInfo = {
                                                    algorithm: h[0],
                                                    parameters: h[1] || null
                                                }
                                            }
                                        else
                                            s.contentDomain = h[0] || "";
                                    else {
                                        if ("Proc-Type" !== d.name)
                                            throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');
                                        if (2 !== d.values.length)
                                            throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');
                                        s.procType = {
                                            version: h[0],
                                            type: h[1]
                                        }
                                    }
                                }
                                ++c
                            }
                            if ("ENCRYPTED" === s.procType && !s.dekInfo)
                                throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".')
                        }
                    }
                    if (0 === n.length)
                        throw new Error("Invalid PEM formatted message.");
                    return n
                }
            }
            )),
            V.des = V.des || {},
            V.des.startEncrypting = function(e, t, n, r) {
                var a = de({
                    key: e,
                    output: n,
                    decrypt: !1,
                    mode: r || (null === t ? "ECB" : "CBC")
                });
                return a.start(t),
                a
            }
            ,
            V.des.createEncryptionCipher = function(e, t) {
                return de({
                    key: e,
                    output: null,
                    decrypt: !1,
                    mode: t
                })
            }
            ,
            V.des.startDecrypting = function(e, t, n, r) {
                var a = de({
                    key: e,
                    output: n,
                    decrypt: !0,
                    mode: r || (null === t ? "ECB" : "CBC")
                });
                return a.start(t),
                a
            }
            ,
            V.des.createDecryptionCipher = function(e, t) {
                return de({
                    key: e,
                    output: null,
                    decrypt: !0,
                    mode: t
                })
            }
            ,
            V.des.Algorithm = function(e, t) {
                var n = this;
                n.name = e,
                n.mode = new t({
                    blockSize: 8,
                    cipher: {
                        encrypt: function(e, t) {
                            return pe(n._keys, e, t, !1)
                        },
                        decrypt: function(e, t) {
                            return pe(n._keys, e, t, !0)
                        }
                    }
                }),
                n._init = !1
            }
            ,
            V.des.Algorithm.prototype.initialize = function(e) {
                if (!this._init) {
                    var t = V.util.createBuffer(e.key);
                    if (0 === this.name.indexOf("3DES") && 24 !== t.length())
                        throw new Error("Invalid Triple-DES key size: " + 8 * t.length());
                    this._keys = function(e) {
                        for (var t, n = [0, 4, 536870912, 536870916, 65536, 65540, 536936448, 536936452, 512, 516, 536871424, 536871428, 66048, 66052, 536936960, 536936964], r = [0, 1, 1048576, 1048577, 67108864, 67108865, 68157440, 68157441, 256, 257, 1048832, 1048833, 67109120, 67109121, 68157696, 68157697], a = [0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272, 0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272], o = [0, 2097152, 134217728, 136314880, 8192, 2105344, 134225920, 136323072, 131072, 2228224, 134348800, 136445952, 139264, 2236416, 134356992, 136454144], i = [0, 262144, 16, 262160, 0, 262144, 16, 262160, 4096, 266240, 4112, 266256, 4096, 266240, 4112, 266256], s = [0, 1024, 32, 1056, 0, 1024, 32, 1056, 33554432, 33555456, 33554464, 33555488, 33554432, 33555456, 33554464, 33555488], u = [0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746, 0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746], c = [0, 65536, 2048, 67584, 536870912, 536936448, 536872960, 536938496, 131072, 196608, 133120, 198656, 537001984, 537067520, 537004032, 537069568], l = [0, 262144, 0, 262144, 2, 262146, 2, 262146, 33554432, 33816576, 33554432, 33816576, 33554434, 33816578, 33554434, 33816578], f = [0, 268435456, 8, 268435464, 0, 268435456, 8, 268435464, 1024, 268436480, 1032, 268436488, 1024, 268436480, 1032, 268436488], p = [0, 32, 0, 32, 1048576, 1048608, 1048576, 1048608, 8192, 8224, 8192, 8224, 1056768, 1056800, 1056768, 1056800], d = [0, 16777216, 512, 16777728, 2097152, 18874368, 2097664, 18874880, 67108864, 83886080, 67109376, 83886592, 69206016, 85983232, 69206528, 85983744], h = [0, 4096, 134217728, 134221824, 524288, 528384, 134742016, 134746112, 16, 4112, 134217744, 134221840, 524304, 528400, 134742032, 134746128], m = [0, 4, 256, 260, 0, 4, 256, 260, 1, 5, 257, 261, 1, 5, 257, 261], v = e.length() > 8 ? 3 : 1, g = [], y = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], b = 0, x = 0; x < v; x++) {
                            var w = e.getInt32()
                              , k = e.getInt32();
                            w ^= (t = 252645135 & (w >>> 4 ^ k)) << 4,
                            w ^= t = 65535 & ((k ^= t) >>> -16 ^ w),
                            w ^= (t = 858993459 & (w >>> 2 ^ (k ^= t << -16))) << 2,
                            w ^= t = 65535 & ((k ^= t) >>> -16 ^ w),
                            w ^= (t = 1431655765 & (w >>> 1 ^ (k ^= t << -16))) << 1,
                            w ^= t = 16711935 & ((k ^= t) >>> 8 ^ w),
                            t = (w ^= (t = 1431655765 & (w >>> 1 ^ (k ^= t << 8))) << 1) << 8 | (k ^= t) >>> 20 & 240,
                            w = k << 24 | k << 8 & 16711680 | k >>> 8 & 65280 | k >>> 24 & 240,
                            k = t;
                            for (var C = 0; C < y.length; ++C) {
                                y[C] ? (w = w << 2 | w >>> 26,
                                k = k << 2 | k >>> 26) : (w = w << 1 | w >>> 27,
                                k = k << 1 | k >>> 27);
                                var E = n[(w &= -15) >>> 28] | r[w >>> 24 & 15] | a[w >>> 20 & 15] | o[w >>> 16 & 15] | i[w >>> 12 & 15] | s[w >>> 8 & 15] | u[w >>> 4 & 15]
                                  , S = c[(k &= -15) >>> 28] | l[k >>> 24 & 15] | f[k >>> 20 & 15] | p[k >>> 16 & 15] | d[k >>> 12 & 15] | h[k >>> 8 & 15] | m[k >>> 4 & 15];
                                t = 65535 & (S >>> 16 ^ E),
                                g[b++] = E ^ t,
                                g[b++] = S ^ t << 16
                            }
                        }
                        return g
                    }(t),
                    this._init = !0
                }
            }
            ,
            re("DES-ECB", V.cipher.modes.ecb),
            re("DES-CBC", V.cipher.modes.cbc),
            re("DES-CFB", V.cipher.modes.cfb),
            re("DES-OFB", V.cipher.modes.ofb),
            re("DES-CTR", V.cipher.modes.ctr),
            re("3DES-ECB", V.cipher.modes.ecb),
            re("3DES-CBC", V.cipher.modes.cbc),
            re("3DES-CFB", V.cipher.modes.cfb),
            re("3DES-OFB", V.cipher.modes.ofb),
            re("3DES-CTR", V.cipher.modes.ctr);
            var ae = [16843776, 0, 65536, 16843780, 16842756, 66564, 4, 65536, 1024, 16843776, 16843780, 1024, 16778244, 16842756, 16777216, 4, 1028, 16778240, 16778240, 66560, 66560, 16842752, 16842752, 16778244, 65540, 16777220, 16777220, 65540, 0, 1028, 66564, 16777216, 65536, 16843780, 4, 16842752, 16843776, 16777216, 16777216, 1024, 16842756, 65536, 66560, 16777220, 1024, 4, 16778244, 66564, 16843780, 65540, 16842752, 16778244, 16777220, 1028, 66564, 16843776, 1028, 16778240, 16778240, 0, 65540, 66560, 0, 16842756]
              , oe = [-2146402272, -2147450880, 32768, 1081376, 1048576, 32, -2146435040, -2147450848, -2147483616, -2146402272, -2146402304, -2147483648, -2147450880, 1048576, 32, -2146435040, 1081344, 1048608, -2147450848, 0, -2147483648, 32768, 1081376, -2146435072, 1048608, -2147483616, 0, 1081344, 32800, -2146402304, -2146435072, 32800, 0, 1081376, -2146435040, 1048576, -2147450848, -2146435072, -2146402304, 32768, -2146435072, -2147450880, 32, -2146402272, 1081376, 32, 32768, -2147483648, 32800, -2146402304, 1048576, -2147483616, 1048608, -2147450848, -2147483616, 1048608, 1081344, 0, -2147450880, 32800, -2147483648, -2146435040, -2146402272, 1081344]
              , ie = [520, 134349312, 0, 134348808, 134218240, 0, 131592, 134218240, 131080, 134217736, 134217736, 131072, 134349320, 131080, 134348800, 520, 134217728, 8, 134349312, 512, 131584, 134348800, 134348808, 131592, 134218248, 131584, 131072, 134218248, 8, 134349320, 512, 134217728, 134349312, 134217728, 131080, 520, 131072, 134349312, 134218240, 0, 512, 131080, 134349320, 134218240, 134217736, 512, 0, 134348808, 134218248, 131072, 134217728, 134349320, 8, 131592, 131584, 134217736, 134348800, 134218248, 520, 134348800, 131592, 8, 134348808, 131584]
              , se = [8396801, 8321, 8321, 128, 8396928, 8388737, 8388609, 8193, 0, 8396800, 8396800, 8396929, 129, 0, 8388736, 8388609, 1, 8192, 8388608, 8396801, 128, 8388608, 8193, 8320, 8388737, 1, 8320, 8388736, 8192, 8396928, 8396929, 129, 8388736, 8388609, 8396800, 8396929, 129, 0, 0, 8396800, 8320, 8388736, 8388737, 1, 8396801, 8321, 8321, 128, 8396929, 129, 1, 8192, 8388609, 8193, 8396928, 8388737, 8193, 8320, 8388608, 8396801, 128, 8388608, 8192, 8396928]
              , ue = [256, 34078976, 34078720, 1107296512, 524288, 256, 1073741824, 34078720, 1074266368, 524288, 33554688, 1074266368, 1107296512, 1107820544, 524544, 1073741824, 33554432, 1074266112, 1074266112, 0, 1073742080, 1107820800, 1107820800, 33554688, 1107820544, 1073742080, 0, 1107296256, 34078976, 33554432, 1107296256, 524544, 524288, 1107296512, 256, 33554432, 1073741824, 34078720, 1107296512, 1074266368, 33554688, 1073741824, 1107820544, 34078976, 1074266368, 256, 33554432, 1107820544, 1107820800, 524544, 1107296256, 1107820800, 34078720, 0, 1074266112, 1107296256, 524544, 33554688, 1073742080, 524288, 0, 1074266112, 34078976, 1073742080]
              , ce = [536870928, 541065216, 16384, 541081616, 541065216, 16, 541081616, 4194304, 536887296, 4210704, 4194304, 536870928, 4194320, 536887296, 536870912, 16400, 0, 4194320, 536887312, 16384, 4210688, 536887312, 16, 541065232, 541065232, 0, 4210704, 541081600, 16400, 4210688, 541081600, 536870912, 536887296, 16, 541065232, 4210688, 541081616, 4194304, 16400, 536870928, 4194304, 536887296, 536870912, 16400, 536870928, 541081616, 4210688, 541065216, 4210704, 541081600, 0, 541065232, 16, 16384, 541065216, 4210704, 16384, 4194320, 536887312, 0, 541081600, 536870912, 4194320, 536887312]
              , le = [2097152, 69206018, 67110914, 0, 2048, 67110914, 2099202, 69208064, 69208066, 2097152, 0, 67108866, 2, 67108864, 69206018, 2050, 67110912, 2099202, 2097154, 67110912, 67108866, 69206016, 69208064, 2097154, 69206016, 2048, 2050, 69208066, 2099200, 2, 67108864, 2099200, 67108864, 2099200, 2097152, 67110914, 67110914, 69206018, 69206018, 2, 2097154, 67108864, 67110912, 2097152, 69208064, 2050, 2099202, 69208064, 2050, 67108866, 69208066, 69206016, 2099200, 0, 2, 69208066, 0, 2099202, 69206016, 2048, 67108866, 67110912, 2048, 2097154]
              , fe = [268439616, 4096, 262144, 268701760, 268435456, 268439616, 64, 268435456, 262208, 268697600, 268701760, 266240, 268701696, 266304, 4096, 64, 268697600, 268435520, 268439552, 4160, 266240, 262208, 268697664, 268701696, 4160, 0, 0, 268697664, 268435520, 268439552, 266304, 262144, 266304, 262144, 268701696, 4096, 64, 268697664, 4096, 266304, 268439552, 64, 268435520, 268697600, 268697664, 268435456, 262144, 268439616, 0, 268701760, 262208, 268435520, 268697600, 268439552, 268439616, 0, 268701760, 266240, 266240, 4160, 4160, 262208, 268435456, 268701696];
            function pe(e, t, n, r) {
                var a, o, i = 32 === e.length ? 3 : 9;
                a = 3 === i ? r ? [30, -2, -2] : [0, 32, 2] : r ? [94, 62, -2, 32, 64, 2, 30, -2, -2] : [0, 32, 2, 62, 30, -2, 64, 96, 2];
                var s = t[0]
                  , u = t[1];
                s ^= (o = 252645135 & (s >>> 4 ^ u)) << 4,
                s ^= (o = 65535 & (s >>> 16 ^ (u ^= o))) << 16,
                s ^= o = 858993459 & ((u ^= o) >>> 2 ^ s),
                s ^= o = 16711935 & ((u ^= o << 2) >>> 8 ^ s),
                s = (s ^= (o = 1431655765 & (s >>> 1 ^ (u ^= o << 8))) << 1) << 1 | s >>> 31,
                u = (u ^= o) << 1 | u >>> 31;
                for (var c = 0; c < i; c += 3) {
                    for (var l = a[c + 1], f = a[c + 2], p = a[c]; p != l; p += f) {
                        var d = u ^ e[p]
                          , h = (u >>> 4 | u << 28) ^ e[p + 1];
                        o = s,
                        s = u,
                        u = o ^ (oe[d >>> 24 & 63] | se[d >>> 16 & 63] | ce[d >>> 8 & 63] | fe[63 & d] | ae[h >>> 24 & 63] | ie[h >>> 16 & 63] | ue[h >>> 8 & 63] | le[63 & h])
                    }
                    o = s,
                    s = u,
                    u = o
                }
                u = u >>> 1 | u << 31,
                u ^= o = 1431655765 & ((s = s >>> 1 | s << 31) >>> 1 ^ u),
                u ^= (o = 16711935 & (u >>> 8 ^ (s ^= o << 1))) << 8,
                u ^= (o = 858993459 & (u >>> 2 ^ (s ^= o))) << 2,
                u ^= o = 65535 & ((s ^= o) >>> 16 ^ u),
                u ^= o = 252645135 & ((s ^= o << 16) >>> 4 ^ u),
                s ^= o << 4,
                n[0] = s,
                n[1] = u
            }
            function de(e) {
                var t, n = "DES-" + ((e = e || {}).mode || "CBC").toUpperCase(), r = (t = e.decrypt ? V.cipher.createDecipher(n, e.key) : V.cipher.createCipher(n, e.key)).start;
                return t.start = function(e, n) {
                    var a = null;
                    n instanceof V.util.ByteBuffer && (a = n,
                    n = {}),
                    (n = n || {}).output = a,
                    n.iv = e,
                    r.call(t, n)
                }
                ,
                t
            }
            var he, me = V.pkcs5 = V.pkcs5 || {};
            V.util.isNodejs && !V.options.usePureJavaScript && (he = t),
            V.pbkdf2 = me.pbkdf2 = function(e, t, n, r, a, o) {
                if ("function" == typeof a && (o = a,
                a = null),
                V.util.isNodejs && !V.options.usePureJavaScript && he.pbkdf2 && (null === a || "object" != typeof a) && (he.pbkdf2Sync.length > 4 || !a || "sha1" === a))
                    return "string" != typeof a && (a = "sha1"),
                    e = Buffer.from(e, "binary"),
                    t = Buffer.from(t, "binary"),
                    o ? 4 === he.pbkdf2Sync.length ? he.pbkdf2(e, t, n, r, (function(e, t) {
                        if (e)
                            return o(e);
                        o(null, t.toString("binary"))
                    }
                    )) : he.pbkdf2(e, t, n, r, a, (function(e, t) {
                        if (e)
                            return o(e);
                        o(null, t.toString("binary"))
                    }
                    )) : 4 === he.pbkdf2Sync.length ? he.pbkdf2Sync(e, t, n, r).toString("binary") : he.pbkdf2Sync(e, t, n, r, a).toString("binary");
                if (null == a && (a = "sha1"),
                "string" == typeof a) {
                    if (!(a in V.md.algorithms))
                        throw new Error("Unknown hash algorithm: " + a);
                    a = V.md[a].create()
                }
                var i = a.digestLength;
                if (r > 4294967295 * i) {
                    var s = new Error("Derived key is too long.");
                    if (o)
                        return o(s);
                    throw s
                }
                var u = Math.ceil(r / i)
                  , c = r - (u - 1) * i
                  , l = V.hmac.create();
                l.start(a, e);
                var f, p, d, h = "";
                if (!o) {
                    for (var m = 1; m <= u; ++m) {
                        l.start(null, null),
                        l.update(t),
                        l.update(V.util.int32ToBytes(m)),
                        f = d = l.digest().getBytes();
                        for (var v = 2; v <= n; ++v)
                            l.start(null, null),
                            l.update(d),
                            p = l.digest().getBytes(),
                            f = V.util.xorBytes(f, p, i),
                            d = p;
                        h += m < u ? f : f.substr(0, c)
                    }
                    return h
                }
                function g() {
                    if (m > u)
                        return o(null, h);
                    l.start(null, null),
                    l.update(t),
                    l.update(V.util.int32ToBytes(m)),
                    f = d = l.digest().getBytes(),
                    v = 2,
                    y()
                }
                function y() {
                    if (v <= n)
                        return l.start(null, null),
                        l.update(d),
                        p = l.digest().getBytes(),
                        f = V.util.xorBytes(f, p, i),
                        d = p,
                        ++v,
                        V.util.setImmediate(y);
                    h += m < u ? f : f.substr(0, c),
                    ++m,
                    g()
                }
                m = 1,
                g()
            }
            ,
            x((function(e) {
                var t = e.exports = V.sha256 = V.sha256 || {};
                V.md.sha256 = V.md.algorithms.sha256 = t,
                t.create = function() {
                    r || (n = String.fromCharCode(128),
                    n += V.util.fillString(String.fromCharCode(0), 64),
                    a = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],
                    r = !0);
                    var e = null
                      , t = V.util.createBuffer()
                      , i = new Array(64)
                      , s = {
                        algorithm: "sha256",
                        blockLength: 64,
                        digestLength: 32,
                        messageLength: 0,
                        fullMessageLength: null,
                        messageLengthSize: 8,
                        start: function() {
                            s.messageLength = 0,
                            s.fullMessageLength = s.messageLength64 = [];
                            for (var n = s.messageLengthSize / 4, r = 0; r < n; ++r)
                                s.fullMessageLength.push(0);
                            return t = V.util.createBuffer(),
                            e = {
                                h0: 1779033703,
                                h1: 3144134277,
                                h2: 1013904242,
                                h3: 2773480762,
                                h4: 1359893119,
                                h5: 2600822924,
                                h6: 528734635,
                                h7: 1541459225
                            },
                            s
                        }
                    };
                    return s.start(),
                    s.update = function(n, r) {
                        "utf8" === r && (n = V.util.encodeUtf8(n));
                        var a = n.length;
                        s.messageLength += a,
                        a = [a / 4294967296 >>> 0, a >>> 0];
                        for (var u = s.fullMessageLength.length - 1; u >= 0; --u)
                            s.fullMessageLength[u] += a[1],
                            a[1] = a[0] + (s.fullMessageLength[u] / 4294967296 >>> 0),
                            s.fullMessageLength[u] = s.fullMessageLength[u] >>> 0,
                            a[0] = a[1] / 4294967296 >>> 0;
                        return t.putBytes(n),
                        o(e, i, t),
                        (t.read > 2048 || 0 === t.length()) && t.compact(),
                        s
                    }
                    ,
                    s.digest = function() {
                        var r = V.util.createBuffer();
                        r.putBytes(t.bytes());
                        var a, u = s.fullMessageLength[s.fullMessageLength.length - 1] + s.messageLengthSize & s.blockLength - 1;
                        r.putBytes(n.substr(0, s.blockLength - u));
                        for (var c = 8 * s.fullMessageLength[0], l = 0; l < s.fullMessageLength.length - 1; ++l)
                            c += (a = 8 * s.fullMessageLength[l + 1]) / 4294967296 >>> 0,
                            r.putInt32(c >>> 0),
                            c = a >>> 0;
                        r.putInt32(c);
                        var f = {
                            h0: e.h0,
                            h1: e.h1,
                            h2: e.h2,
                            h3: e.h3,
                            h4: e.h4,
                            h5: e.h5,
                            h6: e.h6,
                            h7: e.h7
                        };
                        o(f, i, r);
                        var p = V.util.createBuffer();
                        return p.putInt32(f.h0),
                        p.putInt32(f.h1),
                        p.putInt32(f.h2),
                        p.putInt32(f.h3),
                        p.putInt32(f.h4),
                        p.putInt32(f.h5),
                        p.putInt32(f.h6),
                        p.putInt32(f.h7),
                        p
                    }
                    ,
                    s
                }
                ;
                var n = null
                  , r = !1
                  , a = null;
                function o(e, t, n) {
                    for (var r, o, i, s, u, c, l, f, p, d, h, m, v, g = n.length(); g >= 64; ) {
                        for (u = 0; u < 16; ++u)
                            t[u] = n.getInt32();
                        for (; u < 64; ++u)
                            r = ((r = t[u - 2]) >>> 17 | r << 15) ^ (r >>> 19 | r << 13) ^ r >>> 10,
                            o = ((o = t[u - 15]) >>> 7 | o << 25) ^ (o >>> 18 | o << 14) ^ o >>> 3,
                            t[u] = r + t[u - 7] + o + t[u - 16] | 0;
                        for (c = e.h0,
                        l = e.h1,
                        f = e.h2,
                        p = e.h3,
                        d = e.h4,
                        h = e.h5,
                        m = e.h6,
                        v = e.h7,
                        u = 0; u < 64; ++u)
                            i = (c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10),
                            s = c & l | f & (c ^ l),
                            r = v + ((d >>> 6 | d << 26) ^ (d >>> 11 | d << 21) ^ (d >>> 25 | d << 7)) + (m ^ d & (h ^ m)) + a[u] + t[u],
                            v = m,
                            m = h,
                            h = d,
                            d = p + r >>> 0,
                            p = f,
                            f = l,
                            l = c,
                            c = r + (o = i + s) >>> 0;
                        e.h0 = e.h0 + c | 0,
                        e.h1 = e.h1 + l | 0,
                        e.h2 = e.h2 + f | 0,
                        e.h3 = e.h3 + p | 0,
                        e.h4 = e.h4 + d | 0,
                        e.h5 = e.h5 + h | 0,
                        e.h6 = e.h6 + m | 0,
                        e.h7 = e.h7 + v | 0,
                        g -= 64
                    }
                }
            }
            )),
            x((function(e) {
                var n = null;
                !V.util.isNodejs || V.options.usePureJavaScript || process.versions["node-webkit"] || (n = t),
                (e.exports = V.prng = V.prng || {}).create = function(e) {
                    for (var t = {
                        plugin: e,
                        key: null,
                        seed: null,
                        time: null,
                        reseeds: 0,
                        generated: 0,
                        keyBytes: ""
                    }, r = e.md, a = new Array(32), o = 0; o < 32; ++o)
                        a[o] = r.create();
                    function i() {
                        if (t.pools[0].messageLength >= 32)
                            return s();
                        var e = 32 - t.pools[0].messageLength << 5;
                        t.collect(t.seedFileSync(e)),
                        s()
                    }
                    function s() {
                        t.reseeds = 4294967295 === t.reseeds ? 0 : t.reseeds + 1;
                        var e = t.plugin.md.create();
                        e.update(t.keyBytes);
                        for (var n = 1, r = 0; r < 32; ++r)
                            t.reseeds % n == 0 && (e.update(t.pools[r].digest().getBytes()),
                            t.pools[r].start()),
                            n <<= 1;
                        t.keyBytes = e.digest().getBytes(),
                        e.start(),
                        e.update(t.keyBytes);
                        var a = e.digest().getBytes();
                        t.key = t.plugin.formatKey(t.keyBytes),
                        t.seed = t.plugin.formatSeed(a),
                        t.generated = 0
                    }
                    function u(e) {
                        var t = null
                          , n = V.util.globalScope
                          , r = n.crypto || n.msCrypto;
                        r && r.getRandomValues && (t = function(e) {
                            return r.getRandomValues(e)
                        }
                        );
                        var a = V.util.createBuffer();
                        if (t)
                            for (; a.length() < e; ) {
                                var o = Math.max(1, Math.min(e - a.length(), 65536) / 4)
                                  , i = new Uint32Array(Math.floor(o));
                                try {
                                    t(i);
                                    for (var s = 0; s < i.length; ++s)
                                        a.putInt32(i[s])
                                } catch (e) {
                                    if (!("undefined" != typeof QuotaExceededError && e instanceof QuotaExceededError))
                                        throw e
                                }
                            }
                        if (a.length() < e)
                            for (var u, c, l, f = Math.floor(65536 * Math.random()); a.length() < e; )
                                for (c = 16807 * (65535 & f),
                                c += (32767 & (u = 16807 * (f >> 16))) << 16,
                                f = 4294967295 & (c = (2147483647 & (c += u >> 15)) + (c >> 31)),
                                s = 0; s < 3; ++s)
                                    l = f >>> (s << 3),
                                    l ^= Math.floor(256 * Math.random()),
                                    a.putByte(String.fromCharCode(255 & l));
                        return a.getBytes(e)
                    }
                    return t.pools = a,
                    t.pool = 0,
                    t.generate = function(e, n) {
                        if (!n)
                            return t.generateSync(e);
                        var r = t.plugin.cipher
                          , a = t.plugin.increment
                          , o = t.plugin.formatKey
                          , i = t.plugin.formatSeed
                          , u = V.util.createBuffer();
                        t.key = null,
                        function c(l) {
                            if (l)
                                return n(l);
                            if (u.length() >= e)
                                return n(null, u.getBytes(e));
                            if (t.generated > 1048575 && (t.key = null),
                            null === t.key)
                                return V.util.nextTick((function() {
                                    !function(e) {
                                        if (t.pools[0].messageLength >= 32)
                                            return s(),
                                            e();
                                        var n = 32 - t.pools[0].messageLength << 5;
                                        t.seedFile(n, (function(n, r) {
                                            if (n)
                                                return e(n);
                                            t.collect(r),
                                            s(),
                                            e()
                                        }
                                        ))
                                    }(c)
                                }
                                ));
                            var f = r(t.key, t.seed);
                            t.generated += f.length,
                            u.putBytes(f),
                            t.key = o(r(t.key, a(t.seed))),
                            t.seed = i(r(t.key, t.seed)),
                            V.util.setImmediate(c)
                        }()
                    }
                    ,
                    t.generateSync = function(e) {
                        var n = t.plugin.cipher
                          , r = t.plugin.increment
                          , a = t.plugin.formatKey
                          , o = t.plugin.formatSeed;
                        t.key = null;
                        for (var s = V.util.createBuffer(); s.length() < e; ) {
                            t.generated > 1048575 && (t.key = null),
                            null === t.key && i();
                            var u = n(t.key, t.seed);
                            t.generated += u.length,
                            s.putBytes(u),
                            t.key = a(n(t.key, r(t.seed))),
                            t.seed = o(n(t.key, t.seed))
                        }
                        return s.getBytes(e)
                    }
                    ,
                    n ? (t.seedFile = function(e, t) {
                        n.randomBytes(e, (function(e, n) {
                            if (e)
                                return t(e);
                            t(null, n.toString())
                        }
                        ))
                    }
                    ,
                    t.seedFileSync = function(e) {
                        return n.randomBytes(e).toString()
                    }
                    ) : (t.seedFile = function(e, t) {
                        try {
                            t(null, u(e))
                        } catch (e) {
                            t(e)
                        }
                    }
                    ,
                    t.seedFileSync = u),
                    t.collect = function(e) {
                        for (var n = e.length, r = 0; r < n; ++r)
                            t.pools[t.pool].update(e.substr(r, 1)),
                            t.pool = 31 === t.pool ? 0 : t.pool + 1
                    }
                    ,
                    t.collectInt = function(e, n) {
                        for (var r = "", a = 0; a < n; a += 8)
                            r += String.fromCharCode(e >> a & 255);
                        t.collect(r)
                    }
                    ,
                    t.registerWorker = function(e) {
                        e === self ? t.seedFile = function(e, t) {
                            self.addEventListener("message", (function e(n) {
                                var r = n.data;
                                r.forge && r.forge.prng && (self.removeEventListener("message", e),
                                t(r.forge.prng.err, r.forge.prng.bytes))
                            }
                            )),
                            self.postMessage({
                                forge: {
                                    prng: {
                                        needed: e
                                    }
                                }
                            })
                        }
                        : e.addEventListener("message", (function(n) {
                            var r = n.data;
                            r.forge && r.forge.prng && t.seedFile(r.forge.prng.needed, (function(t, n) {
                                e.postMessage({
                                    forge: {
                                        prng: {
                                            err: t,
                                            bytes: n
                                        }
                                    }
                                })
                            }
                            ))
                        }
                        ))
                    }
                    ,
                    t
                }
            }
            )),
            x((function(e) {
                V.random && V.random.getBytes ? e.exports = V.random : function(t) {
                    var n = {}
                      , r = new Array(4)
                      , a = V.util.createBuffer();
                    function o() {
                        var e = V.prng.create(n);
                        return e.getBytes = function(t, n) {
                            return e.generate(t, n)
                        }
                        ,
                        e.getBytesSync = function(t) {
                            return e.generate(t)
                        }
                        ,
                        e
                    }
                    n.formatKey = function(e) {
                        var t = V.util.createBuffer(e);
                        return (e = new Array(4))[0] = t.getInt32(),
                        e[1] = t.getInt32(),
                        e[2] = t.getInt32(),
                        e[3] = t.getInt32(),
                        V.aes._expandKey(e, !1)
                    }
                    ,
                    n.formatSeed = function(e) {
                        var t = V.util.createBuffer(e);
                        return (e = new Array(4))[0] = t.getInt32(),
                        e[1] = t.getInt32(),
                        e[2] = t.getInt32(),
                        e[3] = t.getInt32(),
                        e
                    }
                    ,
                    n.cipher = function(e, t) {
                        return V.aes._updateBlock(e, t, r, !1),
                        a.putInt32(r[0]),
                        a.putInt32(r[1]),
                        a.putInt32(r[2]),
                        a.putInt32(r[3]),
                        a.getBytes()
                    }
                    ,
                    n.increment = function(e) {
                        return ++e[3],
                        e
                    }
                    ,
                    n.md = V.md.sha256;
                    var i = o()
                      , s = null
                      , u = V.util.globalScope
                      , c = u.crypto || u.msCrypto;
                    if (c && c.getRandomValues && (s = function(e) {
                        return c.getRandomValues(e)
                    }
                    ),
                    !V.util.isNodejs && !s) {
                        if (i.collectInt(+new Date, 32),
                        "undefined" != typeof navigator) {
                            var l = "";
                            for (var f in navigator)
                                try {
                                    "string" == typeof navigator[f] && (l += navigator[f])
                                } catch (e) {}
                            i.collect(l),
                            l = null
                        }
                        t && (t().mousemove((function(e) {
                            i.collectInt(e.clientX, 16),
                            i.collectInt(e.clientY, 16)
                        }
                        )),
                        t().keypress((function(e) {
                            i.collectInt(e.charCode, 8)
                        }
                        )))
                    }
                    if (V.random)
                        for (var f in i)
                            V.random[f] = i[f];
                    else
                        V.random = i;
                    V.random.createInstance = o,
                    e.exports = V.random
                }("undefined" != typeof jQuery ? jQuery : null)
            }
            ));
            var ve = [217, 120, 249, 196, 25, 221, 181, 237, 40, 233, 253, 121, 74, 160, 216, 157, 198, 126, 55, 131, 43, 118, 83, 142, 98, 76, 100, 136, 68, 139, 251, 162, 23, 154, 89, 245, 135, 179, 79, 19, 97, 69, 109, 141, 9, 129, 125, 50, 189, 143, 64, 235, 134, 183, 123, 11, 240, 149, 33, 34, 92, 107, 78, 130, 84, 214, 101, 147, 206, 96, 178, 28, 115, 86, 192, 20, 167, 140, 241, 220, 18, 117, 202, 31, 59, 190, 228, 209, 66, 61, 212, 48, 163, 60, 182, 38, 111, 191, 14, 218, 70, 105, 7, 87, 39, 242, 29, 155, 188, 148, 67, 3, 248, 17, 199, 246, 144, 239, 62, 231, 6, 195, 213, 47, 200, 102, 30, 215, 8, 232, 234, 222, 128, 82, 238, 247, 132, 170, 114, 172, 53, 77, 106, 42, 150, 26, 210, 113, 90, 21, 73, 116, 75, 159, 208, 94, 4, 24, 164, 236, 194, 224, 65, 110, 15, 81, 203, 204, 36, 145, 175, 80, 161, 244, 112, 57, 153, 124, 58, 133, 35, 184, 180, 122, 252, 2, 54, 91, 37, 85, 151, 49, 45, 93, 250, 152, 227, 138, 146, 174, 5, 223, 41, 16, 103, 108, 186, 201, 211, 0, 230, 207, 225, 158, 168, 44, 99, 22, 1, 63, 88, 226, 137, 169, 13, 56, 52, 27, 171, 51, 255, 176, 187, 72, 12, 95, 185, 177, 205, 46, 197, 243, 219, 71, 229, 165, 156, 119, 10, 166, 32, 104, 254, 127, 193, 173]
              , ge = [1, 2, 3, 5]
              , ye = function(e, t) {
                return e << t & 65535 | (65535 & e) >> 16 - t
            }
              , be = function(e, t) {
                return (65535 & e) >> t | e << 16 - t & 65535
            };
            V.rc2 = V.rc2 || {},
            V.rc2.expandKey = function(e, t) {
                "string" == typeof e && (e = V.util.createBuffer(e)),
                t = t || 128;
                var n, r = e, a = e.length(), o = t, i = Math.ceil(o / 8), s = 255 >> (7 & o);
                for (n = a; n < 128; n++)
                    r.putByte(ve[r.at(n - 1) + r.at(n - a) & 255]);
                for (r.setAt(128 - i, ve[r.at(128 - i) & s]),
                n = 127 - i; n >= 0; n--)
                    r.setAt(n, ve[r.at(n + 1) ^ r.at(n + i)]);
                return r
            }
            ;
            var xe, we = function(e, t, n) {
                var r, a, o, i, s = !1, u = null, c = null, l = null, f = [];
                for (e = V.rc2.expandKey(e, t),
                o = 0; o < 64; o++)
                    f.push(e.getInt16Le());
                n ? (r = function(e) {
                    for (o = 0; o < 4; o++)
                        e[o] += f[i] + (e[(o + 3) % 4] & e[(o + 2) % 4]) + (~e[(o + 3) % 4] & e[(o + 1) % 4]),
                        e[o] = ye(e[o], ge[o]),
                        i++
                }
                ,
                a = function(e) {
                    for (o = 0; o < 4; o++)
                        e[o] += f[63 & e[(o + 3) % 4]]
                }
                ) : (r = function(e) {
                    for (o = 3; o >= 0; o--)
                        e[o] = be(e[o], ge[o]),
                        e[o] -= f[i] + (e[(o + 3) % 4] & e[(o + 2) % 4]) + (~e[(o + 3) % 4] & e[(o + 1) % 4]),
                        i--
                }
                ,
                a = function(e) {
                    for (o = 3; o >= 0; o--)
                        e[o] -= f[63 & e[(o + 3) % 4]]
                }
                );
                var p = function(e) {
                    var t = [];
                    for (o = 0; o < 4; o++) {
                        var r = u.getInt16Le();
                        null !== l && (n ? r ^= l.getInt16Le() : l.putInt16Le(r)),
                        t.push(65535 & r)
                    }
                    i = n ? 0 : 63;
                    for (var a = 0; a < e.length; a++)
                        for (var s = 0; s < e[a][0]; s++)
                            e[a][1](t);
                    for (o = 0; o < 4; o++)
                        null !== l && (n ? l.putInt16Le(t[o]) : t[o] ^= l.getInt16Le()),
                        c.putInt16Le(t[o])
                }
                  , d = null;
                return d = {
                    start: function(e, t) {
                        e && "string" == typeof e && (e = V.util.createBuffer(e)),
                        s = !1,
                        u = V.util.createBuffer(),
                        c = t || new V.util.createBuffer,
                        l = e,
                        d.output = c
                    },
                    update: function(e) {
                        for (s || u.putBuffer(e); u.length() >= 8; )
                            p([[5, r], [1, a], [6, r], [1, a], [5, r]])
                    },
                    finish: function(e) {
                        var t = !0;
                        if (n)
                            if (e)
                                t = e(8, u, !n);
                            else {
                                var r = 8 === u.length() ? 8 : 8 - u.length();
                                u.fillWithByte(r, r)
                            }
                        if (t && (s = !0,
                        d.update()),
                        !n && (t = 0 === u.length()))
                            if (e)
                                t = e(8, c, !n);
                            else {
                                var a = c.length()
                                  , o = c.at(a - 1);
                                o > a ? t = !1 : c.truncate(o)
                            }
                        return t
                    }
                }
            };
            function ke(e, t, n) {
                this.data = [],
                null != e && ("number" == typeof e ? this.fromNumber(e, t, n) : null == t && "string" != typeof e ? this.fromString(e, 256) : this.fromString(e, t))
            }
            function Ce() {
                return new ke(null)
            }
            function Ee(e, t, n, r, a, o) {
                for (var i = 16383 & t, s = t >> 14; --o >= 0; ) {
                    var u = 16383 & this.data[e]
                      , c = this.data[e++] >> 14
                      , l = s * u + c * i;
                    a = ((u = i * u + ((16383 & l) << 14) + n.data[r] + a) >> 28) + (l >> 14) + s * c,
                    n.data[r++] = 268435455 & u
                }
                return a
            }
            V.rc2.startEncrypting = function(e, t, n) {
                var r = V.rc2.createEncryptionCipher(e, 128);
                return r.start(t, n),
                r
            }
            ,
            V.rc2.createEncryptionCipher = function(e, t) {
                return we(e, t, !0)
            }
            ,
            V.rc2.startDecrypting = function(e, t, n) {
                var r = V.rc2.createDecryptionCipher(e, 128);
                return r.start(t, n),
                r
            }
            ,
            V.rc2.createDecryptionCipher = function(e, t) {
                return we(e, t, !1)
            }
            ,
            V.jsbn = V.jsbn || {},
            V.jsbn.BigInteger = ke,
            "undefined" == typeof navigator ? (ke.prototype.am = Ee,
            xe = 28) : "Microsoft Internet Explorer" == navigator.appName ? (ke.prototype.am = function(e, t, n, r, a, o) {
                for (var i = 32767 & t, s = t >> 15; --o >= 0; ) {
                    var u = 32767 & this.data[e]
                      , c = this.data[e++] >> 15
                      , l = s * u + c * i;
                    a = ((u = i * u + ((32767 & l) << 15) + n.data[r] + (1073741823 & a)) >>> 30) + (l >>> 15) + s * c + (a >>> 30),
                    n.data[r++] = 1073741823 & u
                }
                return a
            }
            ,
            xe = 30) : "Netscape" != navigator.appName ? (ke.prototype.am = function(e, t, n, r, a, o) {
                for (; --o >= 0; ) {
                    var i = t * this.data[e++] + n.data[r] + a;
                    a = Math.floor(i / 67108864),
                    n.data[r++] = 67108863 & i
                }
                return a
            }
            ,
            xe = 26) : (ke.prototype.am = Ee,
            xe = 28),
            ke.prototype.DB = xe,
            ke.prototype.DM = (1 << xe) - 1,
            ke.prototype.DV = 1 << xe,
            ke.prototype.FV = Math.pow(2, 52),
            ke.prototype.F1 = 52 - xe,
            ke.prototype.F2 = 2 * xe - 52;
            var Se, Ie, Te = "0123456789abcdefghijklmnopqrstuvwxyz", Ae = new Array;
            for (Se = "0".charCodeAt(0),
            Ie = 0; Ie <= 9; ++Ie)
                Ae[Se++] = Ie;
            for (Se = "a".charCodeAt(0),
            Ie = 10; Ie < 36; ++Ie)
                Ae[Se++] = Ie;
            for (Se = "A".charCodeAt(0),
            Ie = 10; Ie < 36; ++Ie)
                Ae[Se++] = Ie;
            function Ne(e) {
                return Te.charAt(e)
            }
            function _e(e, t) {
                var n = Ae[e.charCodeAt(t)];
                return null == n ? -1 : n
            }
            function Re(e) {
                var t = Ce();
                return t.fromInt(e),
                t
            }
            function Oe(e) {
                var t, n = 1;
                return 0 != (t = e >>> 16) && (e = t,
                n += 16),
                0 != (t = e >> 8) && (e = t,
                n += 8),
                0 != (t = e >> 4) && (e = t,
                n += 4),
                0 != (t = e >> 2) && (e = t,
                n += 2),
                0 != (t = e >> 1) && (e = t,
                n += 1),
                n
            }
            function De(e) {
                this.m = e
            }
            function Be(e) {
                this.m = e,
                this.mp = e.invDigit(),
                this.mpl = 32767 & this.mp,
                this.mph = this.mp >> 15,
                this.um = (1 << e.DB - 15) - 1,
                this.mt2 = 2 * e.t
            }
            function Fe(e, t) {
                return e & t
            }
            function Me(e, t) {
                return e | t
            }
            function Pe(e, t) {
                return e ^ t
            }
            function Le(e, t) {
                return e & ~t
            }
            function Ue(e) {
                if (0 == e)
                    return -1;
                var t = 0;
                return 0 == (65535 & e) && (e >>= 16,
                t += 16),
                0 == (255 & e) && (e >>= 8,
                t += 8),
                0 == (15 & e) && (e >>= 4,
                t += 4),
                0 == (3 & e) && (e >>= 2,
                t += 2),
                0 == (1 & e) && ++t,
                t
            }
            function Ve(e) {
                for (var t = 0; 0 != e; )
                    e &= e - 1,
                    ++t;
                return t
            }
            function ze() {}
            function We(e) {
                return e
            }
            function je(e) {
                this.r2 = Ce(),
                this.q3 = Ce(),
                ke.ONE.dlShiftTo(2 * e.t, this.r2),
                this.mu = this.r2.divide(e),
                this.m = e
            }
            De.prototype.convert = function(e) {
                return e.s < 0 || e.compareTo(this.m) >= 0 ? e.mod(this.m) : e
            }
            ,
            De.prototype.revert = function(e) {
                return e
            }
            ,
            De.prototype.reduce = function(e) {
                e.divRemTo(this.m, null, e)
            }
            ,
            De.prototype.mulTo = function(e, t, n) {
                e.multiplyTo(t, n),
                this.reduce(n)
            }
            ,
            De.prototype.sqrTo = function(e, t) {
                e.squareTo(t),
                this.reduce(t)
            }
            ,
            Be.prototype.convert = function(e) {
                var t = Ce();
                return e.abs().dlShiftTo(this.m.t, t),
                t.divRemTo(this.m, null, t),
                e.s < 0 && t.compareTo(ke.ZERO) > 0 && this.m.subTo(t, t),
                t
            }
            ,
            Be.prototype.revert = function(e) {
                var t = Ce();
                return e.copyTo(t),
                this.reduce(t),
                t
            }
            ,
            Be.prototype.reduce = function(e) {
                for (; e.t <= this.mt2; )
                    e.data[e.t++] = 0;
                for (var t = 0; t < this.m.t; ++t) {
                    var n = 32767 & e.data[t]
                      , r = n * this.mpl + ((n * this.mph + (e.data[t] >> 15) * this.mpl & this.um) << 15) & e.DM;
                    for (n = t + this.m.t,
                    e.data[n] += this.m.am(0, r, e, t, 0, this.m.t); e.data[n] >= e.DV; )
                        e.data[n] -= e.DV,
                        e.data[++n]++
                }
                e.clamp(),
                e.drShiftTo(this.m.t, e),
                e.compareTo(this.m) >= 0 && e.subTo(this.m, e)
            }
            ,
            Be.prototype.mulTo = function(e, t, n) {
                e.multiplyTo(t, n),
                this.reduce(n)
            }
            ,
            Be.prototype.sqrTo = function(e, t) {
                e.squareTo(t),
                this.reduce(t)
            }
            ,
            ke.prototype.copyTo = function(e) {
                for (var t = this.t - 1; t >= 0; --t)
                    e.data[t] = this.data[t];
                e.t = this.t,
                e.s = this.s
            }
            ,
            ke.prototype.fromInt = function(e) {
                this.t = 1,
                this.s = e < 0 ? -1 : 0,
                e > 0 ? this.data[0] = e : e < -1 ? this.data[0] = e + this.DV : this.t = 0
            }
            ,
            ke.prototype.fromString = function(e, t) {
                var n;
                if (16 == t)
                    n = 4;
                else if (8 == t)
                    n = 3;
                else if (256 == t)
                    n = 8;
                else if (2 == t)
                    n = 1;
                else if (32 == t)
                    n = 5;
                else {
                    if (4 != t)
                        return void this.fromRadix(e, t);
                    n = 2
                }
                this.t = 0,
                this.s = 0;
                for (var r = e.length, a = !1, o = 0; --r >= 0; ) {
                    var i = 8 == n ? 255 & e[r] : _e(e, r);
                    i < 0 ? "-" == e.charAt(r) && (a = !0) : (a = !1,
                    0 == o ? this.data[this.t++] = i : o + n > this.DB ? (this.data[this.t - 1] |= (i & (1 << this.DB - o) - 1) << o,
                    this.data[this.t++] = i >> this.DB - o) : this.data[this.t - 1] |= i << o,
                    (o += n) >= this.DB && (o -= this.DB))
                }
                8 == n && 0 != (128 & e[0]) && (this.s = -1,
                o > 0 && (this.data[this.t - 1] |= (1 << this.DB - o) - 1 << o)),
                this.clamp(),
                a && ke.ZERO.subTo(this, this)
            }
            ,
            ke.prototype.clamp = function() {
                for (var e = this.s & this.DM; this.t > 0 && this.data[this.t - 1] == e; )
                    --this.t
            }
            ,
            ke.prototype.dlShiftTo = function(e, t) {
                var n;
                for (n = this.t - 1; n >= 0; --n)
                    t.data[n + e] = this.data[n];
                for (n = e - 1; n >= 0; --n)
                    t.data[n] = 0;
                t.t = this.t + e,
                t.s = this.s
            }
            ,
            ke.prototype.drShiftTo = function(e, t) {
                for (var n = e; n < this.t; ++n)
                    t.data[n - e] = this.data[n];
                t.t = Math.max(this.t - e, 0),
                t.s = this.s
            }
            ,
            ke.prototype.lShiftTo = function(e, t) {
                var n, r = e % this.DB, a = this.DB - r, o = (1 << a) - 1, i = Math.floor(e / this.DB), s = this.s << r & this.DM;
                for (n = this.t - 1; n >= 0; --n)
                    t.data[n + i + 1] = this.data[n] >> a | s,
                    s = (this.data[n] & o) << r;
                for (n = i - 1; n >= 0; --n)
                    t.data[n] = 0;
                t.data[i] = s,
                t.t = this.t + i + 1,
                t.s = this.s,
                t.clamp()
            }
            ,
            ke.prototype.rShiftTo = function(e, t) {
                t.s = this.s;
                var n = Math.floor(e / this.DB);
                if (n >= this.t)
                    t.t = 0;
                else {
                    var r = e % this.DB
                      , a = this.DB - r
                      , o = (1 << r) - 1;
                    t.data[0] = this.data[n] >> r;
                    for (var i = n + 1; i < this.t; ++i)
                        t.data[i - n - 1] |= (this.data[i] & o) << a,
                        t.data[i - n] = this.data[i] >> r;
                    r > 0 && (t.data[this.t - n - 1] |= (this.s & o) << a),
                    t.t = this.t - n,
                    t.clamp()
                }
            }
            ,
            ke.prototype.subTo = function(e, t) {
                for (var n = 0, r = 0, a = Math.min(e.t, this.t); n < a; )
                    r += this.data[n] - e.data[n],
                    t.data[n++] = r & this.DM,
                    r >>= this.DB;
                if (e.t < this.t) {
                    for (r -= e.s; n < this.t; )
                        r += this.data[n],
                        t.data[n++] = r & this.DM,
                        r >>= this.DB;
                    r += this.s
                } else {
                    for (r += this.s; n < e.t; )
                        r -= e.data[n],
                        t.data[n++] = r & this.DM,
                        r >>= this.DB;
                    r -= e.s
                }
                t.s = r < 0 ? -1 : 0,
                r < -1 ? t.data[n++] = this.DV + r : r > 0 && (t.data[n++] = r),
                t.t = n,
                t.clamp()
            }
            ,
            ke.prototype.multiplyTo = function(e, t) {
                var n = this.abs()
                  , r = e.abs()
                  , a = n.t;
                for (t.t = a + r.t; --a >= 0; )
                    t.data[a] = 0;
                for (a = 0; a < r.t; ++a)
                    t.data[a + n.t] = n.am(0, r.data[a], t, a, 0, n.t);
                t.s = 0,
                t.clamp(),
                this.s != e.s && ke.ZERO.subTo(t, t)
            }
            ,
            ke.prototype.squareTo = function(e) {
                for (var t = this.abs(), n = e.t = 2 * t.t; --n >= 0; )
                    e.data[n] = 0;
                for (n = 0; n < t.t - 1; ++n) {
                    var r = t.am(n, t.data[n], e, 2 * n, 0, 1);
                    (e.data[n + t.t] += t.am(n + 1, 2 * t.data[n], e, 2 * n + 1, r, t.t - n - 1)) >= t.DV && (e.data[n + t.t] -= t.DV,
                    e.data[n + t.t + 1] = 1)
                }
                e.t > 0 && (e.data[e.t - 1] += t.am(n, t.data[n], e, 2 * n, 0, 1)),
                e.s = 0,
                e.clamp()
            }
            ,
            ke.prototype.divRemTo = function(e, t, n) {
                var r = e.abs();
                if (!(r.t <= 0)) {
                    var a = this.abs();
                    if (a.t < r.t)
                        return null != t && t.fromInt(0),
                        void (null != n && this.copyTo(n));
                    null == n && (n = Ce());
                    var o = Ce()
                      , i = this.s
                      , s = e.s
                      , u = this.DB - Oe(r.data[r.t - 1]);
                    u > 0 ? (r.lShiftTo(u, o),
                    a.lShiftTo(u, n)) : (r.copyTo(o),
                    a.copyTo(n));
                    var c = o.t
                      , l = o.data[c - 1];
                    if (0 != l) {
                        var f = l * (1 << this.F1) + (c > 1 ? o.data[c - 2] >> this.F2 : 0)
                          , p = this.FV / f
                          , d = (1 << this.F1) / f
                          , h = 1 << this.F2
                          , m = n.t
                          , v = m - c
                          , g = null == t ? Ce() : t;
                        for (o.dlShiftTo(v, g),
                        n.compareTo(g) >= 0 && (n.data[n.t++] = 1,
                        n.subTo(g, n)),
                        ke.ONE.dlShiftTo(c, g),
                        g.subTo(o, o); o.t < c; )
                            o.data[o.t++] = 0;
                        for (; --v >= 0; ) {
                            var y = n.data[--m] == l ? this.DM : Math.floor(n.data[m] * p + (n.data[m - 1] + h) * d);
                            if ((n.data[m] += o.am(0, y, n, v, 0, c)) < y)
                                for (o.dlShiftTo(v, g),
                                n.subTo(g, n); n.data[m] < --y; )
                                    n.subTo(g, n)
                        }
                        null != t && (n.drShiftTo(c, t),
                        i != s && ke.ZERO.subTo(t, t)),
                        n.t = c,
                        n.clamp(),
                        u > 0 && n.rShiftTo(u, n),
                        i < 0 && ke.ZERO.subTo(n, n)
                    }
                }
            }
            ,
            ke.prototype.invDigit = function() {
                if (this.t < 1)
                    return 0;
                var e = this.data[0];
                if (0 == (1 & e))
                    return 0;
                var t = 3 & e;
                return (t = (t = (t = (t = t * (2 - (15 & e) * t) & 15) * (2 - (255 & e) * t) & 255) * (2 - ((65535 & e) * t & 65535)) & 65535) * (2 - e * t % this.DV) % this.DV) > 0 ? this.DV - t : -t
            }
            ,
            ke.prototype.isEven = function() {
                return 0 == (this.t > 0 ? 1 & this.data[0] : this.s)
            }
            ,
            ke.prototype.exp = function(e, t) {
                if (e > 4294967295 || e < 1)
                    return ke.ONE;
                var n = Ce()
                  , r = Ce()
                  , a = t.convert(this)
                  , o = Oe(e) - 1;
                for (a.copyTo(n); --o >= 0; )
                    if (t.sqrTo(n, r),
                    (e & 1 << o) > 0)
                        t.mulTo(r, a, n);
                    else {
                        var i = n;
                        n = r,
                        r = i
                    }
                return t.revert(n)
            }
            ,
            ke.prototype.toString = function(e) {
                if (this.s < 0)
                    return "-" + this.negate().toString(e);
                var t;
                if (16 == e)
                    t = 4;
                else if (8 == e)
                    t = 3;
                else if (2 == e)
                    t = 1;
                else if (32 == e)
                    t = 5;
                else {
                    if (4 != e)
                        return this.toRadix(e);
                    t = 2
                }
                var n, r = (1 << t) - 1, a = !1, o = "", i = this.t, s = this.DB - i * this.DB % t;
                if (i-- > 0)
                    for (s < this.DB && (n = this.data[i] >> s) > 0 && (a = !0,
                    o = Ne(n)); i >= 0; )
                        s < t ? (n = (this.data[i] & (1 << s) - 1) << t - s,
                        n |= this.data[--i] >> (s += this.DB - t)) : (n = this.data[i] >> (s -= t) & r,
                        s <= 0 && (s += this.DB,
                        --i)),
                        n > 0 && (a = !0),
                        a && (o += Ne(n));
                return a ? o : "0"
            }
            ,
            ke.prototype.negate = function() {
                var e = Ce();
                return ke.ZERO.subTo(this, e),
                e
            }
            ,
            ke.prototype.abs = function() {
                return this.s < 0 ? this.negate() : this
            }
            ,
            ke.prototype.compareTo = function(e) {
                var t = this.s - e.s;
                if (0 != t)
                    return t;
                var n = this.t;
                if (0 != (t = n - e.t))
                    return this.s < 0 ? -t : t;
                for (; --n >= 0; )
                    if (0 != (t = this.data[n] - e.data[n]))
                        return t;
                return 0
            }
            ,
            ke.prototype.bitLength = function() {
                return this.t <= 0 ? 0 : this.DB * (this.t - 1) + Oe(this.data[this.t - 1] ^ this.s & this.DM)
            }
            ,
            ke.prototype.mod = function(e) {
                var t = Ce();
                return this.abs().divRemTo(e, null, t),
                this.s < 0 && t.compareTo(ke.ZERO) > 0 && e.subTo(t, t),
                t
            }
            ,
            ke.prototype.modPowInt = function(e, t) {
                var n;
                return n = e < 256 || t.isEven() ? new De(t) : new Be(t),
                this.exp(e, n)
            }
            ,
            ke.ZERO = Re(0),
            ke.ONE = Re(1),
            ze.prototype.convert = We,
            ze.prototype.revert = We,
            ze.prototype.mulTo = function(e, t, n) {
                e.multiplyTo(t, n)
            }
            ,
            ze.prototype.sqrTo = function(e, t) {
                e.squareTo(t)
            }
            ,
            je.prototype.convert = function(e) {
                if (e.s < 0 || e.t > 2 * this.m.t)
                    return e.mod(this.m);
                if (e.compareTo(this.m) < 0)
                    return e;
                var t = Ce();
                return e.copyTo(t),
                this.reduce(t),
                t
            }
            ,
            je.prototype.revert = function(e) {
                return e
            }
            ,
            je.prototype.reduce = function(e) {
                for (e.drShiftTo(this.m.t - 1, this.r2),
                e.t > this.m.t + 1 && (e.t = this.m.t + 1,
                e.clamp()),
                this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3),
                this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); e.compareTo(this.r2) < 0; )
                    e.dAddOffset(1, this.m.t + 1);
                for (e.subTo(this.r2, e); e.compareTo(this.m) >= 0; )
                    e.subTo(this.m, e)
            }
            ,
            je.prototype.mulTo = function(e, t, n) {
                e.multiplyTo(t, n),
                this.reduce(n)
            }
            ,
            je.prototype.sqrTo = function(e, t) {
                e.squareTo(t),
                this.reduce(t)
            }
            ;
            var He = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509]
              , Ge = (1 << 26) / He[He.length - 1];
            if (ke.prototype.chunkSize = function(e) {
                return Math.floor(Math.LN2 * this.DB / Math.log(e))
            }
            ,
            ke.prototype.toRadix = function(e) {
                if (null == e && (e = 10),
                0 == this.signum() || e < 2 || e > 36)
                    return "0";
                var t = this.chunkSize(e)
                  , n = Math.pow(e, t)
                  , r = Re(n)
                  , a = Ce()
                  , o = Ce()
                  , i = "";
                for (this.divRemTo(r, a, o); a.signum() > 0; )
                    i = (n + o.intValue()).toString(e).substr(1) + i,
                    a.divRemTo(r, a, o);
                return o.intValue().toString(e) + i
            }
            ,
            ke.prototype.fromRadix = function(e, t) {
                this.fromInt(0),
                null == t && (t = 10);
                for (var n = this.chunkSize(t), r = Math.pow(t, n), a = !1, o = 0, i = 0, s = 0; s < e.length; ++s) {
                    var u = _e(e, s);
                    u < 0 ? "-" == e.charAt(s) && 0 == this.signum() && (a = !0) : (i = t * i + u,
                    ++o >= n && (this.dMultiply(r),
                    this.dAddOffset(i, 0),
                    o = 0,
                    i = 0))
                }
                o > 0 && (this.dMultiply(Math.pow(t, o)),
                this.dAddOffset(i, 0)),
                a && ke.ZERO.subTo(this, this)
            }
            ,
            ke.prototype.fromNumber = function(e, t, n) {
                if ("number" == typeof t)
                    if (e < 2)
                        this.fromInt(1);
                    else
                        for (this.fromNumber(e, n),
                        this.testBit(e - 1) || this.bitwiseTo(ke.ONE.shiftLeft(e - 1), Me, this),
                        this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(t); )
                            this.dAddOffset(2, 0),
                            this.bitLength() > e && this.subTo(ke.ONE.shiftLeft(e - 1), this);
                else {
                    var r = new Array
                      , a = 7 & e;
                    r.length = 1 + (e >> 3),
                    t.nextBytes(r),
                    a > 0 ? r[0] &= (1 << a) - 1 : r[0] = 0,
                    this.fromString(r, 256)
                }
            }
            ,
            ke.prototype.bitwiseTo = function(e, t, n) {
                var r, a, o = Math.min(e.t, this.t);
                for (r = 0; r < o; ++r)
                    n.data[r] = t(this.data[r], e.data[r]);
                if (e.t < this.t) {
                    for (a = e.s & this.DM,
                    r = o; r < this.t; ++r)
                        n.data[r] = t(this.data[r], a);
                    n.t = this.t
                } else {
                    for (a = this.s & this.DM,
                    r = o; r < e.t; ++r)
                        n.data[r] = t(a, e.data[r]);
                    n.t = e.t
                }
                n.s = t(this.s, e.s),
                n.clamp()
            }
            ,
            ke.prototype.changeBit = function(e, t) {
                var n = ke.ONE.shiftLeft(e);
                return this.bitwiseTo(n, t, n),
                n
            }
            ,
            ke.prototype.addTo = function(e, t) {
                for (var n = 0, r = 0, a = Math.min(e.t, this.t); n < a; )
                    r += this.data[n] + e.data[n],
                    t.data[n++] = r & this.DM,
                    r >>= this.DB;
                if (e.t < this.t) {
                    for (r += e.s; n < this.t; )
                        r += this.data[n],
                        t.data[n++] = r & this.DM,
                        r >>= this.DB;
                    r += this.s
                } else {
                    for (r += this.s; n < e.t; )
                        r += e.data[n],
                        t.data[n++] = r & this.DM,
                        r >>= this.DB;
                    r += e.s
                }
                t.s = r < 0 ? -1 : 0,
                r > 0 ? t.data[n++] = r : r < -1 && (t.data[n++] = this.DV + r),
                t.t = n,
                t.clamp()
            }
            ,
            ke.prototype.dMultiply = function(e) {
                this.data[this.t] = this.am(0, e - 1, this, 0, 0, this.t),
                ++this.t,
                this.clamp()
            }
            ,
            ke.prototype.dAddOffset = function(e, t) {
                if (0 != e) {
                    for (; this.t <= t; )
                        this.data[this.t++] = 0;
                    for (this.data[t] += e; this.data[t] >= this.DV; )
                        this.data[t] -= this.DV,
                        ++t >= this.t && (this.data[this.t++] = 0),
                        ++this.data[t]
                }
            }
            ,
            ke.prototype.multiplyLowerTo = function(e, t, n) {
                var r, a = Math.min(this.t + e.t, t);
                for (n.s = 0,
                n.t = a; a > 0; )
                    n.data[--a] = 0;
                for (r = n.t - this.t; a < r; ++a)
                    n.data[a + this.t] = this.am(0, e.data[a], n, a, 0, this.t);
                for (r = Math.min(e.t, t); a < r; ++a)
                    this.am(0, e.data[a], n, a, 0, t - a);
                n.clamp()
            }
            ,
            ke.prototype.multiplyUpperTo = function(e, t, n) {
                --t;
                var r = n.t = this.t + e.t - t;
                for (n.s = 0; --r >= 0; )
                    n.data[r] = 0;
                for (r = Math.max(t - this.t, 0); r < e.t; ++r)
                    n.data[this.t + r - t] = this.am(t - r, e.data[r], n, 0, 0, this.t + r - t);
                n.clamp(),
                n.drShiftTo(1, n)
            }
            ,
            ke.prototype.modInt = function(e) {
                if (e <= 0)
                    return 0;
                var t = this.DV % e
                  , n = this.s < 0 ? e - 1 : 0;
                if (this.t > 0)
                    if (0 == t)
                        n = this.data[0] % e;
                    else
                        for (var r = this.t - 1; r >= 0; --r)
                            n = (t * n + this.data[r]) % e;
                return n
            }
            ,
            ke.prototype.millerRabin = function(e) {
                var t = this.subtract(ke.ONE)
                  , n = t.getLowestSetBit();
                if (n <= 0)
                    return !1;
                for (var r, a = t.shiftRight(n), o = {
                    nextBytes: function(e) {
                        for (var t = 0; t < e.length; ++t)
                            e[t] = Math.floor(256 * Math.random())
                    }
                }, i = 0; i < e; ++i) {
                    do {
                        r = new ke(this.bitLength(),o)
                    } while (r.compareTo(ke.ONE) <= 0 || r.compareTo(t) >= 0);var s = r.modPow(a, this);
                    if (0 != s.compareTo(ke.ONE) && 0 != s.compareTo(t)) {
                        for (var u = 1; u++ < n && 0 != s.compareTo(t); )
                            if (0 == (s = s.modPowInt(2, this)).compareTo(ke.ONE))
                                return !1;
                        if (0 != s.compareTo(t))
                            return !1
                    }
                }
                return !0
            }
            ,
            ke.prototype.clone = function() {
                var e = Ce();
                return this.copyTo(e),
                e
            }
            ,
            ke.prototype.intValue = function() {
                if (this.s < 0) {
                    if (1 == this.t)
                        return this.data[0] - this.DV;
                    if (0 == this.t)
                        return -1
                } else {
                    if (1 == this.t)
                        return this.data[0];
                    if (0 == this.t)
                        return 0
                }
                return (this.data[1] & (1 << 32 - this.DB) - 1) << this.DB | this.data[0]
            }
            ,
            ke.prototype.byteValue = function() {
                return 0 == this.t ? this.s : this.data[0] << 24 >> 24
            }
            ,
            ke.prototype.shortValue = function() {
                return 0 == this.t ? this.s : this.data[0] << 16 >> 16
            }
            ,
            ke.prototype.signum = function() {
                return this.s < 0 ? -1 : this.t <= 0 || 1 == this.t && this.data[0] <= 0 ? 0 : 1
            }
            ,
            ke.prototype.toByteArray = function() {
                var e = this.t
                  , t = new Array;
                t[0] = this.s;
                var n, r = this.DB - e * this.DB % 8, a = 0;
                if (e-- > 0)
                    for (r < this.DB && (n = this.data[e] >> r) != (this.s & this.DM) >> r && (t[a++] = n | this.s << this.DB - r); e >= 0; )
                        r < 8 ? (n = (this.data[e] & (1 << r) - 1) << 8 - r,
                        n |= this.data[--e] >> (r += this.DB - 8)) : (n = this.data[e] >> (r -= 8) & 255,
                        r <= 0 && (r += this.DB,
                        --e)),
                        0 != (128 & n) && (n |= -256),
                        0 == a && (128 & this.s) != (128 & n) && ++a,
                        (a > 0 || n != this.s) && (t[a++] = n);
                return t
            }
            ,
            ke.prototype.equals = function(e) {
                return 0 == this.compareTo(e)
            }
            ,
            ke.prototype.min = function(e) {
                return this.compareTo(e) < 0 ? this : e
            }
            ,
            ke.prototype.max = function(e) {
                return this.compareTo(e) > 0 ? this : e
            }
            ,
            ke.prototype.and = function(e) {
                var t = Ce();
                return this.bitwiseTo(e, Fe, t),
                t
            }
            ,
            ke.prototype.or = function(e) {
                var t = Ce();
                return this.bitwiseTo(e, Me, t),
                t
            }
            ,
            ke.prototype.xor = function(e) {
                var t = Ce();
                return this.bitwiseTo(e, Pe, t),
                t
            }
            ,
            ke.prototype.andNot = function(e) {
                var t = Ce();
                return this.bitwiseTo(e, Le, t),
                t
            }
            ,
            ke.prototype.not = function() {
                for (var e = Ce(), t = 0; t < this.t; ++t)
                    e.data[t] = this.DM & ~this.data[t];
                return e.t = this.t,
                e.s = ~this.s,
                e
            }
            ,
            ke.prototype.shiftLeft = function(e) {
                var t = Ce();
                return e < 0 ? this.rShiftTo(-e, t) : this.lShiftTo(e, t),
                t
            }
            ,
            ke.prototype.shiftRight = function(e) {
                var t = Ce();
                return e < 0 ? this.lShiftTo(-e, t) : this.rShiftTo(e, t),
                t
            }
            ,
            ke.prototype.getLowestSetBit = function() {
                for (var e = 0; e < this.t; ++e)
                    if (0 != this.data[e])
                        return e * this.DB + Ue(this.data[e]);
                return this.s < 0 ? this.t * this.DB : -1
            }
            ,
            ke.prototype.bitCount = function() {
                for (var e = 0, t = this.s & this.DM, n = 0; n < this.t; ++n)
                    e += Ve(this.data[n] ^ t);
                return e
            }
            ,
            ke.prototype.testBit = function(e) {
                var t = Math.floor(e / this.DB);
                return t >= this.t ? 0 != this.s : 0 != (this.data[t] & 1 << e % this.DB)
            }
            ,
            ke.prototype.setBit = function(e) {
                return this.changeBit(e, Me)
            }
            ,
            ke.prototype.clearBit = function(e) {
                return this.changeBit(e, Le)
            }
            ,
            ke.prototype.flipBit = function(e) {
                return this.changeBit(e, Pe)
            }
            ,
            ke.prototype.add = function(e) {
                var t = Ce();
                return this.addTo(e, t),
                t
            }
            ,
            ke.prototype.subtract = function(e) {
                var t = Ce();
                return this.subTo(e, t),
                t
            }
            ,
            ke.prototype.multiply = function(e) {
                var t = Ce();
                return this.multiplyTo(e, t),
                t
            }
            ,
            ke.prototype.divide = function(e) {
                var t = Ce();
                return this.divRemTo(e, t, null),
                t
            }
            ,
            ke.prototype.remainder = function(e) {
                var t = Ce();
                return this.divRemTo(e, null, t),
                t
            }
            ,
            ke.prototype.divideAndRemainder = function(e) {
                var t = Ce()
                  , n = Ce();
                return this.divRemTo(e, t, n),
                new Array(t,n)
            }
            ,
            ke.prototype.modPow = function(e, t) {
                var n, r, a = e.bitLength(), o = Re(1);
                if (a <= 0)
                    return o;
                n = a < 18 ? 1 : a < 48 ? 3 : a < 144 ? 4 : a < 768 ? 5 : 6,
                r = a < 8 ? new De(t) : t.isEven() ? new je(t) : new Be(t);
                var i = new Array
                  , s = 3
                  , u = n - 1
                  , c = (1 << n) - 1;
                if (i[1] = r.convert(this),
                n > 1) {
                    var l = Ce();
                    for (r.sqrTo(i[1], l); s <= c; )
                        i[s] = Ce(),
                        r.mulTo(l, i[s - 2], i[s]),
                        s += 2
                }
                var f, p, d = e.t - 1, h = !0, m = Ce();
                for (a = Oe(e.data[d]) - 1; d >= 0; ) {
                    for (a >= u ? f = e.data[d] >> a - u & c : (f = (e.data[d] & (1 << a + 1) - 1) << u - a,
                    d > 0 && (f |= e.data[d - 1] >> this.DB + a - u)),
                    s = n; 0 == (1 & f); )
                        f >>= 1,
                        --s;
                    if ((a -= s) < 0 && (a += this.DB,
                    --d),
                    h)
                        i[f].copyTo(o),
                        h = !1;
                    else {
                        for (; s > 1; )
                            r.sqrTo(o, m),
                            r.sqrTo(m, o),
                            s -= 2;
                        s > 0 ? r.sqrTo(o, m) : (p = o,
                        o = m,
                        m = p),
                        r.mulTo(m, i[f], o)
                    }
                    for (; d >= 0 && 0 == (e.data[d] & 1 << a); )
                        r.sqrTo(o, m),
                        p = o,
                        o = m,
                        m = p,
                        --a < 0 && (a = this.DB - 1,
                        --d)
                }
                return r.revert(o)
            }
            ,
            ke.prototype.modInverse = function(e) {
                var t = e.isEven();
                if (this.isEven() && t || 0 == e.signum())
                    return ke.ZERO;
                for (var n = e.clone(), r = this.clone(), a = Re(1), o = Re(0), i = Re(0), s = Re(1); 0 != n.signum(); ) {
                    for (; n.isEven(); )
                        n.rShiftTo(1, n),
                        t ? (a.isEven() && o.isEven() || (a.addTo(this, a),
                        o.subTo(e, o)),
                        a.rShiftTo(1, a)) : o.isEven() || o.subTo(e, o),
                        o.rShiftTo(1, o);
                    for (; r.isEven(); )
                        r.rShiftTo(1, r),
                        t ? (i.isEven() && s.isEven() || (i.addTo(this, i),
                        s.subTo(e, s)),
                        i.rShiftTo(1, i)) : s.isEven() || s.subTo(e, s),
                        s.rShiftTo(1, s);
                    n.compareTo(r) >= 0 ? (n.subTo(r, n),
                    t && a.subTo(i, a),
                    o.subTo(s, o)) : (r.subTo(n, r),
                    t && i.subTo(a, i),
                    s.subTo(o, s))
                }
                return 0 != r.compareTo(ke.ONE) ? ke.ZERO : s.compareTo(e) >= 0 ? s.subtract(e) : s.signum() < 0 ? (s.addTo(e, s),
                s.signum() < 0 ? s.add(e) : s) : s
            }
            ,
            ke.prototype.pow = function(e) {
                return this.exp(e, new ze)
            }
            ,
            ke.prototype.gcd = function(e) {
                var t = this.s < 0 ? this.negate() : this.clone()
                  , n = e.s < 0 ? e.negate() : e.clone();
                if (t.compareTo(n) < 0) {
                    var r = t;
                    t = n,
                    n = r
                }
                var a = t.getLowestSetBit()
                  , o = n.getLowestSetBit();
                if (o < 0)
                    return t;
                for (a < o && (o = a),
                o > 0 && (t.rShiftTo(o, t),
                n.rShiftTo(o, n)); t.signum() > 0; )
                    (a = t.getLowestSetBit()) > 0 && t.rShiftTo(a, t),
                    (a = n.getLowestSetBit()) > 0 && n.rShiftTo(a, n),
                    t.compareTo(n) >= 0 ? (t.subTo(n, t),
                    t.rShiftTo(1, t)) : (n.subTo(t, n),
                    n.rShiftTo(1, n));
                return o > 0 && n.lShiftTo(o, n),
                n
            }
            ,
            ke.prototype.isProbablePrime = function(e) {
                var t, n = this.abs();
                if (1 == n.t && n.data[0] <= He[He.length - 1]) {
                    for (t = 0; t < He.length; ++t)
                        if (n.data[0] == He[t])
                            return !0;
                    return !1
                }
                if (n.isEven())
                    return !1;
                for (t = 1; t < He.length; ) {
                    for (var r = He[t], a = t + 1; a < He.length && r < Ge; )
                        r *= He[a++];
                    for (r = n.modInt(r); t < a; )
                        if (r % He[t++] == 0)
                            return !1
                }
                return n.millerRabin(e)
            }
            ,
            x((function(e) {
                var t = e.exports = V.sha1 = V.sha1 || {};
                V.md.sha1 = V.md.algorithms.sha1 = t,
                t.create = function() {
                    r || (n = String.fromCharCode(128),
                    n += V.util.fillString(String.fromCharCode(0), 64),
                    r = !0);
                    var e = null
                      , t = V.util.createBuffer()
                      , o = new Array(80)
                      , i = {
                        algorithm: "sha1",
                        blockLength: 64,
                        digestLength: 20,
                        messageLength: 0,
                        fullMessageLength: null,
                        messageLengthSize: 8,
                        start: function() {
                            i.messageLength = 0,
                            i.fullMessageLength = i.messageLength64 = [];
                            for (var n = i.messageLengthSize / 4, r = 0; r < n; ++r)
                                i.fullMessageLength.push(0);
                            return t = V.util.createBuffer(),
                            e = {
                                h0: 1732584193,
                                h1: 4023233417,
                                h2: 2562383102,
                                h3: 271733878,
                                h4: 3285377520
                            },
                            i
                        }
                    };
                    return i.start(),
                    i.update = function(n, r) {
                        "utf8" === r && (n = V.util.encodeUtf8(n));
                        var s = n.length;
                        i.messageLength += s,
                        s = [s / 4294967296 >>> 0, s >>> 0];
                        for (var u = i.fullMessageLength.length - 1; u >= 0; --u)
                            i.fullMessageLength[u] += s[1],
                            s[1] = s[0] + (i.fullMessageLength[u] / 4294967296 >>> 0),
                            i.fullMessageLength[u] = i.fullMessageLength[u] >>> 0,
                            s[0] = s[1] / 4294967296 >>> 0;
                        return t.putBytes(n),
                        a(e, o, t),
                        (t.read > 2048 || 0 === t.length()) && t.compact(),
                        i
                    }
                    ,
                    i.digest = function() {
                        var r = V.util.createBuffer();
                        r.putBytes(t.bytes());
                        var s, u = i.fullMessageLength[i.fullMessageLength.length - 1] + i.messageLengthSize & i.blockLength - 1;
                        r.putBytes(n.substr(0, i.blockLength - u));
                        for (var c = 8 * i.fullMessageLength[0], l = 0; l < i.fullMessageLength.length - 1; ++l)
                            c += (s = 8 * i.fullMessageLength[l + 1]) / 4294967296 >>> 0,
                            r.putInt32(c >>> 0),
                            c = s >>> 0;
                        r.putInt32(c);
                        var f = {
                            h0: e.h0,
                            h1: e.h1,
                            h2: e.h2,
                            h3: e.h3,
                            h4: e.h4
                        };
                        a(f, o, r);
                        var p = V.util.createBuffer();
                        return p.putInt32(f.h0),
                        p.putInt32(f.h1),
                        p.putInt32(f.h2),
                        p.putInt32(f.h3),
                        p.putInt32(f.h4),
                        p
                    }
                    ,
                    i
                }
                ;
                var n = null
                  , r = !1;
                function a(e, t, n) {
                    for (var r, a, o, i, s, u, c, l = n.length(); l >= 64; ) {
                        for (a = e.h0,
                        o = e.h1,
                        i = e.h2,
                        s = e.h3,
                        u = e.h4,
                        c = 0; c < 16; ++c)
                            r = n.getInt32(),
                            t[c] = r,
                            r = (a << 5 | a >>> 27) + (s ^ o & (i ^ s)) + u + 1518500249 + r,
                            u = s,
                            s = i,
                            i = (o << 30 | o >>> 2) >>> 0,
                            o = a,
                            a = r;
                        for (; c < 20; ++c)
                            r = (r = t[c - 3] ^ t[c - 8] ^ t[c - 14] ^ t[c - 16]) << 1 | r >>> 31,
                            t[c] = r,
                            r = (a << 5 | a >>> 27) + (s ^ o & (i ^ s)) + u + 1518500249 + r,
                            u = s,
                            s = i,
                            i = (o << 30 | o >>> 2) >>> 0,
                            o = a,
                            a = r;
                        for (; c < 32; ++c)
                            r = (r = t[c - 3] ^ t[c - 8] ^ t[c - 14] ^ t[c - 16]) << 1 | r >>> 31,
                            t[c] = r,
                            r = (a << 5 | a >>> 27) + (o ^ i ^ s) + u + 1859775393 + r,
                            u = s,
                            s = i,
                            i = (o << 30 | o >>> 2) >>> 0,
                            o = a,
                            a = r;
                        for (; c < 40; ++c)
                            r = (r = t[c - 6] ^ t[c - 16] ^ t[c - 28] ^ t[c - 32]) << 2 | r >>> 30,
                            t[c] = r,
                            r = (a << 5 | a >>> 27) + (o ^ i ^ s) + u + 1859775393 + r,
                            u = s,
                            s = i,
                            i = (o << 30 | o >>> 2) >>> 0,
                            o = a,
                            a = r;
                        for (; c < 60; ++c)
                            r = (r = t[c - 6] ^ t[c - 16] ^ t[c - 28] ^ t[c - 32]) << 2 | r >>> 30,
                            t[c] = r,
                            r = (a << 5 | a >>> 27) + (o & i | s & (o ^ i)) + u + 2400959708 + r,
                            u = s,
                            s = i,
                            i = (o << 30 | o >>> 2) >>> 0,
                            o = a,
                            a = r;
                        for (; c < 80; ++c)
                            r = (r = t[c - 6] ^ t[c - 16] ^ t[c - 28] ^ t[c - 32]) << 2 | r >>> 30,
                            t[c] = r,
                            r = (a << 5 | a >>> 27) + (o ^ i ^ s) + u + 3395469782 + r,
                            u = s,
                            s = i,
                            i = (o << 30 | o >>> 2) >>> 0,
                            o = a,
                            a = r;
                        e.h0 = e.h0 + a | 0,
                        e.h1 = e.h1 + o | 0,
                        e.h2 = e.h2 + i | 0,
                        e.h3 = e.h3 + s | 0,
                        e.h4 = e.h4 + u | 0,
                        l -= 64
                    }
                }
            }
            )),
            x((function(e) {
                var t = e.exports = V.pkcs1 = V.pkcs1 || {};
                function n(e, t, n) {
                    n || (n = V.md.sha1.create());
                    for (var r = "", a = Math.ceil(t / n.digestLength), o = 0; o < a; ++o) {
                        var i = String.fromCharCode(o >> 24 & 255, o >> 16 & 255, o >> 8 & 255, 255 & o);
                        n.start(),
                        n.update(e + i),
                        r += n.digest().getBytes()
                    }
                    return r.substring(0, t)
                }
                t.encode_rsa_oaep = function(e, t, r) {
                    var a, o, i, s;
                    "string" == typeof r ? (a = r,
                    o = arguments[3] || void 0,
                    i = arguments[4] || void 0) : r && (a = r.label || void 0,
                    o = r.seed || void 0,
                    i = r.md || void 0,
                    r.mgf1 && r.mgf1.md && (s = r.mgf1.md)),
                    i ? i.start() : i = V.md.sha1.create(),
                    s || (s = i);
                    var u = Math.ceil(e.n.bitLength() / 8)
                      , c = u - 2 * i.digestLength - 2;
                    if (t.length > c)
                        throw (h = new Error("RSAES-OAEP input message length is too long.")).length = t.length,
                        h.maxLength = c,
                        h;
                    a || (a = ""),
                    i.update(a, "raw");
                    for (var l = i.digest(), f = "", p = c - t.length, d = 0; d < p; d++)
                        f += "\0";
                    var h, m = l.getBytes() + f + "" + t;
                    if (o) {
                        if (o.length !== i.digestLength)
                            throw (h = new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.")).seedLength = o.length,
                            h.digestLength = i.digestLength,
                            h
                    } else
                        o = V.random.getBytes(i.digestLength);
                    var v = n(o, u - i.digestLength - 1, s)
                      , g = V.util.xorBytes(m, v, m.length)
                      , y = n(g, i.digestLength, s);
                    return "\0" + V.util.xorBytes(o, y, o.length) + g
                }
                ,
                t.decode_rsa_oaep = function(e, t, r) {
                    var a, o, i;
                    "string" == typeof r ? (a = r,
                    o = arguments[3] || void 0) : r && (a = r.label || void 0,
                    o = r.md || void 0,
                    r.mgf1 && r.mgf1.md && (i = r.mgf1.md));
                    var s = Math.ceil(e.n.bitLength() / 8);
                    if (t.length !== s)
                        throw (v = new Error("RSAES-OAEP encoded message length is invalid.")).length = t.length,
                        v.expectedLength = s,
                        v;
                    if (void 0 === o ? o = V.md.sha1.create() : o.start(),
                    i || (i = o),
                    s < 2 * o.digestLength + 2)
                        throw new Error("RSAES-OAEP key is too short for the hash function.");
                    a || (a = ""),
                    o.update(a, "raw");
                    for (var u = o.digest().getBytes(), c = t.charAt(0), l = t.substring(1, o.digestLength + 1), f = t.substring(1 + o.digestLength), p = n(f, o.digestLength, i), d = n(V.util.xorBytes(l, p, l.length), s - o.digestLength - 1, i), h = V.util.xorBytes(f, d, f.length), m = h.substring(0, o.digestLength), v = "\0" !== c, g = 0; g < o.digestLength; ++g)
                        v |= u.charAt(g) !== m.charAt(g);
                    for (var y = 1, b = o.digestLength, x = o.digestLength; x < h.length; x++) {
                        var w = h.charCodeAt(x);
                        v |= w & (y ? 65534 : 0),
                        b += y &= 1 & w ^ 1
                    }
                    if (v || 1 !== h.charCodeAt(b))
                        throw new Error("Invalid RSAES-OAEP padding.");
                    return h.substring(b + 1)
                }
            }
            )),
            x((function(e) {
                !function() {
                    if (V.prime)
                        e.exports = V.prime;
                    else {
                        var t = e.exports = V.prime = V.prime || {}
                          , n = V.jsbn.BigInteger
                          , r = [6, 4, 2, 4, 2, 4, 6, 2]
                          , a = new n(null);
                        a.fromInt(30);
                        var o = function(e, t) {
                            return e | t
                        };
                        t.generateProbablePrime = function(e, t, r) {
                            "function" == typeof t && (r = t,
                            t = {});
                            var a = (t = t || {}).algorithm || "PRIMEINC";
                            "string" == typeof a && (a = {
                                name: a
                            }),
                            a.options = a.options || {};
                            var o = t.prng || V.random
                              , u = {
                                nextBytes: function(e) {
                                    for (var t = o.getBytesSync(e.length), n = 0; n < e.length; ++n)
                                        e[n] = t.charCodeAt(n)
                                }
                            };
                            if ("PRIMEINC" === a.name)
                                return function(e, t, r, a) {
                                    return "workers"in r ? function(e, t, r, a) {
                                        if ("undefined" == typeof Worker)
                                            return i(e, t, r, a);
                                        var o = s(e, t)
                                          , u = r.workers
                                          , c = r.workLoad || 100
                                          , l = 30 * c / 8
                                          , f = r.workerScript || "forge/prime.worker.js";
                                        if (-1 === u)
                                            return V.util.estimateCores((function(e, t) {
                                                e && (t = 2),
                                                u = t - 1,
                                                p()
                                            }
                                            ));
                                        function p() {
                                            u = Math.max(1, u);
                                            for (var r = [], i = 0; i < u; ++i)
                                                r[i] = new Worker(f);
                                            for (i = 0; i < u; ++i)
                                                r[i].addEventListener("message", d);
                                            var p = !1;
                                            function d(i) {
                                                if (!p) {
                                                    var u = i.data;
                                                    if (u.found) {
                                                        for (var f = 0; f < r.length; ++f)
                                                            r[f].terminate();
                                                        return p = !0,
                                                        a(null, new n(u.prime,16))
                                                    }
                                                    o.bitLength() > e && (o = s(e, t));
                                                    var d = o.toString(16);
                                                    i.target.postMessage({
                                                        hex: d,
                                                        workLoad: c
                                                    }),
                                                    o.dAddOffset(l, 0)
                                                }
                                            }
                                        }
                                        p()
                                    }(e, t, r, a) : i(e, t, r, a)
                                }(e, u, a.options, r);
                            throw new Error("Invalid prime generation algorithm: " + a.name)
                        }
                    }
                    function i(e, t, n, a) {
                        var o = s(e, t)
                          , i = function(e) {
                            return e <= 100 ? 27 : e <= 150 ? 18 : e <= 200 ? 15 : e <= 250 ? 12 : e <= 300 ? 9 : e <= 350 ? 8 : e <= 400 ? 7 : e <= 500 ? 6 : e <= 600 ? 5 : e <= 800 ? 4 : e <= 1250 ? 3 : 2
                        }(o.bitLength());
                        "millerRabinTests"in n && (i = n.millerRabinTests);
                        var u = 10;
                        "maxBlockTime"in n && (u = n.maxBlockTime),
                        function e(t, n, a, o, i, u, c) {
                            var l = +new Date;
                            do {
                                if (t.bitLength() > n && (t = s(n, a)),
                                t.isProbablePrime(i))
                                    return c(null, t);
                                t.dAddOffset(r[o++ % 8], 0)
                            } while (u < 0 || +new Date - l < u);V.util.setImmediate((function() {
                                e(t, n, a, o, i, u, c)
                            }
                            ))
                        }(o, e, t, 0, i, u, a)
                    }
                    function s(e, t) {
                        var r = new n(e,t)
                          , i = e - 1;
                        return r.testBit(i) || r.bitwiseTo(n.ONE.shiftLeft(i), o, r),
                        r.dAddOffset(31 - r.mod(a).byteValue(), 0),
                        r
                    }
                }()
            }
            )),
            void 0 === Ke)
                var Ke = V.jsbn.BigInteger;
            var qe = V.util.isNodejs ? t : null
              , Xe = V.asn1
              , Qe = V.util;
            V.pki = V.pki || {},
            V.pki.rsa = V.rsa = V.rsa || {};
            var Ye = V.pki
              , $e = [6, 4, 2, 4, 2, 4, 6, 2]
              , Ze = {
                name: "PrivateKeyInfo",
                tagClass: Xe.Class.UNIVERSAL,
                type: Xe.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "PrivateKeyInfo.version",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyVersion"
                }, {
                    name: "PrivateKeyInfo.privateKeyAlgorithm",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "AlgorithmIdentifier.algorithm",
                        tagClass: Xe.Class.UNIVERSAL,
                        type: Xe.Type.OID,
                        constructed: !1,
                        capture: "privateKeyOid"
                    }]
                }, {
                    name: "PrivateKeyInfo",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.OCTETSTRING,
                    constructed: !1,
                    capture: "privateKey"
                }]
            }
              , Je = {
                name: "RSAPrivateKey",
                tagClass: Xe.Class.UNIVERSAL,
                type: Xe.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "RSAPrivateKey.version",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyVersion"
                }, {
                    name: "RSAPrivateKey.modulus",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyModulus"
                }, {
                    name: "RSAPrivateKey.publicExponent",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyPublicExponent"
                }, {
                    name: "RSAPrivateKey.privateExponent",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyPrivateExponent"
                }, {
                    name: "RSAPrivateKey.prime1",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyPrime1"
                }, {
                    name: "RSAPrivateKey.prime2",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyPrime2"
                }, {
                    name: "RSAPrivateKey.exponent1",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyExponent1"
                }, {
                    name: "RSAPrivateKey.exponent2",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyExponent2"
                }, {
                    name: "RSAPrivateKey.coefficient",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyCoefficient"
                }]
            }
              , et = {
                name: "RSAPublicKey",
                tagClass: Xe.Class.UNIVERSAL,
                type: Xe.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "RSAPublicKey.modulus",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "publicKeyModulus"
                }, {
                    name: "RSAPublicKey.exponent",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.INTEGER,
                    constructed: !1,
                    capture: "publicKeyExponent"
                }]
            }
              , tt = V.pki.rsa.publicKeyValidator = {
                name: "SubjectPublicKeyInfo",
                tagClass: Xe.Class.UNIVERSAL,
                type: Xe.Type.SEQUENCE,
                constructed: !0,
                captureAsn1: "subjectPublicKeyInfo",
                value: [{
                    name: "SubjectPublicKeyInfo.AlgorithmIdentifier",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "AlgorithmIdentifier.algorithm",
                        tagClass: Xe.Class.UNIVERSAL,
                        type: Xe.Type.OID,
                        constructed: !1,
                        capture: "publicKeyOid"
                    }]
                }, {
                    name: "SubjectPublicKeyInfo.subjectPublicKey",
                    tagClass: Xe.Class.UNIVERSAL,
                    type: Xe.Type.BITSTRING,
                    constructed: !1,
                    value: [{
                        name: "SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",
                        tagClass: Xe.Class.UNIVERSAL,
                        type: Xe.Type.SEQUENCE,
                        constructed: !0,
                        optional: !0,
                        captureAsn1: "rsaPublicKey"
                    }]
                }]
            }
              , nt = function(e) {
                var t;
                if (!(e.algorithm in Ye.oids)) {
                    var n = new Error("Unknown message digest algorithm.");
                    throw n.algorithm = e.algorithm,
                    n
                }
                t = Ye.oids[e.algorithm];
                var r = Xe.oidToDer(t).getBytes()
                  , a = Xe.create(Xe.Class.UNIVERSAL, Xe.Type.SEQUENCE, !0, [])
                  , o = Xe.create(Xe.Class.UNIVERSAL, Xe.Type.SEQUENCE, !0, []);
                o.value.push(Xe.create(Xe.Class.UNIVERSAL, Xe.Type.OID, !1, r)),
                o.value.push(Xe.create(Xe.Class.UNIVERSAL, Xe.Type.NULL, !1, ""));
                var i = Xe.create(Xe.Class.UNIVERSAL, Xe.Type.OCTETSTRING, !1, e.digest().getBytes());
                return a.value.push(o),
                a.value.push(i),
                Xe.toDer(a).getBytes()
            }
              , rt = function(e, t, n) {
                if (n)
                    return e.modPow(t.e, t.n);
                if (!t.p || !t.q)
                    return e.modPow(t.d, t.n);
                var r;
                t.dP || (t.dP = t.d.mod(t.p.subtract(Ke.ONE))),
                t.dQ || (t.dQ = t.d.mod(t.q.subtract(Ke.ONE))),
                t.qInv || (t.qInv = t.q.modInverse(t.p));
                do {
                    r = new Ke(V.util.bytesToHex(V.random.getBytes(t.n.bitLength() / 8)),16)
                } while (r.compareTo(t.n) >= 0 || !r.gcd(t.n).equals(Ke.ONE));for (var a = (e = e.multiply(r.modPow(t.e, t.n)).mod(t.n)).mod(t.p).modPow(t.dP, t.p), o = e.mod(t.q).modPow(t.dQ, t.q); a.compareTo(o) < 0; )
                    a = a.add(t.p);
                var i = a.subtract(o).multiply(t.qInv).mod(t.p).multiply(t.q).add(o);
                return i.multiply(r.modInverse(t.n)).mod(t.n)
            };
            function at(e, t, n) {
                var r = V.util.createBuffer()
                  , a = Math.ceil(t.n.bitLength() / 8);
                if (e.length > a - 11) {
                    var o = new Error("Message is too long for PKCS#1 v1.5 padding.");
                    throw o.length = e.length,
                    o.max = a - 11,
                    o
                }
                r.putByte(0),
                r.putByte(n);
                var i, s = a - 3 - e.length;
                if (0 === n || 1 === n) {
                    i = 0 === n ? 0 : 255;
                    for (var u = 0; u < s; ++u)
                        r.putByte(i)
                } else
                    for (; s > 0; ) {
                        var c = 0
                          , l = V.random.getBytes(s);
                        for (u = 0; u < s; ++u)
                            0 === (i = l.charCodeAt(u)) ? ++c : r.putByte(i);
                        s = c
                    }
                return r.putByte(0),
                r.putBytes(e),
                r
            }
            function ot(e, t, n, r) {
                var a = Math.ceil(t.n.bitLength() / 8)
                  , o = V.util.createBuffer(e)
                  , i = o.getByte()
                  , s = o.getByte();
                if (0 !== i || n && 0 !== s && 1 !== s || !n && 2 != s || n && 0 === s && void 0 === r)
                    throw new Error("Encryption block is invalid.");
                var u = 0;
                if (0 === s) {
                    u = a - 3 - r;
                    for (var c = 0; c < u; ++c)
                        if (0 !== o.getByte())
                            throw new Error("Encryption block is invalid.")
                } else if (1 === s)
                    for (u = 0; o.length() > 1; ) {
                        if (255 !== o.getByte()) {
                            --o.read;
                            break
                        }
                        ++u
                    }
                else if (2 === s)
                    for (u = 0; o.length() > 1; ) {
                        if (0 === o.getByte()) {
                            --o.read;
                            break
                        }
                        ++u
                    }
                if (0 !== o.getByte() || u !== a - 3 - o.length())
                    throw new Error("Encryption block is invalid.");
                return o.getBytes()
            }
            function it(e, t, n) {
                "function" == typeof t && (n = t,
                t = {});
                var r = {
                    algorithm: {
                        name: (t = t || {}).algorithm || "PRIMEINC",
                        options: {
                            workers: t.workers || 2,
                            workLoad: t.workLoad || 100,
                            workerScript: t.workerScript
                        }
                    }
                };
                function a() {
                    o(e.pBits, (function(t, r) {
                        return t ? n(t) : (e.p = r,
                        null !== e.q ? i(t, e.q) : void o(e.qBits, i))
                    }
                    ))
                }
                function o(e, t) {
                    V.prime.generateProbablePrime(e, r, t)
                }
                function i(t, r) {
                    if (t)
                        return n(t);
                    if (e.q = r,
                    e.p.compareTo(e.q) < 0) {
                        var s = e.p;
                        e.p = e.q,
                        e.q = s
                    }
                    if (0 !== e.p.subtract(Ke.ONE).gcd(e.e).compareTo(Ke.ONE))
                        return e.p = null,
                        void a();
                    if (0 !== e.q.subtract(Ke.ONE).gcd(e.e).compareTo(Ke.ONE))
                        return e.q = null,
                        void o(e.qBits, i);
                    if (e.p1 = e.p.subtract(Ke.ONE),
                    e.q1 = e.q.subtract(Ke.ONE),
                    e.phi = e.p1.multiply(e.q1),
                    0 !== e.phi.gcd(e.e).compareTo(Ke.ONE))
                        return e.p = e.q = null,
                        void a();
                    if (e.n = e.p.multiply(e.q),
                    e.n.bitLength() !== e.bits)
                        return e.q = null,
                        void o(e.qBits, i);
                    var u = e.e.modInverse(e.phi);
                    e.keys = {
                        privateKey: Ye.rsa.setPrivateKey(e.n, e.e, u, e.p, e.q, u.mod(e.p1), u.mod(e.q1), e.q.modInverse(e.p)),
                        publicKey: Ye.rsa.setPublicKey(e.n, e.e)
                    },
                    n(null, e.keys)
                }
                "prng"in t && (r.prng = t.prng),
                a()
            }
            function st(e) {
                var t = e.toString(16);
                t[0] >= "8" && (t = "00" + t);
                var n = V.util.hexToBytes(t);
                return n.length > 1 && (0 === n.charCodeAt(0) && 0 == (128 & n.charCodeAt(1)) || 255 === n.charCodeAt(0) && 128 == (128 & n.charCodeAt(1))) ? n.substr(1) : n
            }
            function ut(e) {
                return e <= 100 ? 27 : e <= 150 ? 18 : e <= 200 ? 15 : e <= 250 ? 12 : e <= 300 ? 9 : e <= 350 ? 8 : e <= 400 ? 7 : e <= 500 ? 6 : e <= 600 ? 5 : e <= 800 ? 4 : e <= 1250 ? 3 : 2
            }
            function ct(e) {
                return V.util.isNodejs && "function" == typeof qe[e]
            }
            function lt(e) {
                return void 0 !== Qe.globalScope && "object" == typeof Qe.globalScope.crypto && "object" == typeof Qe.globalScope.crypto.subtle && "function" == typeof Qe.globalScope.crypto.subtle[e]
            }
            function ft(e) {
                return void 0 !== Qe.globalScope && "object" == typeof Qe.globalScope.msCrypto && "object" == typeof Qe.globalScope.msCrypto.subtle && "function" == typeof Qe.globalScope.msCrypto.subtle[e]
            }
            function pt(e) {
                for (var t = V.util.hexToBytes(e.toString(16)), n = new Uint8Array(t.length), r = 0; r < t.length; ++r)
                    n[r] = t.charCodeAt(r);
                return n
            }
            if (Ye.rsa.encrypt = function(e, t, n) {
                var r, a = n, o = Math.ceil(t.n.bitLength() / 8);
                !1 !== n && !0 !== n ? (a = 2 === n,
                r = at(e, t, n)) : (r = V.util.createBuffer()).putBytes(e);
                for (var i = new Ke(r.toHex(),16), s = rt(i, t, a).toString(16), u = V.util.createBuffer(), c = o - Math.ceil(s.length / 2); c > 0; )
                    u.putByte(0),
                    --c;
                return u.putBytes(V.util.hexToBytes(s)),
                u.getBytes()
            }
            ,
            Ye.rsa.decrypt = function(e, t, n, r) {
                var a = Math.ceil(t.n.bitLength() / 8);
                if (e.length !== a) {
                    var o = new Error("Encrypted message length is invalid.");
                    throw o.length = e.length,
                    o.expected = a,
                    o
                }
                var i = new Ke(V.util.createBuffer(e).toHex(),16);
                if (i.compareTo(t.n) >= 0)
                    throw new Error("Encrypted message is invalid.");
                for (var s = rt(i, t, n).toString(16), u = V.util.createBuffer(), c = a - Math.ceil(s.length / 2); c > 0; )
                    u.putByte(0),
                    --c;
                return u.putBytes(V.util.hexToBytes(s)),
                !1 !== r ? ot(u.getBytes(), t, n) : u.getBytes()
            }
            ,
            Ye.rsa.createKeyPairGenerationState = function(e, t, n) {
                "string" == typeof e && (e = parseInt(e, 10)),
                e = e || 2048;
                var r, a = (n = n || {}).prng || V.random, o = {
                    nextBytes: function(e) {
                        for (var t = a.getBytesSync(e.length), n = 0; n < e.length; ++n)
                            e[n] = t.charCodeAt(n)
                    }
                }, i = n.algorithm || "PRIMEINC";
                if ("PRIMEINC" !== i)
                    throw new Error("Invalid key generation algorithm: " + i);
                return (r = {
                    algorithm: i,
                    state: 0,
                    bits: e,
                    rng: o,
                    eInt: t || 65537,
                    e: new Ke(null),
                    p: null,
                    q: null,
                    qBits: e >> 1,
                    pBits: e - (e >> 1),
                    pqState: 0,
                    num: null,
                    keys: null
                }).e.fromInt(r.eInt),
                r
            }
            ,
            Ye.rsa.stepKeyPairGenerationState = function(e, t) {
                "algorithm"in e || (e.algorithm = "PRIMEINC");
                var n = new Ke(null);
                n.fromInt(30);
                for (var r, a = 0, o = function(e, t) {
                    return e | t
                }, i = +new Date, s = 0; null === e.keys && (t <= 0 || s < t); ) {
                    if (0 === e.state) {
                        var u = null === e.p ? e.pBits : e.qBits
                          , c = u - 1;
                        0 === e.pqState ? (e.num = new Ke(u,e.rng),
                        e.num.testBit(c) || e.num.bitwiseTo(Ke.ONE.shiftLeft(c), o, e.num),
                        e.num.dAddOffset(31 - e.num.mod(n).byteValue(), 0),
                        a = 0,
                        ++e.pqState) : 1 === e.pqState ? e.num.bitLength() > u ? e.pqState = 0 : e.num.isProbablePrime(ut(e.num.bitLength())) ? ++e.pqState : e.num.dAddOffset($e[a++ % 8], 0) : 2 === e.pqState ? e.pqState = 0 === e.num.subtract(Ke.ONE).gcd(e.e).compareTo(Ke.ONE) ? 3 : 0 : 3 === e.pqState && (e.pqState = 0,
                        null === e.p ? e.p = e.num : e.q = e.num,
                        null !== e.p && null !== e.q && ++e.state,
                        e.num = null)
                    } else if (1 === e.state)
                        e.p.compareTo(e.q) < 0 && (e.num = e.p,
                        e.p = e.q,
                        e.q = e.num),
                        ++e.state;
                    else if (2 === e.state)
                        e.p1 = e.p.subtract(Ke.ONE),
                        e.q1 = e.q.subtract(Ke.ONE),
                        e.phi = e.p1.multiply(e.q1),
                        ++e.state;
                    else if (3 === e.state)
                        0 === e.phi.gcd(e.e).compareTo(Ke.ONE) ? ++e.state : (e.p = null,
                        e.q = null,
                        e.state = 0);
                    else if (4 === e.state)
                        e.n = e.p.multiply(e.q),
                        e.n.bitLength() === e.bits ? ++e.state : (e.q = null,
                        e.state = 0);
                    else if (5 === e.state) {
                        var l = e.e.modInverse(e.phi);
                        e.keys = {
                            privateKey: Ye.rsa.setPrivateKey(e.n, e.e, l, e.p, e.q, l.mod(e.p1), l.mod(e.q1), e.q.modInverse(e.p)),
                            publicKey: Ye.rsa.setPublicKey(e.n, e.e)
                        }
                    }
                    s += (r = +new Date) - i,
                    i = r
                }
                return null !== e.keys
            }
            ,
            Ye.rsa.generateKeyPair = function(e, t, n, r) {
                if (1 === arguments.length ? "object" == typeof e ? (n = e,
                e = void 0) : "function" == typeof e && (r = e,
                e = void 0) : 2 === arguments.length ? "number" == typeof e ? "function" == typeof t ? (r = t,
                t = void 0) : "number" != typeof t && (n = t,
                t = void 0) : (n = e,
                r = t,
                e = void 0,
                t = void 0) : 3 === arguments.length && ("number" == typeof t ? "function" == typeof n && (r = n,
                n = void 0) : (r = n,
                n = t,
                t = void 0)),
                n = n || {},
                void 0 === e && (e = n.bits || 2048),
                void 0 === t && (t = n.e || 65537),
                !n.prng && e >= 256 && e <= 16384 && (65537 === t || 3 === t))
                    if (r) {
                        if (ct("generateKeyPair"))
                            return qe.generateKeyPair("rsa", {
                                modulusLength: e,
                                publicExponent: t,
                                publicKeyEncoding: {
                                    type: "spki",
                                    format: "pem"
                                },
                                privateKeyEncoding: {
                                    type: "pkcs8",
                                    format: "pem"
                                }
                            }, (function(e, t, n) {
                                if (e)
                                    return r(e);
                                r(null, {
                                    privateKey: Ye.privateKeyFromPem(n),
                                    publicKey: Ye.publicKeyFromPem(t)
                                })
                            }
                            ));
                        if (lt("generateKey") && lt("exportKey"))
                            return Qe.globalScope.crypto.subtle.generateKey({
                                name: "RSASSA-PKCS1-v1_5",
                                modulusLength: e,
                                publicExponent: pt(t),
                                hash: {
                                    name: "SHA-256"
                                }
                            }, !0, ["sign", "verify"]).then((function(e) {
                                return Qe.globalScope.crypto.subtle.exportKey("pkcs8", e.privateKey)
                            }
                            )).then(void 0, (function(e) {
                                r(e)
                            }
                            )).then((function(e) {
                                if (e) {
                                    var t = Ye.privateKeyFromAsn1(Xe.fromDer(V.util.createBuffer(e)));
                                    r(null, {
                                        privateKey: t,
                                        publicKey: Ye.setRsaPublicKey(t.n, t.e)
                                    })
                                }
                            }
                            ));
                        if (ft("generateKey") && ft("exportKey")) {
                            var a = Qe.globalScope.msCrypto.subtle.generateKey({
                                name: "RSASSA-PKCS1-v1_5",
                                modulusLength: e,
                                publicExponent: pt(t),
                                hash: {
                                    name: "SHA-256"
                                }
                            }, !0, ["sign", "verify"]);
                            return a.oncomplete = function(e) {
                                var t = e.target.result
                                  , n = Qe.globalScope.msCrypto.subtle.exportKey("pkcs8", t.privateKey);
                                n.oncomplete = function(e) {
                                    var t = e.target.result
                                      , n = Ye.privateKeyFromAsn1(Xe.fromDer(V.util.createBuffer(t)));
                                    r(null, {
                                        privateKey: n,
                                        publicKey: Ye.setRsaPublicKey(n.n, n.e)
                                    })
                                }
                                ,
                                n.onerror = function(e) {
                                    r(e)
                                }
                            }
                            ,
                            void (a.onerror = function(e) {
                                r(e)
                            }
                            )
                        }
                    } else if (ct("generateKeyPairSync")) {
                        var o = qe.generateKeyPairSync("rsa", {
                            modulusLength: e,
                            publicExponent: t,
                            publicKeyEncoding: {
                                type: "spki",
                                format: "pem"
                            },
                            privateKeyEncoding: {
                                type: "pkcs8",
                                format: "pem"
                            }
                        });
                        return {
                            privateKey: Ye.privateKeyFromPem(o.privateKey),
                            publicKey: Ye.publicKeyFromPem(o.publicKey)
                        }
                    }
                var i = Ye.rsa.createKeyPairGenerationState(e, t, n);
                if (!r)
                    return Ye.rsa.stepKeyPairGenerationState(i, 0),
                    i.keys;
                it(i, n, r)
            }
            ,
            Ye.setRsaPublicKey = Ye.rsa.setPublicKey = function(e, t) {
                var n = {
                    n: e,
                    e: t,
                    encrypt: function(e, t, r) {
                        if ("string" == typeof t ? t = t.toUpperCase() : void 0 === t && (t = "RSAES-PKCS1-V1_5"),
                        "RSAES-PKCS1-V1_5" === t)
                            t = {
                                encode: function(e, t, n) {
                                    return at(e, t, 2).getBytes()
                                }
                            };
                        else if ("RSA-OAEP" === t || "RSAES-OAEP" === t)
                            t = {
                                encode: function(e, t) {
                                    return V.pkcs1.encode_rsa_oaep(t, e, r)
                                }
                            };
                        else if (-1 !== ["RAW", "NONE", "NULL", null].indexOf(t))
                            t = {
                                encode: function(e) {
                                    return e
                                }
                            };
                        else if ("string" == typeof t)
                            throw new Error('Unsupported encryption scheme: "' + t + '".');
                        var a = t.encode(e, n, !0);
                        return Ye.rsa.encrypt(a, n, !0)
                    },
                    verify: function(e, t, r) {
                        "string" == typeof r ? r = r.toUpperCase() : void 0 === r && (r = "RSASSA-PKCS1-V1_5"),
                        "RSASSA-PKCS1-V1_5" === r ? r = {
                            verify: function(e, t) {
                                return t = ot(t, n, !0),
                                e === Xe.fromDer(t).value[1].value
                            }
                        } : "NONE" !== r && "NULL" !== r && null !== r || (r = {
                            verify: function(e, t) {
                                return e === ot(t, n, !0)
                            }
                        });
                        var a = Ye.rsa.decrypt(t, n, !0, !1);
                        return r.verify(e, a, n.n.bitLength())
                    }
                };
                return n
            }
            ,
            Ye.setRsaPrivateKey = Ye.rsa.setPrivateKey = function(e, t, n, r, a, o, i, s) {
                var u = {
                    n: e,
                    e: t,
                    d: n,
                    p: r,
                    q: a,
                    dP: o,
                    dQ: i,
                    qInv: s,
                    decrypt: function(e, t, n) {
                        "string" == typeof t ? t = t.toUpperCase() : void 0 === t && (t = "RSAES-PKCS1-V1_5");
                        var r = Ye.rsa.decrypt(e, u, !1, !1);
                        if ("RSAES-PKCS1-V1_5" === t)
                            t = {
                                decode: ot
                            };
                        else if ("RSA-OAEP" === t || "RSAES-OAEP" === t)
                            t = {
                                decode: function(e, t) {
                                    return V.pkcs1.decode_rsa_oaep(t, e, n)
                                }
                            };
                        else {
                            if (-1 === ["RAW", "NONE", "NULL", null].indexOf(t))
                                throw new Error('Unsupported encryption scheme: "' + t + '".');
                            t = {
                                decode: function(e) {
                                    return e
                                }
                            }
                        }
                        return t.decode(r, u, !1)
                    },
                    sign: function(e, t) {
                        var n = !1;
                        "string" == typeof t && (t = t.toUpperCase()),
                        void 0 === t || "RSASSA-PKCS1-V1_5" === t ? (t = {
                            encode: nt
                        },
                        n = 1) : "NONE" !== t && "NULL" !== t && null !== t || (t = {
                            encode: function() {
                                return e
                            }
                        },
                        n = 1);
                        var r = t.encode(e, u.n.bitLength());
                        return Ye.rsa.encrypt(r, u, n)
                    }
                };
                return u
            }
            ,
            Ye.wrapRsaPrivateKey = function(e) {
                return Xe.create(Xe.Class.UNIVERSAL, Xe.Type.SEQUENCE, !0, [Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, Xe.integerToDer(0).getBytes()), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.SEQUENCE, !0, [Xe.create(Xe.Class.UNIVERSAL, Xe.Type.OID, !1, Xe.oidToDer(Ye.oids.rsaEncryption).getBytes()), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.NULL, !1, "")]), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.OCTETSTRING, !1, Xe.toDer(e).getBytes())])
            }
            ,
            Ye.privateKeyFromAsn1 = function(e) {
                var t, n, r, a, o, i, s, u, c = {}, l = [];
                if (Xe.validate(e, Ze, c, l) && (e = Xe.fromDer(V.util.createBuffer(c.privateKey))),
                c = {},
                l = [],
                !Xe.validate(e, Je, c, l)) {
                    var f = new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");
                    throw f.errors = l,
                    f
                }
                return t = V.util.createBuffer(c.privateKeyModulus).toHex(),
                n = V.util.createBuffer(c.privateKeyPublicExponent).toHex(),
                r = V.util.createBuffer(c.privateKeyPrivateExponent).toHex(),
                a = V.util.createBuffer(c.privateKeyPrime1).toHex(),
                o = V.util.createBuffer(c.privateKeyPrime2).toHex(),
                i = V.util.createBuffer(c.privateKeyExponent1).toHex(),
                s = V.util.createBuffer(c.privateKeyExponent2).toHex(),
                u = V.util.createBuffer(c.privateKeyCoefficient).toHex(),
                Ye.setRsaPrivateKey(new Ke(t,16), new Ke(n,16), new Ke(r,16), new Ke(a,16), new Ke(o,16), new Ke(i,16), new Ke(s,16), new Ke(u,16))
            }
            ,
            Ye.privateKeyToAsn1 = Ye.privateKeyToRSAPrivateKey = function(e) {
                return Xe.create(Xe.Class.UNIVERSAL, Xe.Type.SEQUENCE, !0, [Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, Xe.integerToDer(0).getBytes()), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, st(e.n)), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, st(e.e)), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, st(e.d)), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, st(e.p)), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, st(e.q)), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, st(e.dP)), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, st(e.dQ)), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, st(e.qInv))])
            }
            ,
            Ye.publicKeyFromAsn1 = function(e) {
                var t = {}
                  , n = [];
                if (Xe.validate(e, tt, t, n)) {
                    var r, a = Xe.derToOid(t.publicKeyOid);
                    if (a !== Ye.oids.rsaEncryption)
                        throw (r = new Error("Cannot read public key. Unknown OID.")).oid = a,
                        r;
                    e = t.rsaPublicKey
                }
                if (n = [],
                !Xe.validate(e, et, t, n))
                    throw (r = new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.")).errors = n,
                    r;
                var o = V.util.createBuffer(t.publicKeyModulus).toHex()
                  , i = V.util.createBuffer(t.publicKeyExponent).toHex();
                return Ye.setRsaPublicKey(new Ke(o,16), new Ke(i,16))
            }
            ,
            Ye.publicKeyToAsn1 = Ye.publicKeyToSubjectPublicKeyInfo = function(e) {
                return Xe.create(Xe.Class.UNIVERSAL, Xe.Type.SEQUENCE, !0, [Xe.create(Xe.Class.UNIVERSAL, Xe.Type.SEQUENCE, !0, [Xe.create(Xe.Class.UNIVERSAL, Xe.Type.OID, !1, Xe.oidToDer(Ye.oids.rsaEncryption).getBytes()), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.NULL, !1, "")]), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.BITSTRING, !1, [Ye.publicKeyToRSAPublicKey(e)])])
            }
            ,
            Ye.publicKeyToRSAPublicKey = function(e) {
                return Xe.create(Xe.Class.UNIVERSAL, Xe.Type.SEQUENCE, !0, [Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, st(e.n)), Xe.create(Xe.Class.UNIVERSAL, Xe.Type.INTEGER, !1, st(e.e))])
            }
            ,
            void 0 === dt)
                var dt = V.jsbn.BigInteger;
            var ht = V.asn1
              , mt = V.pki = V.pki || {}
              , vt = (mt.pbe = V.pbe = V.pbe || {},
            mt.oids)
              , gt = {
                name: "EncryptedPrivateKeyInfo",
                tagClass: ht.Class.UNIVERSAL,
                type: ht.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "EncryptedPrivateKeyInfo.encryptionAlgorithm",
                    tagClass: ht.Class.UNIVERSAL,
                    type: ht.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "AlgorithmIdentifier.algorithm",
                        tagClass: ht.Class.UNIVERSAL,
                        type: ht.Type.OID,
                        constructed: !1,
                        capture: "encryptionOid"
                    }, {
                        name: "AlgorithmIdentifier.parameters",
                        tagClass: ht.Class.UNIVERSAL,
                        type: ht.Type.SEQUENCE,
                        constructed: !0,
                        captureAsn1: "encryptionParams"
                    }]
                }, {
                    name: "EncryptedPrivateKeyInfo.encryptedData",
                    tagClass: ht.Class.UNIVERSAL,
                    type: ht.Type.OCTETSTRING,
                    constructed: !1,
                    capture: "encryptedData"
                }]
            }
              , yt = {
                name: "PBES2Algorithms",
                tagClass: ht.Class.UNIVERSAL,
                type: ht.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "PBES2Algorithms.keyDerivationFunc",
                    tagClass: ht.Class.UNIVERSAL,
                    type: ht.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "PBES2Algorithms.keyDerivationFunc.oid",
                        tagClass: ht.Class.UNIVERSAL,
                        type: ht.Type.OID,
                        constructed: !1,
                        capture: "kdfOid"
                    }, {
                        name: "PBES2Algorithms.params",
                        tagClass: ht.Class.UNIVERSAL,
                        type: ht.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "PBES2Algorithms.params.salt",
                            tagClass: ht.Class.UNIVERSAL,
                            type: ht.Type.OCTETSTRING,
                            constructed: !1,
                            capture: "kdfSalt"
                        }, {
                            name: "PBES2Algorithms.params.iterationCount",
                            tagClass: ht.Class.UNIVERSAL,
                            type: ht.Type.INTEGER,
                            constructed: !1,
                            capture: "kdfIterationCount"
                        }, {
                            name: "PBES2Algorithms.params.keyLength",
                            tagClass: ht.Class.UNIVERSAL,
                            type: ht.Type.INTEGER,
                            constructed: !1,
                            optional: !0,
                            capture: "keyLength"
                        }, {
                            name: "PBES2Algorithms.params.prf",
                            tagClass: ht.Class.UNIVERSAL,
                            type: ht.Type.SEQUENCE,
                            constructed: !0,
                            optional: !0,
                            value: [{
                                name: "PBES2Algorithms.params.prf.algorithm",
                                tagClass: ht.Class.UNIVERSAL,
                                type: ht.Type.OID,
                                constructed: !1,
                                capture: "prfOid"
                            }]
                        }]
                    }]
                }, {
                    name: "PBES2Algorithms.encryptionScheme",
                    tagClass: ht.Class.UNIVERSAL,
                    type: ht.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "PBES2Algorithms.encryptionScheme.oid",
                        tagClass: ht.Class.UNIVERSAL,
                        type: ht.Type.OID,
                        constructed: !1,
                        capture: "encOid"
                    }, {
                        name: "PBES2Algorithms.encryptionScheme.iv",
                        tagClass: ht.Class.UNIVERSAL,
                        type: ht.Type.OCTETSTRING,
                        constructed: !1,
                        capture: "encIv"
                    }]
                }]
            }
              , bt = {
                name: "pkcs-12PbeParams",
                tagClass: ht.Class.UNIVERSAL,
                type: ht.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "pkcs-12PbeParams.salt",
                    tagClass: ht.Class.UNIVERSAL,
                    type: ht.Type.OCTETSTRING,
                    constructed: !1,
                    capture: "salt"
                }, {
                    name: "pkcs-12PbeParams.iterations",
                    tagClass: ht.Class.UNIVERSAL,
                    type: ht.Type.INTEGER,
                    constructed: !1,
                    capture: "iterations"
                }]
            };
            function xt(e, t) {
                return e.start().update(t).digest().getBytes()
            }
            function wt(e) {
                var t;
                if (e) {
                    if (!(t = mt.oids[ht.derToOid(e)])) {
                        var n = new Error("Unsupported PRF OID.");
                        throw n.oid = e,
                        n.supported = ["hmacWithSHA1", "hmacWithSHA224", "hmacWithSHA256", "hmacWithSHA384", "hmacWithSHA512"],
                        n
                    }
                } else
                    t = "hmacWithSHA1";
                return kt(t)
            }
            function kt(e) {
                var t = V.md;
                switch (e) {
                case "hmacWithSHA224":
                    t = V.md.sha512;
                case "hmacWithSHA1":
                case "hmacWithSHA256":
                case "hmacWithSHA384":
                case "hmacWithSHA512":
                    e = e.substr(8).toLowerCase();
                    break;
                default:
                    var n = new Error("Unsupported PRF algorithm.");
                    throw n.algorithm = e,
                    n.supported = ["hmacWithSHA1", "hmacWithSHA224", "hmacWithSHA256", "hmacWithSHA384", "hmacWithSHA512"],
                    n
                }
                if (!t || !(e in t))
                    throw new Error("Unknown hash algorithm: " + e);
                return t[e].create()
            }
            mt.encryptPrivateKeyInfo = function(e, t, n) {
                (n = n || {}).saltSize = n.saltSize || 8,
                n.count = n.count || 2048,
                n.algorithm = n.algorithm || "aes128",
                n.prfAlgorithm = n.prfAlgorithm || "sha1";
                var r, a, o, i = V.random.getBytesSync(n.saltSize), s = n.count, u = ht.integerToDer(s);
                if (0 === n.algorithm.indexOf("aes") || "des" === n.algorithm) {
                    var c, l, f;
                    switch (n.algorithm) {
                    case "aes128":
                        r = 16,
                        c = 16,
                        l = vt["aes128-CBC"],
                        f = V.aes.createEncryptionCipher;
                        break;
                    case "aes192":
                        r = 24,
                        c = 16,
                        l = vt["aes192-CBC"],
                        f = V.aes.createEncryptionCipher;
                        break;
                    case "aes256":
                        r = 32,
                        c = 16,
                        l = vt["aes256-CBC"],
                        f = V.aes.createEncryptionCipher;
                        break;
                    case "des":
                        r = 8,
                        c = 8,
                        l = vt.desCBC,
                        f = V.des.createEncryptionCipher;
                        break;
                    default:
                        throw (g = new Error("Cannot encrypt private key. Unknown encryption algorithm.")).algorithm = n.algorithm,
                        g
                    }
                    var p = "hmacWith" + n.prfAlgorithm.toUpperCase()
                      , d = kt(p)
                      , h = V.pkcs5.pbkdf2(t, i, s, r, d)
                      , m = V.random.getBytesSync(c);
                    (y = f(h)).start(m),
                    y.update(ht.toDer(e)),
                    y.finish(),
                    o = y.output.getBytes();
                    var v = function(e, t, n, r) {
                        var a = ht.create(ht.Class.UNIVERSAL, ht.Type.SEQUENCE, !0, [ht.create(ht.Class.UNIVERSAL, ht.Type.OCTETSTRING, !1, e), ht.create(ht.Class.UNIVERSAL, ht.Type.INTEGER, !1, t.getBytes())]);
                        return "hmacWithSHA1" !== r && a.value.push(ht.create(ht.Class.UNIVERSAL, ht.Type.INTEGER, !1, V.util.hexToBytes(n.toString(16))), ht.create(ht.Class.UNIVERSAL, ht.Type.SEQUENCE, !0, [ht.create(ht.Class.UNIVERSAL, ht.Type.OID, !1, ht.oidToDer(mt.oids[r]).getBytes()), ht.create(ht.Class.UNIVERSAL, ht.Type.NULL, !1, "")])),
                        a
                    }(i, u, r, p);
                    a = ht.create(ht.Class.UNIVERSAL, ht.Type.SEQUENCE, !0, [ht.create(ht.Class.UNIVERSAL, ht.Type.OID, !1, ht.oidToDer(vt.pkcs5PBES2).getBytes()), ht.create(ht.Class.UNIVERSAL, ht.Type.SEQUENCE, !0, [ht.create(ht.Class.UNIVERSAL, ht.Type.SEQUENCE, !0, [ht.create(ht.Class.UNIVERSAL, ht.Type.OID, !1, ht.oidToDer(vt.pkcs5PBKDF2).getBytes()), v]), ht.create(ht.Class.UNIVERSAL, ht.Type.SEQUENCE, !0, [ht.create(ht.Class.UNIVERSAL, ht.Type.OID, !1, ht.oidToDer(l).getBytes()), ht.create(ht.Class.UNIVERSAL, ht.Type.OCTETSTRING, !1, m)])])])
                } else {
                    var g;
                    if ("3des" !== n.algorithm)
                        throw (g = new Error("Cannot encrypt private key. Unknown encryption algorithm.")).algorithm = n.algorithm,
                        g;
                    r = 24;
                    var y, b = new V.util.ByteBuffer(i);
                    h = mt.pbe.generatePkcs12Key(t, b, 1, s, r),
                    m = mt.pbe.generatePkcs12Key(t, b, 2, s, r),
                    (y = V.des.createEncryptionCipher(h)).start(m),
                    y.update(ht.toDer(e)),
                    y.finish(),
                    o = y.output.getBytes(),
                    a = ht.create(ht.Class.UNIVERSAL, ht.Type.SEQUENCE, !0, [ht.create(ht.Class.UNIVERSAL, ht.Type.OID, !1, ht.oidToDer(vt["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()), ht.create(ht.Class.UNIVERSAL, ht.Type.SEQUENCE, !0, [ht.create(ht.Class.UNIVERSAL, ht.Type.OCTETSTRING, !1, i), ht.create(ht.Class.UNIVERSAL, ht.Type.INTEGER, !1, u.getBytes())])])
                }
                return ht.create(ht.Class.UNIVERSAL, ht.Type.SEQUENCE, !0, [a, ht.create(ht.Class.UNIVERSAL, ht.Type.OCTETSTRING, !1, o)])
            }
            ,
            mt.decryptPrivateKeyInfo = function(e, t) {
                var n = null
                  , r = {}
                  , a = [];
                if (!ht.validate(e, gt, r, a)) {
                    var o = new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");
                    throw o.errors = a,
                    o
                }
                var i = ht.derToOid(r.encryptionOid)
                  , s = mt.pbe.getCipher(i, r.encryptionParams, t)
                  , u = V.util.createBuffer(r.encryptedData);
                return s.update(u),
                s.finish() && (n = ht.fromDer(s.output)),
                n
            }
            ,
            mt.encryptedPrivateKeyToPem = function(e, t) {
                var n = {
                    type: "ENCRYPTED PRIVATE KEY",
                    body: ht.toDer(e).getBytes()
                };
                return V.pem.encode(n, {
                    maxline: t
                })
            }
            ,
            mt.encryptedPrivateKeyFromPem = function(e) {
                var t = V.pem.decode(e)[0];
                if ("ENCRYPTED PRIVATE KEY" !== t.type) {
                    var n = new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');
                    throw n.headerType = t.type,
                    n
                }
                if (t.procType && "ENCRYPTED" === t.procType.type)
                    throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");
                return ht.fromDer(t.body)
            }
            ,
            mt.encryptRsaPrivateKey = function(e, t, n) {
                if (!(n = n || {}).legacy) {
                    var r = mt.wrapRsaPrivateKey(mt.privateKeyToAsn1(e));
                    return r = mt.encryptPrivateKeyInfo(r, t, n),
                    mt.encryptedPrivateKeyToPem(r)
                }
                var a, o, i, s;
                switch (n.algorithm) {
                case "aes128":
                    a = "AES-128-CBC",
                    i = 16,
                    o = V.random.getBytesSync(16),
                    s = V.aes.createEncryptionCipher;
                    break;
                case "aes192":
                    a = "AES-192-CBC",
                    i = 24,
                    o = V.random.getBytesSync(16),
                    s = V.aes.createEncryptionCipher;
                    break;
                case "aes256":
                    a = "AES-256-CBC",
                    i = 32,
                    o = V.random.getBytesSync(16),
                    s = V.aes.createEncryptionCipher;
                    break;
                case "3des":
                    a = "DES-EDE3-CBC",
                    i = 24,
                    o = V.random.getBytesSync(8),
                    s = V.des.createEncryptionCipher;
                    break;
                case "des":
                    a = "DES-CBC",
                    i = 8,
                    o = V.random.getBytesSync(8),
                    s = V.des.createEncryptionCipher;
                    break;
                default:
                    var u = new Error('Could not encrypt RSA private key; unsupported encryption algorithm "' + n.algorithm + '".');
                    throw u.algorithm = n.algorithm,
                    u
                }
                var c = s(V.pbe.opensslDeriveBytes(t, o.substr(0, 8), i));
                c.start(o),
                c.update(ht.toDer(mt.privateKeyToAsn1(e))),
                c.finish();
                var l = {
                    type: "RSA PRIVATE KEY",
                    procType: {
                        version: "4",
                        type: "ENCRYPTED"
                    },
                    dekInfo: {
                        algorithm: a,
                        parameters: V.util.bytesToHex(o).toUpperCase()
                    },
                    body: c.output.getBytes()
                };
                return V.pem.encode(l)
            }
            ,
            mt.decryptRsaPrivateKey = function(e, t) {
                var n = null
                  , r = V.pem.decode(e)[0];
                if ("ENCRYPTED PRIVATE KEY" !== r.type && "PRIVATE KEY" !== r.type && "RSA PRIVATE KEY" !== r.type)
                    throw (i = new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".')).headerType = i,
                    i;
                if (r.procType && "ENCRYPTED" === r.procType.type) {
                    var a, o;
                    switch (r.dekInfo.algorithm) {
                    case "DES-CBC":
                        a = 8,
                        o = V.des.createDecryptionCipher;
                        break;
                    case "DES-EDE3-CBC":
                        a = 24,
                        o = V.des.createDecryptionCipher;
                        break;
                    case "AES-128-CBC":
                        a = 16,
                        o = V.aes.createDecryptionCipher;
                        break;
                    case "AES-192-CBC":
                        a = 24,
                        o = V.aes.createDecryptionCipher;
                        break;
                    case "AES-256-CBC":
                        a = 32,
                        o = V.aes.createDecryptionCipher;
                        break;
                    case "RC2-40-CBC":
                        a = 5,
                        o = function(e) {
                            return V.rc2.createDecryptionCipher(e, 40)
                        }
                        ;
                        break;
                    case "RC2-64-CBC":
                        a = 8,
                        o = function(e) {
                            return V.rc2.createDecryptionCipher(e, 64)
                        }
                        ;
                        break;
                    case "RC2-128-CBC":
                        a = 16,
                        o = function(e) {
                            return V.rc2.createDecryptionCipher(e, 128)
                        }
                        ;
                        break;
                    default:
                        var i;
                        throw (i = new Error('Could not decrypt private key; unsupported encryption algorithm "' + r.dekInfo.algorithm + '".')).algorithm = r.dekInfo.algorithm,
                        i
                    }
                    var s = V.util.hexToBytes(r.dekInfo.parameters)
                      , u = o(V.pbe.opensslDeriveBytes(t, s.substr(0, 8), a));
                    if (u.start(s),
                    u.update(V.util.createBuffer(r.body)),
                    !u.finish())
                        return n;
                    n = u.output.getBytes()
                } else
                    n = r.body;
                return null !== (n = "ENCRYPTED PRIVATE KEY" === r.type ? mt.decryptPrivateKeyInfo(ht.fromDer(n), t) : ht.fromDer(n)) && (n = mt.privateKeyFromAsn1(n)),
                n
            }
            ,
            mt.pbe.generatePkcs12Key = function(e, t, n, r, a, o) {
                var i, s;
                if (null == o) {
                    if (!("sha1"in V.md))
                        throw new Error('"sha1" hash algorithm unavailable.');
                    o = V.md.sha1.create()
                }
                var u = o.digestLength
                  , c = o.blockLength
                  , l = new V.util.ByteBuffer
                  , f = new V.util.ByteBuffer;
                if (null != e) {
                    for (s = 0; s < e.length; s++)
                        f.putInt16(e.charCodeAt(s));
                    f.putInt16(0)
                }
                var p = f.length()
                  , d = t.length()
                  , h = new V.util.ByteBuffer;
                h.fillWithByte(n, c);
                var m = c * Math.ceil(d / c)
                  , v = new V.util.ByteBuffer;
                for (s = 0; s < m; s++)
                    v.putByte(t.at(s % d));
                var g = c * Math.ceil(p / c)
                  , y = new V.util.ByteBuffer;
                for (s = 0; s < g; s++)
                    y.putByte(f.at(s % p));
                var b = v;
                b.putBuffer(y);
                for (var x = Math.ceil(a / u), w = 1; w <= x; w++) {
                    var k = new V.util.ByteBuffer;
                    k.putBytes(h.bytes()),
                    k.putBytes(b.bytes());
                    for (var C = 0; C < r; C++)
                        o.start(),
                        o.update(k.getBytes()),
                        k = o.digest();
                    var E = new V.util.ByteBuffer;
                    for (s = 0; s < c; s++)
                        E.putByte(k.at(s % u));
                    var S = Math.ceil(d / c) + Math.ceil(p / c)
                      , I = new V.util.ByteBuffer;
                    for (i = 0; i < S; i++) {
                        var T = new V.util.ByteBuffer(b.getBytes(c))
                          , A = 511;
                        for (s = E.length() - 1; s >= 0; s--)
                            A >>= 8,
                            A += E.at(s) + T.at(s),
                            T.setAt(s, 255 & A);
                        I.putBuffer(T)
                    }
                    b = I,
                    l.putBuffer(k)
                }
                return l.truncate(l.length() - a),
                l
            }
            ,
            mt.pbe.getCipher = function(e, t, n) {
                switch (e) {
                case mt.oids.pkcs5PBES2:
                    return mt.pbe.getCipherForPBES2(e, t, n);
                case mt.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:
                case mt.oids["pbewithSHAAnd40BitRC2-CBC"]:
                    return mt.pbe.getCipherForPKCS12PBE(e, t, n);
                default:
                    var r = new Error("Cannot read encrypted PBE data block. Unsupported OID.");
                    throw r.oid = e,
                    r.supportedOids = ["pkcs5PBES2", "pbeWithSHAAnd3-KeyTripleDES-CBC", "pbewithSHAAnd40BitRC2-CBC"],
                    r
                }
            }
            ,
            mt.pbe.getCipherForPBES2 = function(e, t, n) {
                var r, a = {}, o = [];
                if (!ht.validate(t, yt, a, o))
                    throw (r = new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.")).errors = o,
                    r;
                if ((e = ht.derToOid(a.kdfOid)) !== mt.oids.pkcs5PBKDF2)
                    throw (r = new Error("Cannot read encrypted private key. Unsupported key derivation function OID.")).oid = e,
                    r.supportedOids = ["pkcs5PBKDF2"],
                    r;
                if ((e = ht.derToOid(a.encOid)) !== mt.oids["aes128-CBC"] && e !== mt.oids["aes192-CBC"] && e !== mt.oids["aes256-CBC"] && e !== mt.oids["des-EDE3-CBC"] && e !== mt.oids.desCBC)
                    throw (r = new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.")).oid = e,
                    r.supportedOids = ["aes128-CBC", "aes192-CBC", "aes256-CBC", "des-EDE3-CBC", "desCBC"],
                    r;
                var i, s, u = a.kdfSalt, c = V.util.createBuffer(a.kdfIterationCount);
                switch (c = c.getInt(c.length() << 3),
                mt.oids[e]) {
                case "aes128-CBC":
                    i = 16,
                    s = V.aes.createDecryptionCipher;
                    break;
                case "aes192-CBC":
                    i = 24,
                    s = V.aes.createDecryptionCipher;
                    break;
                case "aes256-CBC":
                    i = 32,
                    s = V.aes.createDecryptionCipher;
                    break;
                case "des-EDE3-CBC":
                    i = 24,
                    s = V.des.createDecryptionCipher;
                    break;
                case "desCBC":
                    i = 8,
                    s = V.des.createDecryptionCipher
                }
                var l = wt(a.prfOid)
                  , f = V.pkcs5.pbkdf2(n, u, c, i, l)
                  , p = a.encIv
                  , d = s(f);
                return d.start(p),
                d
            }
            ,
            mt.pbe.getCipherForPKCS12PBE = function(e, t, n) {
                var r = {}
                  , a = [];
                if (!ht.validate(t, bt, r, a))
                    throw (l = new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.")).errors = a,
                    l;
                var o, i, s, u = V.util.createBuffer(r.salt), c = V.util.createBuffer(r.iterations);
                switch (c = c.getInt(c.length() << 3),
                e) {
                case mt.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:
                    o = 24,
                    i = 8,
                    s = V.des.startDecrypting;
                    break;
                case mt.oids["pbewithSHAAnd40BitRC2-CBC"]:
                    o = 5,
                    i = 8,
                    s = function(e, t) {
                        var n = V.rc2.createDecryptionCipher(e, 40);
                        return n.start(t, null),
                        n
                    }
                    ;
                    break;
                default:
                    var l;
                    throw (l = new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.")).oid = e,
                    l
                }
                var f = wt(r.prfOid)
                  , p = mt.pbe.generatePkcs12Key(n, u, 1, c, o, f);
                return f.start(),
                s(p, mt.pbe.generatePkcs12Key(n, u, 2, c, i, f))
            }
            ,
            mt.pbe.opensslDeriveBytes = function(e, t, n, r) {
                if (null == r) {
                    if (!("md5"in V.md))
                        throw new Error('"md5" hash algorithm unavailable.');
                    r = V.md.md5.create()
                }
                null === t && (t = "");
                for (var a = [xt(r, e + t)], o = 16, i = 1; o < n; ++i,
                o += 16)
                    a.push(xt(r, a[i - 1] + e + t));
                return a.join("").substr(0, n)
            }
            ,
            x((function(e) {
                var t = V.asn1
                  , n = e.exports = V.pkcs7asn1 = V.pkcs7asn1 || {};
                V.pkcs7 = V.pkcs7 || {},
                V.pkcs7.asn1 = n;
                var r = {
                    name: "ContentInfo",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "ContentInfo.ContentType",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.OID,
                        constructed: !1,
                        capture: "contentType"
                    }, {
                        name: "ContentInfo.content",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 0,
                        constructed: !0,
                        optional: !0,
                        captureAsn1: "content"
                    }]
                };
                n.contentInfoValidator = r;
                var a = {
                    name: "EncryptedContentInfo",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "EncryptedContentInfo.contentType",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.OID,
                        constructed: !1,
                        capture: "contentType"
                    }, {
                        name: "EncryptedContentInfo.contentEncryptionAlgorithm",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "EncryptedContentInfo.contentEncryptionAlgorithm.algorithm",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.OID,
                            constructed: !1,
                            capture: "encAlgorithm"
                        }, {
                            name: "EncryptedContentInfo.contentEncryptionAlgorithm.parameter",
                            tagClass: t.Class.UNIVERSAL,
                            captureAsn1: "encParameter"
                        }]
                    }, {
                        name: "EncryptedContentInfo.encryptedContent",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 0,
                        capture: "encryptedContent",
                        captureAsn1: "encryptedContentAsn1"
                    }]
                };
                n.envelopedDataValidator = {
                    name: "EnvelopedData",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "EnvelopedData.Version",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.INTEGER,
                        constructed: !1,
                        capture: "version"
                    }, {
                        name: "EnvelopedData.RecipientInfos",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SET,
                        constructed: !0,
                        captureAsn1: "recipientInfos"
                    }].concat(a)
                },
                n.encryptedDataValidator = {
                    name: "EncryptedData",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "EncryptedData.Version",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.INTEGER,
                        constructed: !1,
                        capture: "version"
                    }].concat(a)
                };
                var o = {
                    name: "SignerInfo",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "SignerInfo.version",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.INTEGER,
                        constructed: !1
                    }, {
                        name: "SignerInfo.issuerAndSerialNumber",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "SignerInfo.issuerAndSerialNumber.issuer",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.SEQUENCE,
                            constructed: !0,
                            captureAsn1: "issuer"
                        }, {
                            name: "SignerInfo.issuerAndSerialNumber.serialNumber",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.INTEGER,
                            constructed: !1,
                            capture: "serial"
                        }]
                    }, {
                        name: "SignerInfo.digestAlgorithm",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "SignerInfo.digestAlgorithm.algorithm",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.OID,
                            constructed: !1,
                            capture: "digestAlgorithm"
                        }, {
                            name: "SignerInfo.digestAlgorithm.parameter",
                            tagClass: t.Class.UNIVERSAL,
                            constructed: !1,
                            captureAsn1: "digestParameter",
                            optional: !0
                        }]
                    }, {
                        name: "SignerInfo.authenticatedAttributes",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 0,
                        constructed: !0,
                        optional: !0,
                        capture: "authenticatedAttributes"
                    }, {
                        name: "SignerInfo.digestEncryptionAlgorithm",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        capture: "signatureAlgorithm"
                    }, {
                        name: "SignerInfo.encryptedDigest",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.OCTETSTRING,
                        constructed: !1,
                        capture: "signature"
                    }, {
                        name: "SignerInfo.unauthenticatedAttributes",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 1,
                        constructed: !0,
                        optional: !0,
                        capture: "unauthenticatedAttributes"
                    }]
                };
                n.signedDataValidator = {
                    name: "SignedData",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "SignedData.Version",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.INTEGER,
                        constructed: !1,
                        capture: "version"
                    }, {
                        name: "SignedData.DigestAlgorithms",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SET,
                        constructed: !0,
                        captureAsn1: "digestAlgorithms"
                    }, r, {
                        name: "SignedData.Certificates",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 0,
                        optional: !0,
                        captureAsn1: "certificates"
                    }, {
                        name: "SignedData.CertificateRevocationLists",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 1,
                        optional: !0,
                        captureAsn1: "crls"
                    }, {
                        name: "SignedData.SignerInfos",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SET,
                        capture: "signerInfos",
                        optional: !0,
                        value: [o]
                    }]
                },
                n.recipientInfoValidator = {
                    name: "RecipientInfo",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "RecipientInfo.version",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.INTEGER,
                        constructed: !1,
                        capture: "version"
                    }, {
                        name: "RecipientInfo.issuerAndSerial",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "RecipientInfo.issuerAndSerial.issuer",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.SEQUENCE,
                            constructed: !0,
                            captureAsn1: "issuer"
                        }, {
                            name: "RecipientInfo.issuerAndSerial.serialNumber",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.INTEGER,
                            constructed: !1,
                            capture: "serial"
                        }]
                    }, {
                        name: "RecipientInfo.keyEncryptionAlgorithm",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "RecipientInfo.keyEncryptionAlgorithm.algorithm",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.OID,
                            constructed: !1,
                            capture: "encAlgorithm"
                        }, {
                            name: "RecipientInfo.keyEncryptionAlgorithm.parameter",
                            tagClass: t.Class.UNIVERSAL,
                            constructed: !1,
                            captureAsn1: "encParameter"
                        }]
                    }, {
                        name: "RecipientInfo.encryptedKey",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.OCTETSTRING,
                        constructed: !1,
                        capture: "encKey"
                    }]
                }
            }
            )),
            x((function(e) {
                V.mgf = V.mgf || {},
                (e.exports = V.mgf.mgf1 = V.mgf1 = V.mgf1 || {}).create = function(e) {
                    return {
                        generate: function(t, n) {
                            for (var r = new V.util.ByteBuffer, a = Math.ceil(n / e.digestLength), o = 0; o < a; o++) {
                                var i = new V.util.ByteBuffer;
                                i.putInt32(o),
                                e.start(),
                                e.update(t + i.getBytes()),
                                r.putBuffer(e.digest())
                            }
                            return r.truncate(r.length() - n),
                            r.getBytes()
                        }
                    }
                }
            }
            )),
            V.mgf = V.mgf || {},
            V.mgf.mgf1 = V.mgf1,
            x((function(e) {
                (e.exports = V.pss = V.pss || {}).create = function(e) {
                    3 === arguments.length && (e = {
                        md: arguments[0],
                        mgf: arguments[1],
                        saltLength: arguments[2]
                    });
                    var t, n = e.md, r = e.mgf, a = n.digestLength, o = e.salt || null;
                    if ("string" == typeof o && (o = V.util.createBuffer(o)),
                    "saltLength"in e)
                        t = e.saltLength;
                    else {
                        if (null === o)
                            throw new Error("Salt length not specified or specific salt not given.");
                        t = o.length()
                    }
                    if (null !== o && o.length() !== t)
                        throw new Error("Given salt length does not match length of given salt.");
                    var i = e.prng || V.random;
                    return {
                        encode: function(e, s) {
                            var u, c, l = s - 1, f = Math.ceil(l / 8), p = e.digest().getBytes();
                            if (f < a + t + 2)
                                throw new Error("Message is too long to encrypt.");
                            c = null === o ? i.getBytesSync(t) : o.bytes();
                            var d = new V.util.ByteBuffer;
                            d.fillWithByte(0, 8),
                            d.putBytes(p),
                            d.putBytes(c),
                            n.start(),
                            n.update(d.getBytes());
                            var h = n.digest().getBytes()
                              , m = new V.util.ByteBuffer;
                            m.fillWithByte(0, f - t - a - 2),
                            m.putByte(1),
                            m.putBytes(c);
                            var v = m.getBytes()
                              , g = f - a - 1
                              , y = r.generate(h, g)
                              , b = "";
                            for (u = 0; u < g; u++)
                                b += String.fromCharCode(v.charCodeAt(u) ^ y.charCodeAt(u));
                            var x = 65280 >> 8 * f - l & 255;
                            return (b = String.fromCharCode(b.charCodeAt(0) & ~x) + b.substr(1)) + h + String.fromCharCode(188)
                        },
                        verify: function(e, o, i) {
                            var s, u = i - 1, c = Math.ceil(u / 8);
                            if (o = o.substr(-c),
                            c < a + t + 2)
                                throw new Error("Inconsistent parameters to PSS signature verification.");
                            if (188 !== o.charCodeAt(c - 1))
                                throw new Error("Encoded message does not end in 0xBC.");
                            var l = c - a - 1
                              , f = o.substr(0, l)
                              , p = o.substr(l, a)
                              , d = 65280 >> 8 * c - u & 255;
                            if (0 != (f.charCodeAt(0) & d))
                                throw new Error("Bits beyond keysize not zero as expected.");
                            var h = r.generate(p, l)
                              , m = "";
                            for (s = 0; s < l; s++)
                                m += String.fromCharCode(f.charCodeAt(s) ^ h.charCodeAt(s));
                            m = String.fromCharCode(m.charCodeAt(0) & ~d) + m.substr(1);
                            var v = c - a - t - 2;
                            for (s = 0; s < v; s++)
                                if (0 !== m.charCodeAt(s))
                                    throw new Error("Leftmost octets not zero as expected");
                            if (1 !== m.charCodeAt(v))
                                throw new Error("Inconsistent PSS signature, 0x01 marker not found");
                            var g = m.substr(-t)
                              , y = new V.util.ByteBuffer;
                            return y.fillWithByte(0, 8),
                            y.putBytes(e),
                            y.putBytes(g),
                            n.start(),
                            n.update(y.getBytes()),
                            p === n.digest().getBytes()
                        }
                    }
                }
            }
            )),
            x((function(e) {
                var t = V.asn1
                  , n = e.exports = V.pki = V.pki || {}
                  , r = n.oids
                  , a = {};
                a.CN = r.commonName,
                a.commonName = "CN",
                a.C = r.countryName,
                a.countryName = "C",
                a.L = r.localityName,
                a.localityName = "L",
                a.ST = r.stateOrProvinceName,
                a.stateOrProvinceName = "ST",
                a.O = r.organizationName,
                a.organizationName = "O",
                a.OU = r.organizationalUnitName,
                a.organizationalUnitName = "OU",
                a.E = r.emailAddress,
                a.emailAddress = "E";
                var o = V.pki.rsa.publicKeyValidator
                  , i = {
                    name: "Certificate",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "Certificate.TBSCertificate",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        captureAsn1: "tbsCertificate",
                        value: [{
                            name: "Certificate.TBSCertificate.version",
                            tagClass: t.Class.CONTEXT_SPECIFIC,
                            type: 0,
                            constructed: !0,
                            optional: !0,
                            value: [{
                                name: "Certificate.TBSCertificate.version.integer",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.INTEGER,
                                constructed: !1,
                                capture: "certVersion"
                            }]
                        }, {
                            name: "Certificate.TBSCertificate.serialNumber",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.INTEGER,
                            constructed: !1,
                            capture: "certSerialNumber"
                        }, {
                            name: "Certificate.TBSCertificate.signature",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.SEQUENCE,
                            constructed: !0,
                            value: [{
                                name: "Certificate.TBSCertificate.signature.algorithm",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.OID,
                                constructed: !1,
                                capture: "certinfoSignatureOid"
                            }, {
                                name: "Certificate.TBSCertificate.signature.parameters",
                                tagClass: t.Class.UNIVERSAL,
                                optional: !0,
                                captureAsn1: "certinfoSignatureParams"
                            }]
                        }, {
                            name: "Certificate.TBSCertificate.issuer",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.SEQUENCE,
                            constructed: !0,
                            captureAsn1: "certIssuer"
                        }, {
                            name: "Certificate.TBSCertificate.validity",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.SEQUENCE,
                            constructed: !0,
                            value: [{
                                name: "Certificate.TBSCertificate.validity.notBefore (utc)",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.UTCTIME,
                                constructed: !1,
                                optional: !0,
                                capture: "certValidity1UTCTime"
                            }, {
                                name: "Certificate.TBSCertificate.validity.notBefore (generalized)",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.GENERALIZEDTIME,
                                constructed: !1,
                                optional: !0,
                                capture: "certValidity2GeneralizedTime"
                            }, {
                                name: "Certificate.TBSCertificate.validity.notAfter (utc)",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.UTCTIME,
                                constructed: !1,
                                optional: !0,
                                capture: "certValidity3UTCTime"
                            }, {
                                name: "Certificate.TBSCertificate.validity.notAfter (generalized)",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.GENERALIZEDTIME,
                                constructed: !1,
                                optional: !0,
                                capture: "certValidity4GeneralizedTime"
                            }]
                        }, {
                            name: "Certificate.TBSCertificate.subject",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.SEQUENCE,
                            constructed: !0,
                            captureAsn1: "certSubject"
                        }, o, {
                            name: "Certificate.TBSCertificate.issuerUniqueID",
                            tagClass: t.Class.CONTEXT_SPECIFIC,
                            type: 1,
                            constructed: !0,
                            optional: !0,
                            value: [{
                                name: "Certificate.TBSCertificate.issuerUniqueID.id",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.BITSTRING,
                                constructed: !1,
                                captureBitStringValue: "certIssuerUniqueId"
                            }]
                        }, {
                            name: "Certificate.TBSCertificate.subjectUniqueID",
                            tagClass: t.Class.CONTEXT_SPECIFIC,
                            type: 2,
                            constructed: !0,
                            optional: !0,
                            value: [{
                                name: "Certificate.TBSCertificate.subjectUniqueID.id",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.BITSTRING,
                                constructed: !1,
                                captureBitStringValue: "certSubjectUniqueId"
                            }]
                        }, {
                            name: "Certificate.TBSCertificate.extensions",
                            tagClass: t.Class.CONTEXT_SPECIFIC,
                            type: 3,
                            constructed: !0,
                            captureAsn1: "certExtensions",
                            optional: !0
                        }]
                    }, {
                        name: "Certificate.signatureAlgorithm",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "Certificate.signatureAlgorithm.algorithm",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.OID,
                            constructed: !1,
                            capture: "certSignatureOid"
                        }, {
                            name: "Certificate.TBSCertificate.signature.parameters",
                            tagClass: t.Class.UNIVERSAL,
                            optional: !0,
                            captureAsn1: "certSignatureParams"
                        }]
                    }, {
                        name: "Certificate.signatureValue",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.BITSTRING,
                        constructed: !1,
                        captureBitStringValue: "certSignature"
                    }]
                }
                  , s = {
                    name: "rsapss",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "rsapss.hashAlgorithm",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 0,
                        constructed: !0,
                        value: [{
                            name: "rsapss.hashAlgorithm.AlgorithmIdentifier",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Class.SEQUENCE,
                            constructed: !0,
                            optional: !0,
                            value: [{
                                name: "rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.OID,
                                constructed: !1,
                                capture: "hashOid"
                            }]
                        }]
                    }, {
                        name: "rsapss.maskGenAlgorithm",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 1,
                        constructed: !0,
                        value: [{
                            name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Class.SEQUENCE,
                            constructed: !0,
                            optional: !0,
                            value: [{
                                name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.OID,
                                constructed: !1,
                                capture: "maskGenOid"
                            }, {
                                name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.params",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.SEQUENCE,
                                constructed: !0,
                                value: [{
                                    name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm",
                                    tagClass: t.Class.UNIVERSAL,
                                    type: t.Type.OID,
                                    constructed: !1,
                                    capture: "maskGenHashOid"
                                }]
                            }]
                        }]
                    }, {
                        name: "rsapss.saltLength",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 2,
                        optional: !0,
                        value: [{
                            name: "rsapss.saltLength.saltLength",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Class.INTEGER,
                            constructed: !1,
                            capture: "saltLength"
                        }]
                    }, {
                        name: "rsapss.trailerField",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 3,
                        optional: !0,
                        value: [{
                            name: "rsapss.trailer.trailer",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Class.INTEGER,
                            constructed: !1,
                            capture: "trailer"
                        }]
                    }]
                }
                  , u = {
                    name: "CertificationRequestInfo",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    captureAsn1: "certificationRequestInfo",
                    value: [{
                        name: "CertificationRequestInfo.integer",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.INTEGER,
                        constructed: !1,
                        capture: "certificationRequestInfoVersion"
                    }, {
                        name: "CertificationRequestInfo.subject",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        captureAsn1: "certificationRequestInfoSubject"
                    }, o, {
                        name: "CertificationRequestInfo.attributes",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        type: 0,
                        constructed: !0,
                        optional: !0,
                        capture: "certificationRequestInfoAttributes",
                        value: [{
                            name: "CertificationRequestInfo.attributes",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.SEQUENCE,
                            constructed: !0,
                            value: [{
                                name: "CertificationRequestInfo.attributes.type",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.OID,
                                constructed: !1
                            }, {
                                name: "CertificationRequestInfo.attributes.value",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.SET,
                                constructed: !0
                            }]
                        }]
                    }]
                }
                  , c = {
                    name: "CertificationRequest",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    captureAsn1: "csr",
                    value: [u, {
                        name: "CertificationRequest.signatureAlgorithm",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "CertificationRequest.signatureAlgorithm.algorithm",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.OID,
                            constructed: !1,
                            capture: "csrSignatureOid"
                        }, {
                            name: "CertificationRequest.signatureAlgorithm.parameters",
                            tagClass: t.Class.UNIVERSAL,
                            optional: !0,
                            captureAsn1: "csrSignatureParams"
                        }]
                    }, {
                        name: "CertificationRequest.signature",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.BITSTRING,
                        constructed: !1,
                        captureBitStringValue: "csrSignature"
                    }]
                };
                function l(e, t) {
                    "string" == typeof t && (t = {
                        shortName: t
                    });
                    for (var n, r = null, a = 0; null === r && a < e.attributes.length; ++a)
                        n = e.attributes[a],
                        (t.type && t.type === n.type || t.name && t.name === n.name || t.shortName && t.shortName === n.shortName) && (r = n);
                    return r
                }
                n.RDNAttributesAsArray = function(e, n) {
                    for (var o, i, s, u = [], c = 0; c < e.value.length; ++c) {
                        o = e.value[c];
                        for (var l = 0; l < o.value.length; ++l)
                            s = {},
                            i = o.value[l],
                            s.type = t.derToOid(i.value[0].value),
                            s.value = i.value[1].value,
                            s.valueTagClass = i.value[1].type,
                            s.type in r && (s.name = r[s.type],
                            s.name in a && (s.shortName = a[s.name])),
                            n && (n.update(s.type),
                            n.update(s.value)),
                            u.push(s)
                    }
                    return u
                }
                ,
                n.CRIAttributesAsArray = function(e) {
                    for (var o = [], i = 0; i < e.length; ++i)
                        for (var s = e[i], u = t.derToOid(s.value[0].value), c = s.value[1].value, l = 0; l < c.length; ++l) {
                            var f = {};
                            if (f.type = u,
                            f.value = c[l].value,
                            f.valueTagClass = c[l].type,
                            f.type in r && (f.name = r[f.type],
                            f.name in a && (f.shortName = a[f.name])),
                            f.type === r.extensionRequest) {
                                f.extensions = [];
                                for (var p = 0; p < f.value.length; ++p)
                                    f.extensions.push(n.certificateExtensionFromAsn1(f.value[p]))
                            }
                            o.push(f)
                        }
                    return o
                }
                ;
                var f = function(e, n, a) {
                    var o = {};
                    if (e !== r["RSASSA-PSS"])
                        return o;
                    a && (o = {
                        hash: {
                            algorithmOid: r.sha1
                        },
                        mgf: {
                            algorithmOid: r.mgf1,
                            hash: {
                                algorithmOid: r.sha1
                            }
                        },
                        saltLength: 20
                    });
                    var i = {}
                      , u = [];
                    if (!t.validate(n, s, i, u)) {
                        var c = new Error("Cannot read RSASSA-PSS parameter block.");
                        throw c.errors = u,
                        c
                    }
                    return void 0 !== i.hashOid && (o.hash = o.hash || {},
                    o.hash.algorithmOid = t.derToOid(i.hashOid)),
                    void 0 !== i.maskGenOid && (o.mgf = o.mgf || {},
                    o.mgf.algorithmOid = t.derToOid(i.maskGenOid),
                    o.mgf.hash = o.mgf.hash || {},
                    o.mgf.hash.algorithmOid = t.derToOid(i.maskGenHashOid)),
                    void 0 !== i.saltLength && (o.saltLength = i.saltLength.charCodeAt(0)),
                    o
                };
                function p(e) {
                    for (var n, r, a = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, []), o = e.attributes, i = 0; i < o.length; ++i) {
                        var s = (n = o[i]).value
                          , u = t.Type.PRINTABLESTRING;
                        "valueTagClass"in n && (u = n.valueTagClass) === t.Type.UTF8 && (s = V.util.encodeUtf8(s)),
                        r = t.create(t.Class.UNIVERSAL, t.Type.SET, !0, [t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.type).getBytes()), t.create(t.Class.UNIVERSAL, u, !1, s)])]),
                        a.value.push(r)
                    }
                    return a
                }
                function d(e) {
                    for (var o, i = 0; i < e.length; ++i) {
                        if (void 0 === (o = e[i]).name && (o.type && o.type in n.oids ? o.name = n.oids[o.type] : o.shortName && o.shortName in a && (o.name = n.oids[a[o.shortName]])),
                        void 0 === o.type) {
                            if (!o.name || !(o.name in n.oids))
                                throw (u = new Error("Attribute type not specified.")).attribute = o,
                                u;
                            o.type = n.oids[o.name]
                        }
                        if (void 0 === o.shortName && o.name && o.name in a && (o.shortName = a[o.name]),
                        o.type === r.extensionRequest && (o.valueConstructed = !0,
                        o.valueTagClass = t.Type.SEQUENCE,
                        !o.value && o.extensions)) {
                            o.value = [];
                            for (var s = 0; s < o.extensions.length; ++s)
                                o.value.push(n.certificateExtensionToAsn1(h(o.extensions[s])))
                        }
                        var u;
                        if (void 0 === o.value)
                            throw (u = new Error("Attribute value not specified.")).attribute = o,
                            u
                    }
                }
                function h(e, a) {
                    if (a = a || {},
                    void 0 === e.name && e.id && e.id in n.oids && (e.name = n.oids[e.id]),
                    void 0 === e.id) {
                        if (!e.name || !(e.name in n.oids))
                            throw (x = new Error("Extension ID not specified.")).extension = e,
                            x;
                        e.id = n.oids[e.name]
                    }
                    if (void 0 !== e.value)
                        return e;
                    if ("keyUsage" === e.name) {
                        var o = 0
                          , i = 0
                          , s = 0;
                        e.digitalSignature && (i |= 128,
                        o = 7),
                        e.nonRepudiation && (i |= 64,
                        o = 6),
                        e.keyEncipherment && (i |= 32,
                        o = 5),
                        e.dataEncipherment && (i |= 16,
                        o = 4),
                        e.keyAgreement && (i |= 8,
                        o = 3),
                        e.keyCertSign && (i |= 4,
                        o = 2),
                        e.cRLSign && (i |= 2,
                        o = 1),
                        e.encipherOnly && (i |= 1,
                        o = 0),
                        e.decipherOnly && (s |= 128,
                        o = 7);
                        var u = String.fromCharCode(o);
                        0 !== s ? u += String.fromCharCode(i) + String.fromCharCode(s) : 0 !== i && (u += String.fromCharCode(i)),
                        e.value = t.create(t.Class.UNIVERSAL, t.Type.BITSTRING, !1, u)
                    } else if ("basicConstraints" === e.name)
                        e.value = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, []),
                        e.cA && e.value.value.push(t.create(t.Class.UNIVERSAL, t.Type.BOOLEAN, !1, String.fromCharCode(255))),
                        "pathLenConstraint"in e && e.value.value.push(t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, t.integerToDer(e.pathLenConstraint).getBytes()));
                    else if ("extKeyUsage" === e.name) {
                        e.value = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, []);
                        var c = e.value.value;
                        for (var l in e)
                            !0 === e[l] && (l in r ? c.push(t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(r[l]).getBytes())) : -1 !== l.indexOf(".") && c.push(t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(l).getBytes())))
                    } else if ("nsCertType" === e.name)
                        o = 0,
                        i = 0,
                        e.client && (i |= 128,
                        o = 7),
                        e.server && (i |= 64,
                        o = 6),
                        e.email && (i |= 32,
                        o = 5),
                        e.objsign && (i |= 16,
                        o = 4),
                        e.reserved && (i |= 8,
                        o = 3),
                        e.sslCA && (i |= 4,
                        o = 2),
                        e.emailCA && (i |= 2,
                        o = 1),
                        e.objCA && (i |= 1,
                        o = 0),
                        u = String.fromCharCode(o),
                        0 !== i && (u += String.fromCharCode(i)),
                        e.value = t.create(t.Class.UNIVERSAL, t.Type.BITSTRING, !1, u);
                    else if ("subjectAltName" === e.name || "issuerAltName" === e.name) {
                        e.value = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, []);
                        for (var f = 0; f < e.altNames.length; ++f) {
                            if (u = (g = e.altNames[f]).value,
                            7 === g.type && g.ip) {
                                if (null === (u = V.util.bytesFromIP(g.ip)))
                                    throw (x = new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.')).extension = e,
                                    x
                            } else
                                8 === g.type && (u = g.oid ? t.oidToDer(t.oidToDer(g.oid)) : t.oidToDer(u));
                            e.value.value.push(t.create(t.Class.CONTEXT_SPECIFIC, g.type, !1, u))
                        }
                    } else if ("nsComment" === e.name && a.cert) {
                        if (!/^[\x00-\x7F]*$/.test(e.comment) || e.comment.length < 1 || e.comment.length > 128)
                            throw new Error('Invalid "nsComment" content.');
                        e.value = t.create(t.Class.UNIVERSAL, t.Type.IA5STRING, !1, e.comment)
                    } else if ("subjectKeyIdentifier" === e.name && a.cert) {
                        var d = a.cert.generateSubjectKeyIdentifier();
                        e.subjectKeyIdentifier = d.toHex(),
                        e.value = t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, d.getBytes())
                    } else if ("authorityKeyIdentifier" === e.name && a.cert) {
                        if (e.value = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, []),
                        c = e.value.value,
                        e.keyIdentifier) {
                            var h = !0 === e.keyIdentifier ? a.cert.generateSubjectKeyIdentifier().getBytes() : e.keyIdentifier;
                            c.push(t.create(t.Class.CONTEXT_SPECIFIC, 0, !1, h))
                        }
                        if (e.authorityCertIssuer) {
                            var m = [t.create(t.Class.CONTEXT_SPECIFIC, 4, !0, [p(!0 === e.authorityCertIssuer ? a.cert.issuer : e.authorityCertIssuer)])];
                            c.push(t.create(t.Class.CONTEXT_SPECIFIC, 1, !0, m))
                        }
                        if (e.serialNumber) {
                            var v = V.util.hexToBytes(!0 === e.serialNumber ? a.cert.serialNumber : e.serialNumber);
                            c.push(t.create(t.Class.CONTEXT_SPECIFIC, 2, !1, v))
                        }
                    } else if ("cRLDistributionPoints" === e.name) {
                        e.value = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, []),
                        c = e.value.value;
                        var g, y = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, []), b = t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, []);
                        for (f = 0; f < e.altNames.length; ++f) {
                            if (u = (g = e.altNames[f]).value,
                            7 === g.type && g.ip) {
                                if (null === (u = V.util.bytesFromIP(g.ip)))
                                    throw (x = new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.')).extension = e,
                                    x
                            } else
                                8 === g.type && (u = g.oid ? t.oidToDer(t.oidToDer(g.oid)) : t.oidToDer(u));
                            b.value.push(t.create(t.Class.CONTEXT_SPECIFIC, g.type, !1, u))
                        }
                        y.value.push(t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [b])),
                        c.push(y)
                    }
                    var x;
                    if (void 0 === e.value)
                        throw (x = new Error("Extension value not specified.")).extension = e,
                        x;
                    return e
                }
                function m(e, n) {
                    switch (e) {
                    case r["RSASSA-PSS"]:
                        var a = [];
                        return void 0 !== n.hash.algorithmOid && a.push(t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.hash.algorithmOid).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.NULL, !1, "")])])),
                        void 0 !== n.mgf.algorithmOid && a.push(t.create(t.Class.CONTEXT_SPECIFIC, 1, !0, [t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.mgf.algorithmOid).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.mgf.hash.algorithmOid).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.NULL, !1, "")])])])),
                        void 0 !== n.saltLength && a.push(t.create(t.Class.CONTEXT_SPECIFIC, 2, !0, [t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, t.integerToDer(n.saltLength).getBytes())])),
                        t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, a);
                    default:
                        return t.create(t.Class.UNIVERSAL, t.Type.NULL, !1, "")
                    }
                }
                function v(e) {
                    var n = t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, []);
                    if (0 === e.attributes.length)
                        return n;
                    for (var r = e.attributes, a = 0; a < r.length; ++a) {
                        var o = r[a]
                          , i = o.value
                          , s = t.Type.UTF8;
                        "valueTagClass"in o && (s = o.valueTagClass),
                        s === t.Type.UTF8 && (i = V.util.encodeUtf8(i));
                        var u = !1;
                        "valueConstructed"in o && (u = o.valueConstructed);
                        var c = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(o.type).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SET, !0, [t.create(t.Class.UNIVERSAL, s, u, i)])]);
                        n.value.push(c)
                    }
                    return n
                }
                n.certificateFromPem = function(e, r, a) {
                    var o = V.pem.decode(e)[0];
                    if ("CERTIFICATE" !== o.type && "X509 CERTIFICATE" !== o.type && "TRUSTED CERTIFICATE" !== o.type) {
                        var i = new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');
                        throw i.headerType = o.type,
                        i
                    }
                    if (o.procType && "ENCRYPTED" === o.procType.type)
                        throw new Error("Could not convert certificate from PEM; PEM is encrypted.");
                    var s = t.fromDer(o.body, a);
                    return n.certificateFromAsn1(s, r)
                }
                ,
                n.certificateToPem = function(e, r) {
                    var a = {
                        type: "CERTIFICATE",
                        body: t.toDer(n.certificateToAsn1(e)).getBytes()
                    };
                    return V.pem.encode(a, {
                        maxline: r
                    })
                }
                ,
                n.publicKeyFromPem = function(e) {
                    var r = V.pem.decode(e)[0];
                    if ("PUBLIC KEY" !== r.type && "RSA PUBLIC KEY" !== r.type) {
                        var a = new Error('Could not convert public key from PEM; PEM header type is not "PUBLIC KEY" or "RSA PUBLIC KEY".');
                        throw a.headerType = r.type,
                        a
                    }
                    if (r.procType && "ENCRYPTED" === r.procType.type)
                        throw new Error("Could not convert public key from PEM; PEM is encrypted.");
                    var o = t.fromDer(r.body);
                    return n.publicKeyFromAsn1(o)
                }
                ,
                n.publicKeyToPem = function(e, r) {
                    var a = {
                        type: "PUBLIC KEY",
                        body: t.toDer(n.publicKeyToAsn1(e)).getBytes()
                    };
                    return V.pem.encode(a, {
                        maxline: r
                    })
                }
                ,
                n.publicKeyToRSAPublicKeyPem = function(e, r) {
                    var a = {
                        type: "RSA PUBLIC KEY",
                        body: t.toDer(n.publicKeyToRSAPublicKey(e)).getBytes()
                    };
                    return V.pem.encode(a, {
                        maxline: r
                    })
                }
                ,
                n.getPublicKeyFingerprint = function(e, r) {
                    var a, o = (r = r || {}).md || V.md.sha1.create();
                    switch (r.type || "RSAPublicKey") {
                    case "RSAPublicKey":
                        a = t.toDer(n.publicKeyToRSAPublicKey(e)).getBytes();
                        break;
                    case "SubjectPublicKeyInfo":
                        a = t.toDer(n.publicKeyToAsn1(e)).getBytes();
                        break;
                    default:
                        throw new Error('Unknown fingerprint type "' + r.type + '".')
                    }
                    o.start(),
                    o.update(a);
                    var i = o.digest();
                    if ("hex" === r.encoding) {
                        var s = i.toHex();
                        return r.delimiter ? s.match(/.{2}/g).join(r.delimiter) : s
                    }
                    if ("binary" === r.encoding)
                        return i.getBytes();
                    if (r.encoding)
                        throw new Error('Unknown encoding "' + r.encoding + '".');
                    return i
                }
                ,
                n.certificationRequestFromPem = function(e, r, a) {
                    var o = V.pem.decode(e)[0];
                    if ("CERTIFICATE REQUEST" !== o.type) {
                        var i = new Error('Could not convert certification request from PEM; PEM header type is not "CERTIFICATE REQUEST".');
                        throw i.headerType = o.type,
                        i
                    }
                    if (o.procType && "ENCRYPTED" === o.procType.type)
                        throw new Error("Could not convert certification request from PEM; PEM is encrypted.");
                    var s = t.fromDer(o.body, a);
                    return n.certificationRequestFromAsn1(s, r)
                }
                ,
                n.certificationRequestToPem = function(e, r) {
                    var a = {
                        type: "CERTIFICATE REQUEST",
                        body: t.toDer(n.certificationRequestToAsn1(e)).getBytes()
                    };
                    return V.pem.encode(a, {
                        maxline: r
                    })
                }
                ,
                n.createCertificate = function() {
                    var e = {
                        version: 2,
                        serialNumber: "00",
                        signatureOid: null,
                        signature: null,
                        siginfo: {}
                    };
                    return e.siginfo.algorithmOid = null,
                    e.validity = {},
                    e.validity.notBefore = new Date,
                    e.validity.notAfter = new Date,
                    e.issuer = {},
                    e.issuer.getField = function(t) {
                        return l(e.issuer, t)
                    }
                    ,
                    e.issuer.addField = function(t) {
                        d([t]),
                        e.issuer.attributes.push(t)
                    }
                    ,
                    e.issuer.attributes = [],
                    e.issuer.hash = null,
                    e.subject = {},
                    e.subject.getField = function(t) {
                        return l(e.subject, t)
                    }
                    ,
                    e.subject.addField = function(t) {
                        d([t]),
                        e.subject.attributes.push(t)
                    }
                    ,
                    e.subject.attributes = [],
                    e.subject.hash = null,
                    e.extensions = [],
                    e.publicKey = null,
                    e.md = null,
                    e.setSubject = function(t, n) {
                        d(t),
                        e.subject.attributes = t,
                        delete e.subject.uniqueId,
                        n && (e.subject.uniqueId = n),
                        e.subject.hash = null
                    }
                    ,
                    e.setIssuer = function(t, n) {
                        d(t),
                        e.issuer.attributes = t,
                        delete e.issuer.uniqueId,
                        n && (e.issuer.uniqueId = n),
                        e.issuer.hash = null
                    }
                    ,
                    e.setExtensions = function(t) {
                        for (var n = 0; n < t.length; ++n)
                            h(t[n], {
                                cert: e
                            });
                        e.extensions = t
                    }
                    ,
                    e.getExtension = function(t) {
                        "string" == typeof t && (t = {
                            name: t
                        });
                        for (var n, r = null, a = 0; null === r && a < e.extensions.length; ++a)
                            n = e.extensions[a],
                            (t.id && n.id === t.id || t.name && n.name === t.name) && (r = n);
                        return r
                    }
                    ,
                    e.sign = function(a, o) {
                        e.md = o || V.md.sha1.create();
                        var i = r[e.md.algorithm + "WithRSAEncryption"];
                        if (!i) {
                            var s = new Error("Could not compute certificate digest. Unknown message digest algorithm OID.");
                            throw s.algorithm = e.md.algorithm,
                            s
                        }
                        e.signatureOid = e.siginfo.algorithmOid = i,
                        e.tbsCertificate = n.getTBSCertificate(e);
                        var u = t.toDer(e.tbsCertificate);
                        e.md.update(u.getBytes()),
                        e.signature = a.sign(e.md)
                    }
                    ,
                    e.verify = function(a) {
                        var o = !1;
                        if (!e.issued(a)) {
                            var i = a.issuer
                              , s = e.subject;
                            throw (h = new Error("The parent certificate did not issue the given child certificate; the child certificate's issuer does not match the parent's subject.")).expectedIssuer = i.attributes,
                            h.actualIssuer = s.attributes,
                            h
                        }
                        var u = a.md;
                        if (null === u) {
                            if (a.signatureOid in r)
                                switch (r[a.signatureOid]) {
                                case "sha1WithRSAEncryption":
                                    u = V.md.sha1.create();
                                    break;
                                case "md5WithRSAEncryption":
                                    u = V.md.md5.create();
                                    break;
                                case "sha256WithRSAEncryption":
                                    u = V.md.sha256.create();
                                    break;
                                case "sha384WithRSAEncryption":
                                    u = V.md.sha384.create();
                                    break;
                                case "sha512WithRSAEncryption":
                                    u = V.md.sha512.create();
                                    break;
                                case "RSASSA-PSS":
                                    u = V.md.sha256.create()
                                }
                            if (null === u)
                                throw (h = new Error("Could not compute certificate digest. Unknown signature OID.")).signatureOid = a.signatureOid,
                                h;
                            var c = a.tbsCertificate || n.getTBSCertificate(a)
                              , l = t.toDer(c);
                            u.update(l.getBytes())
                        }
                        if (null !== u) {
                            var f;
                            switch (a.signatureOid) {
                            case r.sha1WithRSAEncryption:
                                f = void 0;
                                break;
                            case r["RSASSA-PSS"]:
                                var p, d, h;
                                if (void 0 === (p = r[a.signatureParameters.mgf.hash.algorithmOid]) || void 0 === V.md[p])
                                    throw (h = new Error("Unsupported MGF hash function.")).oid = a.signatureParameters.mgf.hash.algorithmOid,
                                    h.name = p,
                                    h;
                                if (void 0 === (d = r[a.signatureParameters.mgf.algorithmOid]) || void 0 === V.mgf[d])
                                    throw (h = new Error("Unsupported MGF function.")).oid = a.signatureParameters.mgf.algorithmOid,
                                    h.name = d,
                                    h;
                                if (d = V.mgf[d].create(V.md[p].create()),
                                void 0 === (p = r[a.signatureParameters.hash.algorithmOid]) || void 0 === V.md[p])
                                    throw {
                                        message: "Unsupported RSASSA-PSS hash function.",
                                        oid: a.signatureParameters.hash.algorithmOid,
                                        name: p
                                    };
                                f = V.pss.create(V.md[p].create(), d, a.signatureParameters.saltLength)
                            }
                            o = e.publicKey.verify(u.digest().getBytes(), a.signature, f)
                        }
                        return o
                    }
                    ,
                    e.isIssuer = function(t) {
                        var n = !1
                          , r = e.issuer
                          , a = t.subject;
                        if (r.hash && a.hash)
                            n = r.hash === a.hash;
                        else if (r.attributes.length === a.attributes.length) {
                            var o, i;
                            n = !0;
                            for (var s = 0; n && s < r.attributes.length; ++s)
                                o = r.attributes[s],
                                i = a.attributes[s],
                                o.type === i.type && o.value === i.value || (n = !1)
                        }
                        return n
                    }
                    ,
                    e.issued = function(t) {
                        return t.isIssuer(e)
                    }
                    ,
                    e.generateSubjectKeyIdentifier = function() {
                        return n.getPublicKeyFingerprint(e.publicKey, {
                            type: "RSAPublicKey"
                        })
                    }
                    ,
                    e.verifySubjectKeyIdentifier = function() {
                        for (var t = r.subjectKeyIdentifier, n = 0; n < e.extensions.length; ++n) {
                            var a = e.extensions[n];
                            if (a.id === t) {
                                var o = e.generateSubjectKeyIdentifier().getBytes();
                                return V.util.hexToBytes(a.subjectKeyIdentifier) === o
                            }
                        }
                        return !1
                    }
                    ,
                    e
                }
                ,
                n.certificateFromAsn1 = function(e, a) {
                    var o = {}
                      , s = [];
                    if (!t.validate(e, i, o, s))
                        throw (h = new Error("Cannot read X.509 certificate. ASN.1 object is not an X509v3 Certificate.")).errors = s,
                        h;
                    if (t.derToOid(o.publicKeyOid) !== n.oids.rsaEncryption)
                        throw new Error("Cannot read public key. OID is not RSA.");
                    var u = n.createCertificate();
                    u.version = o.certVersion ? o.certVersion.charCodeAt(0) : 0;
                    var c = V.util.createBuffer(o.certSerialNumber);
                    u.serialNumber = c.toHex(),
                    u.signatureOid = V.asn1.derToOid(o.certSignatureOid),
                    u.signatureParameters = f(u.signatureOid, o.certSignatureParams, !0),
                    u.siginfo.algorithmOid = V.asn1.derToOid(o.certinfoSignatureOid),
                    u.siginfo.parameters = f(u.siginfo.algorithmOid, o.certinfoSignatureParams, !1),
                    u.signature = o.certSignature;
                    var p = [];
                    if (void 0 !== o.certValidity1UTCTime && p.push(t.utcTimeToDate(o.certValidity1UTCTime)),
                    void 0 !== o.certValidity2GeneralizedTime && p.push(t.generalizedTimeToDate(o.certValidity2GeneralizedTime)),
                    void 0 !== o.certValidity3UTCTime && p.push(t.utcTimeToDate(o.certValidity3UTCTime)),
                    void 0 !== o.certValidity4GeneralizedTime && p.push(t.generalizedTimeToDate(o.certValidity4GeneralizedTime)),
                    p.length > 2)
                        throw new Error("Cannot read notBefore/notAfter validity times; more than two times were provided in the certificate.");
                    if (p.length < 2)
                        throw new Error("Cannot read notBefore/notAfter validity times; they were not provided as either UTCTime or GeneralizedTime.");
                    if (u.validity.notBefore = p[0],
                    u.validity.notAfter = p[1],
                    u.tbsCertificate = o.tbsCertificate,
                    a) {
                        var h;
                        if (u.md = null,
                        u.signatureOid in r)
                            switch (r[u.signatureOid]) {
                            case "sha1WithRSAEncryption":
                                u.md = V.md.sha1.create();
                                break;
                            case "md5WithRSAEncryption":
                                u.md = V.md.md5.create();
                                break;
                            case "sha256WithRSAEncryption":
                                u.md = V.md.sha256.create();
                                break;
                            case "sha384WithRSAEncryption":
                                u.md = V.md.sha384.create();
                                break;
                            case "sha512WithRSAEncryption":
                                u.md = V.md.sha512.create();
                                break;
                            case "RSASSA-PSS":
                                u.md = V.md.sha256.create()
                            }
                        if (null === u.md)
                            throw (h = new Error("Could not compute certificate digest. Unknown signature OID.")).signatureOid = u.signatureOid,
                            h;
                        var m = t.toDer(u.tbsCertificate);
                        u.md.update(m.getBytes())
                    }
                    var v = V.md.sha1.create();
                    u.issuer.getField = function(e) {
                        return l(u.issuer, e)
                    }
                    ,
                    u.issuer.addField = function(e) {
                        d([e]),
                        u.issuer.attributes.push(e)
                    }
                    ,
                    u.issuer.attributes = n.RDNAttributesAsArray(o.certIssuer, v),
                    o.certIssuerUniqueId && (u.issuer.uniqueId = o.certIssuerUniqueId),
                    u.issuer.hash = v.digest().toHex();
                    var g = V.md.sha1.create();
                    return u.subject.getField = function(e) {
                        return l(u.subject, e)
                    }
                    ,
                    u.subject.addField = function(e) {
                        d([e]),
                        u.subject.attributes.push(e)
                    }
                    ,
                    u.subject.attributes = n.RDNAttributesAsArray(o.certSubject, g),
                    o.certSubjectUniqueId && (u.subject.uniqueId = o.certSubjectUniqueId),
                    u.subject.hash = g.digest().toHex(),
                    o.certExtensions ? u.extensions = n.certificateExtensionsFromAsn1(o.certExtensions) : u.extensions = [],
                    u.publicKey = n.publicKeyFromAsn1(o.subjectPublicKeyInfo),
                    u
                }
                ,
                n.certificateExtensionsFromAsn1 = function(e) {
                    for (var t = [], r = 0; r < e.value.length; ++r)
                        for (var a = e.value[r], o = 0; o < a.value.length; ++o)
                            t.push(n.certificateExtensionFromAsn1(a.value[o]));
                    return t
                }
                ,
                n.certificateExtensionFromAsn1 = function(e) {
                    var n = {};
                    if (n.id = t.derToOid(e.value[0].value),
                    n.critical = !1,
                    e.value[1].type === t.Type.BOOLEAN ? (n.critical = 0 !== e.value[1].value.charCodeAt(0),
                    n.value = e.value[2].value) : n.value = e.value[1].value,
                    n.id in r)
                        if (n.name = r[n.id],
                        "keyUsage" === n.name) {
                            var a = 0
                              , o = 0;
                            (s = t.fromDer(n.value)).value.length > 1 && (a = s.value.charCodeAt(1),
                            o = s.value.length > 2 ? s.value.charCodeAt(2) : 0),
                            n.digitalSignature = 128 == (128 & a),
                            n.nonRepudiation = 64 == (64 & a),
                            n.keyEncipherment = 32 == (32 & a),
                            n.dataEncipherment = 16 == (16 & a),
                            n.keyAgreement = 8 == (8 & a),
                            n.keyCertSign = 4 == (4 & a),
                            n.cRLSign = 2 == (2 & a),
                            n.encipherOnly = 1 == (1 & a),
                            n.decipherOnly = 128 == (128 & o)
                        } else if ("basicConstraints" === n.name) {
                            (s = t.fromDer(n.value)).value.length > 0 && s.value[0].type === t.Type.BOOLEAN ? n.cA = 0 !== s.value[0].value.charCodeAt(0) : n.cA = !1;
                            var i = null;
                            s.value.length > 0 && s.value[0].type === t.Type.INTEGER ? i = s.value[0].value : s.value.length > 1 && (i = s.value[1].value),
                            null !== i && (n.pathLenConstraint = t.derToInteger(i))
                        } else if ("extKeyUsage" === n.name)
                            for (var s = t.fromDer(n.value), u = 0; u < s.value.length; ++u) {
                                var c = t.derToOid(s.value[u].value);
                                c in r ? n[r[c]] = !0 : n[c] = !0
                            }
                        else if ("nsCertType" === n.name)
                            a = 0,
                            (s = t.fromDer(n.value)).value.length > 1 && (a = s.value.charCodeAt(1)),
                            n.client = 128 == (128 & a),
                            n.server = 64 == (64 & a),
                            n.email = 32 == (32 & a),
                            n.objsign = 16 == (16 & a),
                            n.reserved = 8 == (8 & a),
                            n.sslCA = 4 == (4 & a),
                            n.emailCA = 2 == (2 & a),
                            n.objCA = 1 == (1 & a);
                        else if ("subjectAltName" === n.name || "issuerAltName" === n.name) {
                            var l;
                            n.altNames = [],
                            s = t.fromDer(n.value);
                            for (var f = 0; f < s.value.length; ++f) {
                                var p = {
                                    type: (l = s.value[f]).type,
                                    value: l.value
                                };
                                switch (n.altNames.push(p),
                                l.type) {
                                case 1:
                                case 2:
                                case 6:
                                    break;
                                case 7:
                                    p.ip = V.util.bytesToIP(l.value);
                                    break;
                                case 8:
                                    p.oid = t.derToOid(l.value)
                                }
                            }
                        } else
                            "subjectKeyIdentifier" === n.name && (s = t.fromDer(n.value),
                            n.subjectKeyIdentifier = V.util.bytesToHex(s.value));
                    return n
                }
                ,
                n.certificationRequestFromAsn1 = function(e, a) {
                    var o = {}
                      , i = [];
                    if (!t.validate(e, c, o, i))
                        throw (u = new Error("Cannot read PKCS#10 certificate request. ASN.1 object is not a PKCS#10 CertificationRequest.")).errors = i,
                        u;
                    if (t.derToOid(o.publicKeyOid) !== n.oids.rsaEncryption)
                        throw new Error("Cannot read public key. OID is not RSA.");
                    var s = n.createCertificationRequest();
                    if (s.version = o.csrVersion ? o.csrVersion.charCodeAt(0) : 0,
                    s.signatureOid = V.asn1.derToOid(o.csrSignatureOid),
                    s.signatureParameters = f(s.signatureOid, o.csrSignatureParams, !0),
                    s.siginfo.algorithmOid = V.asn1.derToOid(o.csrSignatureOid),
                    s.siginfo.parameters = f(s.siginfo.algorithmOid, o.csrSignatureParams, !1),
                    s.signature = o.csrSignature,
                    s.certificationRequestInfo = o.certificationRequestInfo,
                    a) {
                        var u;
                        if (s.md = null,
                        s.signatureOid in r)
                            switch (r[s.signatureOid]) {
                            case "sha1WithRSAEncryption":
                                s.md = V.md.sha1.create();
                                break;
                            case "md5WithRSAEncryption":
                                s.md = V.md.md5.create();
                                break;
                            case "sha256WithRSAEncryption":
                                s.md = V.md.sha256.create();
                                break;
                            case "sha384WithRSAEncryption":
                                s.md = V.md.sha384.create();
                                break;
                            case "sha512WithRSAEncryption":
                                s.md = V.md.sha512.create();
                                break;
                            case "RSASSA-PSS":
                                s.md = V.md.sha256.create()
                            }
                        if (null === s.md)
                            throw (u = new Error("Could not compute certification request digest. Unknown signature OID.")).signatureOid = s.signatureOid,
                            u;
                        var p = t.toDer(s.certificationRequestInfo);
                        s.md.update(p.getBytes())
                    }
                    var h = V.md.sha1.create();
                    return s.subject.getField = function(e) {
                        return l(s.subject, e)
                    }
                    ,
                    s.subject.addField = function(e) {
                        d([e]),
                        s.subject.attributes.push(e)
                    }
                    ,
                    s.subject.attributes = n.RDNAttributesAsArray(o.certificationRequestInfoSubject, h),
                    s.subject.hash = h.digest().toHex(),
                    s.publicKey = n.publicKeyFromAsn1(o.subjectPublicKeyInfo),
                    s.getAttribute = function(e) {
                        return l(s, e)
                    }
                    ,
                    s.addAttribute = function(e) {
                        d([e]),
                        s.attributes.push(e)
                    }
                    ,
                    s.attributes = n.CRIAttributesAsArray(o.certificationRequestInfoAttributes || []),
                    s
                }
                ,
                n.createCertificationRequest = function() {
                    var e = {
                        version: 0,
                        signatureOid: null,
                        signature: null,
                        siginfo: {}
                    };
                    return e.siginfo.algorithmOid = null,
                    e.subject = {},
                    e.subject.getField = function(t) {
                        return l(e.subject, t)
                    }
                    ,
                    e.subject.addField = function(t) {
                        d([t]),
                        e.subject.attributes.push(t)
                    }
                    ,
                    e.subject.attributes = [],
                    e.subject.hash = null,
                    e.publicKey = null,
                    e.attributes = [],
                    e.getAttribute = function(t) {
                        return l(e, t)
                    }
                    ,
                    e.addAttribute = function(t) {
                        d([t]),
                        e.attributes.push(t)
                    }
                    ,
                    e.md = null,
                    e.setSubject = function(t) {
                        d(t),
                        e.subject.attributes = t,
                        e.subject.hash = null
                    }
                    ,
                    e.setAttributes = function(t) {
                        d(t),
                        e.attributes = t
                    }
                    ,
                    e.sign = function(a, o) {
                        e.md = o || V.md.sha1.create();
                        var i = r[e.md.algorithm + "WithRSAEncryption"];
                        if (!i) {
                            var s = new Error("Could not compute certification request digest. Unknown message digest algorithm OID.");
                            throw s.algorithm = e.md.algorithm,
                            s
                        }
                        e.signatureOid = e.siginfo.algorithmOid = i,
                        e.certificationRequestInfo = n.getCertificationRequestInfo(e);
                        var u = t.toDer(e.certificationRequestInfo);
                        e.md.update(u.getBytes()),
                        e.signature = a.sign(e.md)
                    }
                    ,
                    e.verify = function() {
                        var a = !1
                          , o = e.md;
                        if (null === o) {
                            if (e.signatureOid in r)
                                switch (r[e.signatureOid]) {
                                case "sha1WithRSAEncryption":
                                    o = V.md.sha1.create();
                                    break;
                                case "md5WithRSAEncryption":
                                    o = V.md.md5.create();
                                    break;
                                case "sha256WithRSAEncryption":
                                    o = V.md.sha256.create();
                                    break;
                                case "sha384WithRSAEncryption":
                                    o = V.md.sha384.create();
                                    break;
                                case "sha512WithRSAEncryption":
                                    o = V.md.sha512.create();
                                    break;
                                case "RSASSA-PSS":
                                    o = V.md.sha256.create()
                                }
                            if (null === o)
                                throw (f = new Error("Could not compute certification request digest. Unknown signature OID.")).signatureOid = e.signatureOid,
                                f;
                            var i = e.certificationRequestInfo || n.getCertificationRequestInfo(e)
                              , s = t.toDer(i);
                            o.update(s.getBytes())
                        }
                        if (null !== o) {
                            var u;
                            switch (e.signatureOid) {
                            case r.sha1WithRSAEncryption:
                                break;
                            case r["RSASSA-PSS"]:
                                var c, l, f;
                                if (void 0 === (c = r[e.signatureParameters.mgf.hash.algorithmOid]) || void 0 === V.md[c])
                                    throw (f = new Error("Unsupported MGF hash function.")).oid = e.signatureParameters.mgf.hash.algorithmOid,
                                    f.name = c,
                                    f;
                                if (void 0 === (l = r[e.signatureParameters.mgf.algorithmOid]) || void 0 === V.mgf[l])
                                    throw (f = new Error("Unsupported MGF function.")).oid = e.signatureParameters.mgf.algorithmOid,
                                    f.name = l,
                                    f;
                                if (l = V.mgf[l].create(V.md[c].create()),
                                void 0 === (c = r[e.signatureParameters.hash.algorithmOid]) || void 0 === V.md[c])
                                    throw (f = new Error("Unsupported RSASSA-PSS hash function.")).oid = e.signatureParameters.hash.algorithmOid,
                                    f.name = c,
                                    f;
                                u = V.pss.create(V.md[c].create(), l, e.signatureParameters.saltLength)
                            }
                            a = e.publicKey.verify(o.digest().getBytes(), e.signature, u)
                        }
                        return a
                    }
                    ,
                    e
                }
                ;
                var g = new Date("1950-01-01T00:00:00Z")
                  , y = new Date("2050-01-01T00:00:00Z");
                function b(e) {
                    return e >= g && e < y ? t.create(t.Class.UNIVERSAL, t.Type.UTCTIME, !1, t.dateToUtcTime(e)) : t.create(t.Class.UNIVERSAL, t.Type.GENERALIZEDTIME, !1, t.dateToGeneralizedTime(e))
                }
                n.getTBSCertificate = function(e) {
                    var r = b(e.validity.notBefore)
                      , a = b(e.validity.notAfter)
                      , o = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, t.integerToDer(e.version).getBytes())]), t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, V.util.hexToBytes(e.serialNumber)), t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(e.siginfo.algorithmOid).getBytes()), m(e.siginfo.algorithmOid, e.siginfo.parameters)]), p(e.issuer), t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [r, a]), p(e.subject), n.publicKeyToAsn1(e.publicKey)]);
                    return e.issuer.uniqueId && o.value.push(t.create(t.Class.CONTEXT_SPECIFIC, 1, !0, [t.create(t.Class.UNIVERSAL, t.Type.BITSTRING, !1, String.fromCharCode(0) + e.issuer.uniqueId)])),
                    e.subject.uniqueId && o.value.push(t.create(t.Class.CONTEXT_SPECIFIC, 2, !0, [t.create(t.Class.UNIVERSAL, t.Type.BITSTRING, !1, String.fromCharCode(0) + e.subject.uniqueId)])),
                    e.extensions.length > 0 && o.value.push(n.certificateExtensionsToAsn1(e.extensions)),
                    o
                }
                ,
                n.getCertificationRequestInfo = function(e) {
                    return t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, t.integerToDer(e.version).getBytes()), p(e.subject), n.publicKeyToAsn1(e.publicKey), v(e)])
                }
                ,
                n.distinguishedNameToAsn1 = function(e) {
                    return p(e)
                }
                ,
                n.certificateToAsn1 = function(e) {
                    var r = e.tbsCertificate || n.getTBSCertificate(e);
                    return t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [r, t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(e.signatureOid).getBytes()), m(e.signatureOid, e.signatureParameters)]), t.create(t.Class.UNIVERSAL, t.Type.BITSTRING, !1, String.fromCharCode(0) + e.signature)])
                }
                ,
                n.certificateExtensionsToAsn1 = function(e) {
                    var r = t.create(t.Class.CONTEXT_SPECIFIC, 3, !0, [])
                      , a = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, []);
                    r.value.push(a);
                    for (var o = 0; o < e.length; ++o)
                        a.value.push(n.certificateExtensionToAsn1(e[o]));
                    return r
                }
                ,
                n.certificateExtensionToAsn1 = function(e) {
                    var n = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, []);
                    n.value.push(t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(e.id).getBytes())),
                    e.critical && n.value.push(t.create(t.Class.UNIVERSAL, t.Type.BOOLEAN, !1, String.fromCharCode(255)));
                    var r = e.value;
                    return "string" != typeof e.value && (r = t.toDer(r).getBytes()),
                    n.value.push(t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, r)),
                    n
                }
                ,
                n.certificationRequestToAsn1 = function(e) {
                    var r = e.certificationRequestInfo || n.getCertificationRequestInfo(e);
                    return t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [r, t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(e.signatureOid).getBytes()), m(e.signatureOid, e.signatureParameters)]), t.create(t.Class.UNIVERSAL, t.Type.BITSTRING, !1, String.fromCharCode(0) + e.signature)])
                }
                ,
                n.createCaStore = function(e) {
                    var r = {
                        certs: {}
                    };
                    function a(e) {
                        return o(e),
                        r.certs[e.hash] || null
                    }
                    function o(e) {
                        if (!e.hash) {
                            var t = V.md.sha1.create();
                            e.attributes = n.RDNAttributesAsArray(p(e), t),
                            e.hash = t.digest().toHex()
                        }
                    }
                    if (r.getIssuer = function(e) {
                        return a(e.issuer)
                    }
                    ,
                    r.addCertificate = function(e) {
                        if ("string" == typeof e && (e = V.pki.certificateFromPem(e)),
                        o(e.subject),
                        !r.hasCertificate(e))
                            if (e.subject.hash in r.certs) {
                                var t = r.certs[e.subject.hash];
                                V.util.isArray(t) || (t = [t]),
                                t.push(e),
                                r.certs[e.subject.hash] = t
                            } else
                                r.certs[e.subject.hash] = e
                    }
                    ,
                    r.hasCertificate = function(e) {
                        "string" == typeof e && (e = V.pki.certificateFromPem(e));
                        var r = a(e.subject);
                        if (!r)
                            return !1;
                        V.util.isArray(r) || (r = [r]);
                        for (var o = t.toDer(n.certificateToAsn1(e)).getBytes(), i = 0; i < r.length; ++i)
                            if (o === t.toDer(n.certificateToAsn1(r[i])).getBytes())
                                return !0;
                        return !1
                    }
                    ,
                    r.listAllCertificates = function() {
                        var e = [];
                        for (var t in r.certs)
                            if (r.certs.hasOwnProperty(t)) {
                                var n = r.certs[t];
                                if (V.util.isArray(n))
                                    for (var a = 0; a < n.length; ++a)
                                        e.push(n[a]);
                                else
                                    e.push(n)
                            }
                        return e
                    }
                    ,
                    r.removeCertificate = function(e) {
                        var i;
                        if ("string" == typeof e && (e = V.pki.certificateFromPem(e)),
                        o(e.subject),
                        !r.hasCertificate(e))
                            return null;
                        var s = a(e.subject);
                        if (!V.util.isArray(s))
                            return i = r.certs[e.subject.hash],
                            delete r.certs[e.subject.hash],
                            i;
                        for (var u = t.toDer(n.certificateToAsn1(e)).getBytes(), c = 0; c < s.length; ++c)
                            u === t.toDer(n.certificateToAsn1(s[c])).getBytes() && (i = s[c],
                            s.splice(c, 1));
                        return 0 === s.length && delete r.certs[e.subject.hash],
                        i
                    }
                    ,
                    e)
                        for (var i = 0; i < e.length; ++i) {
                            var s = e[i];
                            r.addCertificate(s)
                        }
                    return r
                }
                ,
                n.certificateError = {
                    bad_certificate: "forge.pki.BadCertificate",
                    unsupported_certificate: "forge.pki.UnsupportedCertificate",
                    certificate_revoked: "forge.pki.CertificateRevoked",
                    certificate_expired: "forge.pki.CertificateExpired",
                    certificate_unknown: "forge.pki.CertificateUnknown",
                    unknown_ca: "forge.pki.UnknownCertificateAuthority"
                },
                n.verifyCertificateChain = function(e, t, r) {
                    "function" == typeof r && (r = {
                        verify: r
                    }),
                    r = r || {};
                    var a = (t = t.slice(0)).slice(0)
                      , o = r.validityCheckDate;
                    void 0 === o && (o = new Date);
                    var i = !0
                      , s = null
                      , u = 0;
                    do {
                        var c = t.shift()
                          , l = null
                          , f = !1;
                        if (o && (o < c.validity.notBefore || o > c.validity.notAfter) && (s = {
                            message: "Certificate is not valid yet or has expired.",
                            error: n.certificateError.certificate_expired,
                            notBefore: c.validity.notBefore,
                            notAfter: c.validity.notAfter,
                            now: o
                        }),
                        null === s) {
                            if (null === (l = t[0] || e.getIssuer(c)) && c.isIssuer(c) && (f = !0,
                            l = c),
                            l) {
                                var p = l;
                                V.util.isArray(p) || (p = [p]);
                                for (var d = !1; !d && p.length > 0; ) {
                                    l = p.shift();
                                    try {
                                        d = l.verify(c)
                                    } catch (e) {}
                                }
                                d || (s = {
                                    message: "Certificate signature is invalid.",
                                    error: n.certificateError.bad_certificate
                                })
                            }
                            null !== s || l && !f || e.hasCertificate(c) || (s = {
                                message: "Certificate is not trusted.",
                                error: n.certificateError.unknown_ca
                            })
                        }
                        if (null === s && l && !c.isIssuer(l) && (s = {
                            message: "Certificate issuer is invalid.",
                            error: n.certificateError.bad_certificate
                        }),
                        null === s)
                            for (var h = {
                                keyUsage: !0,
                                basicConstraints: !0
                            }, m = 0; null === s && m < c.extensions.length; ++m) {
                                var v = c.extensions[m];
                                !v.critical || v.name in h || (s = {
                                    message: "Certificate has an unsupported critical extension.",
                                    error: n.certificateError.unsupported_certificate
                                })
                            }
                        if (null === s && (!i || 0 === t.length && (!l || f))) {
                            var g = c.getExtension("basicConstraints")
                              , y = c.getExtension("keyUsage");
                            null !== y && (y.keyCertSign && null !== g || (s = {
                                message: "Certificate keyUsage or basicConstraints conflict or indicate that the certificate is not a CA. If the certificate is the only one in the chain or isn't the first then the certificate must be a valid CA.",
                                error: n.certificateError.bad_certificate
                            })),
                            null !== s || null === g || g.cA || (s = {
                                message: "Certificate basicConstraints indicates the certificate is not a CA.",
                                error: n.certificateError.bad_certificate
                            }),
                            null === s && null !== y && "pathLenConstraint"in g && u - 1 > g.pathLenConstraint && (s = {
                                message: "Certificate basicConstraints pathLenConstraint violated.",
                                error: n.certificateError.bad_certificate
                            })
                        }
                        var b = null === s || s.error
                          , x = r.verify ? r.verify(b, u, a) : b;
                        if (!0 !== x)
                            throw !0 === b && (s = {
                                message: "The application rejected the certificate.",
                                error: n.certificateError.bad_certificate
                            }),
                            (x || 0 === x) && ("object" != typeof x || V.util.isArray(x) ? "string" == typeof x && (s.error = x) : (x.message && (s.message = x.message),
                            x.error && (s.error = x.error))),
                            s;
                        s = null,
                        i = !1,
                        ++u
                    } while (t.length > 0);return !0
                }
            }
            )),
            x((function(e) {
                var t = V.asn1
                  , n = V.pki
                  , r = e.exports = V.pkcs12 = V.pkcs12 || {}
                  , a = {
                    name: "ContentInfo",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "ContentInfo.contentType",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.OID,
                        constructed: !1,
                        capture: "contentType"
                    }, {
                        name: "ContentInfo.content",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        constructed: !0,
                        captureAsn1: "content"
                    }]
                }
                  , o = {
                    name: "PFX",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "PFX.version",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.INTEGER,
                        constructed: !1,
                        capture: "version"
                    }, a, {
                        name: "PFX.macData",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SEQUENCE,
                        constructed: !0,
                        optional: !0,
                        captureAsn1: "mac",
                        value: [{
                            name: "PFX.macData.mac",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.SEQUENCE,
                            constructed: !0,
                            value: [{
                                name: "PFX.macData.mac.digestAlgorithm",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.SEQUENCE,
                                constructed: !0,
                                value: [{
                                    name: "PFX.macData.mac.digestAlgorithm.algorithm",
                                    tagClass: t.Class.UNIVERSAL,
                                    type: t.Type.OID,
                                    constructed: !1,
                                    capture: "macAlgorithm"
                                }, {
                                    name: "PFX.macData.mac.digestAlgorithm.parameters",
                                    tagClass: t.Class.UNIVERSAL,
                                    captureAsn1: "macAlgorithmParameters"
                                }]
                            }, {
                                name: "PFX.macData.mac.digest",
                                tagClass: t.Class.UNIVERSAL,
                                type: t.Type.OCTETSTRING,
                                constructed: !1,
                                capture: "macDigest"
                            }]
                        }, {
                            name: "PFX.macData.macSalt",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.OCTETSTRING,
                            constructed: !1,
                            capture: "macSalt"
                        }, {
                            name: "PFX.macData.iterations",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Type.INTEGER,
                            constructed: !1,
                            optional: !0,
                            capture: "macIterations"
                        }]
                    }]
                }
                  , i = {
                    name: "SafeBag",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "SafeBag.bagId",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.OID,
                        constructed: !1,
                        capture: "bagId"
                    }, {
                        name: "SafeBag.bagValue",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        constructed: !0,
                        captureAsn1: "bagValue"
                    }, {
                        name: "SafeBag.bagAttributes",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SET,
                        constructed: !0,
                        optional: !0,
                        capture: "bagAttributes"
                    }]
                }
                  , s = {
                    name: "Attribute",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "Attribute.attrId",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.OID,
                        constructed: !1,
                        capture: "oid"
                    }, {
                        name: "Attribute.attrValues",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.SET,
                        constructed: !0,
                        capture: "values"
                    }]
                }
                  , u = {
                    name: "CertBag",
                    tagClass: t.Class.UNIVERSAL,
                    type: t.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "CertBag.certId",
                        tagClass: t.Class.UNIVERSAL,
                        type: t.Type.OID,
                        constructed: !1,
                        capture: "certId"
                    }, {
                        name: "CertBag.certValue",
                        tagClass: t.Class.CONTEXT_SPECIFIC,
                        constructed: !0,
                        value: [{
                            name: "CertBag.certValue[0]",
                            tagClass: t.Class.UNIVERSAL,
                            type: t.Class.OCTETSTRING,
                            constructed: !1,
                            capture: "cert"
                        }]
                    }]
                };
                function c(e, t, n, r) {
                    for (var a = [], o = 0; o < e.length; o++)
                        for (var i = 0; i < e[o].safeBags.length; i++) {
                            var s = e[o].safeBags[i];
                            void 0 !== r && s.type !== r || (null !== t ? void 0 !== s.attributes[t] && s.attributes[t].indexOf(n) >= 0 && a.push(s) : a.push(s))
                        }
                    return a
                }
                function l(e) {
                    if (e.composed || e.constructed) {
                        for (var t = V.util.createBuffer(), n = 0; n < e.value.length; ++n)
                            t.putBytes(e.value[n].value);
                        e.composed = e.constructed = !1,
                        e.value = t.getBytes()
                    }
                    return e
                }
                function f(e, r) {
                    var a = {}
                      , o = [];
                    if (!t.validate(e, V.pkcs7.asn1.encryptedDataValidator, a, o))
                        throw (i = new Error("Cannot read EncryptedContentInfo.")).errors = o,
                        i;
                    var i, s = t.derToOid(a.contentType);
                    if (s !== n.oids.data)
                        throw (i = new Error("PKCS#12 EncryptedContentInfo ContentType is not Data.")).oid = s,
                        i;
                    s = t.derToOid(a.encAlgorithm);
                    var u = n.pbe.getCipher(s, a.encParameter, r)
                      , c = l(a.encryptedContentAsn1)
                      , f = V.util.createBuffer(c.value);
                    if (u.update(f),
                    !u.finish())
                        throw new Error("Failed to decrypt PKCS#12 SafeContents.");
                    return u.output.getBytes()
                }
                function p(e, r, a) {
                    if (!r && 0 === e.length)
                        return [];
                    if ((e = t.fromDer(e, r)).tagClass !== t.Class.UNIVERSAL || e.type !== t.Type.SEQUENCE || !0 !== e.constructed)
                        throw new Error("PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.");
                    for (var o = [], s = 0; s < e.value.length; s++) {
                        var c = e.value[s]
                          , l = {}
                          , f = [];
                        if (!t.validate(c, i, l, f))
                            throw (g = new Error("Cannot read SafeBag.")).errors = f,
                            g;
                        var p, h, m = {
                            type: t.derToOid(l.bagId),
                            attributes: d(l.bagAttributes)
                        };
                        o.push(m);
                        var v = l.bagValue.value[0];
                        switch (m.type) {
                        case n.oids.pkcs8ShroudedKeyBag:
                            if (null === (v = n.decryptPrivateKeyInfo(v, a)))
                                throw new Error("Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?");
                        case n.oids.keyBag:
                            try {
                                m.key = n.privateKeyFromAsn1(v)
                            } catch (e) {
                                m.key = null,
                                m.asn1 = v
                            }
                            continue;
                        case n.oids.certBag:
                            p = u,
                            h = function() {
                                if (t.derToOid(l.certId) !== n.oids.x509Certificate) {
                                    var e = new Error("Unsupported certificate type, only X.509 supported.");
                                    throw e.oid = t.derToOid(l.certId),
                                    e
                                }
                                var a = t.fromDer(l.cert, r);
                                try {
                                    m.cert = n.certificateFromAsn1(a, !0)
                                } catch (e) {
                                    m.cert = null,
                                    m.asn1 = a
                                }
                            }
                            ;
                            break;
                        default:
                            var g;
                            throw (g = new Error("Unsupported PKCS#12 SafeBag type.")).oid = m.type,
                            g
                        }
                        if (void 0 !== p && !t.validate(v, p, l, f))
                            throw (g = new Error("Cannot read PKCS#12 " + p.name)).errors = f,
                            g;
                        h()
                    }
                    return o
                }
                function d(e) {
                    var r = {};
                    if (void 0 !== e)
                        for (var a = 0; a < e.length; ++a) {
                            var o = {}
                              , i = [];
                            if (!t.validate(e[a], s, o, i)) {
                                var u = new Error("Cannot read PKCS#12 BagAttribute.");
                                throw u.errors = i,
                                u
                            }
                            var c = t.derToOid(o.oid);
                            if (void 0 !== n.oids[c]) {
                                r[n.oids[c]] = [];
                                for (var l = 0; l < o.values.length; ++l)
                                    r[n.oids[c]].push(o.values[l].value)
                            }
                        }
                    return r
                }
                r.pkcs12FromAsn1 = function(e, i, s) {
                    "string" == typeof i ? (s = i,
                    i = !0) : void 0 === i && (i = !0);
                    var u = {};
                    if (!t.validate(e, o, u, []))
                        throw (d = new Error("Cannot read PKCS#12 PFX. ASN.1 object is not an PKCS#12 PFX.")).errors = d,
                        d;
                    var d, h = {
                        version: u.version.charCodeAt(0),
                        safeContents: [],
                        getBags: function(e) {
                            var t, n = {};
                            return "localKeyId"in e ? t = e.localKeyId : "localKeyIdHex"in e && (t = V.util.hexToBytes(e.localKeyIdHex)),
                            void 0 === t && !("friendlyName"in e) && "bagType"in e && (n[e.bagType] = c(h.safeContents, null, null, e.bagType)),
                            void 0 !== t && (n.localKeyId = c(h.safeContents, "localKeyId", t, e.bagType)),
                            "friendlyName"in e && (n.friendlyName = c(h.safeContents, "friendlyName", e.friendlyName, e.bagType)),
                            n
                        },
                        getBagsByFriendlyName: function(e, t) {
                            return c(h.safeContents, "friendlyName", e, t)
                        },
                        getBagsByLocalKeyId: function(e, t) {
                            return c(h.safeContents, "localKeyId", e, t)
                        }
                    };
                    if (3 !== u.version.charCodeAt(0))
                        throw (d = new Error("PKCS#12 PFX of version other than 3 not supported.")).version = u.version.charCodeAt(0),
                        d;
                    if (t.derToOid(u.contentType) !== n.oids.data)
                        throw (d = new Error("Only PKCS#12 PFX in password integrity mode supported.")).oid = t.derToOid(u.contentType),
                        d;
                    var m = u.content.value[0];
                    if (m.tagClass !== t.Class.UNIVERSAL || m.type !== t.Type.OCTETSTRING)
                        throw new Error("PKCS#12 authSafe content data is not an OCTET STRING.");
                    if (m = l(m),
                    u.mac) {
                        var v = null
                          , g = 0
                          , y = t.derToOid(u.macAlgorithm);
                        switch (y) {
                        case n.oids.sha1:
                            v = V.md.sha1.create(),
                            g = 20;
                            break;
                        case n.oids.sha256:
                            v = V.md.sha256.create(),
                            g = 32;
                            break;
                        case n.oids.sha384:
                            v = V.md.sha384.create(),
                            g = 48;
                            break;
                        case n.oids.sha512:
                            v = V.md.sha512.create(),
                            g = 64;
                            break;
                        case n.oids.md5:
                            v = V.md.md5.create(),
                            g = 16
                        }
                        if (null === v)
                            throw new Error("PKCS#12 uses unsupported MAC algorithm: " + y);
                        var b = new V.util.ByteBuffer(u.macSalt)
                          , x = "macIterations"in u ? parseInt(V.util.bytesToHex(u.macIterations), 16) : 1
                          , w = r.generateKey(s, b, 3, x, g, v)
                          , k = V.hmac.create();
                        if (k.start(v, w),
                        k.update(m.value),
                        k.getMac().getBytes() !== u.macDigest)
                            throw new Error("PKCS#12 MAC could not be verified. Invalid password?")
                    }
                    return function(e, r, o, i) {
                        if ((r = t.fromDer(r, o)).tagClass !== t.Class.UNIVERSAL || r.type !== t.Type.SEQUENCE || !0 !== r.constructed)
                            throw new Error("PKCS#12 AuthenticatedSafe expected to be a SEQUENCE OF ContentInfo");
                        for (var s = 0; s < r.value.length; s++) {
                            var u = r.value[s]
                              , c = {}
                              , d = [];
                            if (!t.validate(u, a, c, d))
                                throw (g = new Error("Cannot read ContentInfo.")).errors = d,
                                g;
                            var h = {
                                encrypted: !1
                            }
                              , m = null
                              , v = c.content.value[0];
                            switch (t.derToOid(c.contentType)) {
                            case n.oids.data:
                                if (v.tagClass !== t.Class.UNIVERSAL || v.type !== t.Type.OCTETSTRING)
                                    throw new Error("PKCS#12 SafeContents Data is not an OCTET STRING.");
                                m = l(v).value;
                                break;
                            case n.oids.encryptedData:
                                m = f(v, i),
                                h.encrypted = !0;
                                break;
                            default:
                                var g;
                                throw (g = new Error("Unsupported PKCS#12 contentType.")).contentType = t.derToOid(c.contentType),
                                g
                            }
                            h.safeBags = p(m, o, i),
                            e.safeContents.push(h)
                        }
                    }(h, m.value, i, s),
                    h
                }
                ,
                r.toPkcs12Asn1 = function(e, a, o, i) {
                    (i = i || {}).saltSize = i.saltSize || 8,
                    i.count = i.count || 2048,
                    i.algorithm = i.algorithm || i.encAlgorithm || "aes128",
                    "useMac"in i || (i.useMac = !0),
                    "localKeyId"in i || (i.localKeyId = null),
                    "generateLocalKeyId"in i || (i.generateLocalKeyId = !0);
                    var s, u = i.localKeyId;
                    if (null !== u)
                        u = V.util.hexToBytes(u);
                    else if (i.generateLocalKeyId)
                        if (a) {
                            var c = V.util.isArray(a) ? a[0] : a;
                            "string" == typeof c && (c = n.certificateFromPem(c)),
                            (I = V.md.sha1.create()).update(t.toDer(n.certificateToAsn1(c)).getBytes()),
                            u = I.digest().getBytes()
                        } else
                            u = V.random.getBytes(20);
                    var l = [];
                    null !== u && l.push(t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.oids.localKeyId).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SET, !0, [t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, u)])])),
                    "friendlyName"in i && l.push(t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.oids.friendlyName).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SET, !0, [t.create(t.Class.UNIVERSAL, t.Type.BMPSTRING, !1, i.friendlyName)])])),
                    l.length > 0 && (s = t.create(t.Class.UNIVERSAL, t.Type.SET, !0, l));
                    var f = []
                      , p = [];
                    null !== a && (p = V.util.isArray(a) ? a : [a]);
                    for (var d = [], h = 0; h < p.length; ++h) {
                        "string" == typeof (a = p[h]) && (a = n.certificateFromPem(a));
                        var m = 0 === h ? s : void 0
                          , v = n.certificateToAsn1(a)
                          , g = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.oids.certBag).getBytes()), t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.oids.x509Certificate).getBytes()), t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, t.toDer(v).getBytes())])])]), m]);
                        d.push(g)
                    }
                    if (d.length > 0) {
                        var y = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, d)
                          , b = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.oids.data).getBytes()), t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, t.toDer(y).getBytes())])]);
                        f.push(b)
                    }
                    var x = null;
                    if (null !== e) {
                        var w = n.wrapRsaPrivateKey(n.privateKeyToAsn1(e));
                        x = null === o ? t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.oids.keyBag).getBytes()), t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [w]), s]) : t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.oids.pkcs8ShroudedKeyBag).getBytes()), t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [n.encryptPrivateKeyInfo(w, o, i)]), s]);
                        var k = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [x])
                          , C = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.oids.data).getBytes()), t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, t.toDer(k).getBytes())])]);
                        f.push(C)
                    }
                    var E, S = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, f);
                    if (i.useMac) {
                        var I = V.md.sha1.create()
                          , T = new V.util.ByteBuffer(V.random.getBytes(i.saltSize))
                          , A = i.count
                          , N = (e = r.generateKey(o, T, 3, A, 20),
                        V.hmac.create());
                        N.start(I, e),
                        N.update(t.toDer(S).getBytes());
                        var _ = N.getMac();
                        E = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.oids.sha1).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.NULL, !1, "")]), t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, _.getBytes())]), t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, T.getBytes()), t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, t.integerToDer(A).getBytes())])
                    }
                    return t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, t.integerToDer(3).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.oids.data).getBytes()), t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, t.toDer(S).getBytes())])]), E])
                }
                ,
                r.generateKey = V.pbe.generatePkcs12Key
            }
            )),
            x((function(e) {
                var t = V.asn1
                  , n = e.exports = V.pki = V.pki || {};
                n.pemToDer = function(e) {
                    var t = V.pem.decode(e)[0];
                    if (t.procType && "ENCRYPTED" === t.procType.type)
                        throw new Error("Could not convert PEM to DER; PEM is encrypted.");
                    return V.util.createBuffer(t.body)
                }
                ,
                n.privateKeyFromPem = function(e) {
                    var r = V.pem.decode(e)[0];
                    if ("PRIVATE KEY" !== r.type && "RSA PRIVATE KEY" !== r.type) {
                        var a = new Error('Could not convert private key from PEM; PEM header type is not "PRIVATE KEY" or "RSA PRIVATE KEY".');
                        throw a.headerType = r.type,
                        a
                    }
                    if (r.procType && "ENCRYPTED" === r.procType.type)
                        throw new Error("Could not convert private key from PEM; PEM is encrypted.");
                    var o = t.fromDer(r.body);
                    return n.privateKeyFromAsn1(o)
                }
                ,
                n.privateKeyToPem = function(e, r) {
                    var a = {
                        type: "RSA PRIVATE KEY",
                        body: t.toDer(n.privateKeyToAsn1(e)).getBytes()
                    };
                    return V.pem.encode(a, {
                        maxline: r
                    })
                }
                ,
                n.privateKeyInfoToPem = function(e, n) {
                    var r = {
                        type: "PRIVATE KEY",
                        body: t.toDer(e).getBytes()
                    };
                    return V.pem.encode(r, {
                        maxline: n
                    })
                }
            }
            ));
            var Ct = function(e, t, n, r) {
                var a = V.util.createBuffer()
                  , o = e.length >> 1
                  , i = o + (1 & e.length)
                  , s = e.substr(0, i)
                  , u = e.substr(o, i)
                  , c = V.util.createBuffer()
                  , l = V.hmac.create();
                n = t + n;
                var f = Math.ceil(r / 16)
                  , p = Math.ceil(r / 20);
                l.start("MD5", s);
                var d = V.util.createBuffer();
                c.putBytes(n);
                for (var h = 0; h < f; ++h)
                    l.start(null, null),
                    l.update(c.getBytes()),
                    c.putBuffer(l.digest()),
                    l.start(null, null),
                    l.update(c.bytes() + n),
                    d.putBuffer(l.digest());
                l.start("SHA1", u);
                var m = V.util.createBuffer();
                for (c.clear(),
                c.putBytes(n),
                h = 0; h < p; ++h)
                    l.start(null, null),
                    l.update(c.getBytes()),
                    c.putBuffer(l.digest()),
                    l.start(null, null),
                    l.update(c.bytes() + n),
                    m.putBuffer(l.digest());
                return a.putBytes(V.util.xorBytes(d.getBytes(), m.getBytes(), r)),
                a
            }
              , Et = function(e, t, n) {
                var r = !1;
                try {
                    var a = e.deflate(t.fragment.getBytes());
                    t.fragment = V.util.createBuffer(a),
                    t.length = a.length,
                    r = !0
                } catch (e) {}
                return r
            }
              , St = function(e, t, n) {
                var r = !1;
                try {
                    var a = e.inflate(t.fragment.getBytes());
                    t.fragment = V.util.createBuffer(a),
                    t.length = a.length,
                    r = !0
                } catch (e) {}
                return r
            }
              , It = function(e, t) {
                var n = 0;
                switch (t) {
                case 1:
                    n = e.getByte();
                    break;
                case 2:
                    n = e.getInt16();
                    break;
                case 3:
                    n = e.getInt24();
                    break;
                case 4:
                    n = e.getInt32()
                }
                return V.util.createBuffer(e.getBytes(n))
            }
              , Tt = function(e, t, n) {
                e.putInt(n.length(), t << 3),
                e.putBuffer(n)
            }
              , At = {
                Versions: {
                    TLS_1_0: {
                        major: 3,
                        minor: 1
                    },
                    TLS_1_1: {
                        major: 3,
                        minor: 2
                    },
                    TLS_1_2: {
                        major: 3,
                        minor: 3
                    }
                }
            };
            At.SupportedVersions = [At.Versions.TLS_1_1, At.Versions.TLS_1_0],
            At.Version = At.SupportedVersions[0],
            At.MaxFragment = 15360,
            At.ConnectionEnd = {
                server: 0,
                client: 1
            },
            At.PRFAlgorithm = {
                tls_prf_sha256: 0
            },
            At.BulkCipherAlgorithm = {
                none: null,
                rc4: 0,
                des3: 1,
                aes: 2
            },
            At.CipherType = {
                stream: 0,
                block: 1,
                aead: 2
            },
            At.MACAlgorithm = {
                none: null,
                hmac_md5: 0,
                hmac_sha1: 1,
                hmac_sha256: 2,
                hmac_sha384: 3,
                hmac_sha512: 4
            },
            At.CompressionMethod = {
                none: 0,
                deflate: 1
            },
            At.ContentType = {
                change_cipher_spec: 20,
                alert: 21,
                handshake: 22,
                application_data: 23,
                heartbeat: 24
            },
            At.HandshakeType = {
                hello_request: 0,
                client_hello: 1,
                server_hello: 2,
                certificate: 11,
                server_key_exchange: 12,
                certificate_request: 13,
                server_hello_done: 14,
                certificate_verify: 15,
                client_key_exchange: 16,
                finished: 20
            },
            At.Alert = {},
            At.Alert.Level = {
                warning: 1,
                fatal: 2
            },
            At.Alert.Description = {
                close_notify: 0,
                unexpected_message: 10,
                bad_record_mac: 20,
                decryption_failed: 21,
                record_overflow: 22,
                decompression_failure: 30,
                handshake_failure: 40,
                bad_certificate: 42,
                unsupported_certificate: 43,
                certificate_revoked: 44,
                certificate_expired: 45,
                certificate_unknown: 46,
                illegal_parameter: 47,
                unknown_ca: 48,
                access_denied: 49,
                decode_error: 50,
                decrypt_error: 51,
                export_restriction: 60,
                protocol_version: 70,
                insufficient_security: 71,
                internal_error: 80,
                user_canceled: 90,
                no_renegotiation: 100
            },
            At.HeartbeatMessageType = {
                heartbeat_request: 1,
                heartbeat_response: 2
            },
            At.CipherSuites = {},
            At.getCipherSuite = function(e) {
                var t = null;
                for (var n in At.CipherSuites) {
                    var r = At.CipherSuites[n];
                    if (r.id[0] === e.charCodeAt(0) && r.id[1] === e.charCodeAt(1)) {
                        t = r;
                        break
                    }
                }
                return t
            }
            ,
            At.handleUnexpected = function(e, t) {
                !e.open && e.entity === At.ConnectionEnd.client || e.error(e, {
                    message: "Unexpected message. Received TLS record out of order.",
                    send: !0,
                    alert: {
                        level: At.Alert.Level.fatal,
                        description: At.Alert.Description.unexpected_message
                    }
                })
            }
            ,
            At.handleHelloRequest = function(e, t, n) {
                !e.handshaking && e.handshakes > 0 && (At.queue(e, At.createAlert(e, {
                    level: At.Alert.Level.warning,
                    description: At.Alert.Description.no_renegotiation
                })),
                At.flush(e)),
                e.process()
            }
            ,
            At.parseHelloMessage = function(e, t, n) {
                var r = null
                  , a = e.entity === At.ConnectionEnd.client;
                if (n < 38)
                    e.error(e, {
                        message: a ? "Invalid ServerHello message. Message too short." : "Invalid ClientHello message. Message too short.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.illegal_parameter
                        }
                    });
                else {
                    var o = t.fragment
                      , i = o.length();
                    if (r = {
                        version: {
                            major: o.getByte(),
                            minor: o.getByte()
                        },
                        random: V.util.createBuffer(o.getBytes(32)),
                        session_id: It(o, 1),
                        extensions: []
                    },
                    a ? (r.cipher_suite = o.getBytes(2),
                    r.compression_method = o.getByte()) : (r.cipher_suites = It(o, 2),
                    r.compression_methods = It(o, 1)),
                    (i = n - (i - o.length())) > 0) {
                        for (var s = It(o, 2); s.length() > 0; )
                            r.extensions.push({
                                type: [s.getByte(), s.getByte()],
                                data: It(s, 2)
                            });
                        if (!a)
                            for (var u = 0; u < r.extensions.length; ++u) {
                                var c = r.extensions[u];
                                if (0 === c.type[0] && 0 === c.type[1])
                                    for (var l = It(c.data, 2); l.length() > 0 && 0 === l.getByte(); )
                                        e.session.extensions.server_name.serverNameList.push(It(l, 2).getBytes())
                            }
                    }
                    if (e.session.version && (r.version.major !== e.session.version.major || r.version.minor !== e.session.version.minor))
                        return e.error(e, {
                            message: "TLS version change is disallowed during renegotiation.",
                            send: !0,
                            alert: {
                                level: At.Alert.Level.fatal,
                                description: At.Alert.Description.protocol_version
                            }
                        });
                    if (a)
                        e.session.cipherSuite = At.getCipherSuite(r.cipher_suite);
                    else
                        for (var f = V.util.createBuffer(r.cipher_suites.bytes()); f.length() > 0 && (e.session.cipherSuite = At.getCipherSuite(f.getBytes(2)),
                        null === e.session.cipherSuite); )
                            ;
                    if (null === e.session.cipherSuite)
                        return e.error(e, {
                            message: "No cipher suites in common.",
                            send: !0,
                            alert: {
                                level: At.Alert.Level.fatal,
                                description: At.Alert.Description.handshake_failure
                            },
                            cipherSuite: V.util.bytesToHex(r.cipher_suite)
                        });
                    e.session.compressionMethod = a ? r.compression_method : At.CompressionMethod.none
                }
                return r
            }
            ,
            At.createSecurityParameters = function(e, t) {
                var n = e.entity === At.ConnectionEnd.client
                  , r = t.random.bytes()
                  , a = n ? e.session.sp.client_random : r
                  , o = n ? r : At.createRandom().getBytes();
                e.session.sp = {
                    entity: e.entity,
                    prf_algorithm: At.PRFAlgorithm.tls_prf_sha256,
                    bulk_cipher_algorithm: null,
                    cipher_type: null,
                    enc_key_length: null,
                    block_length: null,
                    fixed_iv_length: null,
                    record_iv_length: null,
                    mac_algorithm: null,
                    mac_length: null,
                    mac_key_length: null,
                    compression_algorithm: e.session.compressionMethod,
                    pre_master_secret: null,
                    master_secret: null,
                    client_random: a,
                    server_random: o
                }
            }
            ,
            At.handleServerHello = function(e, t, n) {
                var r = At.parseHelloMessage(e, t, n);
                if (!e.fail) {
                    if (!(r.version.minor <= e.version.minor))
                        return e.error(e, {
                            message: "Incompatible TLS version.",
                            send: !0,
                            alert: {
                                level: At.Alert.Level.fatal,
                                description: At.Alert.Description.protocol_version
                            }
                        });
                    e.version.minor = r.version.minor,
                    e.session.version = e.version;
                    var a = r.session_id.bytes();
                    a.length > 0 && a === e.session.id ? (e.expect = Dt,
                    e.session.resuming = !0,
                    e.session.sp.server_random = r.random.bytes()) : (e.expect = Nt,
                    e.session.resuming = !1,
                    At.createSecurityParameters(e, r)),
                    e.session.id = a,
                    e.process()
                }
            }
            ,
            At.handleClientHello = function(e, t, n) {
                var r = At.parseHelloMessage(e, t, n);
                if (!e.fail) {
                    var a = r.session_id.bytes()
                      , o = null;
                    if (e.sessionCache && (null === (o = e.sessionCache.getSession(a)) ? a = "" : (o.version.major !== r.version.major || o.version.minor > r.version.minor) && (o = null,
                    a = "")),
                    0 === a.length && (a = V.random.getBytes(32)),
                    e.session.id = a,
                    e.session.clientHelloVersion = r.version,
                    e.session.sp = {},
                    o)
                        e.version = e.session.version = o.version,
                        e.session.sp = o.sp;
                    else {
                        for (var i, s = 1; s < At.SupportedVersions.length && !((i = At.SupportedVersions[s]).minor <= r.version.minor); ++s)
                            ;
                        e.version = {
                            major: i.major,
                            minor: i.minor
                        },
                        e.session.version = e.version
                    }
                    null !== o ? (e.expect = Vt,
                    e.session.resuming = !0,
                    e.session.sp.client_random = r.random.bytes()) : (e.expect = !1 !== e.verifyClient ? Pt : Lt,
                    e.session.resuming = !1,
                    At.createSecurityParameters(e, r)),
                    e.open = !0,
                    At.queue(e, At.createRecord(e, {
                        type: At.ContentType.handshake,
                        data: At.createServerHello(e)
                    })),
                    e.session.resuming ? (At.queue(e, At.createRecord(e, {
                        type: At.ContentType.change_cipher_spec,
                        data: At.createChangeCipherSpec()
                    })),
                    e.state.pending = At.createConnectionState(e),
                    e.state.current.write = e.state.pending.write,
                    At.queue(e, At.createRecord(e, {
                        type: At.ContentType.handshake,
                        data: At.createFinished(e)
                    }))) : (At.queue(e, At.createRecord(e, {
                        type: At.ContentType.handshake,
                        data: At.createCertificate(e)
                    })),
                    e.fail || (At.queue(e, At.createRecord(e, {
                        type: At.ContentType.handshake,
                        data: At.createServerKeyExchange(e)
                    })),
                    !1 !== e.verifyClient && At.queue(e, At.createRecord(e, {
                        type: At.ContentType.handshake,
                        data: At.createCertificateRequest(e)
                    })),
                    At.queue(e, At.createRecord(e, {
                        type: At.ContentType.handshake,
                        data: At.createServerHelloDone(e)
                    })))),
                    At.flush(e),
                    e.process()
                }
            }
            ,
            At.handleCertificate = function(e, t, n) {
                if (n < 3)
                    return e.error(e, {
                        message: "Invalid Certificate message. Message too short.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.illegal_parameter
                        }
                    });
                var r, a, o = t.fragment, i = {
                    certificate_list: It(o, 3)
                }, s = [];
                try {
                    for (; i.certificate_list.length() > 0; )
                        r = It(i.certificate_list, 3),
                        a = V.asn1.fromDer(r),
                        r = V.pki.certificateFromAsn1(a, !0),
                        s.push(r)
                } catch (t) {
                    return e.error(e, {
                        message: "Could not parse certificate list.",
                        cause: t,
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.bad_certificate
                        }
                    })
                }
                var u = e.entity === At.ConnectionEnd.client;
                !u && !0 !== e.verifyClient || 0 !== s.length ? 0 === s.length ? e.expect = u ? _t : Lt : (u ? e.session.serverCertificate = s[0] : e.session.clientCertificate = s[0],
                At.verifyCertificateChain(e, s) && (e.expect = u ? _t : Lt)) : e.error(e, {
                    message: u ? "No server certificate provided." : "No client certificate provided.",
                    send: !0,
                    alert: {
                        level: At.Alert.Level.fatal,
                        description: At.Alert.Description.illegal_parameter
                    }
                }),
                e.process()
            }
            ,
            At.handleServerKeyExchange = function(e, t, n) {
                if (n > 0)
                    return e.error(e, {
                        message: "Invalid key parameters. Only RSA is supported.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.unsupported_certificate
                        }
                    });
                e.expect = Rt,
                e.process()
            }
            ,
            At.handleClientKeyExchange = function(e, t, n) {
                if (n < 48)
                    return e.error(e, {
                        message: "Invalid key parameters. Only RSA is supported.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.unsupported_certificate
                        }
                    });
                var r = t.fragment
                  , a = {
                    enc_pre_master_secret: It(r, 2).getBytes()
                }
                  , o = null;
                if (e.getPrivateKey)
                    try {
                        o = e.getPrivateKey(e, e.session.serverCertificate),
                        o = V.pki.privateKeyFromPem(o)
                    } catch (t) {
                        e.error(e, {
                            message: "Could not get private key.",
                            cause: t,
                            send: !0,
                            alert: {
                                level: At.Alert.Level.fatal,
                                description: At.Alert.Description.internal_error
                            }
                        })
                    }
                if (null === o)
                    return e.error(e, {
                        message: "No private key set.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.internal_error
                        }
                    });
                try {
                    var i = e.session.sp;
                    i.pre_master_secret = o.decrypt(a.enc_pre_master_secret);
                    var s = e.session.clientHelloVersion;
                    if (s.major !== i.pre_master_secret.charCodeAt(0) || s.minor !== i.pre_master_secret.charCodeAt(1))
                        throw new Error("TLS version rollback attack detected.")
                } catch (e) {
                    i.pre_master_secret = V.random.getBytes(48)
                }
                e.expect = Vt,
                null !== e.session.clientCertificate && (e.expect = Ut),
                e.process()
            }
            ,
            At.handleCertificateRequest = function(e, t, n) {
                if (n < 3)
                    return e.error(e, {
                        message: "Invalid CertificateRequest. Message too short.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.illegal_parameter
                        }
                    });
                var r = t.fragment
                  , a = {
                    certificate_types: It(r, 1),
                    certificate_authorities: It(r, 2)
                };
                e.session.certificateRequest = a,
                e.expect = Ot,
                e.process()
            }
            ,
            At.handleCertificateVerify = function(e, t, n) {
                if (n < 2)
                    return e.error(e, {
                        message: "Invalid CertificateVerify. Message too short.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.illegal_parameter
                        }
                    });
                var r = t.fragment;
                r.read -= 4;
                var a = r.bytes();
                r.read += 4;
                var o = {
                    signature: It(r, 2).getBytes()
                }
                  , i = V.util.createBuffer();
                i.putBuffer(e.session.md5.digest()),
                i.putBuffer(e.session.sha1.digest()),
                i = i.getBytes();
                try {
                    if (!e.session.clientCertificate.publicKey.verify(i, o.signature, "NONE"))
                        throw new Error("CertificateVerify signature does not match.");
                    e.session.md5.update(a),
                    e.session.sha1.update(a)
                } catch (t) {
                    return e.error(e, {
                        message: "Bad signature in CertificateVerify.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.handshake_failure
                        }
                    })
                }
                e.expect = Vt,
                e.process()
            }
            ,
            At.handleServerHelloDone = function(e, t, n) {
                if (n > 0)
                    return e.error(e, {
                        message: "Invalid ServerHelloDone message. Invalid length.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.record_overflow
                        }
                    });
                if (null === e.serverCertificate) {
                    var r = {
                        message: "No server certificate provided. Not enough security.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.insufficient_security
                        }
                    }
                      , a = e.verify(e, r.alert.description, 0, []);
                    if (!0 !== a)
                        return (a || 0 === a) && ("object" != typeof a || V.util.isArray(a) ? "number" == typeof a && (r.alert.description = a) : (a.message && (r.message = a.message),
                        a.alert && (r.alert.description = a.alert))),
                        e.error(e, r)
                }
                null !== e.session.certificateRequest && (t = At.createRecord(e, {
                    type: At.ContentType.handshake,
                    data: At.createCertificate(e)
                }),
                At.queue(e, t)),
                t = At.createRecord(e, {
                    type: At.ContentType.handshake,
                    data: At.createClientKeyExchange(e)
                }),
                At.queue(e, t),
                e.expect = Mt;
                var o = function(e, t) {
                    null !== e.session.certificateRequest && null !== e.session.clientCertificate && At.queue(e, At.createRecord(e, {
                        type: At.ContentType.handshake,
                        data: At.createCertificateVerify(e, t)
                    })),
                    At.queue(e, At.createRecord(e, {
                        type: At.ContentType.change_cipher_spec,
                        data: At.createChangeCipherSpec()
                    })),
                    e.state.pending = At.createConnectionState(e),
                    e.state.current.write = e.state.pending.write,
                    At.queue(e, At.createRecord(e, {
                        type: At.ContentType.handshake,
                        data: At.createFinished(e)
                    })),
                    e.expect = Dt,
                    At.flush(e),
                    e.process()
                };
                if (null === e.session.certificateRequest || null === e.session.clientCertificate)
                    return o(e, null);
                At.getClientSignature(e, o)
            }
            ,
            At.handleChangeCipherSpec = function(e, t) {
                if (1 !== t.fragment.getByte())
                    return e.error(e, {
                        message: "Invalid ChangeCipherSpec message received.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.illegal_parameter
                        }
                    });
                var n = e.entity === At.ConnectionEnd.client;
                (e.session.resuming && n || !e.session.resuming && !n) && (e.state.pending = At.createConnectionState(e)),
                e.state.current.read = e.state.pending.read,
                (!e.session.resuming && n || e.session.resuming && !n) && (e.state.pending = null),
                e.expect = n ? Bt : zt,
                e.process()
            }
            ,
            At.handleFinished = function(e, t, n) {
                var r = t.fragment;
                r.read -= 4;
                var a = r.bytes();
                r.read += 4;
                var o = t.fragment.getBytes();
                (r = V.util.createBuffer()).putBuffer(e.session.md5.digest()),
                r.putBuffer(e.session.sha1.digest());
                var i = e.entity === At.ConnectionEnd.client
                  , s = i ? "server finished" : "client finished"
                  , u = e.session.sp;
                if ((r = Ct(u.master_secret, s, r.getBytes(), 12)).getBytes() !== o)
                    return e.error(e, {
                        message: "Invalid verify_data in Finished message.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.decrypt_error
                        }
                    });
                e.session.md5.update(a),
                e.session.sha1.update(a),
                (e.session.resuming && i || !e.session.resuming && !i) && (At.queue(e, At.createRecord(e, {
                    type: At.ContentType.change_cipher_spec,
                    data: At.createChangeCipherSpec()
                })),
                e.state.current.write = e.state.pending.write,
                e.state.pending = null,
                At.queue(e, At.createRecord(e, {
                    type: At.ContentType.handshake,
                    data: At.createFinished(e)
                }))),
                e.expect = i ? Ft : Wt,
                e.handshaking = !1,
                ++e.handshakes,
                e.peerCertificate = i ? e.session.serverCertificate : e.session.clientCertificate,
                At.flush(e),
                e.isConnected = !0,
                e.connected(e),
                e.process()
            }
            ,
            At.handleAlert = function(e, t) {
                var n, r = t.fragment, a = {
                    level: r.getByte(),
                    description: r.getByte()
                };
                switch (a.description) {
                case At.Alert.Description.close_notify:
                    n = "Connection closed.";
                    break;
                case At.Alert.Description.unexpected_message:
                    n = "Unexpected message.";
                    break;
                case At.Alert.Description.bad_record_mac:
                    n = "Bad record MAC.";
                    break;
                case At.Alert.Description.decryption_failed:
                    n = "Decryption failed.";
                    break;
                case At.Alert.Description.record_overflow:
                    n = "Record overflow.";
                    break;
                case At.Alert.Description.decompression_failure:
                    n = "Decompression failed.";
                    break;
                case At.Alert.Description.handshake_failure:
                    n = "Handshake failure.";
                    break;
                case At.Alert.Description.bad_certificate:
                    n = "Bad certificate.";
                    break;
                case At.Alert.Description.unsupported_certificate:
                    n = "Unsupported certificate.";
                    break;
                case At.Alert.Description.certificate_revoked:
                    n = "Certificate revoked.";
                    break;
                case At.Alert.Description.certificate_expired:
                    n = "Certificate expired.";
                    break;
                case At.Alert.Description.certificate_unknown:
                    n = "Certificate unknown.";
                    break;
                case At.Alert.Description.illegal_parameter:
                    n = "Illegal parameter.";
                    break;
                case At.Alert.Description.unknown_ca:
                    n = "Unknown certificate authority.";
                    break;
                case At.Alert.Description.access_denied:
                    n = "Access denied.";
                    break;
                case At.Alert.Description.decode_error:
                    n = "Decode error.";
                    break;
                case At.Alert.Description.decrypt_error:
                    n = "Decrypt error.";
                    break;
                case At.Alert.Description.export_restriction:
                    n = "Export restriction.";
                    break;
                case At.Alert.Description.protocol_version:
                    n = "Unsupported protocol version.";
                    break;
                case At.Alert.Description.insufficient_security:
                    n = "Insufficient security.";
                    break;
                case At.Alert.Description.internal_error:
                    n = "Internal error.";
                    break;
                case At.Alert.Description.user_canceled:
                    n = "User canceled.";
                    break;
                case At.Alert.Description.no_renegotiation:
                    n = "Renegotiation not supported.";
                    break;
                default:
                    n = "Unknown error."
                }
                if (a.description === At.Alert.Description.close_notify)
                    return e.close();
                e.error(e, {
                    message: n,
                    send: !1,
                    origin: e.entity === At.ConnectionEnd.client ? "server" : "client",
                    alert: a
                }),
                e.process()
            }
            ,
            At.handleHandshake = function(e, t) {
                var n = t.fragment
                  , r = n.getByte()
                  , a = n.getInt24();
                if (a > n.length())
                    return e.fragmented = t,
                    t.fragment = V.util.createBuffer(),
                    n.read -= 4,
                    e.process();
                e.fragmented = null,
                n.read -= 4;
                var o = n.bytes(a + 4);
                n.read += 4,
                r in rn[e.entity][e.expect] ? (e.entity !== At.ConnectionEnd.server || e.open || e.fail || (e.handshaking = !0,
                e.session = {
                    version: null,
                    extensions: {
                        server_name: {
                            serverNameList: []
                        }
                    },
                    cipherSuite: null,
                    compressionMethod: null,
                    serverCertificate: null,
                    clientCertificate: null,
                    md5: V.md.md5.create(),
                    sha1: V.md.sha1.create()
                }),
                r !== At.HandshakeType.hello_request && r !== At.HandshakeType.certificate_verify && r !== At.HandshakeType.finished && (e.session.md5.update(o),
                e.session.sha1.update(o)),
                rn[e.entity][e.expect][r](e, t, a)) : At.handleUnexpected(e, t)
            }
            ,
            At.handleApplicationData = function(e, t) {
                e.data.putBuffer(t.fragment),
                e.dataReady(e),
                e.process()
            }
            ,
            At.handleHeartbeat = function(e, t) {
                var n = t.fragment
                  , r = n.getByte()
                  , a = n.getInt16()
                  , o = n.getBytes(a);
                if (r === At.HeartbeatMessageType.heartbeat_request) {
                    if (e.handshaking || a > o.length)
                        return e.process();
                    At.queue(e, At.createRecord(e, {
                        type: At.ContentType.heartbeat,
                        data: At.createHeartbeat(At.HeartbeatMessageType.heartbeat_response, o)
                    })),
                    At.flush(e)
                } else if (r === At.HeartbeatMessageType.heartbeat_response) {
                    if (o !== e.expectedHeartbeatPayload)
                        return e.process();
                    e.heartbeatReceived && e.heartbeatReceived(e, V.util.createBuffer(o))
                }
                e.process()
            }
            ;
            var Nt = 1
              , _t = 2
              , Rt = 3
              , Ot = 4
              , Dt = 5
              , Bt = 6
              , Ft = 7
              , Mt = 8
              , Pt = 1
              , Lt = 2
              , Ut = 3
              , Vt = 4
              , zt = 5
              , Wt = 6
              , jt = At.handleUnexpected
              , Ht = At.handleChangeCipherSpec
              , Gt = At.handleAlert
              , Kt = At.handleHandshake
              , qt = At.handleApplicationData
              , Xt = At.handleHeartbeat
              , Qt = [];
            Qt[At.ConnectionEnd.client] = [[jt, Gt, Kt, jt, Xt], [jt, Gt, Kt, jt, Xt], [jt, Gt, Kt, jt, Xt], [jt, Gt, Kt, jt, Xt], [jt, Gt, Kt, jt, Xt], [Ht, Gt, jt, jt, Xt], [jt, Gt, Kt, jt, Xt], [jt, Gt, Kt, qt, Xt], [jt, Gt, Kt, jt, Xt]],
            Qt[At.ConnectionEnd.server] = [[jt, Gt, Kt, jt, Xt], [jt, Gt, Kt, jt, Xt], [jt, Gt, Kt, jt, Xt], [jt, Gt, Kt, jt, Xt], [Ht, Gt, jt, jt, Xt], [jt, Gt, Kt, jt, Xt], [jt, Gt, Kt, qt, Xt], [jt, Gt, Kt, jt, Xt]];
            var Yt = At.handleHelloRequest
              , $t = At.handleServerHello
              , Zt = At.handleCertificate
              , Jt = At.handleServerKeyExchange
              , en = At.handleCertificateRequest
              , tn = At.handleServerHelloDone
              , nn = At.handleFinished
              , rn = [];
            rn[At.ConnectionEnd.client] = [[jt, jt, $t, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt], [Yt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, Zt, Jt, en, tn, jt, jt, jt, jt, jt, jt], [Yt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, Jt, en, tn, jt, jt, jt, jt, jt, jt], [Yt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, en, tn, jt, jt, jt, jt, jt, jt], [Yt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, tn, jt, jt, jt, jt, jt, jt], [Yt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt], [Yt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, nn], [Yt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt], [Yt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt]];
            var an = At.handleClientHello
              , on = At.handleClientKeyExchange
              , sn = At.handleCertificateVerify;
            rn[At.ConnectionEnd.server] = [[jt, an, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt], [jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, Zt, jt, jt, jt, jt, jt, jt, jt, jt, jt], [jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, on, jt, jt, jt, jt], [jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, sn, jt, jt, jt, jt, jt], [jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt], [jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, nn], [jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt], [jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt, jt]],
            At.generateKeys = function(e, t) {
                var n = Ct
                  , r = t.client_random + t.server_random;
                e.session.resuming || (t.master_secret = n(t.pre_master_secret, "master secret", r, 48).bytes(),
                t.pre_master_secret = null),
                r = t.server_random + t.client_random;
                var a = 2 * t.mac_key_length + 2 * t.enc_key_length
                  , o = e.version.major === At.Versions.TLS_1_0.major && e.version.minor === At.Versions.TLS_1_0.minor;
                o && (a += 2 * t.fixed_iv_length);
                var i = n(t.master_secret, "key expansion", r, a)
                  , s = {
                    client_write_MAC_key: i.getBytes(t.mac_key_length),
                    server_write_MAC_key: i.getBytes(t.mac_key_length),
                    client_write_key: i.getBytes(t.enc_key_length),
                    server_write_key: i.getBytes(t.enc_key_length)
                };
                return o && (s.client_write_IV = i.getBytes(t.fixed_iv_length),
                s.server_write_IV = i.getBytes(t.fixed_iv_length)),
                s
            }
            ,
            At.createConnectionState = function(e) {
                var t = e.entity === At.ConnectionEnd.client
                  , n = function() {
                    var e = {
                        sequenceNumber: [0, 0],
                        macKey: null,
                        macLength: 0,
                        macFunction: null,
                        cipherState: null,
                        cipherFunction: function(e) {
                            return !0
                        },
                        compressionState: null,
                        compressFunction: function(e) {
                            return !0
                        },
                        updateSequenceNumber: function() {
                            4294967295 === e.sequenceNumber[1] ? (e.sequenceNumber[1] = 0,
                            ++e.sequenceNumber[0]) : ++e.sequenceNumber[1]
                        }
                    };
                    return e
                }
                  , r = {
                    read: n(),
                    write: n()
                };
                if (r.read.update = function(e, t) {
                    return r.read.cipherFunction(t, r.read) ? r.read.compressFunction(e, t, r.read) || e.error(e, {
                        message: "Could not decompress record.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.decompression_failure
                        }
                    }) : e.error(e, {
                        message: "Could not decrypt record or bad MAC.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.bad_record_mac
                        }
                    }),
                    !e.fail
                }
                ,
                r.write.update = function(e, t) {
                    return r.write.compressFunction(e, t, r.write) ? r.write.cipherFunction(t, r.write) || e.error(e, {
                        message: "Could not encrypt record.",
                        send: !1,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.internal_error
                        }
                    }) : e.error(e, {
                        message: "Could not compress record.",
                        send: !1,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.internal_error
                        }
                    }),
                    !e.fail
                }
                ,
                e.session) {
                    var a = e.session.sp;
                    switch (e.session.cipherSuite.initSecurityParameters(a),
                    a.keys = At.generateKeys(e, a),
                    r.read.macKey = t ? a.keys.server_write_MAC_key : a.keys.client_write_MAC_key,
                    r.write.macKey = t ? a.keys.client_write_MAC_key : a.keys.server_write_MAC_key,
                    e.session.cipherSuite.initConnectionState(r, e, a),
                    a.compression_algorithm) {
                    case At.CompressionMethod.none:
                        break;
                    case At.CompressionMethod.deflate:
                        r.read.compressFunction = St,
                        r.write.compressFunction = Et;
                        break;
                    default:
                        throw new Error("Unsupported compression algorithm.")
                    }
                }
                return r
            }
            ,
            At.createRandom = function() {
                var e = new Date
                  , t = +e + 6e4 * e.getTimezoneOffset()
                  , n = V.util.createBuffer();
                return n.putInt32(t),
                n.putBytes(V.random.getBytes(28)),
                n
            }
            ,
            At.createRecord = function(e, t) {
                return t.data ? {
                    type: t.type,
                    version: {
                        major: e.version.major,
                        minor: e.version.minor
                    },
                    length: t.data.length(),
                    fragment: t.data
                } : null
            }
            ,
            At.createAlert = function(e, t) {
                var n = V.util.createBuffer();
                return n.putByte(t.level),
                n.putByte(t.description),
                At.createRecord(e, {
                    type: At.ContentType.alert,
                    data: n
                })
            }
            ,
            At.createClientHello = function(e) {
                e.session.clientHelloVersion = {
                    major: e.version.major,
                    minor: e.version.minor
                };
                for (var t = V.util.createBuffer(), n = 0; n < e.cipherSuites.length; ++n) {
                    var r = e.cipherSuites[n];
                    t.putByte(r.id[0]),
                    t.putByte(r.id[1])
                }
                var a = t.length()
                  , o = V.util.createBuffer();
                o.putByte(At.CompressionMethod.none);
                var i = o.length()
                  , s = V.util.createBuffer();
                if (e.virtualHost) {
                    var u = V.util.createBuffer();
                    u.putByte(0),
                    u.putByte(0);
                    var c = V.util.createBuffer();
                    c.putByte(0),
                    Tt(c, 2, V.util.createBuffer(e.virtualHost));
                    var l = V.util.createBuffer();
                    Tt(l, 2, c),
                    Tt(u, 2, l),
                    s.putBuffer(u)
                }
                var f = s.length();
                f > 0 && (f += 2);
                var p = e.session.id
                  , d = p.length + 1 + 2 + 4 + 28 + 2 + a + 1 + i + f
                  , h = V.util.createBuffer();
                return h.putByte(At.HandshakeType.client_hello),
                h.putInt24(d),
                h.putByte(e.version.major),
                h.putByte(e.version.minor),
                h.putBytes(e.session.sp.client_random),
                Tt(h, 1, V.util.createBuffer(p)),
                Tt(h, 2, t),
                Tt(h, 1, o),
                f > 0 && Tt(h, 2, s),
                h
            }
            ,
            At.createServerHello = function(e) {
                var t = e.session.id
                  , n = t.length + 1 + 2 + 4 + 28 + 2 + 1
                  , r = V.util.createBuffer();
                return r.putByte(At.HandshakeType.server_hello),
                r.putInt24(n),
                r.putByte(e.version.major),
                r.putByte(e.version.minor),
                r.putBytes(e.session.sp.server_random),
                Tt(r, 1, V.util.createBuffer(t)),
                r.putByte(e.session.cipherSuite.id[0]),
                r.putByte(e.session.cipherSuite.id[1]),
                r.putByte(e.session.compressionMethod),
                r
            }
            ,
            At.createCertificate = function(e) {
                var t, n = e.entity === At.ConnectionEnd.client, r = null;
                e.getCertificate && (t = n ? e.session.certificateRequest : e.session.extensions.server_name.serverNameList,
                r = e.getCertificate(e, t));
                var a = V.util.createBuffer();
                if (null !== r)
                    try {
                        V.util.isArray(r) || (r = [r]);
                        for (var o = null, i = 0; i < r.length; ++i) {
                            var s = V.pem.decode(r[i])[0];
                            if ("CERTIFICATE" !== s.type && "X509 CERTIFICATE" !== s.type && "TRUSTED CERTIFICATE" !== s.type) {
                                var u = new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');
                                throw u.headerType = s.type,
                                u
                            }
                            if (s.procType && "ENCRYPTED" === s.procType.type)
                                throw new Error("Could not convert certificate from PEM; PEM is encrypted.");
                            var c = V.util.createBuffer(s.body);
                            null === o && (o = V.asn1.fromDer(c.bytes(), !1));
                            var l = V.util.createBuffer();
                            Tt(l, 3, c),
                            a.putBuffer(l)
                        }
                        r = V.pki.certificateFromAsn1(o),
                        n ? e.session.clientCertificate = r : e.session.serverCertificate = r
                    } catch (t) {
                        return e.error(e, {
                            message: "Could not send certificate list.",
                            cause: t,
                            send: !0,
                            alert: {
                                level: At.Alert.Level.fatal,
                                description: At.Alert.Description.bad_certificate
                            }
                        })
                    }
                var f = 3 + a.length()
                  , p = V.util.createBuffer();
                return p.putByte(At.HandshakeType.certificate),
                p.putInt24(f),
                Tt(p, 3, a),
                p
            }
            ,
            At.createClientKeyExchange = function(e) {
                var t = V.util.createBuffer();
                t.putByte(e.session.clientHelloVersion.major),
                t.putByte(e.session.clientHelloVersion.minor),
                t.putBytes(V.random.getBytes(46));
                var n = e.session.sp;
                n.pre_master_secret = t.getBytes();
                var r = (t = e.session.serverCertificate.publicKey.encrypt(n.pre_master_secret)).length + 2
                  , a = V.util.createBuffer();
                return a.putByte(At.HandshakeType.client_key_exchange),
                a.putInt24(r),
                a.putInt16(t.length),
                a.putBytes(t),
                a
            }
            ,
            At.createServerKeyExchange = function(e) {
                return V.util.createBuffer()
            }
            ,
            At.getClientSignature = function(e, t) {
                var n = V.util.createBuffer();
                n.putBuffer(e.session.md5.digest()),
                n.putBuffer(e.session.sha1.digest()),
                n = n.getBytes(),
                e.getSignature = e.getSignature || function(e, t, n) {
                    var r = null;
                    if (e.getPrivateKey)
                        try {
                            r = e.getPrivateKey(e, e.session.clientCertificate),
                            r = V.pki.privateKeyFromPem(r)
                        } catch (t) {
                            e.error(e, {
                                message: "Could not get private key.",
                                cause: t,
                                send: !0,
                                alert: {
                                    level: At.Alert.Level.fatal,
                                    description: At.Alert.Description.internal_error
                                }
                            })
                        }
                    null === r ? e.error(e, {
                        message: "No private key set.",
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: At.Alert.Description.internal_error
                        }
                    }) : t = r.sign(t, null),
                    n(e, t)
                }
                ,
                e.getSignature(e, n, t)
            }
            ,
            At.createCertificateVerify = function(e, t) {
                var n = t.length + 2
                  , r = V.util.createBuffer();
                return r.putByte(At.HandshakeType.certificate_verify),
                r.putInt24(n),
                r.putInt16(t.length),
                r.putBytes(t),
                r
            }
            ,
            At.createCertificateRequest = function(e) {
                var t = V.util.createBuffer();
                t.putByte(1);
                var n = V.util.createBuffer();
                for (var r in e.caStore.certs) {
                    var a = e.caStore.certs[r]
                      , o = V.pki.distinguishedNameToAsn1(a.subject)
                      , i = V.asn1.toDer(o);
                    n.putInt16(i.length()),
                    n.putBuffer(i)
                }
                var s = 1 + t.length() + 2 + n.length()
                  , u = V.util.createBuffer();
                return u.putByte(At.HandshakeType.certificate_request),
                u.putInt24(s),
                Tt(u, 1, t),
                Tt(u, 2, n),
                u
            }
            ,
            At.createServerHelloDone = function(e) {
                var t = V.util.createBuffer();
                return t.putByte(At.HandshakeType.server_hello_done),
                t.putInt24(0),
                t
            }
            ,
            At.createChangeCipherSpec = function() {
                var e = V.util.createBuffer();
                return e.putByte(1),
                e
            }
            ,
            At.createFinished = function(e) {
                var t = V.util.createBuffer();
                t.putBuffer(e.session.md5.digest()),
                t.putBuffer(e.session.sha1.digest());
                var n = e.entity === At.ConnectionEnd.client
                  , r = e.session.sp
                  , a = n ? "client finished" : "server finished";
                t = Ct(r.master_secret, a, t.getBytes(), 12);
                var o = V.util.createBuffer();
                return o.putByte(At.HandshakeType.finished),
                o.putInt24(t.length()),
                o.putBuffer(t),
                o
            }
            ,
            At.createHeartbeat = function(e, t, n) {
                void 0 === n && (n = t.length);
                var r = V.util.createBuffer();
                r.putByte(e),
                r.putInt16(n),
                r.putBytes(t);
                var a = r.length()
                  , o = Math.max(16, a - n - 3);
                return r.putBytes(V.random.getBytes(o)),
                r
            }
            ,
            At.queue = function(e, t) {
                if (t && (0 !== t.fragment.length() || t.type !== At.ContentType.handshake && t.type !== At.ContentType.alert && t.type !== At.ContentType.change_cipher_spec)) {
                    if (t.type === At.ContentType.handshake) {
                        var n = t.fragment.bytes();
                        e.session.md5.update(n),
                        e.session.sha1.update(n),
                        n = null
                    }
                    var r;
                    if (t.fragment.length() <= At.MaxFragment)
                        r = [t];
                    else {
                        r = [];
                        for (var a = t.fragment.bytes(); a.length > At.MaxFragment; )
                            r.push(At.createRecord(e, {
                                type: t.type,
                                data: V.util.createBuffer(a.slice(0, At.MaxFragment))
                            })),
                            a = a.slice(At.MaxFragment);
                        a.length > 0 && r.push(At.createRecord(e, {
                            type: t.type,
                            data: V.util.createBuffer(a)
                        }))
                    }
                    for (var o = 0; o < r.length && !e.fail; ++o) {
                        var i = r[o];
                        e.state.current.write.update(e, i) && e.records.push(i)
                    }
                }
            }
            ,
            At.flush = function(e) {
                for (var t = 0; t < e.records.length; ++t) {
                    var n = e.records[t];
                    e.tlsData.putByte(n.type),
                    e.tlsData.putByte(n.version.major),
                    e.tlsData.putByte(n.version.minor),
                    e.tlsData.putInt16(n.fragment.length()),
                    e.tlsData.putBuffer(e.records[t].fragment)
                }
                return e.records = [],
                e.tlsDataReady(e)
            }
            ;
            var un = function(e) {
                switch (e) {
                case !0:
                    return !0;
                case V.pki.certificateError.bad_certificate:
                    return At.Alert.Description.bad_certificate;
                case V.pki.certificateError.unsupported_certificate:
                    return At.Alert.Description.unsupported_certificate;
                case V.pki.certificateError.certificate_revoked:
                    return At.Alert.Description.certificate_revoked;
                case V.pki.certificateError.certificate_expired:
                    return At.Alert.Description.certificate_expired;
                case V.pki.certificateError.certificate_unknown:
                    return At.Alert.Description.certificate_unknown;
                case V.pki.certificateError.unknown_ca:
                    return At.Alert.Description.unknown_ca;
                default:
                    return At.Alert.Description.bad_certificate
                }
            };
            for (var cn in At.verifyCertificateChain = function(e, t) {
                try {
                    var n = {};
                    for (var r in e.verifyOptions)
                        n[r] = e.verifyOptions[r];
                    n.verify = function(t, n, r) {
                        un(t);
                        var a = e.verify(e, t, n, r);
                        if (!0 !== a) {
                            if ("object" == typeof a && !V.util.isArray(a)) {
                                var o = new Error("The application rejected the certificate.");
                                throw o.send = !0,
                                o.alert = {
                                    level: At.Alert.Level.fatal,
                                    description: At.Alert.Description.bad_certificate
                                },
                                a.message && (o.message = a.message),
                                a.alert && (o.alert.description = a.alert),
                                o
                            }
                            a !== t && (a = function(e) {
                                switch (e) {
                                case !0:
                                    return !0;
                                case At.Alert.Description.bad_certificate:
                                    return V.pki.certificateError.bad_certificate;
                                case At.Alert.Description.unsupported_certificate:
                                    return V.pki.certificateError.unsupported_certificate;
                                case At.Alert.Description.certificate_revoked:
                                    return V.pki.certificateError.certificate_revoked;
                                case At.Alert.Description.certificate_expired:
                                    return V.pki.certificateError.certificate_expired;
                                case At.Alert.Description.certificate_unknown:
                                    return V.pki.certificateError.certificate_unknown;
                                case At.Alert.Description.unknown_ca:
                                    return V.pki.certificateError.unknown_ca;
                                default:
                                    return V.pki.certificateError.bad_certificate
                                }
                            }(a))
                        }
                        return a
                    }
                    ,
                    V.pki.verifyCertificateChain(e.caStore, t, n)
                } catch (t) {
                    var a = t;
                    ("object" != typeof a || V.util.isArray(a)) && (a = {
                        send: !0,
                        alert: {
                            level: At.Alert.Level.fatal,
                            description: un(t)
                        }
                    }),
                    "send"in a || (a.send = !0),
                    "alert"in a || (a.alert = {
                        level: At.Alert.Level.fatal,
                        description: un(a.error)
                    }),
                    e.error(e, a)
                }
                return !e.fail
            }
            ,
            At.createSessionCache = function(e, t) {
                var n = null;
                if (e && e.getSession && e.setSession && e.order)
                    n = e;
                else {
                    for (var r in (n = {}).cache = e || {},
                    n.capacity = Math.max(t || 100, 1),
                    n.order = [],
                    e)
                        n.order.length <= t ? n.order.push(r) : delete e[r];
                    n.getSession = function(e) {
                        var t = null
                          , r = null;
                        if (e ? r = V.util.bytesToHex(e) : n.order.length > 0 && (r = n.order[0]),
                        null !== r && r in n.cache)
                            for (var a in t = n.cache[r],
                            delete n.cache[r],
                            n.order)
                                if (n.order[a] === r) {
                                    n.order.splice(a, 1);
                                    break
                                }
                        return t
                    }
                    ,
                    n.setSession = function(e, t) {
                        if (n.order.length === n.capacity) {
                            var r = n.order.shift();
                            delete n.cache[r]
                        }
                        r = V.util.bytesToHex(e),
                        n.order.push(r),
                        n.cache[r] = t
                    }
                }
                return n
            }
            ,
            At.createConnection = function(e) {
                var t = null;
                t = e.caStore ? V.util.isArray(e.caStore) ? V.pki.createCaStore(e.caStore) : e.caStore : V.pki.createCaStore();
                var n = e.cipherSuites || null;
                if (null === n)
                    for (var r in n = [],
                    At.CipherSuites)
                        n.push(At.CipherSuites[r]);
                var a = e.server ? At.ConnectionEnd.server : At.ConnectionEnd.client
                  , o = e.sessionCache ? At.createSessionCache(e.sessionCache) : null
                  , i = {
                    version: {
                        major: At.Version.major,
                        minor: At.Version.minor
                    },
                    entity: a,
                    sessionId: e.sessionId,
                    caStore: t,
                    sessionCache: o,
                    cipherSuites: n,
                    connected: e.connected,
                    virtualHost: e.virtualHost || null,
                    verifyClient: e.verifyClient || !1,
                    verify: e.verify || function(e, t, n, r) {
                        return t
                    }
                    ,
                    verifyOptions: e.verifyOptions || {},
                    getCertificate: e.getCertificate || null,
                    getPrivateKey: e.getPrivateKey || null,
                    getSignature: e.getSignature || null,
                    input: V.util.createBuffer(),
                    tlsData: V.util.createBuffer(),
                    data: V.util.createBuffer(),
                    tlsDataReady: e.tlsDataReady,
                    dataReady: e.dataReady,
                    heartbeatReceived: e.heartbeatReceived,
                    closed: e.closed,
                    error: function(t, n) {
                        n.origin = n.origin || (t.entity === At.ConnectionEnd.client ? "client" : "server"),
                        n.send && (At.queue(t, At.createAlert(t, n.alert)),
                        At.flush(t));
                        var r = !1 !== n.fatal;
                        r && (t.fail = !0),
                        e.error(t, n),
                        r && t.close(!1)
                    },
                    deflate: e.deflate || null,
                    inflate: e.inflate || null,
                    reset: function(e) {
                        i.version = {
                            major: At.Version.major,
                            minor: At.Version.minor
                        },
                        i.record = null,
                        i.session = null,
                        i.peerCertificate = null,
                        i.state = {
                            pending: null,
                            current: null
                        },
                        i.expect = (At.ConnectionEnd.client,
                        0),
                        i.fragmented = null,
                        i.records = [],
                        i.open = !1,
                        i.handshakes = 0,
                        i.handshaking = !1,
                        i.isConnected = !1,
                        i.fail = !(e || void 0 === e),
                        i.input.clear(),
                        i.tlsData.clear(),
                        i.data.clear(),
                        i.state.current = At.createConnectionState(i)
                    }
                };
                return i.reset(),
                i.handshake = function(e) {
                    if (i.entity !== At.ConnectionEnd.client)
                        i.error(i, {
                            message: "Cannot initiate handshake as a server.",
                            fatal: !1
                        });
                    else if (i.handshaking)
                        i.error(i, {
                            message: "Handshake already in progress.",
                            fatal: !1
                        });
                    else {
                        i.fail && !i.open && 0 === i.handshakes && (i.fail = !1),
                        i.handshaking = !0;
                        var t = null;
                        (e = e || "").length > 0 && (i.sessionCache && (t = i.sessionCache.getSession(e)),
                        null === t && (e = "")),
                        0 === e.length && i.sessionCache && null !== (t = i.sessionCache.getSession()) && (e = t.id),
                        i.session = {
                            id: e,
                            version: null,
                            cipherSuite: null,
                            compressionMethod: null,
                            serverCertificate: null,
                            certificateRequest: null,
                            clientCertificate: null,
                            sp: {},
                            md5: V.md.md5.create(),
                            sha1: V.md.sha1.create()
                        },
                        t && (i.version = t.version,
                        i.session.sp = t.sp),
                        i.session.sp.client_random = At.createRandom().getBytes(),
                        i.open = !0,
                        At.queue(i, At.createRecord(i, {
                            type: At.ContentType.handshake,
                            data: At.createClientHello(i)
                        })),
                        At.flush(i)
                    }
                }
                ,
                i.process = function(e) {
                    var t = 0;
                    return e && i.input.putBytes(e),
                    i.fail || (null !== i.record && i.record.ready && i.record.fragment.isEmpty() && (i.record = null),
                    null === i.record && (t = function(e) {
                        var t = 0
                          , n = e.input
                          , r = n.length();
                        if (r < 5)
                            t = 5 - r;
                        else {
                            e.record = {
                                type: n.getByte(),
                                version: {
                                    major: n.getByte(),
                                    minor: n.getByte()
                                },
                                length: n.getInt16(),
                                fragment: V.util.createBuffer(),
                                ready: !1
                            };
                            var a = e.record.version.major === e.version.major;
                            a && e.session && e.session.version && (a = e.record.version.minor === e.version.minor),
                            a || e.error(e, {
                                message: "Incompatible TLS version.",
                                send: !0,
                                alert: {
                                    level: At.Alert.Level.fatal,
                                    description: At.Alert.Description.protocol_version
                                }
                            })
                        }
                        return t
                    }(i)),
                    i.fail || null === i.record || i.record.ready || (t = function(e) {
                        var t = 0
                          , n = e.input
                          , r = n.length();
                        return r < e.record.length ? t = e.record.length - r : (e.record.fragment.putBytes(n.getBytes(e.record.length)),
                        n.compact(),
                        e.state.current.read.update(e, e.record) && (null !== e.fragmented && (e.fragmented.type === e.record.type ? (e.fragmented.fragment.putBuffer(e.record.fragment),
                        e.record = e.fragmented) : e.error(e, {
                            message: "Invalid fragmented record.",
                            send: !0,
                            alert: {
                                level: At.Alert.Level.fatal,
                                description: At.Alert.Description.unexpected_message
                            }
                        })),
                        e.record.ready = !0)),
                        t
                    }(i)),
                    !i.fail && null !== i.record && i.record.ready && function(e, t) {
                        var n = t.type - At.ContentType.change_cipher_spec
                          , r = Qt[e.entity][e.expect];
                        n in r ? r[n](e, t) : At.handleUnexpected(e, t)
                    }(i, i.record)),
                    t
                }
                ,
                i.prepare = function(e) {
                    return At.queue(i, At.createRecord(i, {
                        type: At.ContentType.application_data,
                        data: V.util.createBuffer(e)
                    })),
                    At.flush(i)
                }
                ,
                i.prepareHeartbeatRequest = function(e, t) {
                    return e instanceof V.util.ByteBuffer && (e = e.bytes()),
                    void 0 === t && (t = e.length),
                    i.expectedHeartbeatPayload = e,
                    At.queue(i, At.createRecord(i, {
                        type: At.ContentType.heartbeat,
                        data: At.createHeartbeat(At.HeartbeatMessageType.heartbeat_request, e, t)
                    })),
                    At.flush(i)
                }
                ,
                i.close = function(e) {
                    if (!i.fail && i.sessionCache && i.session) {
                        var t = {
                            id: i.session.id,
                            version: i.session.version,
                            sp: i.session.sp
                        };
                        t.sp.keys = null,
                        i.sessionCache.setSession(t.id, t)
                    }
                    i.open && (i.open = !1,
                    i.input.clear(),
                    (i.isConnected || i.handshaking) && (i.isConnected = i.handshaking = !1,
                    At.queue(i, At.createAlert(i, {
                        level: At.Alert.Level.warning,
                        description: At.Alert.Description.close_notify
                    })),
                    At.flush(i)),
                    i.closed(i)),
                    i.reset(e)
                }
                ,
                i
            }
            ,
            V.tls = V.tls || {},
            At)
                "function" != typeof At[cn] && (V.tls[cn] = At[cn]);
            V.tls.prf_tls1 = Ct,
            V.tls.hmac_sha1 = function(e, t, n) {
                var r = V.hmac.create();
                r.start("SHA1", e);
                var a = V.util.createBuffer();
                return a.putInt32(t[0]),
                a.putInt32(t[1]),
                a.putByte(n.type),
                a.putByte(n.version.major),
                a.putByte(n.version.minor),
                a.putInt16(n.length),
                a.putBytes(n.fragment.bytes()),
                r.update(a.getBytes()),
                r.digest().getBytes()
            }
            ,
            V.tls.createSessionCache = At.createSessionCache,
            V.tls.createConnection = At.createConnection,
            x((function(e) {
                var t = e.exports = V.tls;
                function n(e, n, a) {
                    var o = n.entity === V.tls.ConnectionEnd.client;
                    e.read.cipherState = {
                        init: !1,
                        cipher: V.cipher.createDecipher("AES-CBC", o ? a.keys.server_write_key : a.keys.client_write_key),
                        iv: o ? a.keys.server_write_IV : a.keys.client_write_IV
                    },
                    e.write.cipherState = {
                        init: !1,
                        cipher: V.cipher.createCipher("AES-CBC", o ? a.keys.client_write_key : a.keys.server_write_key),
                        iv: o ? a.keys.client_write_IV : a.keys.server_write_IV
                    },
                    e.read.cipherFunction = i,
                    e.write.cipherFunction = r,
                    e.read.macLength = e.write.macLength = a.mac_length,
                    e.read.macFunction = e.write.macFunction = t.hmac_sha1
                }
                function r(e, n) {
                    var r, o = !1, i = n.macFunction(n.macKey, n.sequenceNumber, e);
                    e.fragment.putBytes(i),
                    n.updateSequenceNumber(),
                    r = e.version.minor === t.Versions.TLS_1_0.minor ? n.cipherState.init ? null : n.cipherState.iv : V.random.getBytesSync(16),
                    n.cipherState.init = !0;
                    var s = n.cipherState.cipher;
                    return s.start({
                        iv: r
                    }),
                    e.version.minor >= t.Versions.TLS_1_1.minor && s.output.putBytes(r),
                    s.update(e.fragment),
                    s.finish(a) && (e.fragment = s.output,
                    e.length = e.fragment.length(),
                    o = !0),
                    o
                }
                function a(e, t, n) {
                    if (!n) {
                        var r = e - t.length() % e;
                        t.fillWithByte(r - 1, r)
                    }
                    return !0
                }
                function o(e, t, n) {
                    var r = !0;
                    if (n) {
                        for (var a = t.length(), o = t.last(), i = a - 1 - o; i < a - 1; ++i)
                            r = r && t.at(i) == o;
                        r && t.truncate(o + 1)
                    }
                    return r
                }
                function i(e, n) {
                    var r, a = !1;
                    r = e.version.minor === t.Versions.TLS_1_0.minor ? n.cipherState.init ? null : n.cipherState.iv : e.fragment.getBytes(16),
                    n.cipherState.init = !0;
                    var i = n.cipherState.cipher;
                    i.start({
                        iv: r
                    }),
                    i.update(e.fragment),
                    a = i.finish(o);
                    var s = n.macLength
                      , u = V.random.getBytesSync(s)
                      , c = i.output.length();
                    c >= s ? (e.fragment = i.output.getBytes(c - s),
                    u = i.output.getBytes(s)) : e.fragment = i.output.getBytes(),
                    e.fragment = V.util.createBuffer(e.fragment),
                    e.length = e.fragment.length();
                    var l = n.macFunction(n.macKey, n.sequenceNumber, e);
                    return n.updateSequenceNumber(),
                    function(e, t, n) {
                        var r = V.hmac.create();
                        return r.start("SHA1", e),
                        r.update(t),
                        t = r.digest().getBytes(),
                        r.start(null, null),
                        r.update(n),
                        t === (n = r.digest().getBytes())
                    }(n.macKey, u, l) && a
                }
                t.CipherSuites.TLS_RSA_WITH_AES_128_CBC_SHA = {
                    id: [0, 47],
                    name: "TLS_RSA_WITH_AES_128_CBC_SHA",
                    initSecurityParameters: function(e) {
                        e.bulk_cipher_algorithm = t.BulkCipherAlgorithm.aes,
                        e.cipher_type = t.CipherType.block,
                        e.enc_key_length = 16,
                        e.block_length = 16,
                        e.fixed_iv_length = 16,
                        e.record_iv_length = 16,
                        e.mac_algorithm = t.MACAlgorithm.hmac_sha1,
                        e.mac_length = 20,
                        e.mac_key_length = 20
                    },
                    initConnectionState: n
                },
                t.CipherSuites.TLS_RSA_WITH_AES_256_CBC_SHA = {
                    id: [0, 53],
                    name: "TLS_RSA_WITH_AES_256_CBC_SHA",
                    initSecurityParameters: function(e) {
                        e.bulk_cipher_algorithm = t.BulkCipherAlgorithm.aes,
                        e.cipher_type = t.CipherType.block,
                        e.enc_key_length = 32,
                        e.block_length = 16,
                        e.fixed_iv_length = 16,
                        e.record_iv_length = 16,
                        e.mac_algorithm = t.MACAlgorithm.hmac_sha1,
                        e.mac_length = 20,
                        e.mac_key_length = 20
                    },
                    initConnectionState: n
                }
            }
            )),
            V.debug = V.debug || {},
            V.debug.storage = {},
            V.debug.get = function(e, t) {
                var n;
                return void 0 === e ? n = V.debug.storage : e in V.debug.storage && (n = void 0 === t ? V.debug.storage[e] : V.debug.storage[e][t]),
                n
            }
            ,
            V.debug.set = function(e, t, n) {
                e in V.debug.storage || (V.debug.storage[e] = {}),
                V.debug.storage[e][t] = n
            }
            ,
            V.debug.clear = function(e, t) {
                void 0 === e ? V.debug.storage = {} : e in V.debug.storage && (void 0 === t ? delete V.debug.storage[e] : delete V.debug.storage[e][t])
            }
            ,
            x((function(e) {
                var t = e.exports = V.sha512 = V.sha512 || {};
                V.md.sha512 = V.md.algorithms.sha512 = t;
                var n = V.sha384 = V.sha512.sha384 = V.sha512.sha384 || {};
                n.create = function() {
                    return t.create("SHA-384")
                }
                ,
                V.md.sha384 = V.md.algorithms.sha384 = n,
                V.sha512.sha256 = V.sha512.sha256 || {
                    create: function() {
                        return t.create("SHA-512/256")
                    }
                },
                V.md["sha512/256"] = V.md.algorithms["sha512/256"] = V.sha512.sha256,
                V.sha512.sha224 = V.sha512.sha224 || {
                    create: function() {
                        return t.create("SHA-512/224")
                    }
                },
                V.md["sha512/224"] = V.md.algorithms["sha512/224"] = V.sha512.sha224,
                t.create = function(e) {
                    if (a || (r = String.fromCharCode(128),
                    r += V.util.fillString(String.fromCharCode(0), 128),
                    o = [[1116352408, 3609767458], [1899447441, 602891725], [3049323471, 3964484399], [3921009573, 2173295548], [961987163, 4081628472], [1508970993, 3053834265], [2453635748, 2937671579], [2870763221, 3664609560], [3624381080, 2734883394], [310598401, 1164996542], [607225278, 1323610764], [1426881987, 3590304994], [1925078388, 4068182383], [2162078206, 991336113], [2614888103, 633803317], [3248222580, 3479774868], [3835390401, 2666613458], [4022224774, 944711139], [264347078, 2341262773], [604807628, 2007800933], [770255983, 1495990901], [1249150122, 1856431235], [1555081692, 3175218132], [1996064986, 2198950837], [2554220882, 3999719339], [2821834349, 766784016], [2952996808, 2566594879], [3210313671, 3203337956], [3336571891, 1034457026], [3584528711, 2466948901], [113926993, 3758326383], [338241895, 168717936], [666307205, 1188179964], [773529912, 1546045734], [1294757372, 1522805485], [1396182291, 2643833823], [1695183700, 2343527390], [1986661051, 1014477480], [2177026350, 1206759142], [2456956037, 344077627], [2730485921, 1290863460], [2820302411, 3158454273], [3259730800, 3505952657], [3345764771, 106217008], [3516065817, 3606008344], [3600352804, 1432725776], [4094571909, 1467031594], [275423344, 851169720], [430227734, 3100823752], [506948616, 1363258195], [659060556, 3750685593], [883997877, 3785050280], [958139571, 3318307427], [1322822218, 3812723403], [1537002063, 2003034995], [1747873779, 3602036899], [1955562222, 1575990012], [2024104815, 1125592928], [2227730452, 2716904306], [2361852424, 442776044], [2428436474, 593698344], [2756734187, 3733110249], [3204031479, 2999351573], [3329325298, 3815920427], [3391569614, 3928383900], [3515267271, 566280711], [3940187606, 3454069534], [4118630271, 4000239992], [116418474, 1914138554], [174292421, 2731055270], [289380356, 3203993006], [460393269, 320620315], [685471733, 587496836], [852142971, 1086792851], [1017036298, 365543100], [1126000580, 2618297676], [1288033470, 3409855158], [1501505948, 4234509866], [1607167915, 987167468], [1816402316, 1246189591]],
                    (i = {})["SHA-512"] = [[1779033703, 4089235720], [3144134277, 2227873595], [1013904242, 4271175723], [2773480762, 1595750129], [1359893119, 2917565137], [2600822924, 725511199], [528734635, 4215389547], [1541459225, 327033209]],
                    i["SHA-384"] = [[3418070365, 3238371032], [1654270250, 914150663], [2438529370, 812702999], [355462360, 4144912697], [1731405415, 4290775857], [2394180231, 1750603025], [3675008525, 1694076839], [1203062813, 3204075428]],
                    i["SHA-512/256"] = [[573645204, 4230739756], [2673172387, 3360449730], [596883563, 1867755857], [2520282905, 1497426621], [2519219938, 2827943907], [3193839141, 1401305490], [721525244, 746961066], [246885852, 2177182882]],
                    i["SHA-512/224"] = [[2352822216, 424955298], [1944164710, 2312950998], [502970286, 855612546], [1738396948, 1479516111], [258812777, 2077511080], [2011393907, 79989058], [1067287976, 1780299464], [286451373, 2446758561]],
                    a = !0),
                    void 0 === e && (e = "SHA-512"),
                    !(e in i))
                        throw new Error("Invalid SHA-512 algorithm: " + e);
                    for (var t = i[e], n = null, u = V.util.createBuffer(), c = new Array(80), l = 0; l < 80; ++l)
                        c[l] = new Array(2);
                    var f = 64;
                    switch (e) {
                    case "SHA-384":
                        f = 48;
                        break;
                    case "SHA-512/256":
                        f = 32;
                        break;
                    case "SHA-512/224":
                        f = 28
                    }
                    var p = {
                        algorithm: e.replace("-", "").toLowerCase(),
                        blockLength: 128,
                        digestLength: f,
                        messageLength: 0,
                        fullMessageLength: null,
                        messageLengthSize: 16,
                        start: function() {
                            p.messageLength = 0,
                            p.fullMessageLength = p.messageLength128 = [];
                            for (var e = p.messageLengthSize / 4, r = 0; r < e; ++r)
                                p.fullMessageLength.push(0);
                            for (u = V.util.createBuffer(),
                            n = new Array(t.length),
                            r = 0; r < t.length; ++r)
                                n[r] = t[r].slice(0);
                            return p
                        }
                    };
                    return p.start(),
                    p.update = function(e, t) {
                        "utf8" === t && (e = V.util.encodeUtf8(e));
                        var r = e.length;
                        p.messageLength += r,
                        r = [r / 4294967296 >>> 0, r >>> 0];
                        for (var a = p.fullMessageLength.length - 1; a >= 0; --a)
                            p.fullMessageLength[a] += r[1],
                            r[1] = r[0] + (p.fullMessageLength[a] / 4294967296 >>> 0),
                            p.fullMessageLength[a] = p.fullMessageLength[a] >>> 0,
                            r[0] = r[1] / 4294967296 >>> 0;
                        return u.putBytes(e),
                        s(n, c, u),
                        (u.read > 2048 || 0 === u.length()) && u.compact(),
                        p
                    }
                    ,
                    p.digest = function() {
                        var t = V.util.createBuffer();
                        t.putBytes(u.bytes());
                        var a, o = p.fullMessageLength[p.fullMessageLength.length - 1] + p.messageLengthSize & p.blockLength - 1;
                        t.putBytes(r.substr(0, p.blockLength - o));
                        for (var i = 8 * p.fullMessageLength[0], l = 0; l < p.fullMessageLength.length - 1; ++l)
                            i += (a = 8 * p.fullMessageLength[l + 1]) / 4294967296 >>> 0,
                            t.putInt32(i >>> 0),
                            i = a >>> 0;
                        t.putInt32(i);
                        var f = new Array(n.length);
                        for (l = 0; l < n.length; ++l)
                            f[l] = n[l].slice(0);
                        s(f, c, t);
                        var d, h = V.util.createBuffer();
                        for (d = "SHA-512" === e ? f.length : "SHA-384" === e ? f.length - 2 : f.length - 4,
                        l = 0; l < d; ++l)
                            h.putInt32(f[l][0]),
                            l === d - 1 && "SHA-512/224" === e || h.putInt32(f[l][1]);
                        return h
                    }
                    ,
                    p
                }
                ;
                var r = null
                  , a = !1
                  , o = null
                  , i = null;
                function s(e, t, n) {
                    for (var r, a, i, s, u, c, l, f, p, d, h, m, v, g, y, b, x, w, k, C, E, S, I, T, A, N, _, R, O, D, B, F, M, P = n.length(); P >= 128; ) {
                        for (_ = 0; _ < 16; ++_)
                            t[_][0] = n.getInt32() >>> 0,
                            t[_][1] = n.getInt32() >>> 0;
                        for (; _ < 80; ++_)
                            r = (((R = (D = t[_ - 2])[0]) >>> 19 | (O = D[1]) << 13) ^ (O >>> 29 | R << 3) ^ R >>> 6) >>> 0,
                            a = ((R << 13 | O >>> 19) ^ (O << 3 | R >>> 29) ^ (R << 26 | O >>> 6)) >>> 0,
                            i = (((R = (F = t[_ - 15])[0]) >>> 1 | (O = F[1]) << 31) ^ (R >>> 8 | O << 24) ^ R >>> 7) >>> 0,
                            s = ((R << 31 | O >>> 1) ^ (R << 24 | O >>> 8) ^ (R << 25 | O >>> 7)) >>> 0,
                            B = t[_ - 7],
                            M = t[_ - 16],
                            O = a + B[1] + s + M[1],
                            t[_][0] = r + B[0] + i + M[0] + (O / 4294967296 >>> 0) >>> 0,
                            t[_][1] = O >>> 0;
                        for (h = e[0][0],
                        m = e[0][1],
                        v = e[1][0],
                        g = e[1][1],
                        y = e[2][0],
                        b = e[2][1],
                        x = e[3][0],
                        w = e[3][1],
                        k = e[4][0],
                        C = e[4][1],
                        E = e[5][0],
                        S = e[5][1],
                        I = e[6][0],
                        T = e[6][1],
                        A = e[7][0],
                        N = e[7][1],
                        _ = 0; _ < 80; ++_)
                            l = ((k >>> 14 | C << 18) ^ (k >>> 18 | C << 14) ^ (C >>> 9 | k << 23)) >>> 0,
                            f = (I ^ k & (E ^ I)) >>> 0,
                            u = ((h >>> 28 | m << 4) ^ (m >>> 2 | h << 30) ^ (m >>> 7 | h << 25)) >>> 0,
                            c = ((h << 4 | m >>> 28) ^ (m << 30 | h >>> 2) ^ (m << 25 | h >>> 7)) >>> 0,
                            p = (h & v | y & (h ^ v)) >>> 0,
                            d = (m & g | b & (m ^ g)) >>> 0,
                            O = N + (((k << 18 | C >>> 14) ^ (k << 14 | C >>> 18) ^ (C << 23 | k >>> 9)) >>> 0) + ((T ^ C & (S ^ T)) >>> 0) + o[_][1] + t[_][1],
                            r = A + l + f + o[_][0] + t[_][0] + (O / 4294967296 >>> 0) >>> 0,
                            a = O >>> 0,
                            i = u + p + ((O = c + d) / 4294967296 >>> 0) >>> 0,
                            s = O >>> 0,
                            A = I,
                            N = T,
                            I = E,
                            T = S,
                            E = k,
                            S = C,
                            k = x + r + ((O = w + a) / 4294967296 >>> 0) >>> 0,
                            C = O >>> 0,
                            x = y,
                            w = b,
                            y = v,
                            b = g,
                            v = h,
                            g = m,
                            h = r + i + ((O = a + s) / 4294967296 >>> 0) >>> 0,
                            m = O >>> 0;
                        O = e[0][1] + m,
                        e[0][0] = e[0][0] + h + (O / 4294967296 >>> 0) >>> 0,
                        e[0][1] = O >>> 0,
                        O = e[1][1] + g,
                        e[1][0] = e[1][0] + v + (O / 4294967296 >>> 0) >>> 0,
                        e[1][1] = O >>> 0,
                        O = e[2][1] + b,
                        e[2][0] = e[2][0] + y + (O / 4294967296 >>> 0) >>> 0,
                        e[2][1] = O >>> 0,
                        O = e[3][1] + w,
                        e[3][0] = e[3][0] + x + (O / 4294967296 >>> 0) >>> 0,
                        e[3][1] = O >>> 0,
                        O = e[4][1] + C,
                        e[4][0] = e[4][0] + k + (O / 4294967296 >>> 0) >>> 0,
                        e[4][1] = O >>> 0,
                        O = e[5][1] + S,
                        e[5][0] = e[5][0] + E + (O / 4294967296 >>> 0) >>> 0,
                        e[5][1] = O >>> 0,
                        O = e[6][1] + T,
                        e[6][0] = e[6][0] + I + (O / 4294967296 >>> 0) >>> 0,
                        e[6][1] = O >>> 0,
                        O = e[7][1] + N,
                        e[7][0] = e[7][0] + A + (O / 4294967296 >>> 0) >>> 0,
                        e[7][1] = O >>> 0,
                        P -= 128
                    }
                }
            }
            ));
            var ln = V.asn1
              , fn = {
                privateKeyValidator: {
                    name: "PrivateKeyInfo",
                    tagClass: ln.Class.UNIVERSAL,
                    type: ln.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "PrivateKeyInfo.version",
                        tagClass: ln.Class.UNIVERSAL,
                        type: ln.Type.INTEGER,
                        constructed: !1,
                        capture: "privateKeyVersion"
                    }, {
                        name: "PrivateKeyInfo.privateKeyAlgorithm",
                        tagClass: ln.Class.UNIVERSAL,
                        type: ln.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "AlgorithmIdentifier.algorithm",
                            tagClass: ln.Class.UNIVERSAL,
                            type: ln.Type.OID,
                            constructed: !1,
                            capture: "privateKeyOid"
                        }]
                    }, {
                        name: "PrivateKeyInfo",
                        tagClass: ln.Class.UNIVERSAL,
                        type: ln.Type.OCTETSTRING,
                        constructed: !1,
                        capture: "privateKey"
                    }]
                },
                publicKeyValidator: {
                    name: "SubjectPublicKeyInfo",
                    tagClass: ln.Class.UNIVERSAL,
                    type: ln.Type.SEQUENCE,
                    constructed: !0,
                    captureAsn1: "subjectPublicKeyInfo",
                    value: [{
                        name: "SubjectPublicKeyInfo.AlgorithmIdentifier",
                        tagClass: ln.Class.UNIVERSAL,
                        type: ln.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "AlgorithmIdentifier.algorithm",
                            tagClass: ln.Class.UNIVERSAL,
                            type: ln.Type.OID,
                            constructed: !1,
                            capture: "publicKeyOid"
                        }]
                    }, {
                        tagClass: ln.Class.UNIVERSAL,
                        type: ln.Type.BITSTRING,
                        constructed: !1,
                        composed: !0,
                        captureBitStringValue: "ed25519PublicKey"
                    }]
                }
            }
              , pn = fn.publicKeyValidator
              , dn = fn.privateKeyValidator;
            if (void 0 === hn)
                var hn = V.jsbn.BigInteger;
            var mn = V.util.ByteBuffer
              , vn = "undefined" == typeof Buffer ? Uint8Array : Buffer;
            V.pki = V.pki || {},
            V.pki.ed25519 = V.ed25519 = V.ed25519 || {};
            var gn = V.ed25519;
            function yn(e) {
                var t = e.message;
                if (t instanceof Uint8Array || t instanceof vn)
                    return t;
                var n = e.encoding;
                if (void 0 === t) {
                    if (!e.md)
                        throw new TypeError('"options.message" or "options.md" not specified.');
                    t = e.md.digest().getBytes(),
                    n = "binary"
                }
                if ("string" == typeof t && !n)
                    throw new TypeError('"options.encoding" must be "binary" or "utf8".');
                if ("string" == typeof t) {
                    if ("undefined" != typeof Buffer)
                        return Buffer.from(t, n);
                    t = new mn(t,n)
                } else if (!(t instanceof mn))
                    throw new TypeError('"options.message" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a string with "options.encoding" specifying its encoding.');
                for (var r = new vn(t.length()), a = 0; a < r.length; ++a)
                    r[a] = t.at(a);
                return r
            }
            gn.constants = {},
            gn.constants.PUBLIC_KEY_BYTE_LENGTH = 32,
            gn.constants.PRIVATE_KEY_BYTE_LENGTH = 64,
            gn.constants.SEED_BYTE_LENGTH = 32,
            gn.constants.SIGN_BYTE_LENGTH = 64,
            gn.constants.HASH_BYTE_LENGTH = 64,
            gn.generateKeyPair = function(e) {
                var t = (e = e || {}).seed;
                if (void 0 === t)
                    t = V.random.getBytesSync(gn.constants.SEED_BYTE_LENGTH);
                else if ("string" == typeof t) {
                    if (t.length !== gn.constants.SEED_BYTE_LENGTH)
                        throw new TypeError('"seed" must be ' + gn.constants.SEED_BYTE_LENGTH + " bytes in length.")
                } else if (!(t instanceof Uint8Array))
                    throw new TypeError('"seed" must be a node.js Buffer, Uint8Array, or a binary string.');
                t = yn({
                    message: t,
                    encoding: "binary"
                });
                for (var n = new vn(gn.constants.PUBLIC_KEY_BYTE_LENGTH), r = new vn(gn.constants.PRIVATE_KEY_BYTE_LENGTH), a = 0; a < 32; ++a)
                    r[a] = t[a];
                return function(e, t) {
                    var n, r = [Wn(), Wn(), Wn(), Wn()], a = Tn(t, 32);
                    for (a[0] &= 248,
                    a[31] &= 127,
                    a[31] |= 64,
                    Ln(r, a),
                    On(e, r),
                    n = 0; n < 32; ++n)
                        t[n + 32] = e[n]
                }(n, r),
                {
                    publicKey: n,
                    privateKey: r
                }
            }
            ,
            gn.privateKeyFromAsn1 = function(e) {
                var t = {}
                  , n = [];
                if (!V.asn1.validate(e, dn, t, n)) {
                    var r = new Error("Invalid Key.");
                    throw r.errors = n,
                    r
                }
                var a = V.asn1.derToOid(t.privateKeyOid)
                  , o = V.oids.EdDSA25519;
                if (a !== o)
                    throw new Error('Invalid OID "' + a + '"; OID must be "' + o + '".');
                var i = t.privateKey;
                return {
                    privateKeyBytes: yn({
                        message: V.asn1.fromDer(i).value,
                        encoding: "binary"
                    })
                }
            }
            ,
            gn.publicKeyFromAsn1 = function(e) {
                var t = {}
                  , n = [];
                if (!V.asn1.validate(e, pn, t, n)) {
                    var r = new Error("Invalid Key.");
                    throw r.errors = n,
                    r
                }
                var a = V.asn1.derToOid(t.publicKeyOid)
                  , o = V.oids.EdDSA25519;
                if (a !== o)
                    throw new Error('Invalid OID "' + a + '"; OID must be "' + o + '".');
                var i = t.ed25519PublicKey;
                if (i.length !== gn.constants.PUBLIC_KEY_BYTE_LENGTH)
                    throw new Error("Key length is invalid.");
                return yn({
                    message: i,
                    encoding: "binary"
                })
            }
            ,
            gn.publicKeyFromPrivateKey = function(e) {
                var t = yn({
                    message: (e = e || {}).privateKey,
                    encoding: "binary"
                });
                if (t.length !== gn.constants.PRIVATE_KEY_BYTE_LENGTH)
                    throw new TypeError('"options.privateKey" must have a byte length of ' + gn.constants.PRIVATE_KEY_BYTE_LENGTH);
                for (var n = new vn(gn.constants.PUBLIC_KEY_BYTE_LENGTH), r = 0; r < n.length; ++r)
                    n[r] = t[32 + r];
                return n
            }
            ,
            gn.sign = function(e) {
                var t = yn(e = e || {})
                  , n = yn({
                    message: e.privateKey,
                    encoding: "binary"
                });
                if (n.length === gn.constants.SEED_BYTE_LENGTH)
                    n = gn.generateKeyPair({
                        seed: n
                    }).privateKey;
                else if (n.length !== gn.constants.PRIVATE_KEY_BYTE_LENGTH)
                    throw new TypeError('"options.privateKey" must have a byte length of ' + gn.constants.SEED_BYTE_LENGTH + " or " + gn.constants.PRIVATE_KEY_BYTE_LENGTH);
                var r = new vn(gn.constants.SIGN_BYTE_LENGTH + t.length);
                !function(e, t, n, r) {
                    var a, o, i = new Float64Array(64), s = [Wn(), Wn(), Wn(), Wn()], u = Tn(r, 32);
                    for (u[0] &= 248,
                    u[31] &= 127,
                    u[31] |= 64,
                    a = 0; a < n; ++a)
                        e[64 + a] = t[a];
                    for (a = 0; a < 32; ++a)
                        e[32 + a] = u[32 + a];
                    var c = Tn(e.subarray(32), n + 32);
                    for (Nn(c),
                    Ln(s, c),
                    On(e, s),
                    a = 32; a < 64; ++a)
                        e[a] = r[a];
                    var l = Tn(e, n + 64);
                    for (Nn(l),
                    a = 32; a < 64; ++a)
                        i[a] = 0;
                    for (a = 0; a < 32; ++a)
                        i[a] = c[a];
                    for (a = 0; a < 32; ++a)
                        for (o = 0; o < 32; o++)
                            i[a + o] += l[a] * u[o];
                    An(e.subarray(32), i)
                }(r, t, t.length, n);
                for (var a = new vn(gn.constants.SIGN_BYTE_LENGTH), o = 0; o < a.length; ++o)
                    a[o] = r[o];
                return a
            }
            ,
            gn.verify = function(e) {
                var t = yn(e = e || {});
                if (void 0 === e.signature)
                    throw new TypeError('"options.signature" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a binary string.');
                var n = yn({
                    message: e.signature,
                    encoding: "binary"
                });
                if (n.length !== gn.constants.SIGN_BYTE_LENGTH)
                    throw new TypeError('"options.signature" must have a byte length of ' + gn.constants.SIGN_BYTE_LENGTH);
                var r = yn({
                    message: e.publicKey,
                    encoding: "binary"
                });
                if (r.length !== gn.constants.PUBLIC_KEY_BYTE_LENGTH)
                    throw new TypeError('"options.publicKey" must have a byte length of ' + gn.constants.PUBLIC_KEY_BYTE_LENGTH);
                var a, o = new vn(gn.constants.SIGN_BYTE_LENGTH + t.length), i = new vn(gn.constants.SIGN_BYTE_LENGTH + t.length);
                for (a = 0; a < gn.constants.SIGN_BYTE_LENGTH; ++a)
                    o[a] = n[a];
                for (a = 0; a < t.length; ++a)
                    o[a + gn.constants.SIGN_BYTE_LENGTH] = t[a];
                return function(e, t, n, r) {
                    var a, o = new vn(32), i = [Wn(), Wn(), Wn(), Wn()], s = [Wn(), Wn(), Wn(), Wn()];
                    if (n < 64)
                        return -1;
                    if (function(e, t) {
                        var n = Wn()
                          , r = Wn()
                          , a = Wn()
                          , o = Wn()
                          , i = Wn()
                          , s = Wn()
                          , u = Wn();
                        return Un(e[2], xn),
                        function(e, t) {
                            var n;
                            for (n = 0; n < 16; ++n)
                                e[n] = t[2 * n] + (t[2 * n + 1] << 8);
                            e[15] &= 32767
                        }(e[1], t),
                        Gn(a, e[1]),
                        Kn(o, a, wn),
                        Hn(a, a, e[2]),
                        jn(o, e[2], o),
                        Gn(i, o),
                        Gn(s, i),
                        Kn(u, s, i),
                        Kn(n, u, a),
                        Kn(n, n, o),
                        function(e, t) {
                            var n, r = Wn();
                            for (n = 0; n < 16; ++n)
                                r[n] = t[n];
                            for (n = 250; n >= 0; --n)
                                Gn(r, r),
                                1 !== n && Kn(r, r, t);
                            for (n = 0; n < 16; ++n)
                                e[n] = r[n]
                        }(n, n),
                        Kn(n, n, a),
                        Kn(n, n, o),
                        Kn(n, n, o),
                        Kn(e[0], n, o),
                        Gn(r, e[0]),
                        Kn(r, r, o),
                        Bn(r, a) && Kn(e[0], e[0], In),
                        Gn(r, e[0]),
                        Kn(r, r, o),
                        Bn(r, a) ? -1 : (Mn(e[0]) === t[31] >> 7 && Hn(e[0], bn, e[0]),
                        Kn(e[3], e[0], e[1]),
                        0)
                    }(s, r))
                        return -1;
                    for (a = 0; a < n; ++a)
                        e[a] = t[a];
                    for (a = 0; a < 32; ++a)
                        e[a + 32] = r[a];
                    var u = Tn(e, n);
                    if (Nn(u),
                    Pn(i, s, u),
                    Ln(s, t.subarray(32)),
                    _n(i, s),
                    On(o, i),
                    n -= 64,
                    Fn(t, 0, o, 0)) {
                        for (a = 0; a < n; ++a)
                            e[a] = 0;
                        return -1
                    }
                    for (a = 0; a < n; ++a)
                        e[a] = t[a + 64];
                    return n
                }(i, o, o.length, r) >= 0
            }
            ;
            var bn = Wn()
              , xn = Wn([1])
              , wn = Wn([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995])
              , kn = Wn([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222])
              , Cn = Wn([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553])
              , En = Wn([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214])
              , Sn = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16])
              , In = Wn([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
            function Tn(e, t) {
                var n = V.md.sha512.create()
                  , r = new mn(e);
                n.update(r.getBytes(t), "binary");
                var a = n.digest().getBytes();
                if ("undefined" != typeof Buffer)
                    return Buffer.from(a, "binary");
                for (var o = new vn(gn.constants.HASH_BYTE_LENGTH), i = 0; i < 64; ++i)
                    o[i] = a.charCodeAt(i);
                return o
            }
            function An(e, t) {
                var n, r, a, o;
                for (r = 63; r >= 32; --r) {
                    for (n = 0,
                    a = r - 32,
                    o = r - 12; a < o; ++a)
                        t[a] += n - 16 * t[r] * Sn[a - (r - 32)],
                        n = t[a] + 128 >> 8,
                        t[a] -= 256 * n;
                    t[a] += n,
                    t[r] = 0
                }
                for (n = 0,
                a = 0; a < 32; ++a)
                    t[a] += n - (t[31] >> 4) * Sn[a],
                    n = t[a] >> 8,
                    t[a] &= 255;
                for (a = 0; a < 32; ++a)
                    t[a] -= n * Sn[a];
                for (r = 0; r < 32; ++r)
                    t[r + 1] += t[r] >> 8,
                    e[r] = 255 & t[r]
            }
            function Nn(e) {
                for (var t = new Float64Array(64), n = 0; n < 64; ++n)
                    t[n] = e[n],
                    e[n] = 0;
                An(e, t)
            }
            function _n(e, t) {
                var n = Wn()
                  , r = Wn()
                  , a = Wn()
                  , o = Wn()
                  , i = Wn()
                  , s = Wn()
                  , u = Wn()
                  , c = Wn()
                  , l = Wn();
                Hn(n, e[1], e[0]),
                Hn(l, t[1], t[0]),
                Kn(n, n, l),
                jn(r, e[0], e[1]),
                jn(l, t[0], t[1]),
                Kn(r, r, l),
                Kn(a, e[3], t[3]),
                Kn(a, a, kn),
                Kn(o, e[2], t[2]),
                jn(o, o, o),
                Hn(i, r, n),
                Hn(s, o, a),
                jn(u, o, a),
                jn(c, r, n),
                Kn(e[0], i, s),
                Kn(e[1], c, u),
                Kn(e[2], u, s),
                Kn(e[3], i, c)
            }
            function Rn(e, t, n) {
                for (var r = 0; r < 4; ++r)
                    zn(e[r], t[r], n)
            }
            function On(e, t) {
                var n = Wn()
                  , r = Wn()
                  , a = Wn();
                !function(e, t) {
                    var n, r = Wn();
                    for (n = 0; n < 16; ++n)
                        r[n] = t[n];
                    for (n = 253; n >= 0; --n)
                        Gn(r, r),
                        2 !== n && 4 !== n && Kn(r, r, t);
                    for (n = 0; n < 16; ++n)
                        e[n] = r[n]
                }(a, t[2]),
                Kn(n, t[0], a),
                Kn(r, t[1], a),
                Dn(e, r),
                e[31] ^= Mn(n) << 7
            }
            function Dn(e, t) {
                var n, r, a, o = Wn(), i = Wn();
                for (n = 0; n < 16; ++n)
                    i[n] = t[n];
                for (Vn(i),
                Vn(i),
                Vn(i),
                r = 0; r < 2; ++r) {
                    for (o[0] = i[0] - 65517,
                    n = 1; n < 15; ++n)
                        o[n] = i[n] - 65535 - (o[n - 1] >> 16 & 1),
                        o[n - 1] &= 65535;
                    o[15] = i[15] - 32767 - (o[14] >> 16 & 1),
                    a = o[15] >> 16 & 1,
                    o[14] &= 65535,
                    zn(i, o, 1 - a)
                }
                for (n = 0; n < 16; n++)
                    e[2 * n] = 255 & i[n],
                    e[2 * n + 1] = i[n] >> 8
            }
            function Bn(e, t) {
                var n = new vn(32)
                  , r = new vn(32);
                return Dn(n, e),
                Dn(r, t),
                Fn(n, 0, r, 0)
            }
            function Fn(e, t, n, r) {
                return function(e, t, n, r, a) {
                    var o, i = 0;
                    for (o = 0; o < a; ++o)
                        i |= e[t + o] ^ n[r + o];
                    return (1 & i - 1 >>> 8) - 1
                }(e, t, n, r, 32)
            }
            function Mn(e) {
                var t = new vn(32);
                return Dn(t, e),
                1 & t[0]
            }
            function Pn(e, t, n) {
                var r, a;
                for (Un(e[0], bn),
                Un(e[1], xn),
                Un(e[2], xn),
                Un(e[3], bn),
                a = 255; a >= 0; --a)
                    Rn(e, t, r = n[a / 8 | 0] >> (7 & a) & 1),
                    _n(t, e),
                    _n(e, e),
                    Rn(e, t, r)
            }
            function Ln(e, t) {
                var n = [Wn(), Wn(), Wn(), Wn()];
                Un(n[0], Cn),
                Un(n[1], En),
                Un(n[2], xn),
                Kn(n[3], Cn, En),
                Pn(e, n, t)
            }
            function Un(e, t) {
                var n;
                for (n = 0; n < 16; n++)
                    e[n] = 0 | t[n]
            }
            function Vn(e) {
                var t, n, r = 1;
                for (t = 0; t < 16; ++t)
                    n = e[t] + r + 65535,
                    r = Math.floor(n / 65536),
                    e[t] = n - 65536 * r;
                e[0] += r - 1 + 37 * (r - 1)
            }
            function zn(e, t, n) {
                for (var r, a = ~(n - 1), o = 0; o < 16; ++o)
                    r = a & (e[o] ^ t[o]),
                    e[o] ^= r,
                    t[o] ^= r
            }
            function Wn(e) {
                var t, n = new Float64Array(16);
                if (e)
                    for (t = 0; t < e.length; ++t)
                        n[t] = e[t];
                return n
            }
            function jn(e, t, n) {
                for (var r = 0; r < 16; ++r)
                    e[r] = t[r] + n[r]
            }
            function Hn(e, t, n) {
                for (var r = 0; r < 16; ++r)
                    e[r] = t[r] - n[r]
            }
            function Gn(e, t) {
                Kn(e, t, t)
            }
            function Kn(e, t, n) {
                var r, a, o = 0, i = 0, s = 0, u = 0, c = 0, l = 0, f = 0, p = 0, d = 0, h = 0, m = 0, v = 0, g = 0, y = 0, b = 0, x = 0, w = 0, k = 0, C = 0, E = 0, S = 0, I = 0, T = 0, A = 0, N = 0, _ = 0, R = 0, O = 0, D = 0, B = 0, F = 0, M = n[0], P = n[1], L = n[2], U = n[3], V = n[4], z = n[5], W = n[6], j = n[7], H = n[8], G = n[9], K = n[10], q = n[11], X = n[12], Q = n[13], Y = n[14], $ = n[15];
                o += (r = t[0]) * M,
                i += r * P,
                s += r * L,
                u += r * U,
                c += r * V,
                l += r * z,
                f += r * W,
                p += r * j,
                d += r * H,
                h += r * G,
                m += r * K,
                v += r * q,
                g += r * X,
                y += r * Q,
                b += r * Y,
                x += r * $,
                i += (r = t[1]) * M,
                s += r * P,
                u += r * L,
                c += r * U,
                l += r * V,
                f += r * z,
                p += r * W,
                d += r * j,
                h += r * H,
                m += r * G,
                v += r * K,
                g += r * q,
                y += r * X,
                b += r * Q,
                x += r * Y,
                w += r * $,
                s += (r = t[2]) * M,
                u += r * P,
                c += r * L,
                l += r * U,
                f += r * V,
                p += r * z,
                d += r * W,
                h += r * j,
                m += r * H,
                v += r * G,
                g += r * K,
                y += r * q,
                b += r * X,
                x += r * Q,
                w += r * Y,
                k += r * $,
                u += (r = t[3]) * M,
                c += r * P,
                l += r * L,
                f += r * U,
                p += r * V,
                d += r * z,
                h += r * W,
                m += r * j,
                v += r * H,
                g += r * G,
                y += r * K,
                b += r * q,
                x += r * X,
                w += r * Q,
                k += r * Y,
                C += r * $,
                c += (r = t[4]) * M,
                l += r * P,
                f += r * L,
                p += r * U,
                d += r * V,
                h += r * z,
                m += r * W,
                v += r * j,
                g += r * H,
                y += r * G,
                b += r * K,
                x += r * q,
                w += r * X,
                k += r * Q,
                C += r * Y,
                E += r * $,
                l += (r = t[5]) * M,
                f += r * P,
                p += r * L,
                d += r * U,
                h += r * V,
                m += r * z,
                v += r * W,
                g += r * j,
                y += r * H,
                b += r * G,
                x += r * K,
                w += r * q,
                k += r * X,
                C += r * Q,
                E += r * Y,
                S += r * $,
                f += (r = t[6]) * M,
                p += r * P,
                d += r * L,
                h += r * U,
                m += r * V,
                v += r * z,
                g += r * W,
                y += r * j,
                b += r * H,
                x += r * G,
                w += r * K,
                k += r * q,
                C += r * X,
                E += r * Q,
                S += r * Y,
                I += r * $,
                p += (r = t[7]) * M,
                d += r * P,
                h += r * L,
                m += r * U,
                v += r * V,
                g += r * z,
                y += r * W,
                b += r * j,
                x += r * H,
                w += r * G,
                k += r * K,
                C += r * q,
                E += r * X,
                S += r * Q,
                I += r * Y,
                T += r * $,
                d += (r = t[8]) * M,
                h += r * P,
                m += r * L,
                v += r * U,
                g += r * V,
                y += r * z,
                b += r * W,
                x += r * j,
                w += r * H,
                k += r * G,
                C += r * K,
                E += r * q,
                S += r * X,
                I += r * Q,
                T += r * Y,
                A += r * $,
                h += (r = t[9]) * M,
                m += r * P,
                v += r * L,
                g += r * U,
                y += r * V,
                b += r * z,
                x += r * W,
                w += r * j,
                k += r * H,
                C += r * G,
                E += r * K,
                S += r * q,
                I += r * X,
                T += r * Q,
                A += r * Y,
                N += r * $,
                m += (r = t[10]) * M,
                v += r * P,
                g += r * L,
                y += r * U,
                b += r * V,
                x += r * z,
                w += r * W,
                k += r * j,
                C += r * H,
                E += r * G,
                S += r * K,
                I += r * q,
                T += r * X,
                A += r * Q,
                N += r * Y,
                _ += r * $,
                v += (r = t[11]) * M,
                g += r * P,
                y += r * L,
                b += r * U,
                x += r * V,
                w += r * z,
                k += r * W,
                C += r * j,
                E += r * H,
                S += r * G,
                I += r * K,
                T += r * q,
                A += r * X,
                N += r * Q,
                _ += r * Y,
                R += r * $,
                g += (r = t[12]) * M,
                y += r * P,
                b += r * L,
                x += r * U,
                w += r * V,
                k += r * z,
                C += r * W,
                E += r * j,
                S += r * H,
                I += r * G,
                T += r * K,
                A += r * q,
                N += r * X,
                _ += r * Q,
                R += r * Y,
                O += r * $,
                y += (r = t[13]) * M,
                b += r * P,
                x += r * L,
                w += r * U,
                k += r * V,
                C += r * z,
                E += r * W,
                S += r * j,
                I += r * H,
                T += r * G,
                A += r * K,
                N += r * q,
                _ += r * X,
                R += r * Q,
                O += r * Y,
                D += r * $,
                b += (r = t[14]) * M,
                x += r * P,
                w += r * L,
                k += r * U,
                C += r * V,
                E += r * z,
                S += r * W,
                I += r * j,
                T += r * H,
                A += r * G,
                N += r * K,
                _ += r * q,
                R += r * X,
                O += r * Q,
                D += r * Y,
                B += r * $,
                x += (r = t[15]) * M,
                i += 38 * (k += r * L),
                s += 38 * (C += r * U),
                u += 38 * (E += r * V),
                c += 38 * (S += r * z),
                l += 38 * (I += r * W),
                f += 38 * (T += r * j),
                p += 38 * (A += r * H),
                d += 38 * (N += r * G),
                h += 38 * (_ += r * K),
                m += 38 * (R += r * q),
                v += 38 * (O += r * X),
                g += 38 * (D += r * Q),
                y += 38 * (B += r * Y),
                b += 38 * (F += r * $),
                o = (r = (o += 38 * (w += r * P)) + (a = 1) + 65535) - 65536 * (a = Math.floor(r / 65536)),
                i = (r = i + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                s = (r = s + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                u = (r = u + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                c = (r = c + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                l = (r = l + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                f = (r = f + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                p = (r = p + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                d = (r = d + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                h = (r = h + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                m = (r = m + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                v = (r = v + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                g = (r = g + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                y = (r = y + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                b = (r = b + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                x = (r = x + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                o = (r = (o += a - 1 + 37 * (a - 1)) + (a = 1) + 65535) - 65536 * (a = Math.floor(r / 65536)),
                i = (r = i + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                s = (r = s + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                u = (r = u + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                c = (r = c + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                l = (r = l + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                f = (r = f + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                p = (r = p + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                d = (r = d + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                h = (r = h + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                m = (r = m + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                v = (r = v + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                g = (r = g + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                y = (r = y + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                b = (r = b + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                x = (r = x + a + 65535) - 65536 * (a = Math.floor(r / 65536)),
                o += a - 1 + 37 * (a - 1),
                e[0] = o,
                e[1] = i,
                e[2] = s,
                e[3] = u,
                e[4] = c,
                e[5] = l,
                e[6] = f,
                e[7] = p,
                e[8] = d,
                e[9] = h,
                e[10] = m,
                e[11] = v,
                e[12] = g,
                e[13] = y,
                e[14] = b,
                e[15] = x
            }
            V.kem = V.kem || {};
            var qn = V.jsbn.BigInteger;
            function Xn(e, t, n, r) {
                e.generate = function(e, a) {
                    for (var o = new V.util.ByteBuffer, i = Math.ceil(a / r) + n, s = new V.util.ByteBuffer, u = n; u < i; ++u) {
                        s.putInt32(u),
                        t.start(),
                        t.update(e + s.getBytes());
                        var c = t.digest();
                        o.putBytes(c.getBytes(r))
                    }
                    return o.truncate(o.length() - a),
                    o.getBytes()
                }
            }
            V.kem.rsa = {},
            V.kem.rsa.create = function(e, t) {
                var n = (t = t || {}).prng || V.random;
                return {
                    encrypt: function(t, r) {
                        var a, o = Math.ceil(t.n.bitLength() / 8);
                        do {
                            a = new qn(V.util.bytesToHex(n.getBytesSync(o)),16).mod(t.n)
                        } while (a.compareTo(qn.ONE) <= 0);var i = o - (a = V.util.hexToBytes(a.toString(16))).length;
                        return i > 0 && (a = V.util.fillString(String.fromCharCode(0), i) + a),
                        {
                            encapsulation: t.encrypt(a, "NONE"),
                            key: e.generate(a, r)
                        }
                    },
                    decrypt: function(t, n, r) {
                        var a = t.decrypt(n, "NONE");
                        return e.generate(a, r)
                    }
                }
            }
            ,
            V.kem.kdf1 = function(e, t) {
                Xn(this, e, 0, t || e.digestLength)
            }
            ,
            V.kem.kdf2 = function(e, t) {
                Xn(this, e, 1, t || e.digestLength)
            }
            ,
            V.log = V.log || {},
            V.log.levels = ["none", "error", "warning", "info", "debug", "verbose", "max"];
            var Qn = {}
              , Yn = []
              , $n = null;
            V.log.LEVEL_LOCKED = 2,
            V.log.NO_LEVEL_CHECK = 4,
            V.log.INTERPOLATE = 8;
            for (var Zn = 0; Zn < V.log.levels.length; ++Zn) {
                var Jn = V.log.levels[Zn];
                Qn[Jn] = {
                    index: Zn,
                    name: Jn.toUpperCase()
                }
            }
            V.log.logMessage = function(e) {
                for (var t = Qn[e.level].index, n = 0; n < Yn.length; ++n) {
                    var r = Yn[n];
                    r.flags & V.log.NO_LEVEL_CHECK ? r.f(e) : t <= Qn[r.level].index && r.f(r, e)
                }
            }
            ,
            V.log.prepareStandard = function(e) {
                "standard"in e || (e.standard = Qn[e.level].name + " [" + e.category + "] " + e.message)
            }
            ,
            V.log.prepareFull = function(e) {
                if (!("full"in e)) {
                    var t = [e.message];
                    t = t.concat([] || e.arguments),
                    e.full = V.util.format.apply(this, t)
                }
            }
            ,
            V.log.prepareStandardFull = function(e) {
                "standardFull"in e || (V.log.prepareStandard(e),
                e.standardFull = e.standard)
            }
            ;
            var er = ["error", "warning", "info", "debug", "verbose"];
            for (Zn = 0; Zn < er.length; ++Zn)
                !function(e) {
                    V.log[e] = function(t, n) {
                        var r = Array.prototype.slice.call(arguments).slice(2)
                          , a = {
                            timestamp: new Date,
                            level: e,
                            category: t,
                            message: n,
                            arguments: r
                        };
                        V.log.logMessage(a)
                    }
                }(er[Zn]);
            if (V.log.makeLogger = function(e) {
                var t = {
                    flags: 0,
                    f: e
                };
                return V.log.setLevel(t, "none"),
                t
            }
            ,
            V.log.setLevel = function(e, t) {
                var n = !1;
                if (e && !(e.flags & V.log.LEVEL_LOCKED))
                    for (var r = 0; r < V.log.levels.length; ++r)
                        if (t == V.log.levels[r]) {
                            e.level = t,
                            n = !0;
                            break
                        }
                return n
            }
            ,
            V.log.lock = function(e, t) {
                void 0 === t || t ? e.flags |= V.log.LEVEL_LOCKED : e.flags &= ~V.log.LEVEL_LOCKED
            }
            ,
            V.log.addLogger = function(e) {
                Yn.push(e)
            }
            ,
            "undefined" != typeof console && "log"in console) {
                var tr;
                if (console.error && console.warn && console.info && console.debug) {
                    var nr = {
                        error: console.error,
                        warning: console.warn,
                        info: console.info,
                        debug: console.debug,
                        verbose: console.debug
                    }
                      , rr = function(e, t) {
                        V.log.prepareStandard(t);
                        var n = nr[t.level]
                          , r = [t.standard];
                        r = r.concat(t.arguments.slice()),
                        n.apply(console, r)
                    };
                    tr = V.log.makeLogger(rr)
                } else
                    rr = function(e, t) {
                        V.log.prepareStandardFull(t),
                        console.log(t.standardFull)
                    }
                    ,
                    tr = V.log.makeLogger(rr);
                V.log.setLevel(tr, "debug"),
                V.log.addLogger(tr),
                $n = tr
            } else
                console = {
                    log: function() {}
                };
            if (null !== $n) {
                var ar = V.util.getQueryVariables();
                "console.level"in ar && V.log.setLevel($n, ar["console.level"].slice(-1)[0]),
                "console.lock"in ar && "true" == ar["console.lock"].slice(-1)[0] && V.log.lock($n)
            }
            V.log.consoleLogger = $n,
            x((function(e) {
                var t = V.asn1
                  , n = e.exports = V.pkcs7 = V.pkcs7 || {};
                function r(e) {
                    var r = {}
                      , a = [];
                    if (!t.validate(e, n.asn1.recipientInfoValidator, r, a)) {
                        var o = new Error("Cannot read PKCS#7 RecipientInfo. ASN.1 object is not an PKCS#7 RecipientInfo.");
                        throw o.errors = a,
                        o
                    }
                    return {
                        version: r.version.charCodeAt(0),
                        issuer: V.pki.RDNAttributesAsArray(r.issuer),
                        serialNumber: V.util.createBuffer(r.serial).toHex(),
                        encryptedContent: {
                            algorithm: t.derToOid(r.encAlgorithm),
                            parameter: r.encParameter.value,
                            content: r.encKey
                        }
                    }
                }
                function a(e) {
                    for (var n, r = [], a = 0; a < e.length; ++a)
                        r.push((n = e[a],
                        t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, t.integerToDer(n.version).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [V.pki.distinguishedNameToAsn1({
                            attributes: n.issuer
                        }), t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, V.util.hexToBytes(n.serialNumber))]), t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.encryptedContent.algorithm).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.NULL, !1, "")]), t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, n.encryptedContent.content)])));
                    return r
                }
                function o(e) {
                    var n = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, t.integerToDer(e.version).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [V.pki.distinguishedNameToAsn1({
                        attributes: e.issuer
                    }), t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, V.util.hexToBytes(e.serialNumber))]), t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(e.digestAlgorithm).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.NULL, !1, "")])]);
                    if (e.authenticatedAttributesAsn1 && n.value.push(e.authenticatedAttributesAsn1),
                    n.value.push(t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(e.signatureAlgorithm).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.NULL, !1, "")])),
                    n.value.push(t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, e.signature)),
                    e.unauthenticatedAttributes.length > 0) {
                        for (var r = t.create(t.Class.CONTEXT_SPECIFIC, 1, !0, []), a = 0; a < e.unauthenticatedAttributes.length; ++a) {
                            var o = e.unauthenticatedAttributes[a];
                            r.values.push(i(o))
                        }
                        n.value.push(r)
                    }
                    return n
                }
                function i(e) {
                    var n;
                    if (e.type === V.pki.oids.contentType)
                        n = t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(e.value).getBytes());
                    else if (e.type === V.pki.oids.messageDigest)
                        n = t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, e.value.bytes());
                    else if (e.type === V.pki.oids.signingTime) {
                        var r = new Date("1950-01-01T00:00:00Z")
                          , a = new Date("2050-01-01T00:00:00Z")
                          , o = e.value;
                        if ("string" == typeof o) {
                            var i = Date.parse(o);
                            o = isNaN(i) ? 13 === o.length ? t.utcTimeToDate(o) : t.generalizedTimeToDate(o) : new Date(i)
                        }
                        n = o >= r && o < a ? t.create(t.Class.UNIVERSAL, t.Type.UTCTIME, !1, t.dateToUtcTime(o)) : t.create(t.Class.UNIVERSAL, t.Type.GENERALIZEDTIME, !1, t.dateToGeneralizedTime(o))
                    }
                    return t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(e.type).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SET, !0, [n])])
                }
                function s(e, n, r) {
                    var a = {};
                    if (!t.validate(n, r, a, [])) {
                        var o = new Error("Cannot read PKCS#7 message. ASN.1 object is not a supported PKCS#7 message.");
                        throw o.errors = o,
                        o
                    }
                    if (t.derToOid(a.contentType) !== V.pki.oids.data)
                        throw new Error("Unsupported PKCS#7 message. Only wrapped ContentType Data supported.");
                    if (a.encryptedContent) {
                        var i = "";
                        if (V.util.isArray(a.encryptedContent))
                            for (var s = 0; s < a.encryptedContent.length; ++s) {
                                if (a.encryptedContent[s].type !== t.Type.OCTETSTRING)
                                    throw new Error("Malformed PKCS#7 message, expecting encrypted content constructed of only OCTET STRING objects.");
                                i += a.encryptedContent[s].value
                            }
                        else
                            i = a.encryptedContent;
                        e.encryptedContent = {
                            algorithm: t.derToOid(a.encAlgorithm),
                            parameter: V.util.createBuffer(a.encParameter.value),
                            content: V.util.createBuffer(i)
                        }
                    }
                    if (a.content) {
                        if (i = "",
                        V.util.isArray(a.content))
                            for (s = 0; s < a.content.length; ++s) {
                                if (a.content[s].type !== t.Type.OCTETSTRING)
                                    throw new Error("Malformed PKCS#7 message, expecting content constructed of only OCTET STRING objects.");
                                i += a.content[s].value
                            }
                        else
                            i = a.content;
                        e.content = V.util.createBuffer(i)
                    }
                    return e.version = a.version.charCodeAt(0),
                    e.rawCapture = a,
                    a
                }
                function u(e) {
                    if (void 0 === e.encryptedContent.key)
                        throw new Error("Symmetric key not available.");
                    if (void 0 === e.content) {
                        var t;
                        switch (e.encryptedContent.algorithm) {
                        case V.pki.oids["aes128-CBC"]:
                        case V.pki.oids["aes192-CBC"]:
                        case V.pki.oids["aes256-CBC"]:
                            t = V.aes.createDecryptionCipher(e.encryptedContent.key);
                            break;
                        case V.pki.oids.desCBC:
                        case V.pki.oids["des-EDE3-CBC"]:
                            t = V.des.createDecryptionCipher(e.encryptedContent.key);
                            break;
                        default:
                            throw new Error("Unsupported symmetric cipher, OID " + e.encryptedContent.algorithm)
                        }
                        if (t.start(e.encryptedContent.parameter),
                        t.update(e.encryptedContent.content),
                        !t.finish())
                            throw new Error("Symmetric decryption failed.");
                        e.content = t.output
                    }
                }
                n.messageFromPem = function(e) {
                    var r = V.pem.decode(e)[0];
                    if ("PKCS7" !== r.type) {
                        var a = new Error('Could not convert PKCS#7 message from PEM; PEM header type is not "PKCS#7".');
                        throw a.headerType = r.type,
                        a
                    }
                    if (r.procType && "ENCRYPTED" === r.procType.type)
                        throw new Error("Could not convert PKCS#7 message from PEM; PEM is encrypted.");
                    var o = t.fromDer(r.body);
                    return n.messageFromAsn1(o)
                }
                ,
                n.messageToPem = function(e, n) {
                    var r = {
                        type: "PKCS7",
                        body: t.toDer(e.toAsn1()).getBytes()
                    };
                    return V.pem.encode(r, {
                        maxline: n
                    })
                }
                ,
                n.messageFromAsn1 = function(e) {
                    var r = {}
                      , a = [];
                    if (!t.validate(e, n.asn1.contentInfoValidator, r, a)) {
                        var o = new Error("Cannot read PKCS#7 message. ASN.1 object is not an PKCS#7 ContentInfo.");
                        throw o.errors = a,
                        o
                    }
                    var i, s = t.derToOid(r.contentType);
                    switch (s) {
                    case V.pki.oids.envelopedData:
                        i = n.createEnvelopedData();
                        break;
                    case V.pki.oids.encryptedData:
                        i = n.createEncryptedData();
                        break;
                    case V.pki.oids.signedData:
                        i = n.createSignedData();
                        break;
                    default:
                        throw new Error("Cannot read PKCS#7 message. ContentType with OID " + s + " is not (yet) supported.")
                    }
                    return i.fromAsn1(r.content.value[0]),
                    i
                }
                ,
                n.createSignedData = function() {
                    var e = null;
                    return e = {
                        type: V.pki.oids.signedData,
                        version: 1,
                        certificates: [],
                        crls: [],
                        signers: [],
                        digestAlgorithmIdentifiers: [],
                        contentInfo: null,
                        signerInfos: [],
                        fromAsn1: function(t) {
                            if (s(e, t, n.asn1.signedDataValidator),
                            e.certificates = [],
                            e.crls = [],
                            e.digestAlgorithmIdentifiers = [],
                            e.contentInfo = null,
                            e.signerInfos = [],
                            e.rawCapture.certificates)
                                for (var r = e.rawCapture.certificates.value, a = 0; a < r.length; ++a)
                                    e.certificates.push(V.pki.certificateFromAsn1(r[a]))
                        },
                        toAsn1: function() {
                            e.contentInfo || e.sign();
                            for (var n = [], r = 0; r < e.certificates.length; ++r)
                                n.push(V.pki.certificateToAsn1(e.certificates[r]));
                            var a = []
                              , o = t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, t.integerToDer(e.version).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SET, !0, e.digestAlgorithmIdentifiers), e.contentInfo])]);
                            return n.length > 0 && o.value[0].value.push(t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, n)),
                            a.length > 0 && o.value[0].value.push(t.create(t.Class.CONTEXT_SPECIFIC, 1, !0, a)),
                            o.value[0].value.push(t.create(t.Class.UNIVERSAL, t.Type.SET, !0, e.signerInfos)),
                            t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(e.type).getBytes()), o])
                        },
                        addSigner: function(t) {
                            var n = t.issuer
                              , r = t.serialNumber;
                            if (t.certificate) {
                                var a = t.certificate;
                                "string" == typeof a && (a = V.pki.certificateFromPem(a)),
                                n = a.issuer.attributes,
                                r = a.serialNumber
                            }
                            var o = t.key;
                            if (!o)
                                throw new Error("Could not add PKCS#7 signer; no private key specified.");
                            "string" == typeof o && (o = V.pki.privateKeyFromPem(o));
                            var i = t.digestAlgorithm || V.pki.oids.sha1;
                            switch (i) {
                            case V.pki.oids.sha1:
                            case V.pki.oids.sha256:
                            case V.pki.oids.sha384:
                            case V.pki.oids.sha512:
                            case V.pki.oids.md5:
                                break;
                            default:
                                throw new Error("Could not add PKCS#7 signer; unknown message digest algorithm: " + i)
                            }
                            var s = t.authenticatedAttributes || [];
                            if (s.length > 0) {
                                for (var u = !1, c = !1, l = 0; l < s.length; ++l) {
                                    var f = s[l];
                                    if (u || f.type !== V.pki.oids.contentType) {
                                        if (c || f.type !== V.pki.oids.messageDigest)
                                            ;
                                        else if (c = !0,
                                        u)
                                            break
                                    } else if (u = !0,
                                    c)
                                        break
                                }
                                if (!u || !c)
                                    throw new Error("Invalid signer.authenticatedAttributes. If signer.authenticatedAttributes is specified, then it must contain at least two attributes, PKCS #9 content-type and PKCS #9 message-digest.")
                            }
                            e.signers.push({
                                key: o,
                                version: 1,
                                issuer: n,
                                serialNumber: r,
                                digestAlgorithm: i,
                                signatureAlgorithm: V.pki.oids.rsaEncryption,
                                signature: null,
                                authenticatedAttributes: s,
                                unauthenticatedAttributes: []
                            })
                        },
                        sign: function(n) {
                            var r;
                            n = n || {},
                            ("object" != typeof e.content || null === e.contentInfo) && (e.contentInfo = t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(V.pki.oids.data).getBytes())]),
                            "content"in e && (e.content instanceof V.util.ByteBuffer ? r = e.content.bytes() : "string" == typeof e.content && (r = V.util.encodeUtf8(e.content)),
                            n.detached ? e.detachedContent = t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, r) : e.contentInfo.value.push(t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, r)])))),
                            0 !== e.signers.length && function(n) {
                                var r;
                                if (!(r = e.detachedContent ? e.detachedContent : (r = e.contentInfo.value[1]).value[0]))
                                    throw new Error("Could not sign PKCS#7 message; there is no content to sign.");
                                var a = t.derToOid(e.contentInfo.value[0].value)
                                  , s = t.toDer(r);
                                for (var u in s.getByte(),
                                t.getBerValueLength(s),
                                s = s.getBytes(),
                                n)
                                    n[u].start().update(s);
                                for (var c = new Date, l = 0; l < e.signers.length; ++l) {
                                    var f = e.signers[l];
                                    if (0 === f.authenticatedAttributes.length) {
                                        if (a !== V.pki.oids.data)
                                            throw new Error("Invalid signer; authenticatedAttributes must be present when the ContentInfo content type is not PKCS#7 Data.")
                                    } else {
                                        f.authenticatedAttributesAsn1 = t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, []);
                                        for (var p = t.create(t.Class.UNIVERSAL, t.Type.SET, !0, []), d = 0; d < f.authenticatedAttributes.length; ++d) {
                                            var h = f.authenticatedAttributes[d];
                                            h.type === V.pki.oids.messageDigest ? h.value = n[f.digestAlgorithm].digest() : h.type === V.pki.oids.signingTime && (h.value || (h.value = c)),
                                            p.value.push(i(h)),
                                            f.authenticatedAttributesAsn1.value.push(i(h))
                                        }
                                        s = t.toDer(p).getBytes(),
                                        f.md.start().update(s)
                                    }
                                    f.signature = f.key.sign(f.md, "RSASSA-PKCS1-V1_5")
                                }
                                e.signerInfos = function(e) {
                                    for (var t = [], n = 0; n < e.length; ++n)
                                        t.push(o(e[n]));
                                    return t
                                }(e.signers)
                            }(function() {
                                for (var n = {}, r = 0; r < e.signers.length; ++r) {
                                    var a = e.signers[r];
                                    (o = a.digestAlgorithm)in n || (n[o] = V.md[V.pki.oids[o]].create()),
                                    0 === a.authenticatedAttributes.length ? a.md = n[o] : a.md = V.md[V.pki.oids[o]].create()
                                }
                                for (var o in e.digestAlgorithmIdentifiers = [],
                                n)
                                    e.digestAlgorithmIdentifiers.push(t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(o).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.NULL, !1, "")]));
                                return n
                            }())
                        },
                        verify: function() {
                            throw new Error("PKCS#7 signature verification not yet implemented.")
                        },
                        addCertificate: function(t) {
                            "string" == typeof t && (t = V.pki.certificateFromPem(t)),
                            e.certificates.push(t)
                        },
                        addCertificateRevokationList: function(e) {
                            throw new Error("PKCS#7 CRL support not yet implemented.")
                        }
                    }
                }
                ,
                n.createEncryptedData = function() {
                    var e = null;
                    return e = {
                        type: V.pki.oids.encryptedData,
                        version: 0,
                        encryptedContent: {
                            algorithm: V.pki.oids["aes256-CBC"]
                        },
                        fromAsn1: function(t) {
                            s(e, t, n.asn1.encryptedDataValidator)
                        },
                        decrypt: function(t) {
                            void 0 !== t && (e.encryptedContent.key = t),
                            u(e)
                        }
                    }
                }
                ,
                n.createEnvelopedData = function() {
                    var e = null;
                    return e = {
                        type: V.pki.oids.envelopedData,
                        version: 0,
                        recipients: [],
                        encryptedContent: {
                            algorithm: V.pki.oids["aes256-CBC"]
                        },
                        fromAsn1: function(t) {
                            var a = s(e, t, n.asn1.envelopedDataValidator);
                            e.recipients = function(e) {
                                for (var t = [], n = 0; n < e.length; ++n)
                                    t.push(r(e[n]));
                                return t
                            }(a.recipientInfos.value)
                        },
                        toAsn1: function() {
                            return t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(e.type).getBytes()), t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.INTEGER, !1, t.integerToDer(e.version).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SET, !0, a(e.recipients)), t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, (n = e.encryptedContent,
                            [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(V.pki.oids.data).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.SEQUENCE, !0, [t.create(t.Class.UNIVERSAL, t.Type.OID, !1, t.oidToDer(n.algorithm).getBytes()), t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, n.parameter.getBytes())]), t.create(t.Class.CONTEXT_SPECIFIC, 0, !0, [t.create(t.Class.UNIVERSAL, t.Type.OCTETSTRING, !1, n.content.getBytes())])]))])])]);
                            var n
                        },
                        findRecipient: function(t) {
                            for (var n = t.issuer.attributes, r = 0; r < e.recipients.length; ++r) {
                                var a = e.recipients[r]
                                  , o = a.issuer;
                                if (a.serialNumber === t.serialNumber && o.length === n.length) {
                                    for (var i = !0, s = 0; s < n.length; ++s)
                                        if (o[s].type !== n[s].type || o[s].value !== n[s].value) {
                                            i = !1;
                                            break
                                        }
                                    if (i)
                                        return a
                                }
                            }
                            return null
                        },
                        decrypt: function(t, n) {
                            if (void 0 === e.encryptedContent.key && void 0 !== t && void 0 !== n)
                                switch (t.encryptedContent.algorithm) {
                                case V.pki.oids.rsaEncryption:
                                case V.pki.oids.desCBC:
                                    var r = n.decrypt(t.encryptedContent.content);
                                    e.encryptedContent.key = V.util.createBuffer(r);
                                    break;
                                default:
                                    throw new Error("Unsupported asymmetric cipher, OID " + t.encryptedContent.algorithm)
                                }
                            u(e)
                        },
                        addRecipient: function(t) {
                            e.recipients.push({
                                version: 0,
                                issuer: t.issuer.attributes,
                                serialNumber: t.serialNumber,
                                encryptedContent: {
                                    algorithm: V.pki.oids.rsaEncryption,
                                    key: t.publicKey
                                }
                            })
                        },
                        encrypt: function(t, n) {
                            if (void 0 === e.encryptedContent.content) {
                                var r, a, o;
                                switch (n = n || e.encryptedContent.algorithm,
                                t = t || e.encryptedContent.key,
                                n) {
                                case V.pki.oids["aes128-CBC"]:
                                    r = 16,
                                    a = 16,
                                    o = V.aes.createEncryptionCipher;
                                    break;
                                case V.pki.oids["aes192-CBC"]:
                                    r = 24,
                                    a = 16,
                                    o = V.aes.createEncryptionCipher;
                                    break;
                                case V.pki.oids["aes256-CBC"]:
                                    r = 32,
                                    a = 16,
                                    o = V.aes.createEncryptionCipher;
                                    break;
                                case V.pki.oids["des-EDE3-CBC"]:
                                    r = 24,
                                    a = 8,
                                    o = V.des.createEncryptionCipher;
                                    break;
                                default:
                                    throw new Error("Unsupported symmetric cipher, OID " + n)
                                }
                                if (void 0 === t)
                                    t = V.util.createBuffer(V.random.getBytes(r));
                                else if (t.length() != r)
                                    throw new Error("Symmetric key has wrong length; got " + t.length() + " bytes, expected " + r + ".");
                                e.encryptedContent.algorithm = n,
                                e.encryptedContent.key = t,
                                e.encryptedContent.parameter = V.util.createBuffer(V.random.getBytes(a));
                                var i = o(t);
                                if (i.start(e.encryptedContent.parameter.copy()),
                                i.update(e.content),
                                !i.finish())
                                    throw new Error("Symmetric encryption failed.");
                                e.encryptedContent.content = i.output
                            }
                            for (var s = 0; s < e.recipients.length; ++s) {
                                var u = e.recipients[s];
                                if (void 0 === u.encryptedContent.content)
                                    switch (u.encryptedContent.algorithm) {
                                    case V.pki.oids.rsaEncryption:
                                        u.encryptedContent.content = u.encryptedContent.key.encrypt(e.encryptedContent.key.data);
                                        break;
                                    default:
                                        throw new Error("Unsupported asymmetric cipher, OID " + u.encryptedContent.algorithm)
                                    }
                            }
                        }
                    }
                }
            }
            )),
            x((function(e) {
                var t = e.exports = V.ssh = V.ssh || {};
                function n(e, t) {
                    var n = t.toString(16);
                    n[0] >= "8" && (n = "00" + n);
                    var r = V.util.hexToBytes(n);
                    e.putInt32(r.length),
                    e.putBytes(r)
                }
                function r(e, t) {
                    e.putInt32(t.length),
                    e.putString(t)
                }
                function a() {
                    for (var e = V.md.sha1.create(), t = arguments.length, n = 0; n < t; ++n)
                        e.update(arguments[n]);
                    return e.digest()
                }
                t.privateKeyToPutty = function(e, t, o) {
                    var i = "" === (t = t || "") ? "none" : "aes256-cbc"
                      , s = "PuTTY-User-Key-File-2: ssh-rsa\r\n";
                    s += "Encryption: " + i + "\r\n",
                    s += "Comment: " + (o = o || "") + "\r\n";
                    var u = V.util.createBuffer();
                    r(u, "ssh-rsa"),
                    n(u, e.e),
                    n(u, e.n);
                    var c = V.util.encode64(u.bytes(), 64)
                      , l = Math.floor(c.length / 66) + 1;
                    s += "Public-Lines: " + l + "\r\n",
                    s += c;
                    var f, p = V.util.createBuffer();
                    if (n(p, e.d),
                    n(p, e.p),
                    n(p, e.q),
                    n(p, e.qInv),
                    t) {
                        var d = p.length() + 16 - 1;
                        d -= d % 16;
                        var h = a(p.bytes());
                        h.truncate(h.length() - d + p.length()),
                        p.putBuffer(h);
                        var m = V.util.createBuffer();
                        m.putBuffer(a("\0\0\0\0", t)),
                        m.putBuffer(a("\0\0\0", t));
                        var v = V.aes.createEncryptionCipher(m.truncate(8), "CBC");
                        v.start(V.util.createBuffer().fillWithByte(0, 16)),
                        v.update(p.copy()),
                        v.finish();
                        var g = v.output;
                        g.truncate(16),
                        f = V.util.encode64(g.bytes(), 64)
                    } else
                        f = V.util.encode64(p.bytes(), 64);
                    s += "\r\nPrivate-Lines: " + (l = Math.floor(f.length / 66) + 1) + "\r\n",
                    s += f;
                    var y = a("putty-private-key-file-mac-key", t)
                      , b = V.util.createBuffer();
                    r(b, "ssh-rsa"),
                    r(b, i),
                    r(b, o),
                    b.putInt32(u.length()),
                    b.putBuffer(u),
                    b.putInt32(p.length()),
                    b.putBuffer(p);
                    var x = V.hmac.create();
                    return x.start("sha1", y),
                    x.update(b.bytes()),
                    s + "\r\nPrivate-MAC: " + x.digest().toHex() + "\r\n"
                }
                ,
                t.publicKeyToOpenSSH = function(e, t) {
                    t = t || "";
                    var a = V.util.createBuffer();
                    return r(a, "ssh-rsa"),
                    n(a, e.e),
                    n(a, e.n),
                    "ssh-rsa " + V.util.encode64(a.bytes()) + " " + t
                }
                ,
                t.privateKeyToOpenSSH = function(e, t) {
                    return t ? V.pki.encryptRsaPrivateKey(e, t, {
                        legacy: !0,
                        algorithm: "aes128"
                    }) : V.pki.privateKeyToPem(e)
                }
                ,
                t.getPublicKeyFingerprint = function(e, t) {
                    var a = (t = t || {}).md || V.md.md5.create()
                      , o = V.util.createBuffer();
                    r(o, "ssh-rsa"),
                    n(o, e.e),
                    n(o, e.n),
                    a.start(),
                    a.update(o.getBytes());
                    var i = a.digest();
                    if ("hex" === t.encoding) {
                        var s = i.toHex();
                        return t.delimiter ? s.match(/.{2}/g).join(t.delimiter) : s
                    }
                    if ("binary" === t.encoding)
                        return i.getBytes();
                    if (t.encoding)
                        throw new Error('Unknown encoding "' + t.encoding + '".');
                    return i
                }
            }
            ));
            var or = "forge.task"
              , ir = {}
              , sr = 0;
            V.debug.set(or, "tasks", ir);
            var ur = {};
            V.debug.set(or, "queues", ur);
            var cr = "ready"
              , lr = "running"
              , fr = "blocked"
              , pr = "sleeping"
              , dr = "done"
              , hr = "error"
              , mr = {
                ready: {}
            };
            mr.ready.stop = cr,
            mr.ready.start = lr,
            mr.ready.cancel = dr,
            mr.ready.fail = hr,
            mr.running = {},
            mr.running.stop = cr,
            mr.running.start = lr,
            mr.running.block = fr,
            mr.running.unblock = lr,
            mr.running.sleep = pr,
            mr.running.wakeup = lr,
            mr.running.cancel = dr,
            mr.running.fail = hr,
            mr.blocked = {},
            mr.blocked.stop = fr,
            mr.blocked.start = fr,
            mr.blocked.block = fr,
            mr.blocked.unblock = fr,
            mr.blocked.sleep = fr,
            mr.blocked.wakeup = fr,
            mr.blocked.cancel = dr,
            mr.blocked.fail = hr,
            mr.sleeping = {},
            mr.sleeping.stop = pr,
            mr.sleeping.start = pr,
            mr.sleeping.block = pr,
            mr.sleeping.unblock = pr,
            mr.sleeping.sleep = pr,
            mr.sleeping.wakeup = pr,
            mr.sleeping.cancel = dr,
            mr.sleeping.fail = hr,
            mr.done = {},
            mr.done.stop = dr,
            mr.done.start = dr,
            mr.done.block = dr,
            mr.done.unblock = dr,
            mr.done.sleep = dr,
            mr.done.wakeup = dr,
            mr.done.cancel = dr,
            mr.done.fail = hr,
            mr.error = {},
            mr.error.stop = hr,
            mr.error.start = hr,
            mr.error.block = hr,
            mr.error.unblock = hr,
            mr.error.sleep = hr,
            mr.error.wakeup = hr,
            mr.error.cancel = hr,
            mr.error.fail = hr;
            var vr = function(e) {
                this.id = -1,
                this.name = e.name || "?",
                this.parent = e.parent || null,
                this.run = e.run,
                this.subtasks = [],
                this.error = !1,
                this.state = cr,
                this.blocks = 0,
                this.timeoutId = null,
                this.swapTime = null,
                this.userData = null,
                this.id = sr++,
                ir[this.id] = this
            };
            vr.prototype.debug = function(e) {
                e = e || "",
                V.log.debug(or, e, "[%s][%s] task:", this.id, this.name, this, "subtasks:", this.subtasks.length, "queue:", ur)
            }
            ,
            vr.prototype.next = function(e, t) {
                "function" == typeof e && (t = e,
                e = this.name);
                var n = new vr({
                    run: t,
                    name: e,
                    parent: this
                });
                return n.state = lr,
                n.type = this.type,
                n.successCallback = this.successCallback || null,
                n.failureCallback = this.failureCallback || null,
                this.subtasks.push(n),
                this
            }
            ,
            vr.prototype.parallel = function(e, t) {
                return V.util.isArray(e) && (t = e,
                e = this.name),
                this.next(e, (function(n) {
                    var r = n;
                    r.block(t.length);
                    for (var a = function(e, n) {
                        V.task.start({
                            type: e,
                            run: function(e) {
                                t[n](e)
                            },
                            success: function(e) {
                                r.unblock()
                            },
                            failure: function(e) {
                                r.unblock()
                            }
                        })
                    }, o = 0; o < t.length; o++)
                        a(e + "__parallel-" + n.id + "-" + o, o)
                }
                ))
            }
            ,
            vr.prototype.stop = function() {
                this.state = mr[this.state].stop
            }
            ,
            vr.prototype.start = function() {
                this.error = !1,
                this.state = mr[this.state].start,
                this.state === lr && (this.start = new Date,
                this.run(this),
                gr(this, 0))
            }
            ,
            vr.prototype.block = function(e) {
                e = void 0 === e ? 1 : e,
                this.blocks += e,
                this.blocks > 0 && (this.state = mr[this.state].block)
            }
            ,
            vr.prototype.unblock = function(e) {
                return e = void 0 === e ? 1 : e,
                this.blocks -= e,
                0 === this.blocks && this.state !== dr && (this.state = lr,
                gr(this, 0)),
                this.blocks
            }
            ,
            vr.prototype.sleep = function(e) {
                e = void 0 === e ? 0 : e,
                this.state = mr[this.state].sleep;
                var t = this;
                this.timeoutId = setTimeout((function() {
                    t.timeoutId = null,
                    t.state = lr,
                    gr(t, 0)
                }
                ), e)
            }
            ,
            vr.prototype.wait = function(e) {
                e.wait(this)
            }
            ,
            vr.prototype.wakeup = function() {
                this.state === pr && (cancelTimeout(this.timeoutId),
                this.timeoutId = null,
                this.state = lr,
                gr(this, 0))
            }
            ,
            vr.prototype.cancel = function() {
                this.state = mr[this.state].cancel,
                this.permitsNeeded = 0,
                null !== this.timeoutId && (cancelTimeout(this.timeoutId),
                this.timeoutId = null),
                this.subtasks = []
            }
            ,
            vr.prototype.fail = function(e) {
                if (this.error = !0,
                yr(this, !0),
                e)
                    e.error = this.error,
                    e.swapTime = this.swapTime,
                    e.userData = this.userData,
                    gr(e, 0);
                else {
                    if (null !== this.parent) {
                        for (var t = this.parent; null !== t.parent; )
                            t.error = this.error,
                            t.swapTime = this.swapTime,
                            t.userData = this.userData,
                            t = t.parent;
                        yr(t, !0)
                    }
                    this.failureCallback && this.failureCallback(this)
                }
            }
            ;
            var gr = function(e, t) {
                var n = t > 30 || +new Date - e.swapTime > 20
                  , r = function(t) {
                    if (t++,
                    e.state === lr)
                        if (n && (e.swapTime = +new Date),
                        e.subtasks.length > 0) {
                            var r = e.subtasks.shift();
                            r.error = e.error,
                            r.swapTime = e.swapTime,
                            r.userData = e.userData,
                            r.run(r),
                            r.error || gr(r, t)
                        } else
                            yr(e),
                            e.error || null !== e.parent && (e.parent.error = e.error,
                            e.parent.swapTime = e.swapTime,
                            e.parent.userData = e.userData,
                            gr(e.parent, t))
                };
                n ? setTimeout(r, 0) : r(t)
            }
              , yr = function(e, t) {
                e.state = dr,
                delete ir[e.id],
                null === e.parent && (e.type in ur ? 0 === ur[e.type].length ? V.log.error(or, "[%s][%s] task queue empty [%s]", e.id, e.name, e.type) : ur[e.type][0] !== e ? V.log.error(or, "[%s][%s] task not first in queue [%s]", e.id, e.name, e.type) : (ur[e.type].shift(),
                0 === ur[e.type].length ? delete ur[e.type] : ur[e.type][0].start()) : V.log.error(or, "[%s][%s] task queue missing [%s]", e.id, e.name, e.type),
                t || (e.error && e.failureCallback ? e.failureCallback(e) : !e.error && e.successCallback && e.successCallback(e)))
            };
            V.task = V.task || {},
            V.task.start = function(e) {
                var t = new vr({
                    run: e.run,
                    name: e.name || "?"
                });
                t.type = e.type,
                t.successCallback = e.success || null,
                t.failureCallback = e.failure || null,
                t.type in ur ? ur[e.type].push(t) : (ur[t.type] = [t],
                function(e) {
                    e.error = !1,
                    e.state = mr[e.state].start,
                    setTimeout((function() {
                        e.state === lr && (e.swapTime = +new Date,
                        e.run(e),
                        gr(e, 0))
                    }
                    ), 0)
                }(t))
            }
            ,
            V.task.cancel = function(e) {
                e in ur && (ur[e] = [ur[e][0]])
            }
            ,
            V.task.createCondition = function() {
                var e = {
                    tasks: {},
                    wait: function(t) {
                        t.id in e.tasks || (t.block(),
                        e.tasks[t.id] = t)
                    },
                    notify: function() {
                        var t = e.tasks;
                        for (var n in e.tasks = {},
                        t)
                            t[n].unblock()
                    }
                };
                return e
            }
            ;
            var br = V
              , xr = function() {
                function e(e) {
                    this.secretKey = e
                }
                return e.prototype.encrypt = function(e, t) {
                    throw new Error("Method not implemented.")
                }
                ,
                e.prototype.decrypt = function(e, t) {
                    return function(e, t, n) {
                        void 0 === n && (n = br.util.createBuffer(Uint8Array.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]).buffer));
                        var r, a, o = br.cipher.createDecipher("AES-CBC", t);
                        return o.start({
                            iv: n
                        }),
                        o.update(br.util.createBuffer(br.util.hexToBytes(e))),
                        a = (r = o.output.data).charCodeAt(r.length - 1),
                        r.slice(0, -a)
                    }(e, (n = this.secretKey,
                    r = t.transactionID,
                    "" + n.slice(0, 16) + r.slice(0, 16)));
                    var n, r
                }
                ,
                e
            }()
              , wr = function() {
                function e(e, t, r, a) {
                    void 0 === r && (r = "production"),
                    void 0 === a && (a = {
                        supportTransaction: !1,
                        enableEncryption: !1
                    }),
                    this.transactionEnabled = a.supportTransaction,
                    this.encryptionEnabled = a.enableEncryption;
                    var o = F(e, t, r);
                    this.transactionManager = new U(o),
                    this.encryptionService = new xr(t),
                    this.compareFaceService = new l(o),
                    this.clientSettingsService = new f(o),
                    this.convertPDFService = new g(o),
                    this.ekycPDFService = new y(o),
                    this.readIDCardService = new n(o),
                    this.requestVerifyIDCardService = new d(o),
                    this.requestVerifyPortraitSerivce = new h(o),
                    this.imagesService = new c(o),
                    this.verifyFaceLivenessService = new p(o),
                    this.searchFaceService = new v(o),
                    this.detectIDTamperingService = new m(o)
                }
                return e.prototype.enableTransaction = function() {
                    this.transactionEnabled = !0
                }
                ,
                e.prototype.disableTransaction = function() {
                    this.transactionEnabled = !1
                }
                ,
                e.prototype.enableEncryption = function() {
                    this.encryptionEnabled = !0
                }
                ,
                e.prototype.disableEncryption = function() {
                    this.encryptionEnabled = !1
                }
                ,
                e.prototype.compareFaces = function(e, t) {
                    return this.compareFaceService.request(e, t)
                }
                ,
                e.prototype.clientSettings = function() {
                    return this.clientSettingsService.request()
                }
                ,
                e.prototype.uploadImage = function(e) {
                    return this.imagesService.request(e)
                }
                ,
                e.prototype.convertPDF = function(e, t) {
                    return this.convertPDFService.request(e, t)
                }
                ,
                e.prototype.ekycPDF = function(e, t) {
                    return this.ekycPDFService.request(e, t)
                }
                ,
                e.prototype.readIDCard = function(e, t) {
                    return this.readIDCardService.request(e, t)
                }
                ,
                e.prototype.requestVerifyIDCard = function(e, t) {
                    return this.requestVerifyIDCardService.request(e, t)
                }
                ,
                e.prototype.requestVerifyPortrait = function(e, t) {
                    return this.requestVerifyPortraitSerivce.request(e, t)
                }
                ,
                e.prototype.verifyFaceLiveness = function(e, t) {
                    return this.verifyFaceLivenessService.request(e, t)
                }
                ,
                e.prototype.searchFaces = function(e, t) {
                    return this.searchFaceService.request(e, t)
                }
                ,
                e.prototype.deleteFaces = function(e, t) {
                    return this.searchFaceService.deleteFaces(e, t)
                }
                ,
                e.prototype.indexFaces = function(e, t) {
                    return this.searchFaceService.indexFaces(e, t)
                }
                ,
                e.prototype.downloadFaceImage = function(e) {
                    return this.searchFaceService.downloadFaceImage(e)
                }
                ,
                e.prototype.downloadImage = function(e) {
                    return this.imagesService.download(e)
                }
                ,
                e.prototype.updateMetadata = function(e, t) {
                    return this.imagesService.updateMetadata(e, t)
                }
                ,
                e.prototype.detectIDTampering = function(e, t) {
                    return this.detectIDTamperingService.request(e, t)
                }
                ,
                o([P({
                    headerIndex: 1
                }), L(), i("design:type", Function), i("design:paramtypes", [Object, Object]), i("design:returntype", Promise)], e.prototype, "compareFaces", null),
                o([P({
                    headerIndex: 1
                }), L(), i("design:type", Function), i("design:paramtypes", [Object, Object]), i("design:returntype", Promise)], e.prototype, "convertPDF", null),
                o([P({
                    headerIndex: 1
                }), L(), i("design:type", Function), i("design:paramtypes", [Object, Object]), i("design:returntype", Promise)], e.prototype, "readIDCard", null),
                o([P({
                    headerIndex: 1
                }), L(), i("design:type", Function), i("design:paramtypes", [Object, Object]), i("design:returntype", Promise)], e.prototype, "requestVerifyIDCard", null),
                o([P({
                    headerIndex: 1
                }), L(), i("design:type", Function), i("design:paramtypes", [Object, Object]), i("design:returntype", Promise)], e.prototype, "requestVerifyPortrait", null),
                o([P({
                    headerIndex: 1
                }), L(), i("design:type", Function), i("design:paramtypes", [Object, Object]), i("design:returntype", Promise)], e.prototype, "verifyFaceLiveness", null),
                o([P({
                    headerIndex: 1
                }), L(), i("design:type", Function), i("design:paramtypes", [Object, Object]), i("design:returntype", Promise)], e.prototype, "searchFaces", null),
                o([P({
                    headerIndex: 1
                }), L(), i("design:type", Function), i("design:paramtypes", [Object, Object]), i("design:returntype", Promise)], e.prototype, "deleteFaces", null),
                o([P({
                    headerIndex: 1
                }), L(), i("design:type", Function), i("design:paramtypes", [Object, Object]), i("design:returntype", Promise)], e.prototype, "indexFaces", null),
                o([P({
                    headerIndex: 1
                }), L(), i("design:type", Function), i("design:paramtypes", [Object, Object]), i("design:returntype", Promise)], e.prototype, "detectIDTampering", null),
                e
            }();
            e.ReadIDCard = n,
            e.UploadImage = c,
            e.CompareFaces = l,
            e.ClientSettings = f,
            e.VerifyFaceLiveness = p,
            e.RequestVerifyIDCard = d,
            e.RequestVerifyPortrait = h,
            e.DetectIDTampering = m,
            e.SearchFaces = v,
            e.ConvertPDF = g,
            e.EkycPDF = y,
            e.HttpClient = A,
            e.MockClient = N,
            e.TVAuthorizer = D,
            e.createHelpers = function(e, t, n) {
                void 0 === n && (n = "production");
                var r = new D(e,t)
                  , a = function(e) {
                    switch (e) {
                    case "testing":
                        return "https://tv-testing.trustingsocial.com/api";
                    case "staging":
                        return "https://tv-staging.trustingsocial.com/api";
                    case "production":
                    default:
                        return "https://vn-vision.trustingsocial.com/api"
                    }
                }(n);
                return new A({
                    authorizer: r,
                    domain: a
                })
            }
            ,
            e.createHttpClient = F,
            e.SimpleTrustVisionAPI = M,
            e.default = wr,
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }(t, r.default)
    }
    )))
      , MZ = Yg.Mode
      , PZ = function() {
        function e(t) {
            var n = this
              , r = t.container
              , a = t.lang
              , o = void 0 === a ? "en" : a
              , i = t.assetRoot
              , s = void 0 === i ? "https://unpkg.com/@tsocial/tvweb-sdk@latest/assets" : i;
            Ay(this, e),
            Ry(this, "checkCamera", (function(e) {
                var t = e.frontCamera
                  , r = void 0 === t || t;
                return new Promise((function(e) {
                    DZ.render(kg.createElement(ey.SDKSettingsProvider, {
                        value: {
                            lang: n.lang,
                            assetRoot: n.assetRoot
                        }
                    }, kg.createElement(Uw, {
                        checkCameraMode: !0,
                        frontCamera: r,
                        onVideoPlayed: function() {
                            n.destroyView(),
                            e(null)
                        },
                        onClose: n.destroyView,
                        onError: function(t) {
                            n.destroyView(),
                            e(t)
                        }
                    })), n.container)
                }
                ))
            }
            )),
            Ry(this, "destroyView", (function() {
                DZ.unmountComponentAtNode(n.container)
            }
            )),
            BZ(r, "container is a required parameter"),
            this.container = r,
            this.lang = o,
            this.assetRoot = s
        }
        return _y(e, [{
            key: "openCamera",
            value: function(e) {
                var t = e.frontCamera
                  , n = e.title
                  , r = e.description
                  , a = e.onImageTaken
                  , o = e.usePortraitMask
                  , i = e.onError;
                DZ.render(kg.createElement(ey.SDKSettingsProvider, {
                    value: {
                        lang: this.lang,
                        assetRoot: this.assetRoot
                    }
                }, kg.createElement(_W, {
                    frontCamera: t,
                    title: n,
                    description: r,
                    onClose: this.destroyView,
                    onImageTaken: a,
                    usePortraitMask: o,
                    onError: i
                })), this.container)
            }
        }, {
            key: "livenessDetection",
            value: function(e) {
                var t = e.apiCheck
                  , n = e.mode
                  , r = e.accessKey
                  , a = e.secretKey
                  , o = e.apiUrl
                  , i = e.onLivenessDetectionDone
                  , s = e.onError
                  , u = new FZ(r,a,o);
                DZ.render(kg.createElement(ey.SDKSettingsProvider, {
                    value: {
                        lang: this.lang,
                        assetRoot: this.assetRoot,
                        apiClient: u
                    }
                }, kg.createElement(yW, {
                    apiCheck: t,
                    mode: n,
                    onLivenessDetectionDone: i,
                    onClose: this.destroyView,
                    onError: s
                })), this.container)
            }
        }]),
        e
    }();
    Ry(PZ, "livenessDetectionMode", MZ),
    e.AssetUtils = ry,
    e.AsyncUtils = ay,
    e.BASE_Z_INDEX = 1e3,
    e.BlurUtils = my,
    e.Camera = Uw,
    e.CameraUtils = gy,
    e.CommonUtils = by,
    e.Constants = Yg,
    e.CoordinateUtils = Cy,
    e.CropAreaOverlayWrapper = Qw,
    e.DefaultCamera = _W,
    e.FaceUtils = Ey,
    e.Icons = RW,
    e.LivenessDetection = yW,
    e.LivenessDetectionComponents = MW,
    e.MobileDetect = Cw,
    e.OverlayAssetImage = Yw,
    e.PlacementArea = Kw,
    e.ProgressCircle = BW,
    e.SDK = PZ,
    e.SettingsContext = ey,
    e.useLivenessDetection = FW,
    Object.defineProperty(e, "__esModule", {
        value: !0
    })
}
));
